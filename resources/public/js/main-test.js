if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.48";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__22008__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__22008 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__22009__i = 0, G__22009__a = new Array(arguments.length - 0);
        while (G__22009__i < G__22009__a.length) {
          G__22009__a[G__22009__i] = arguments[G__22009__i + 0];
          ++G__22009__i;
        }
        args = new cljs.core.IndexedSeq(G__22009__a, 0);
      }
      return G__22008__delegate.call(this, args);
    };
    G__22008.cljs$lang$maxFixedArity = 0;
    G__22008.cljs$lang$applyTo = function(arglist__22010) {
      var args = cljs.core.seq(arglist__22010);
      return G__22008__delegate(args);
    };
    G__22008.cljs$core$IFn$_invoke$arity$variadic = G__22008__delegate;
    return G__22008;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__22011__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__22011 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__22012__i = 0, G__22012__a = new Array(arguments.length - 0);
        while (G__22012__i < G__22012__a.length) {
          G__22012__a[G__22012__i] = arguments[G__22012__i + 0];
          ++G__22012__i;
        }
        args = new cljs.core.IndexedSeq(G__22012__a, 0);
      }
      return G__22011__delegate.call(this, args);
    };
    G__22011.cljs$lang$maxFixedArity = 0;
    G__22011.cljs$lang$applyTo = function(arglist__22013) {
      var args = cljs.core.seq(arglist__22013);
      return G__22011__delegate(args);
    };
    G__22011.cljs$core$IFn$_invoke$arity$variadic = G__22011__delegate;
    return G__22011;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4542__auto__ = ty;
    if (cljs.core.truth_(and__4542__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4542__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.make_array = function cljs$core$make_array() {
  var args22014 = [];
  var len__5593__auto___22017 = arguments.length;
  var i__5594__auto___22018 = 0;
  while (true) {
    if (i__5594__auto___22018 < len__5593__auto___22017) {
      args22014.push(arguments[i__5594__auto___22018]);
      var G__22019 = i__5594__auto___22018 + 1;
      i__5594__auto___22018 = G__22019;
      continue;
    } else {
    }
    break;
  }
  var G__22016 = args22014.length;
  switch(G__22016) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22014.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5438__auto___22021 = len;
  var i_22022 = 0;
  while (true) {
    if (i_22022 < n__5438__auto___22021) {
      new_arr[i_22022] = arr[i_22022];
      var G__22023 = i_22022 + 1;
      i_22022 = G__22023;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__22024 = i + 1;
      i = G__22024;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var args22025 = [];
  var len__5593__auto___22034 = arguments.length;
  var i__5594__auto___22035 = 0;
  while (true) {
    if (i__5594__auto___22035 < len__5593__auto___22034) {
      args22025.push(arguments[i__5594__auto___22035]);
      var G__22036 = i__5594__auto___22035 + 1;
      i__5594__auto___22035 = G__22036;
      continue;
    } else {
    }
    break;
  }
  var G__22030 = args22025.length;
  switch(G__22030) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22025.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__22031 = cljs.core.aget;
  var G__22032 = array[i];
  var G__22033 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__22031, G__22032, G__22033) : cljs.core.apply.call(null, G__22031, G__22032, G__22033);
};
cljs.core.aget.cljs$lang$applyTo = function(seq22026) {
  var G__22027 = cljs.core.first(seq22026);
  var seq22026__$1 = cljs.core.next(seq22026);
  var G__22028 = cljs.core.first(seq22026__$1);
  var seq22026__$2 = cljs.core.next(seq22026__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__22027, G__22028, seq22026__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var args22038 = [];
  var len__5593__auto___22049 = arguments.length;
  var i__5594__auto___22050 = 0;
  while (true) {
    if (i__5594__auto___22050 < len__5593__auto___22049) {
      args22038.push(arguments[i__5594__auto___22050]);
      var G__22051 = i__5594__auto___22050 + 1;
      i__5594__auto___22050 = G__22051;
      continue;
    } else {
    }
    break;
  }
  var G__22044 = args22038.length;
  switch(G__22044) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22038.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__22045 = cljs.core.aset;
  var G__22046 = array[idx];
  var G__22047 = idx2;
  var G__22048 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__22045, G__22046, G__22047, G__22048) : cljs.core.apply.call(null, G__22045, G__22046, G__22047, G__22048);
};
cljs.core.aset.cljs$lang$applyTo = function(seq22039) {
  var G__22040 = cljs.core.first(seq22039);
  var seq22039__$1 = cljs.core.next(seq22039);
  var G__22041 = cljs.core.first(seq22039__$1);
  var seq22039__$2 = cljs.core.next(seq22039__$1);
  var G__22042 = cljs.core.first(seq22039__$2);
  var seq22039__$3 = cljs.core.next(seq22039__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__22040, G__22041, G__22042, seq22039__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var args22053 = [];
  var len__5593__auto___22059 = arguments.length;
  var i__5594__auto___22060 = 0;
  while (true) {
    if (i__5594__auto___22060 < len__5593__auto___22059) {
      args22053.push(arguments[i__5594__auto___22060]);
      var G__22061 = i__5594__auto___22060 + 1;
      i__5594__auto___22060 = G__22061;
      continue;
    } else {
    }
    break;
  }
  var G__22055 = args22053.length;
  switch(G__22055) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22053.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__22056 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__22057 = [];
  var G__22058 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__22056, G__22057, G__22058) : cljs.core.reduce.call(null, G__22056, G__22057, G__22058);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var args__5600__auto__ = [];
  var len__5593__auto___22066 = arguments.length;
  var i__5594__auto___22067 = 0;
  while (true) {
    if (i__5594__auto___22067 < len__5593__auto___22066) {
      args__5600__auto__.push(arguments[i__5594__auto___22067]);
      var G__22068 = i__5594__auto___22067 + 1;
      i__5594__auto___22067 = G__22068;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq22063) {
  var G__22064 = cljs.core.first(seq22063);
  var seq22063__$1 = cljs.core.next(seq22063);
  var G__22065 = cljs.core.first(seq22063__$1);
  var seq22063__$2 = cljs.core.next(seq22063__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__22064, G__22065, seq22063__$2);
};
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function cljs$core$_invoke() {
  var args22073 = [];
  var len__5593__auto___22076 = arguments.length;
  var i__5594__auto___22077 = 0;
  while (true) {
    if (i__5594__auto___22077 < len__5593__auto___22076) {
      args22073.push(arguments[i__5594__auto___22077]);
      var G__22078 = i__5594__auto___22077 + 1;
      i__5594__auto___22077 = G__22078;
      continue;
    } else {
    }
    break;
  }
  var G__22075 = args22073.length;
  switch(G__22075) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22073.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5191__auto__.call(null, this$);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__5191__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5191__auto__.call(null, this$, a);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5191__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5191__auto__.call(null, this$, a, b);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5191__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5191__auto__.call(null, this$, a, b, c);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5191__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5191__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5191__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$6 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5191__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5191__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$7 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5191__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$8 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$9 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$10 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$11 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$12 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$13 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$14 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$15 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$16 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$17 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$18 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$19 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$20 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$21 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$22 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = {};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__5190__auto__ = value == null ? null : value;
    var m__5191__auto__ = cljs.core._clone[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5191__auto__.call(null, value);
    } else {
      var m__5191__auto____$1 = cljs.core._clone["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__5191__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = {};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._count[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._count["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._empty[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._empty["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._conj[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5191__auto__.call(null, coll, o);
    } else {
      var m__5191__auto____$1 = cljs.core._conj["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5191__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function cljs$core$_nth() {
  var args22090 = [];
  var len__5593__auto___22093 = arguments.length;
  var i__5594__auto___22094 = 0;
  while (true) {
    if (i__5594__auto___22094 < len__5593__auto___22093) {
      args22090.push(arguments[i__5594__auto___22094]);
      var G__22095 = i__5594__auto___22094 + 1;
      i__5594__auto___22094 = G__22095;
      continue;
    } else {
    }
    break;
  }
  var G__22092 = args22090.length;
  switch(G__22092) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22090.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._nth[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5191__auto__.call(null, coll, n);
    } else {
      var m__5191__auto____$1 = cljs.core._nth["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5191__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._nth[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5191__auto__.call(null, coll, n, not_found);
    } else {
      var m__5191__auto____$1 = cljs.core._nth["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5191__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._first[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._first["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._rest[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._rest["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = {};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._next[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._next["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function cljs$core$_lookup() {
  var args22105 = [];
  var len__5593__auto___22108 = arguments.length;
  var i__5594__auto___22109 = 0;
  while (true) {
    if (i__5594__auto___22109 < len__5593__auto___22108) {
      args22105.push(arguments[i__5594__auto___22109]);
      var G__22110 = i__5594__auto___22109 + 1;
      i__5594__auto___22109 = G__22110;
      continue;
    } else {
    }
    break;
  }
  var G__22107 = args22105.length;
  switch(G__22107) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22105.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._lookup[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__5191__auto__.call(null, o, k);
    } else {
      var m__5191__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__5191__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._lookup[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5191__auto__.call(null, o, k, not_found);
    } else {
      var m__5191__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5191__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5191__auto__.call(null, coll, k);
    } else {
      var m__5191__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5191__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._assoc[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5191__auto__.call(null, coll, k, v);
    } else {
      var m__5191__auto____$1 = cljs.core._assoc["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5191__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._dissoc[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5191__auto__.call(null, coll, k);
    } else {
      var m__5191__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5191__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._key[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._key["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._val[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._val["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._disjoin[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5191__auto__.call(null, coll, v);
    } else {
      var m__5191__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5191__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = {};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._peek[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._peek["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._pop[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._pop["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._assoc_n[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5191__auto__.call(null, coll, n, val);
    } else {
      var m__5191__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5191__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._deref[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto__.call(null, o);
    } else {
      var m__5191__auto____$1 = cljs.core._deref["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5191__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__5191__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5191__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._meta[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto__.call(null, o);
    } else {
      var m__5191__auto____$1 = cljs.core._meta["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._with_meta[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5191__auto__.call(null, o, meta);
    } else {
      var m__5191__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5191__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function cljs$core$_reduce() {
  var args22134 = [];
  var len__5593__auto___22137 = arguments.length;
  var i__5594__auto___22138 = 0;
  while (true) {
    if (i__5594__auto___22138 < len__5593__auto___22137) {
      args22134.push(arguments[i__5594__auto___22138]);
      var G__22139 = i__5594__auto___22138 + 1;
      i__5594__auto___22138 = G__22139;
      continue;
    } else {
    }
    break;
  }
  var G__22136 = args22134.length;
  switch(G__22136) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22134.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._reduce[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5191__auto__.call(null, coll, f);
    } else {
      var m__5191__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5191__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._reduce[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5191__auto__.call(null, coll, f, start);
    } else {
      var m__5191__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5191__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._kv_reduce[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5191__auto__.call(null, coll, f, init);
    } else {
      var m__5191__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5191__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._equiv[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__5191__auto__.call(null, o, other);
    } else {
      var m__5191__auto____$1 = cljs.core._equiv["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__5191__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = {};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._hash[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto__.call(null, o);
    } else {
      var m__5191__auto____$1 = cljs.core._hash["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._seq[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto__.call(null, o);
    } else {
      var m__5191__auto____$1 = cljs.core._seq["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._rseq[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._rseq["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._sorted_seq[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5191__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__5191__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5191__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5191__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__5191__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5191__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._entry_key[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5191__auto__.call(null, coll, entry);
    } else {
      var m__5191__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5191__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._comparator[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._comparator["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = {};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__5190__auto__ = writer == null ? null : writer;
    var m__5191__auto__ = cljs.core._write[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5191__auto__.call(null, writer, s);
    } else {
      var m__5191__auto____$1 = cljs.core._write["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5191__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__5190__auto__ = writer == null ? null : writer;
    var m__5191__auto__ = cljs.core._flush[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__5191__auto__.call(null, writer);
    } else {
      var m__5191__auto____$1 = cljs.core._flush["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__5191__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._pr_writer[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5191__auto__.call(null, o, writer, opts);
    } else {
      var m__5191__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5191__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__5190__auto__ = d == null ? null : d;
    var m__5191__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__5191__auto__.call(null, d);
    } else {
      var m__5191__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__5191__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._notify_watches[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5191__auto__.call(null, this$, oldval, newval);
    } else {
      var m__5191__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5191__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._add_watch[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5191__auto__.call(null, this$, key, f);
    } else {
      var m__5191__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5191__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._remove_watch[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5191__auto__.call(null, this$, key);
    } else {
      var m__5191__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5191__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._as_transient[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5191__auto__.call(null, tcoll, val);
    } else {
      var m__5191__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5191__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5191__auto__.call(null, tcoll);
    } else {
      var m__5191__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5191__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5191__auto__.call(null, tcoll, key, val);
    } else {
      var m__5191__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5191__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5191__auto__.call(null, tcoll, key);
    } else {
      var m__5191__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5191__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5191__auto__.call(null, tcoll, n, val);
    } else {
      var m__5191__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5191__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5191__auto__.call(null, tcoll);
    } else {
      var m__5191__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5191__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5191__auto__.call(null, tcoll, v);
    } else {
      var m__5191__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5191__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._compare[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__5191__auto__.call(null, x, y);
    } else {
      var m__5191__auto____$1 = cljs.core._compare["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__5191__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._drop_first[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._chunked_first[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._chunked_rest[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._chunked_next[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = {};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._name[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto__.call(null, x);
    } else {
      var m__5191__auto____$1 = cljs.core._name["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._namespace[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto__.call(null, x);
    } else {
      var m__5191__auto____$1 = cljs.core._namespace["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = {};
cljs.core.IReset = {};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5191__auto__.call(null, o, new_value);
    } else {
      var m__5191__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5191__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = {};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var args22195 = [];
  var len__5593__auto___22198 = arguments.length;
  var i__5594__auto___22199 = 0;
  while (true) {
    if (i__5594__auto___22199 < len__5593__auto___22198) {
      args22195.push(arguments[i__5594__auto___22199]);
      var G__22200 = i__5594__auto___22199 + 1;
      i__5594__auto___22199 = G__22200;
      continue;
    } else {
    }
    break;
  }
  var G__22197 = args22195.length;
  switch(G__22197) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22195.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__5191__auto__.call(null, o, f);
    } else {
      var m__5191__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__5191__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5191__auto__.call(null, o, f, a);
    } else {
      var m__5191__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5191__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5191__auto__.call(null, o, f, a, b);
    } else {
      var m__5191__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5191__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5191__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__5191__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5191__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = {};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5191__auto__.call(null, o, new_value);
    } else {
      var m__5191__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5191__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = {};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._iterator[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._iterator["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__22206 = i + 2;
        var G__22207 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__22206;
        h1 = G__22207;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__22210 = i + 1;
          var G__22211 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__22210;
          hash = G__22211;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = cljs.core.not(a.ns);
      if (and__4542__auto__) {
        return b.ns;
      } else {
        return and__4542__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__22224 = a.ns;
            var G__22225 = b.ns;
            return goog.array.defaultCompare(G__22224, G__22225);
          }();
          if (0 === nsc) {
            var G__22226 = a.name;
            var G__22227 = b.name;
            return goog.array.defaultCompare(G__22226, G__22227);
          } else {
            return nsc;
          }
        }
      } else {
        var G__22228 = a.name;
        var G__22229 = b.name;
        return goog.array.defaultCompare(G__22228, G__22229);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__22231 = null;
  var G__22231__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__22231__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__22231 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22231__2.call(this, self__, coll);
      case 3:
        return G__22231__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22231.cljs$core$IFn$_invoke$arity$2 = G__22231__2;
  G__22231.cljs$core$IFn$_invoke$arity$3 = G__22231__3;
  return G__22231;
}();
cljs.core.Symbol.prototype.apply = function(self__, args22230) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22230)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4970__auto__ = self__._hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var args22232 = [];
  var len__5593__auto___22235 = arguments.length;
  var i__5594__auto___22236 = 0;
  while (true) {
    if (i__5594__auto___22236 < len__5593__auto___22235) {
      args22232.push(arguments[i__5594__auto___22236]);
      var G__22237 = i__5594__auto___22236 + 1;
      i__5594__auto___22236 = G__22237;
      continue;
    } else {
    }
    break;
  }
  var G__22234 = args22232.length;
  switch(G__22234) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22232.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__22240 = this$__$1.sym;
    var G__22241 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__22240, G__22241) : cljs.core._EQ_.call(null, G__22240, G__22241);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__22286 = null;
  var G__22286__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__22286__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__22286__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__22286__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__22286__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__22286__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__22286__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__22286__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__22286__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__22286__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__22286__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__22286__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__22286__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__22286__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__22286__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__22286__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__22286__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__22286__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__22286__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__22286__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__22286__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__22286__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__22242 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__22243 = a;
    var G__22244 = b;
    var G__22245 = c;
    var G__22246 = d;
    var G__22247 = e;
    var G__22248 = f;
    var G__22249 = g;
    var G__22250 = h;
    var G__22251 = i;
    var G__22252 = j;
    var G__22253 = k;
    var G__22254 = l;
    var G__22255 = m;
    var G__22256 = n;
    var G__22257 = o;
    var G__22258 = p;
    var G__22259 = q;
    var G__22260 = r;
    var G__22261 = s;
    var G__22262 = t;
    var G__22263 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__22242, G__22243, G__22244, G__22245, G__22246, G__22247, G__22248, G__22249, G__22250, G__22251, G__22252, G__22253, G__22254, G__22255, G__22256, G__22257, G__22258, G__22259, G__22260, G__22261, G__22262, G__22263) : cljs.core.apply.call(null, G__22242, G__22243, G__22244, G__22245, G__22246, G__22247, G__22248, G__22249, G__22250, G__22251, G__22252, G__22253, G__22254, G__22255, G__22256, 
    G__22257, G__22258, G__22259, G__22260, G__22261, G__22262, G__22263);
  };
  G__22286 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__22286__1.call(this, self__);
      case 2:
        return G__22286__2.call(this, self__, a);
      case 3:
        return G__22286__3.call(this, self__, a, b);
      case 4:
        return G__22286__4.call(this, self__, a, b, c);
      case 5:
        return G__22286__5.call(this, self__, a, b, c, d);
      case 6:
        return G__22286__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__22286__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__22286__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__22286__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__22286__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__22286__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__22286__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__22286__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__22286__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__22286__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__22286__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__22286__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__22286__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__22286__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__22286__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__22286__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__22286__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22286.cljs$core$IFn$_invoke$arity$1 = G__22286__1;
  G__22286.cljs$core$IFn$_invoke$arity$2 = G__22286__2;
  G__22286.cljs$core$IFn$_invoke$arity$3 = G__22286__3;
  G__22286.cljs$core$IFn$_invoke$arity$4 = G__22286__4;
  G__22286.cljs$core$IFn$_invoke$arity$5 = G__22286__5;
  G__22286.cljs$core$IFn$_invoke$arity$6 = G__22286__6;
  G__22286.cljs$core$IFn$_invoke$arity$7 = G__22286__7;
  G__22286.cljs$core$IFn$_invoke$arity$8 = G__22286__8;
  G__22286.cljs$core$IFn$_invoke$arity$9 = G__22286__9;
  G__22286.cljs$core$IFn$_invoke$arity$10 = G__22286__10;
  G__22286.cljs$core$IFn$_invoke$arity$11 = G__22286__11;
  G__22286.cljs$core$IFn$_invoke$arity$12 = G__22286__12;
  G__22286.cljs$core$IFn$_invoke$arity$13 = G__22286__13;
  G__22286.cljs$core$IFn$_invoke$arity$14 = G__22286__14;
  G__22286.cljs$core$IFn$_invoke$arity$15 = G__22286__15;
  G__22286.cljs$core$IFn$_invoke$arity$16 = G__22286__16;
  G__22286.cljs$core$IFn$_invoke$arity$17 = G__22286__17;
  G__22286.cljs$core$IFn$_invoke$arity$18 = G__22286__18;
  G__22286.cljs$core$IFn$_invoke$arity$19 = G__22286__19;
  G__22286.cljs$core$IFn$_invoke$arity$20 = G__22286__20;
  G__22286.cljs$core$IFn$_invoke$arity$21 = G__22286__21;
  G__22286.cljs$core$IFn$_invoke$arity$22 = G__22286__22;
  return G__22286;
}();
cljs.core.Var.prototype.apply = function(self__, args22239) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22239)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__22264 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__22265 = a;
  var G__22266 = b;
  var G__22267 = c;
  var G__22268 = d;
  var G__22269 = e;
  var G__22270 = f;
  var G__22271 = g;
  var G__22272 = h;
  var G__22273 = i;
  var G__22274 = j;
  var G__22275 = k;
  var G__22276 = l;
  var G__22277 = m;
  var G__22278 = n;
  var G__22279 = o;
  var G__22280 = p;
  var G__22281 = q;
  var G__22282 = r;
  var G__22283 = s;
  var G__22284 = t;
  var G__22285 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__22264, G__22265, G__22266, G__22267, G__22268, G__22269, G__22270, G__22271, G__22272, G__22273, G__22274, G__22275, G__22276, G__22277, G__22278, G__22279, G__22280, G__22281, G__22282, G__22283, G__22284, G__22285) : cljs.core.apply.call(null, G__22264, G__22265, G__22266, G__22267, G__22268, G__22269, G__22270, G__22271, G__22272, G__22273, G__22274, G__22275, G__22276, G__22277, G__22278, 
  G__22279, G__22280, G__22281, G__22282, G__22283, G__22284, G__22285);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var args22299 = [];
  var len__5593__auto___22305 = arguments.length;
  var i__5594__auto___22306 = 0;
  while (true) {
    if (i__5594__auto___22306 < len__5593__auto___22305) {
      args22299.push(arguments[i__5594__auto___22306]);
      var G__22307 = i__5594__auto___22306 + 1;
      i__5594__auto___22306 = G__22307;
      continue;
    } else {
    }
    break;
  }
  var G__22304 = args22299.length;
  switch(G__22304) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22299.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__22309 = y;
        var G__22310 = cljs.core.first(more);
        var G__22311 = cljs.core.next(more);
        x = G__22309;
        y = G__22310;
        more = G__22311;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq22300) {
  var G__22301 = cljs.core.first(seq22300);
  var seq22300__$1 = cljs.core.next(seq22300);
  var G__22302 = cljs.core.first(seq22300__$1);
  var seq22300__$2 = cljs.core.next(seq22300__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__22301, G__22302, seq22300__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__22312 = n + 1;
      var G__22313 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__22314 = cljs.core.next(coll__$1);
      n = G__22312;
      hash_code = G__22313;
      coll__$1 = G__22314;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__22315 = n + 1;
      var G__22316 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__22317 = cljs.core.next(coll__$1);
      n = G__22315;
      hash_code = G__22316;
      coll__$1 = G__22317;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__22318 = this$__$1.valueOf();
    var G__22319 = other.valueOf();
    return goog.array.defaultCompare(G__22318, G__22319);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var args22320 = [];
  var len__5593__auto___22329 = arguments.length;
  var i__5594__auto___22330 = 0;
  while (true) {
    if (i__5594__auto___22330 < len__5593__auto___22329) {
      args22320.push(arguments[i__5594__auto___22330]);
      var G__22331 = i__5594__auto___22330 + 1;
      i__5594__auto___22330 = G__22331;
      continue;
    } else {
    }
    break;
  }
  var G__22322 = args22320.length;
  switch(G__22322) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22320.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__22323 = val;
          var G__22324 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22323, G__22324) : f.call(null, G__22323, G__22324);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__22333 = nval;
          var G__22334 = n + 1;
          val = G__22333;
          n = G__22334;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__22325 = val__$1;
        var G__22326 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22325, G__22326) : f.call(null, G__22325, G__22326);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__22335 = nval;
        var G__22336 = n + 1;
        val__$1 = G__22335;
        n = G__22336;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__22327 = val__$1;
        var G__22328 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22327, G__22328) : f.call(null, G__22327, G__22328);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__22337 = nval;
        var G__22338 = n + 1;
        val__$1 = G__22337;
        n = G__22338;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var args22339 = [];
  var len__5593__auto___22348 = arguments.length;
  var i__5594__auto___22349 = 0;
  while (true) {
    if (i__5594__auto___22349 < len__5593__auto___22348) {
      args22339.push(arguments[i__5594__auto___22349]);
      var G__22350 = i__5594__auto___22349 + 1;
      i__5594__auto___22349 = G__22350;
      continue;
    } else {
    }
    break;
  }
  var G__22341 = args22339.length;
  switch(G__22341) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22339.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__22342 = val;
          var G__22343 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22342, G__22343) : f.call(null, G__22342, G__22343);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__22352 = nval;
          var G__22353 = n + 1;
          val = G__22352;
          n = G__22353;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__22344 = val__$1;
        var G__22345 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22344, G__22345) : f.call(null, G__22344, G__22345);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__22354 = nval;
        var G__22355 = n + 1;
        val__$1 = G__22354;
        n = G__22355;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__22346 = val__$1;
        var G__22347 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22346, G__22347) : f.call(null, G__22346, G__22347);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__22356 = nval;
        var G__22357 = n + 1;
        val__$1 = G__22356;
        n = G__22357;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4866__auto__ = 0;
  var y__4867__auto__ = self__.arr.length - self__.i;
  return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var args22362 = [];
  var len__5593__auto___22365 = arguments.length;
  var i__5594__auto___22366 = 0;
  while (true) {
    if (i__5594__auto___22366 < len__5593__auto___22365) {
      args22362.push(arguments[i__5594__auto___22366]);
      var G__22367 = i__5594__auto___22366 + 1;
      i__5594__auto___22366 = G__22367;
      continue;
    } else {
    }
    break;
  }
  var G__22364 = args22362.length;
  switch(G__22364) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22362.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var args22369 = [];
  var len__5593__auto___22372 = arguments.length;
  var i__5594__auto___22373 = 0;
  while (true) {
    if (i__5594__auto___22373 < len__5593__auto___22372) {
      args22369.push(arguments[i__5594__auto___22373]);
      var G__22374 = i__5594__auto___22373 + 1;
      i__5594__auto___22373 = G__22374;
      continue;
    } else {
    }
    break;
  }
  var G__22371 = args22369.length;
  switch(G__22371) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22369.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__22376 = cljs.core.List.EMPTY;
  var G__22377 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__22376, G__22377) : cljs.core.with_meta.call(null, G__22376, G__22377);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__22378 = sn;
      s = G__22378;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var args22379 = [];
  var len__5593__auto___22385 = arguments.length;
  var i__5594__auto___22386 = 0;
  while (true) {
    if (i__5594__auto___22386 < len__5593__auto___22385) {
      args22379.push(arguments[i__5594__auto___22386]);
      var G__22387 = i__5594__auto___22386 + 1;
      i__5594__auto___22386 = G__22387;
      continue;
    } else {
    }
    break;
  }
  var G__22384 = args22379.length;
  switch(G__22384) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22379.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__22389 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__22390 = cljs.core.first(xs);
      var G__22391 = cljs.core.next(xs);
      coll = G__22389;
      x = G__22390;
      xs = G__22391;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq22380) {
  var G__22381 = cljs.core.first(seq22380);
  var seq22380__$1 = cljs.core.next(seq22380);
  var G__22382 = cljs.core.first(seq22380__$1);
  var seq22380__$2 = cljs.core.next(seq22380__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__22381, G__22382, seq22380__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__22392 = cljs.core.next(s);
      var G__22393 = acc + 1;
      s = G__22392;
      acc = G__22393;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var args22398 = [];
  var len__5593__auto___22401 = arguments.length;
  var i__5594__auto___22402 = 0;
  while (true) {
    if (i__5594__auto___22402 < len__5593__auto___22401) {
      args22398.push(arguments[i__5594__auto___22402]);
      var G__22403 = i__5594__auto___22402 + 1;
      i__5594__auto___22402 = G__22403;
      continue;
    } else {
    }
    break;
  }
  var G__22400 = args22398.length;
  switch(G__22400) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22398.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__22405 = cljs.core.next(coll);
            var G__22406 = n - 1;
            coll = G__22405;
            n = G__22406;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__22407 = cljs.core.next(coll);
            var G__22408 = n - 1;
            var G__22409 = not_found;
            coll = G__22407;
            n = G__22408;
            not_found = G__22409;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var args22410 = [];
  var len__5593__auto___22417 = arguments.length;
  var i__5594__auto___22418 = 0;
  while (true) {
    if (i__5594__auto___22418 < len__5593__auto___22417) {
      args22410.push(arguments[i__5594__auto___22418]);
      var G__22419 = i__5594__auto___22418 + 1;
      i__5594__auto___22418 = G__22419;
      continue;
    } else {
    }
    break;
  }
  var G__22412 = args22410.length;
  switch(G__22412) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22410.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__22421 = n__$1 - 1;
      var G__22422 = cljs.core.rest(xs);
      n__$1 = G__22421;
      xs = G__22422;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var args22423 = [];
  var len__5593__auto___22428 = arguments.length;
  var i__5594__auto___22429 = 0;
  while (true) {
    if (i__5594__auto___22429 < len__5593__auto___22428) {
      args22423.push(arguments[i__5594__auto___22429]);
      var G__22430 = i__5594__auto___22429 + 1;
      i__5594__auto___22429 = G__22430;
      continue;
    } else {
    }
    break;
  }
  var G__22425 = args22423.length;
  switch(G__22425) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22423.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var args22432 = [];
  var len__5593__auto___22439 = arguments.length;
  var i__5594__auto___22440 = 0;
  while (true) {
    if (i__5594__auto___22440 < len__5593__auto___22439) {
      args22432.push(arguments[i__5594__auto___22440]);
      var G__22441 = i__5594__auto___22440 + 1;
      i__5594__auto___22440 = G__22441;
      continue;
    } else {
    }
    break;
  }
  var G__22438 = args22432.length;
  switch(G__22438) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22432.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__22443 = ret;
      var G__22444 = cljs.core.first(kvs);
      var G__22445 = cljs.core.second(kvs);
      var G__22446 = cljs.core.nnext(kvs);
      coll = G__22443;
      k = G__22444;
      v = G__22445;
      kvs = G__22446;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq22433) {
  var G__22434 = cljs.core.first(seq22433);
  var seq22433__$1 = cljs.core.next(seq22433);
  var G__22435 = cljs.core.first(seq22433__$1);
  var seq22433__$2 = cljs.core.next(seq22433__$1);
  var G__22436 = cljs.core.first(seq22433__$2);
  var seq22433__$3 = cljs.core.next(seq22433__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__22434, G__22435, G__22436, seq22433__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var args22447 = [];
  var len__5593__auto___22453 = arguments.length;
  var i__5594__auto___22454 = 0;
  while (true) {
    if (i__5594__auto___22454 < len__5593__auto___22453) {
      args22447.push(arguments[i__5594__auto___22454]);
      var G__22455 = i__5594__auto___22454 + 1;
      i__5594__auto___22454 = G__22455;
      continue;
    } else {
    }
    break;
  }
  var G__22452 = args22447.length;
  switch(G__22452) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22447.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__22457 = ret;
        var G__22458 = cljs.core.first(ks);
        var G__22459 = cljs.core.next(ks);
        coll = G__22457;
        k = G__22458;
        ks = G__22459;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq22448) {
  var G__22449 = cljs.core.first(seq22448);
  var seq22448__$1 = cljs.core.next(seq22448);
  var G__22450 = cljs.core.first(seq22448__$1);
  var seq22448__$2 = cljs.core.next(seq22448__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__22449, G__22450, seq22448__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4554__auto__ = goog.isFunction(f);
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__22465 = null;
  var G__22465__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__22465__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__22465__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__22465__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__22465__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__22465__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__22465__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__22465__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__22465__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__22465__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__22465__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__22465__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__22465__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__22465__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__22465__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__22465__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__22465__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__22465__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__22465__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__22465__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__22465__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__22465__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__22465 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__22465__1.call(this, self__);
      case 2:
        return G__22465__2.call(this, self__, a);
      case 3:
        return G__22465__3.call(this, self__, a, b);
      case 4:
        return G__22465__4.call(this, self__, a, b, c);
      case 5:
        return G__22465__5.call(this, self__, a, b, c, d);
      case 6:
        return G__22465__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__22465__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__22465__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__22465__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__22465__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__22465__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__22465__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__22465__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__22465__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__22465__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__22465__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__22465__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__22465__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__22465__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__22465__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__22465__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__22465__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22465.cljs$core$IFn$_invoke$arity$1 = G__22465__1;
  G__22465.cljs$core$IFn$_invoke$arity$2 = G__22465__2;
  G__22465.cljs$core$IFn$_invoke$arity$3 = G__22465__3;
  G__22465.cljs$core$IFn$_invoke$arity$4 = G__22465__4;
  G__22465.cljs$core$IFn$_invoke$arity$5 = G__22465__5;
  G__22465.cljs$core$IFn$_invoke$arity$6 = G__22465__6;
  G__22465.cljs$core$IFn$_invoke$arity$7 = G__22465__7;
  G__22465.cljs$core$IFn$_invoke$arity$8 = G__22465__8;
  G__22465.cljs$core$IFn$_invoke$arity$9 = G__22465__9;
  G__22465.cljs$core$IFn$_invoke$arity$10 = G__22465__10;
  G__22465.cljs$core$IFn$_invoke$arity$11 = G__22465__11;
  G__22465.cljs$core$IFn$_invoke$arity$12 = G__22465__12;
  G__22465.cljs$core$IFn$_invoke$arity$13 = G__22465__13;
  G__22465.cljs$core$IFn$_invoke$arity$14 = G__22465__14;
  G__22465.cljs$core$IFn$_invoke$arity$15 = G__22465__15;
  G__22465.cljs$core$IFn$_invoke$arity$16 = G__22465__16;
  G__22465.cljs$core$IFn$_invoke$arity$17 = G__22465__17;
  G__22465.cljs$core$IFn$_invoke$arity$18 = G__22465__18;
  G__22465.cljs$core$IFn$_invoke$arity$19 = G__22465__19;
  G__22465.cljs$core$IFn$_invoke$arity$20 = G__22465__20;
  G__22465.cljs$core$IFn$_invoke$arity$21 = G__22465__21;
  G__22465.cljs$core$IFn$_invoke$arity$22 = G__22465__22;
  return G__22465;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args22464) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22464)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4542__auto__ = !(o == null);
    if (and__4542__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4542__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var args22470 = [];
  var len__5593__auto___22476 = arguments.length;
  var i__5594__auto___22477 = 0;
  while (true) {
    if (i__5594__auto___22477 < len__5593__auto___22476) {
      args22470.push(arguments[i__5594__auto___22477]);
      var G__22478 = i__5594__auto___22477 + 1;
      i__5594__auto___22477 = G__22478;
      continue;
    } else {
    }
    break;
  }
  var G__22475 = args22470.length;
  switch(G__22475) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22470.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__22480 = ret;
        var G__22481 = cljs.core.first(ks);
        var G__22482 = cljs.core.next(ks);
        coll = G__22480;
        k = G__22481;
        ks = G__22482;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq22471) {
  var G__22472 = cljs.core.first(seq22471);
  var seq22471__$1 = cljs.core.next(seq22471);
  var G__22473 = cljs.core.first(seq22471__$1);
  var seq22471__$2 = cljs.core.next(seq22471__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__22472, G__22473, seq22471__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var args22503 = [];
  var len__5593__auto___22509 = arguments.length;
  var i__5594__auto___22510 = 0;
  while (true) {
    if (i__5594__auto___22510 < len__5593__auto___22509) {
      args22503.push(arguments[i__5594__auto___22510]);
      var G__22511 = i__5594__auto___22510 + 1;
      i__5594__auto___22510 = G__22511;
      continue;
    } else {
    }
    break;
  }
  var G__22506 = args22503.length;
  switch(G__22506) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22503.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5612__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq22504) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq22504));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__22515_22517 = obj;
  var G__22516_22518 = function(G__22515_22517, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__22515_22517, keys);
  goog.object.forEach(G__22515_22517, G__22516_22518);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__22519 = i__$1 + 1;
      var G__22520 = j__$1 + 1;
      var G__22521 = len__$1 - 1;
      i__$1 = G__22519;
      j__$1 = G__22520;
      len__$1 = G__22521;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__22522 = i__$1 - 1;
      var G__22523 = j__$1 - 1;
      var G__22524 = len__$1 - 1;
      i__$1 = G__22522;
      j__$1 = G__22523;
      len__$1 = G__22524;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4554__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var args22535 = [];
  var len__5593__auto___22541 = arguments.length;
  var i__5594__auto___22542 = 0;
  while (true) {
    if (i__5594__auto___22542 < len__5593__auto___22541) {
      args22535.push(arguments[i__5594__auto___22542]);
      var G__22543 = i__5594__auto___22542 + 1;
      i__5594__auto___22542 = G__22543;
      continue;
    } else {
    }
    break;
  }
  var G__22540 = args22535.length;
  switch(G__22540) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22535.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__22545 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__22546 = etc;
          s = G__22545;
          xs = G__22546;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq22536) {
  var G__22537 = cljs.core.first(seq22536);
  var seq22536__$1 = cljs.core.next(seq22536);
  var G__22538 = cljs.core.first(seq22536__$1);
  var seq22536__$2 = cljs.core.next(seq22536__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__22537, G__22538, seq22536__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var args22549 = [];
  var len__5593__auto___22552 = arguments.length;
  var i__5594__auto___22553 = 0;
  while (true) {
    if (i__5594__auto___22553 < len__5593__auto___22552) {
      args22549.push(arguments[i__5594__auto___22553]);
      var G__22554 = i__5594__auto___22553 + 1;
      i__5594__auto___22553 = G__22554;
      continue;
    } else {
    }
    break;
  }
  var G__22551 = args22549.length;
  switch(G__22551) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22549.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__22556 = xs;
      var G__22557 = ys;
      var G__22558 = len;
      var G__22559 = n + 1;
      xs = G__22556;
      ys = G__22557;
      len = G__22558;
      n = G__22559;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var args22560 = [];
  var len__5593__auto___22565 = arguments.length;
  var i__5594__auto___22566 = 0;
  while (true) {
    if (i__5594__auto___22566 < len__5593__auto___22565) {
      args22560.push(arguments[i__5594__auto___22566]);
      var G__22567 = i__5594__auto___22566 + 1;
      i__5594__auto___22566 = G__22567;
      continue;
    } else {
    }
    break;
  }
  var G__22562 = args22560.length;
  switch(G__22562) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22560.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__22563_22569 = a;
    var G__22564_22570 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__22563_22569, G__22564_22570);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var args22571 = [];
  var len__5593__auto___22574 = arguments.length;
  var i__5594__auto___22575 = 0;
  while (true) {
    if (i__5594__auto___22575 < len__5593__auto___22574) {
      args22571.push(arguments[i__5594__auto___22575]);
      var G__22576 = i__5594__auto___22575 + 1;
      i__5594__auto___22575 = G__22576;
      continue;
    } else {
    }
    break;
  }
  var G__22573 = args22571.length;
  switch(G__22573) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22571.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var args22578 = [];
  var len__5593__auto___22586 = arguments.length;
  var i__5594__auto___22587 = 0;
  while (true) {
    if (i__5594__auto___22587 < len__5593__auto___22586) {
      args22578.push(arguments[i__5594__auto___22587]);
      var G__22588 = i__5594__auto___22587 + 1;
      i__5594__auto___22587 = G__22588;
      continue;
    } else {
    }
    break;
  }
  var G__22580 = args22578.length;
  switch(G__22580) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22578.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__22581 = f;
    var G__22582 = cljs.core.first(s);
    var G__22583 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__22581, G__22582, G__22583) : cljs.core.reduce.call(null, G__22581, G__22582, G__22583);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__22584 = val__$1;
        var G__22585 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22584, G__22585) : f.call(null, G__22584, G__22585);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__22590 = nval;
        var G__22591 = cljs.core.next(coll__$1);
        val__$1 = G__22590;
        coll__$1 = G__22591;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce() {
  var args22592 = [];
  var len__5593__auto___22597 = arguments.length;
  var i__5594__auto___22598 = 0;
  while (true) {
    if (i__5594__auto___22598 < len__5593__auto___22597) {
      args22592.push(arguments[i__5594__auto___22598]);
      var G__22599 = i__5594__auto___22598 + 1;
      i__5594__auto___22598 = G__22599;
      continue;
    } else {
    }
    break;
  }
  var G__22594 = args22592.length;
  switch(G__22594) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22592.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var args22601 = [];
  var len__5593__auto___22604 = arguments.length;
  var i__5594__auto___22605 = 0;
  while (true) {
    if (i__5594__auto___22605 < len__5593__auto___22604) {
      args22601.push(arguments[i__5594__auto___22605]);
      var G__22606 = i__5594__auto___22605 + 1;
      i__5594__auto___22605 = G__22606;
      continue;
    } else {
    }
    break;
  }
  var G__22603 = args22601.length;
  switch(G__22603) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22601.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__22608 = null;
    var G__22608__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__22608__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__22608__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__22608 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__22608__0.call(this);
        case 1:
          return G__22608__1.call(this, x);
        case 2:
          return G__22608__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22608.cljs$core$IFn$_invoke$arity$0 = G__22608__0;
    G__22608.cljs$core$IFn$_invoke$arity$1 = G__22608__1;
    G__22608.cljs$core$IFn$_invoke$arity$2 = G__22608__2;
    return G__22608;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var args22609 = [];
  var len__5593__auto___22612 = arguments.length;
  var i__5594__auto___22613 = 0;
  while (true) {
    if (i__5594__auto___22613 < len__5593__auto___22612) {
      args22609.push(arguments[i__5594__auto___22613]);
      var G__22614 = i__5594__auto___22613 + 1;
      i__5594__auto___22613 = G__22614;
      continue;
    } else {
    }
    break;
  }
  var G__22611 = args22609.length;
  switch(G__22611) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22609.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var args22616 = [];
  var len__5593__auto___22622 = arguments.length;
  var i__5594__auto___22623 = 0;
  while (true) {
    if (i__5594__auto___22623 < len__5593__auto___22622) {
      args22616.push(arguments[i__5594__auto___22623]);
      var G__22624 = i__5594__auto___22623 + 1;
      i__5594__auto___22623 = G__22624;
      continue;
    } else {
    }
    break;
  }
  var G__22621 = args22616.length;
  switch(G__22621) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22616.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq22617) {
  var G__22618 = cljs.core.first(seq22617);
  var seq22617__$1 = cljs.core.next(seq22617);
  var G__22619 = cljs.core.first(seq22617__$1);
  var seq22617__$2 = cljs.core.next(seq22617__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__22618, G__22619, seq22617__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var args22626 = [];
  var len__5593__auto___22632 = arguments.length;
  var i__5594__auto___22633 = 0;
  while (true) {
    if (i__5594__auto___22633 < len__5593__auto___22632) {
      args22626.push(arguments[i__5594__auto___22633]);
      var G__22634 = i__5594__auto___22633 + 1;
      i__5594__auto___22633 = G__22634;
      continue;
    } else {
    }
    break;
  }
  var G__22631 = args22626.length;
  switch(G__22631) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22626.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq22627) {
  var G__22628 = cljs.core.first(seq22627);
  var seq22627__$1 = cljs.core.next(seq22627);
  var G__22629 = cljs.core.first(seq22627__$1);
  var seq22627__$2 = cljs.core.next(seq22627__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__22628, G__22629, seq22627__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var args22636 = [];
  var len__5593__auto___22642 = arguments.length;
  var i__5594__auto___22643 = 0;
  while (true) {
    if (i__5594__auto___22643 < len__5593__auto___22642) {
      args22636.push(arguments[i__5594__auto___22643]);
      var G__22644 = i__5594__auto___22643 + 1;
      i__5594__auto___22643 = G__22644;
      continue;
    } else {
    }
    break;
  }
  var G__22641 = args22636.length;
  switch(G__22641) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22636.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq22637) {
  var G__22638 = cljs.core.first(seq22637);
  var seq22637__$1 = cljs.core.next(seq22637);
  var G__22639 = cljs.core.first(seq22637__$1);
  var seq22637__$2 = cljs.core.next(seq22637__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__22638, G__22639, seq22637__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var args22646 = [];
  var len__5593__auto___22652 = arguments.length;
  var i__5594__auto___22653 = 0;
  while (true) {
    if (i__5594__auto___22653 < len__5593__auto___22652) {
      args22646.push(arguments[i__5594__auto___22653]);
      var G__22654 = i__5594__auto___22653 + 1;
      i__5594__auto___22653 = G__22654;
      continue;
    } else {
    }
    break;
  }
  var G__22651 = args22646.length;
  switch(G__22651) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22646.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq22647) {
  var G__22648 = cljs.core.first(seq22647);
  var seq22647__$1 = cljs.core.next(seq22647);
  var G__22649 = cljs.core.first(seq22647__$1);
  var seq22647__$2 = cljs.core.next(seq22647__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__22648, G__22649, seq22647__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var args22656 = [];
  var len__5593__auto___22662 = arguments.length;
  var i__5594__auto___22663 = 0;
  while (true) {
    if (i__5594__auto___22663 < len__5593__auto___22662) {
      args22656.push(arguments[i__5594__auto___22663]);
      var G__22664 = i__5594__auto___22663 + 1;
      i__5594__auto___22663 = G__22664;
      continue;
    } else {
    }
    break;
  }
  var G__22661 = args22656.length;
  switch(G__22661) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22656.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__22666 = y;
        var G__22667 = cljs.core.first(more);
        var G__22668 = cljs.core.next(more);
        x = G__22666;
        y = G__22667;
        more = G__22668;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq22657) {
  var G__22658 = cljs.core.first(seq22657);
  var seq22657__$1 = cljs.core.next(seq22657);
  var G__22659 = cljs.core.first(seq22657__$1);
  var seq22657__$2 = cljs.core.next(seq22657__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__22658, G__22659, seq22657__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var args22669 = [];
  var len__5593__auto___22675 = arguments.length;
  var i__5594__auto___22676 = 0;
  while (true) {
    if (i__5594__auto___22676 < len__5593__auto___22675) {
      args22669.push(arguments[i__5594__auto___22676]);
      var G__22677 = i__5594__auto___22676 + 1;
      i__5594__auto___22676 = G__22677;
      continue;
    } else {
    }
    break;
  }
  var G__22674 = args22669.length;
  switch(G__22674) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22669.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__22679 = y;
        var G__22680 = cljs.core.first(more);
        var G__22681 = cljs.core.next(more);
        x = G__22679;
        y = G__22680;
        more = G__22681;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq22670) {
  var G__22671 = cljs.core.first(seq22670);
  var seq22670__$1 = cljs.core.next(seq22670);
  var G__22672 = cljs.core.first(seq22670__$1);
  var seq22670__$2 = cljs.core.next(seq22670__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__22671, G__22672, seq22670__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var args22682 = [];
  var len__5593__auto___22688 = arguments.length;
  var i__5594__auto___22689 = 0;
  while (true) {
    if (i__5594__auto___22689 < len__5593__auto___22688) {
      args22682.push(arguments[i__5594__auto___22689]);
      var G__22690 = i__5594__auto___22689 + 1;
      i__5594__auto___22689 = G__22690;
      continue;
    } else {
    }
    break;
  }
  var G__22687 = args22682.length;
  switch(G__22687) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22682.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__22692 = y;
        var G__22693 = cljs.core.first(more);
        var G__22694 = cljs.core.next(more);
        x = G__22692;
        y = G__22693;
        more = G__22694;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq22683) {
  var G__22684 = cljs.core.first(seq22683);
  var seq22683__$1 = cljs.core.next(seq22683);
  var G__22685 = cljs.core.first(seq22683__$1);
  var seq22683__$2 = cljs.core.next(seq22683__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__22684, G__22685, seq22683__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var args22695 = [];
  var len__5593__auto___22701 = arguments.length;
  var i__5594__auto___22702 = 0;
  while (true) {
    if (i__5594__auto___22702 < len__5593__auto___22701) {
      args22695.push(arguments[i__5594__auto___22702]);
      var G__22703 = i__5594__auto___22702 + 1;
      i__5594__auto___22702 = G__22703;
      continue;
    } else {
    }
    break;
  }
  var G__22700 = args22695.length;
  switch(G__22700) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22695.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__22705 = y;
        var G__22706 = cljs.core.first(more);
        var G__22707 = cljs.core.next(more);
        x = G__22705;
        y = G__22706;
        more = G__22707;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq22696) {
  var G__22697 = cljs.core.first(seq22696);
  var seq22696__$1 = cljs.core.next(seq22696);
  var G__22698 = cljs.core.first(seq22696__$1);
  var seq22696__$2 = cljs.core.next(seq22696__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__22697, G__22698, seq22696__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var args22708 = [];
  var len__5593__auto___22714 = arguments.length;
  var i__5594__auto___22715 = 0;
  while (true) {
    if (i__5594__auto___22715 < len__5593__auto___22714) {
      args22708.push(arguments[i__5594__auto___22715]);
      var G__22716 = i__5594__auto___22715 + 1;
      i__5594__auto___22715 = G__22716;
      continue;
    } else {
    }
    break;
  }
  var G__22713 = args22708.length;
  switch(G__22713) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22708.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4866__auto__ = x;
  var y__4867__auto__ = y;
  return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4866__auto__ = x;
    var y__4867__auto__ = y;
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq22709) {
  var G__22710 = cljs.core.first(seq22709);
  var seq22709__$1 = cljs.core.next(seq22709);
  var G__22711 = cljs.core.first(seq22709__$1);
  var seq22709__$2 = cljs.core.next(seq22709__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__22710, G__22711, seq22709__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var args22718 = [];
  var len__5593__auto___22724 = arguments.length;
  var i__5594__auto___22725 = 0;
  while (true) {
    if (i__5594__auto___22725 < len__5593__auto___22724) {
      args22718.push(arguments[i__5594__auto___22725]);
      var G__22726 = i__5594__auto___22725 + 1;
      i__5594__auto___22725 = G__22726;
      continue;
    } else {
    }
    break;
  }
  var G__22723 = args22718.length;
  switch(G__22723) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22718.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4873__auto__ = x;
  var y__4874__auto__ = y;
  return x__4873__auto__ < y__4874__auto__ ? x__4873__auto__ : y__4874__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4873__auto__ = x;
    var y__4874__auto__ = y;
    return x__4873__auto__ < y__4874__auto__ ? x__4873__auto__ : y__4874__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq22719) {
  var G__22720 = cljs.core.first(seq22719);
  var seq22719__$1 = cljs.core.next(seq22719);
  var G__22721 = cljs.core.first(seq22719__$1);
  var seq22719__$2 = cljs.core.next(seq22719__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__22720, G__22721, seq22719__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var args22728 = [];
  var len__5593__auto___22734 = arguments.length;
  var i__5594__auto___22735 = 0;
  while (true) {
    if (i__5594__auto___22735 < len__5593__auto___22734) {
      args22728.push(arguments[i__5594__auto___22735]);
      var G__22736 = i__5594__auto___22735 + 1;
      i__5594__auto___22735 = G__22736;
      continue;
    } else {
    }
    break;
  }
  var G__22733 = args22728.length;
  switch(G__22733) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22728.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq22729) {
  var G__22730 = cljs.core.first(seq22729);
  var seq22729__$1 = cljs.core.next(seq22729);
  var G__22731 = cljs.core.first(seq22729__$1);
  var seq22729__$2 = cljs.core.next(seq22729__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__22730, G__22731, seq22729__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var args22738 = [];
  var len__5593__auto___22744 = arguments.length;
  var i__5594__auto___22745 = 0;
  while (true) {
    if (i__5594__auto___22745 < len__5593__auto___22744) {
      args22738.push(arguments[i__5594__auto___22745]);
      var G__22746 = i__5594__auto___22745 + 1;
      i__5594__auto___22745 = G__22746;
      continue;
    } else {
    }
    break;
  }
  var G__22743 = args22738.length;
  switch(G__22743) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22738.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq22739) {
  var G__22740 = cljs.core.first(seq22739);
  var seq22739__$1 = cljs.core.next(seq22739);
  var G__22741 = cljs.core.first(seq22739__$1);
  var seq22739__$2 = cljs.core.next(seq22739__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__22740, G__22741, seq22739__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var args22748 = [];
  var len__5593__auto___22754 = arguments.length;
  var i__5594__auto___22755 = 0;
  while (true) {
    if (i__5594__auto___22755 < len__5593__auto___22754) {
      args22748.push(arguments[i__5594__auto___22755]);
      var G__22756 = i__5594__auto___22755 + 1;
      i__5594__auto___22755 = G__22756;
      continue;
    } else {
    }
    break;
  }
  var G__22753 = args22748.length;
  switch(G__22753) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22748.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq22749) {
  var G__22750 = cljs.core.first(seq22749);
  var seq22749__$1 = cljs.core.next(seq22749);
  var G__22751 = cljs.core.first(seq22749__$1);
  var seq22749__$2 = cljs.core.next(seq22749__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__22750, G__22751, seq22749__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var args22758 = [];
  var len__5593__auto___22764 = arguments.length;
  var i__5594__auto___22765 = 0;
  while (true) {
    if (i__5594__auto___22765 < len__5593__auto___22764) {
      args22758.push(arguments[i__5594__auto___22765]);
      var G__22766 = i__5594__auto___22765 + 1;
      i__5594__auto___22765 = G__22766;
      continue;
    } else {
    }
    break;
  }
  var G__22763 = args22758.length;
  switch(G__22763) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22758.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq22759) {
  var G__22760 = cljs.core.first(seq22759);
  var seq22759__$1 = cljs.core.next(seq22759);
  var G__22761 = cljs.core.first(seq22759__$1);
  var seq22759__$2 = cljs.core.next(seq22759__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__22760, G__22761, seq22759__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var args22768 = [];
  var len__5593__auto___22774 = arguments.length;
  var i__5594__auto___22775 = 0;
  while (true) {
    if (i__5594__auto___22775 < len__5593__auto___22774) {
      args22768.push(arguments[i__5594__auto___22775]);
      var G__22776 = i__5594__auto___22775 + 1;
      i__5594__auto___22775 = G__22776;
      continue;
    } else {
    }
    break;
  }
  var G__22773 = args22768.length;
  switch(G__22773) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22768.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq22769) {
  var G__22770 = cljs.core.first(seq22769);
  var seq22769__$1 = cljs.core.next(seq22769);
  var G__22771 = cljs.core.first(seq22769__$1);
  var seq22769__$2 = cljs.core.next(seq22769__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__22770, G__22771, seq22769__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var args22778 = [];
  var len__5593__auto___22784 = arguments.length;
  var i__5594__auto___22785 = 0;
  while (true) {
    if (i__5594__auto___22785 < len__5593__auto___22784) {
      args22778.push(arguments[i__5594__auto___22785]);
      var G__22786 = i__5594__auto___22785 + 1;
      i__5594__auto___22785 = G__22786;
      continue;
    } else {
    }
    break;
  }
  var G__22783 = args22778.length;
  switch(G__22783) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22778.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq22779) {
  var G__22780 = cljs.core.first(seq22779);
  var seq22779__$1 = cljs.core.next(seq22779);
  var G__22781 = cljs.core.first(seq22779__$1);
  var seq22779__$2 = cljs.core.next(seq22779__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__22780, G__22781, seq22779__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var args22788 = [];
  var len__5593__auto___22794 = arguments.length;
  var i__5594__auto___22795 = 0;
  while (true) {
    if (i__5594__auto___22795 < len__5593__auto___22794) {
      args22788.push(arguments[i__5594__auto___22795]);
      var G__22796 = i__5594__auto___22795 + 1;
      i__5594__auto___22795 = G__22796;
      continue;
    } else {
    }
    break;
  }
  var G__22793 = args22788.length;
  switch(G__22793) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22788.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq22789) {
  var G__22790 = cljs.core.first(seq22789);
  var seq22789__$1 = cljs.core.next(seq22789);
  var G__22791 = cljs.core.first(seq22789__$1);
  var seq22789__$2 = cljs.core.next(seq22789__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__22790, G__22791, seq22789__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var args22798 = [];
  var len__5593__auto___22804 = arguments.length;
  var i__5594__auto___22805 = 0;
  while (true) {
    if (i__5594__auto___22805 < len__5593__auto___22804) {
      args22798.push(arguments[i__5594__auto___22805]);
      var G__22806 = i__5594__auto___22805 + 1;
      i__5594__auto___22805 = G__22806;
      continue;
    } else {
    }
    break;
  }
  var G__22803 = args22798.length;
  switch(G__22803) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22798.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq22799) {
  var G__22800 = cljs.core.first(seq22799);
  var seq22799__$1 = cljs.core.next(seq22799);
  var G__22801 = cljs.core.first(seq22799__$1);
  var seq22799__$2 = cljs.core.next(seq22799__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__22800, G__22801, seq22799__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var args22808 = [];
  var len__5593__auto___22814 = arguments.length;
  var i__5594__auto___22815 = 0;
  while (true) {
    if (i__5594__auto___22815 < len__5593__auto___22814) {
      args22808.push(arguments[i__5594__auto___22815]);
      var G__22816 = i__5594__auto___22815 + 1;
      i__5594__auto___22815 = G__22816;
      continue;
    } else {
    }
    break;
  }
  var G__22813 = args22808.length;
  switch(G__22813) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22808.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq22809) {
  var G__22810 = cljs.core.first(seq22809);
  var seq22809__$1 = cljs.core.next(seq22809);
  var G__22811 = cljs.core.first(seq22809__$1);
  var seq22809__$2 = cljs.core.next(seq22809__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__22810, G__22811, seq22809__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var args22818 = [];
  var len__5593__auto___22824 = arguments.length;
  var i__5594__auto___22825 = 0;
  while (true) {
    if (i__5594__auto___22825 < len__5593__auto___22824) {
      args22818.push(arguments[i__5594__auto___22825]);
      var G__22826 = i__5594__auto___22825 + 1;
      i__5594__auto___22825 = G__22826;
      continue;
    } else {
    }
    break;
  }
  var G__22823 = args22818.length;
  switch(G__22823) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22818.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq22819) {
  var G__22820 = cljs.core.first(seq22819);
  var seq22819__$1 = cljs.core.next(seq22819);
  var G__22821 = cljs.core.first(seq22819__$1);
  var seq22819__$2 = cljs.core.next(seq22819__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__22820, G__22821, seq22819__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var args22828 = [];
  var len__5593__auto___22834 = arguments.length;
  var i__5594__auto___22835 = 0;
  while (true) {
    if (i__5594__auto___22835 < len__5593__auto___22834) {
      args22828.push(arguments[i__5594__auto___22835]);
      var G__22836 = i__5594__auto___22835 + 1;
      i__5594__auto___22835 = G__22836;
      continue;
    } else {
    }
    break;
  }
  var G__22833 = args22828.length;
  switch(G__22833) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22828.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq22829) {
  var G__22830 = cljs.core.first(seq22829);
  var seq22829__$1 = cljs.core.next(seq22829);
  var G__22831 = cljs.core.first(seq22829__$1);
  var seq22829__$2 = cljs.core.next(seq22829__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__22830, G__22831, seq22829__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var args22838 = [];
  var len__5593__auto___22844 = arguments.length;
  var i__5594__auto___22845 = 0;
  while (true) {
    if (i__5594__auto___22845 < len__5593__auto___22844) {
      args22838.push(arguments[i__5594__auto___22845]);
      var G__22846 = i__5594__auto___22845 + 1;
      i__5594__auto___22845 = G__22846;
      continue;
    } else {
    }
    break;
  }
  var G__22843 = args22838.length;
  switch(G__22843) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22838.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__22848 = y;
        var G__22849 = cljs.core.first(more);
        var G__22850 = cljs.core.next(more);
        x = G__22848;
        y = G__22849;
        more = G__22850;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq22839) {
  var G__22840 = cljs.core.first(seq22839);
  var seq22839__$1 = cljs.core.next(seq22839);
  var G__22841 = cljs.core.first(seq22839__$1);
  var seq22839__$2 = cljs.core.next(seq22839__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__22840, G__22841, seq22839__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__22851 = n__$1 - 1;
      var G__22852 = cljs.core.next(xs);
      n__$1 = G__22851;
      xs = G__22852;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var args22853 = [];
  var len__5593__auto___22858 = arguments.length;
  var i__5594__auto___22859 = 0;
  while (true) {
    if (i__5594__auto___22859 < len__5593__auto___22858) {
      args22853.push(arguments[i__5594__auto___22859]);
      var G__22860 = i__5594__auto___22859 + 1;
      i__5594__auto___22859 = G__22860;
      continue;
    } else {
    }
    break;
  }
  var G__22857 = args22853.length;
  switch(G__22857) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args22853.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5612__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__22862 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__22863 = cljs.core.next(more);
      sb = G__22862;
      more = G__22863;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq22854) {
  var G__22855 = cljs.core.first(seq22854);
  var seq22854__$1 = cljs.core.next(seq22854);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__22855, seq22854__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var args22864 = [];
  var len__5593__auto___22867 = arguments.length;
  var i__5594__auto___22868 = 0;
  while (true) {
    if (i__5594__auto___22868 < len__5593__auto___22867) {
      args22864.push(arguments[i__5594__auto___22868]);
      var G__22869 = i__5594__auto___22868 + 1;
      i__5594__auto___22868 = G__22869;
      continue;
    } else {
    }
    break;
  }
  var G__22866 = args22864.length;
  switch(G__22866) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22864.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__22871 = cljs.core.next(xs);
            var G__22872 = cljs.core.next(ys);
            xs = G__22871;
            ys = G__22872;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__22873 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__22874 = cljs.core.next(s);
        res = G__22873;
        s = G__22874;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__22875 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__22876 = cljs.core.next(s);
      h = G__22875;
      s = G__22876;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__22877 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__22878 = cljs.core.next(s__$1);
      h = G__22877;
      s__$1 = G__22878;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__22885_22891 = cljs.core.seq(fn_map);
  var chunk__22886_22892 = null;
  var count__22887_22893 = 0;
  var i__22888_22894 = 0;
  while (true) {
    if (i__22888_22894 < count__22887_22893) {
      var vec__22889_22895 = chunk__22886_22892.cljs$core$IIndexed$_nth$arity$2(null, i__22888_22894);
      var key_name_22896 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22889_22895, 0, null);
      var f_22897 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22889_22895, 1, null);
      var str_name_22898 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_22896) : cljs.core.name.call(null, key_name_22896);
      obj[str_name_22898] = f_22897;
      var G__22899 = seq__22885_22891;
      var G__22900 = chunk__22886_22892;
      var G__22901 = count__22887_22893;
      var G__22902 = i__22888_22894 + 1;
      seq__22885_22891 = G__22899;
      chunk__22886_22892 = G__22900;
      count__22887_22893 = G__22901;
      i__22888_22894 = G__22902;
      continue;
    } else {
      var temp__4425__auto___22903 = cljs.core.seq(seq__22885_22891);
      if (temp__4425__auto___22903) {
        var seq__22885_22904__$1 = temp__4425__auto___22903;
        if (cljs.core.chunked_seq_QMARK_(seq__22885_22904__$1)) {
          var c__5338__auto___22905 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__22885_22904__$1) : cljs.core.chunk_first.call(null, seq__22885_22904__$1);
          var G__22906 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__22885_22904__$1) : cljs.core.chunk_rest.call(null, seq__22885_22904__$1);
          var G__22907 = c__5338__auto___22905;
          var G__22908 = cljs.core.count(c__5338__auto___22905);
          var G__22909 = 0;
          seq__22885_22891 = G__22906;
          chunk__22886_22892 = G__22907;
          count__22887_22893 = G__22908;
          i__22888_22894 = G__22909;
          continue;
        } else {
          var vec__22890_22910 = cljs.core.first(seq__22885_22904__$1);
          var key_name_22911 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22890_22910, 0, null);
          var f_22912 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22890_22910, 1, null);
          var str_name_22913 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_22911) : cljs.core.name.call(null, key_name_22911);
          obj[str_name_22913] = f_22912;
          var G__22914 = cljs.core.next(seq__22885_22904__$1);
          var G__22915 = null;
          var G__22916 = 0;
          var G__22917 = 0;
          seq__22885_22891 = G__22914;
          chunk__22886_22892 = G__22915;
          count__22887_22893 = G__22916;
          i__22888_22894 = G__22917;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var args__5600__auto__ = [];
  var len__5593__auto___22923 = arguments.length;
  var i__5594__auto___22924 = 0;
  while (true) {
    if (i__5594__auto___22924 < len__5593__auto___22923) {
      args__5600__auto__.push(arguments[i__5594__auto___22924]);
      var G__22925 = i__5594__auto___22924 + 1;
      i__5594__auto___22924 = G__22925;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__22926 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__22926;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__22927 = i - 1;
      var G__22928 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__22927;
      r = G__22928;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq22922) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq22922));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4554__auto__ = coll == null;
    if (or__4554__auto__) {
      return or__4554__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = cljs.core.not(a.ns);
      if (and__4542__auto__) {
        return b.ns;
      } else {
        return and__4542__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__22939 = a.ns;
            var G__22940 = b.ns;
            return goog.array.defaultCompare(G__22939, G__22940);
          }();
          if (0 === nsc) {
            var G__22941 = a.name;
            var G__22942 = b.name;
            return goog.array.defaultCompare(G__22941, G__22942);
          } else {
            return nsc;
          }
        }
      } else {
        var G__22943 = a.name;
        var G__22944 = b.name;
        return goog.array.defaultCompare(G__22943, G__22944);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__22946 = null;
  var G__22946__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__22946__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__22946 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22946__2.call(this, self__, coll);
      case 3:
        return G__22946__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22946.cljs$core$IFn$_invoke$arity$2 = G__22946__2;
  G__22946.cljs$core$IFn$_invoke$arity$3 = G__22946__3;
  return G__22946;
}();
cljs.core.Keyword.prototype.apply = function(self__, args22945) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22945)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4970__auto__ = self__._hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var args22949 = [];
  var len__5593__auto___22952 = arguments.length;
  var i__5594__auto___22953 = 0;
  while (true) {
    if (i__5594__auto___22953 < len__5593__auto___22952) {
      args22949.push(arguments[i__5594__auto___22953]);
      var G__22954 = i__5594__auto___22953 + 1;
      i__5594__auto___22953 = G__22954;
      continue;
    } else {
    }
    break;
  }
  var G__22951 = args22949.length;
  switch(G__22951) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22949.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__22956 = ls.sval();
        ls = G__22956;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var args22957 = [];
  var len__5593__auto___22960 = arguments.length;
  var i__5594__auto___22961 = 0;
  while (true) {
    if (i__5594__auto___22961 < len__5593__auto___22960) {
      args22957.push(arguments[i__5594__auto___22961]);
      var G__22962 = i__5594__auto___22961 + 1;
      i__5594__auto___22961 = G__22962;
      continue;
    } else {
    }
    break;
  }
  var G__22959 = args22957.length;
  switch(G__22959) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22957.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__22966 = cljs.core.next(s__$1);
      s__$1 = G__22966;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_22967 = 0;
  var xs_22968 = cljs.core.seq(coll);
  while (true) {
    if (xs_22968) {
      ret[i_22967] = cljs.core.to_array(cljs.core.first(xs_22968));
      var G__22969 = i_22967 + 1;
      var G__22970 = cljs.core.next(xs_22968);
      i_22967 = G__22969;
      xs_22968 = G__22970;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var args22971 = [];
  var len__5593__auto___22974 = arguments.length;
  var i__5594__auto___22975 = 0;
  while (true) {
    if (i__5594__auto___22975 < len__5593__auto___22974) {
      args22971.push(arguments[i__5594__auto___22975]);
      var G__22976 = i__5594__auto___22975 + 1;
      i__5594__auto___22975 = G__22976;
      continue;
    } else {
    }
    break;
  }
  var G__22973 = args22971.length;
  switch(G__22973) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22971.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__22978 = i + 1;
        var G__22979 = cljs.core.next(s__$1);
        i = G__22978;
        s__$1 = G__22979;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5438__auto___22980 = size;
    var i_22981 = 0;
    while (true) {
      if (i_22981 < n__5438__auto___22980) {
        a[i_22981] = init_val_or_seq;
        var G__22982 = i_22981 + 1;
        i_22981 = G__22982;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var args22983 = [];
  var len__5593__auto___22986 = arguments.length;
  var i__5594__auto___22987 = 0;
  while (true) {
    if (i__5594__auto___22987 < len__5593__auto___22986) {
      args22983.push(arguments[i__5594__auto___22987]);
      var G__22988 = i__5594__auto___22987 + 1;
      i__5594__auto___22987 = G__22988;
      continue;
    } else {
    }
    break;
  }
  var G__22985 = args22983.length;
  switch(G__22985) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22983.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__22990 = i + 1;
        var G__22991 = cljs.core.next(s__$1);
        i = G__22990;
        s__$1 = G__22991;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5438__auto___22992 = size;
    var i_22993 = 0;
    while (true) {
      if (i_22993 < n__5438__auto___22992) {
        a[i_22993] = init_val_or_seq;
        var G__22994 = i_22993 + 1;
        i_22993 = G__22994;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var args22995 = [];
  var len__5593__auto___22998 = arguments.length;
  var i__5594__auto___22999 = 0;
  while (true) {
    if (i__5594__auto___22999 < len__5593__auto___22998) {
      args22995.push(arguments[i__5594__auto___22999]);
      var G__23000 = i__5594__auto___22999 + 1;
      i__5594__auto___22999 = G__23000;
      continue;
    } else {
    }
    break;
  }
  var G__22997 = args22995.length;
  switch(G__22997) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22995.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__23002 = i + 1;
        var G__23003 = cljs.core.next(s__$1);
        i = G__23002;
        s__$1 = G__23003;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5438__auto___23004 = size;
    var i_23005 = 0;
    while (true) {
      if (i_23005 < n__5438__auto___23004) {
        a[i_23005] = init_val_or_seq;
        var G__23006 = i_23005 + 1;
        i_23005 = G__23006;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var args23007 = [];
  var len__5593__auto___23010 = arguments.length;
  var i__5594__auto___23011 = 0;
  while (true) {
    if (i__5594__auto___23011 < len__5593__auto___23010) {
      args23007.push(arguments[i__5594__auto___23011]);
      var G__23012 = i__5594__auto___23011 + 1;
      i__5594__auto___23011 = G__23012;
      continue;
    } else {
    }
    break;
  }
  var G__23009 = args23007.length;
  switch(G__23009) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23007.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__23014 = i + 1;
        var G__23015 = cljs.core.next(s__$1);
        i = G__23014;
        s__$1 = G__23015;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5438__auto___23016 = size;
    var i_23017 = 0;
    while (true) {
      if (i_23017 < n__5438__auto___23016) {
        a[i_23017] = init_val_or_seq;
        var G__23018 = i_23017 + 1;
        i_23017 = G__23018;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__23019 = cljs.core.next(s__$1);
        var G__23020 = i - 1;
        var G__23021 = sum + 1;
        s__$1 = G__23019;
        i = G__23020;
        sum = G__23021;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var args23023 = [];
  var len__5593__auto___23035 = arguments.length;
  var i__5594__auto___23036 = 0;
  while (true) {
    if (i__5594__auto___23036 < len__5593__auto___23035) {
      args23023.push(arguments[i__5594__auto___23036]);
      var G__23037 = i__5594__auto___23036 + 1;
      i__5594__auto___23036 = G__23037;
      continue;
    } else {
    }
    break;
  }
  var G__23028 = args23023.length;
  switch(G__23028) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23023.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq23024) {
  var G__23025 = cljs.core.first(seq23024);
  var seq23024__$1 = cljs.core.next(seq23024);
  var G__23026 = cljs.core.first(seq23024__$1);
  var seq23024__$2 = cljs.core.next(seq23024__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__23025, G__23026, seq23024__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var args23039 = [];
  var len__5593__auto___23047 = arguments.length;
  var i__5594__auto___23048 = 0;
  while (true) {
    if (i__5594__auto___23048 < len__5593__auto___23047) {
      args23039.push(arguments[i__5594__auto___23048]);
      var G__23049 = i__5594__auto___23048 + 1;
      i__5594__auto___23048 = G__23049;
      continue;
    } else {
    }
    break;
  }
  var G__23046 = args23039.length;
  switch(G__23046) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23039.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5612__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq23040) {
  var G__23041 = cljs.core.first(seq23040);
  var seq23040__$1 = cljs.core.next(seq23040);
  var G__23042 = cljs.core.first(seq23040__$1);
  var seq23040__$2 = cljs.core.next(seq23040__$1);
  var G__23043 = cljs.core.first(seq23040__$2);
  var seq23040__$3 = cljs.core.next(seq23040__$2);
  var G__23044 = cljs.core.first(seq23040__$3);
  var seq23040__$4 = cljs.core.next(seq23040__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__23041, G__23042, G__23043, G__23044, seq23040__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var args23051 = [];
  var len__5593__auto___23057 = arguments.length;
  var i__5594__auto___23058 = 0;
  while (true) {
    if (i__5594__auto___23058 < len__5593__auto___23057) {
      args23051.push(arguments[i__5594__auto___23058]);
      var G__23059 = i__5594__auto___23058 + 1;
      i__5594__auto___23058 = G__23059;
      continue;
    } else {
    }
    break;
  }
  var G__23056 = args23051.length;
  switch(G__23056) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23051.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__23061 = ntcoll;
      var G__23062 = cljs.core.first(vals);
      var G__23063 = cljs.core.next(vals);
      tcoll = G__23061;
      val = G__23062;
      vals = G__23063;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq23052) {
  var G__23053 = cljs.core.first(seq23052);
  var seq23052__$1 = cljs.core.next(seq23052);
  var G__23054 = cljs.core.first(seq23052__$1);
  var seq23052__$2 = cljs.core.next(seq23052__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__23053, G__23054, seq23052__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var args23064 = [];
  var len__5593__auto___23071 = arguments.length;
  var i__5594__auto___23072 = 0;
  while (true) {
    if (i__5594__auto___23072 < len__5593__auto___23071) {
      args23064.push(arguments[i__5594__auto___23072]);
      var G__23073 = i__5594__auto___23072 + 1;
      i__5594__auto___23072 = G__23073;
      continue;
    } else {
    }
    break;
  }
  var G__23070 = args23064.length;
  switch(G__23070) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23064.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__23075 = ntcoll;
      var G__23076 = cljs.core.first(kvs);
      var G__23077 = cljs.core.second(kvs);
      var G__23078 = cljs.core.nnext(kvs);
      tcoll = G__23075;
      key = G__23076;
      val = G__23077;
      kvs = G__23078;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq23065) {
  var G__23066 = cljs.core.first(seq23065);
  var seq23065__$1 = cljs.core.next(seq23065);
  var G__23067 = cljs.core.first(seq23065__$1);
  var seq23065__$2 = cljs.core.next(seq23065__$1);
  var G__23068 = cljs.core.first(seq23065__$2);
  var seq23065__$3 = cljs.core.next(seq23065__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__23066, G__23067, G__23068, seq23065__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var args23079 = [];
  var len__5593__auto___23085 = arguments.length;
  var i__5594__auto___23086 = 0;
  while (true) {
    if (i__5594__auto___23086 < len__5593__auto___23085) {
      args23079.push(arguments[i__5594__auto___23086]);
      var G__23087 = i__5594__auto___23086 + 1;
      i__5594__auto___23086 = G__23087;
      continue;
    } else {
    }
    break;
  }
  var G__23084 = args23079.length;
  switch(G__23084) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23079.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__23089 = ntcoll;
      var G__23090 = cljs.core.first(ks);
      var G__23091 = cljs.core.next(ks);
      tcoll = G__23089;
      key = G__23090;
      ks = G__23091;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq23080) {
  var G__23081 = cljs.core.first(seq23080);
  var seq23080__$1 = cljs.core.next(seq23080);
  var G__23082 = cljs.core.first(seq23080__$1);
  var seq23080__$2 = cljs.core.next(seq23080__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__23081, G__23082, seq23080__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var args23092 = [];
  var len__5593__auto___23098 = arguments.length;
  var i__5594__auto___23099 = 0;
  while (true) {
    if (i__5594__auto___23099 < len__5593__auto___23098) {
      args23092.push(arguments[i__5594__auto___23099]);
      var G__23100 = i__5594__auto___23099 + 1;
      i__5594__auto___23099 = G__23100;
      continue;
    } else {
    }
    break;
  }
  var G__23097 = args23092.length;
  switch(G__23097) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23092.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__23102 = ntcoll;
      var G__23103 = cljs.core.first(vals);
      var G__23104 = cljs.core.next(vals);
      tcoll = G__23102;
      val = G__23103;
      vals = G__23104;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq23093) {
  var G__23094 = cljs.core.first(seq23093);
  var seq23093__$1 = cljs.core.next(seq23093);
  var G__23095 = cljs.core.first(seq23093__$1);
  var seq23093__$2 = cljs.core.next(seq23093__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__23094, G__23095, seq23093__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5482 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5482);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a5482) : f.call(null, a5482);
      }
    } else {
      var b5483 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5482, b5483);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a5482, b5483) : f.call(null, a5482, b5483);
        }
      } else {
        var c5484 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5482, b5483, c5484);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a5482, b5483, c5484) : f.call(null, a5482, b5483, c5484);
          }
        } else {
          var d5485 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5482, b5483, c5484, d5485);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a5482, b5483, c5484, d5485) : f.call(null, a5482, b5483, c5484, d5485);
            }
          } else {
            var e5486 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5482, b5483, c5484, d5485, e5486);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a5482, b5483, c5484, d5485, e5486) : f.call(null, a5482, b5483, c5484, d5485, e5486);
              }
            } else {
              var f5487 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5482, b5483, c5484, d5485, e5486, f5487);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a5482, b5483, c5484, d5485, e5486, f5487) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487);
                }
              } else {
                var g5488 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5482, b5483, c5484, d5485, e5486, f5487, g5488);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a5482, b5483, c5484, d5485, e5486, f5487, g5488) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488);
                  }
                } else {
                  var h5489 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489);
                    }
                  } else {
                    var i5490 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490);
                      }
                    } else {
                      var j5491 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491);
                        }
                      } else {
                        var k5492 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492);
                          }
                        } else {
                          var l5493 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493);
                            }
                          } else {
                            var m5494 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494);
                              }
                            } else {
                              var n5495 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495);
                                }
                              } else {
                                var o5496 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496);
                                  }
                                } else {
                                  var p5497 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497);
                                    }
                                  } else {
                                    var q5498 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498);
                                      }
                                    } else {
                                      var r5499 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499);
                                        }
                                      } else {
                                        var s5500 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500);
                                          }
                                        } else {
                                          var t5501 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500, t5501);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500, t5501) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500, t5501);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var args23105 = [];
  var len__5593__auto___23114 = arguments.length;
  var i__5594__auto___23115 = 0;
  while (true) {
    if (i__5594__auto___23115 < len__5593__auto___23114) {
      args23105.push(arguments[i__5594__auto___23115]);
      var G__23116 = i__5594__auto___23115 + 1;
      i__5594__auto___23115 = G__23116;
      continue;
    } else {
    }
    break;
  }
  var G__23113 = args23105.length;
  switch(G__23113) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23105.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5612__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq23106) {
  var G__23107 = cljs.core.first(seq23106);
  var seq23106__$1 = cljs.core.next(seq23106);
  var G__23108 = cljs.core.first(seq23106__$1);
  var seq23106__$2 = cljs.core.next(seq23106__$1);
  var G__23109 = cljs.core.first(seq23106__$2);
  var seq23106__$3 = cljs.core.next(seq23106__$2);
  var G__23110 = cljs.core.first(seq23106__$3);
  var seq23106__$4 = cljs.core.next(seq23106__$3);
  var G__23111 = cljs.core.first(seq23106__$4);
  var seq23106__$5 = cljs.core.next(seq23106__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__23107, G__23108, G__23109, G__23110, G__23111, seq23106__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var args23118 = [];
  var len__5593__auto___23143 = arguments.length;
  var i__5594__auto___23144 = 0;
  while (true) {
    if (i__5594__auto___23144 < len__5593__auto___23143) {
      args23118.push(arguments[i__5594__auto___23144]);
      var G__23145 = i__5594__auto___23144 + 1;
      i__5594__auto___23144 = G__23145;
      continue;
    } else {
    }
    break;
  }
  var G__23127 = args23118.length;
  switch(G__23127) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23118.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5612__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__23128 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23128) : f.call(null, G__23128);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__23129 = cljs.core.meta(obj);
    var G__23130 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23129, G__23130) : f.call(null, G__23129, G__23130);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__23131 = cljs.core.meta(obj);
    var G__23132 = a;
    var G__23133 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23131, G__23132, G__23133) : f.call(null, G__23131, G__23132, G__23133);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__23134 = cljs.core.meta(obj);
    var G__23135 = a;
    var G__23136 = b;
    var G__23137 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23134, G__23135, G__23136, G__23137) : f.call(null, G__23134, G__23135, G__23136, G__23137);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__23138 = cljs.core.meta(obj);
    var G__23139 = a;
    var G__23140 = b;
    var G__23141 = c;
    var G__23142 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23138, G__23139, G__23140, G__23141, G__23142) : f.call(null, G__23138, G__23139, G__23140, G__23141, G__23142);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq23119) {
  var G__23120 = cljs.core.first(seq23119);
  var seq23119__$1 = cljs.core.next(seq23119);
  var G__23121 = cljs.core.first(seq23119__$1);
  var seq23119__$2 = cljs.core.next(seq23119__$1);
  var G__23122 = cljs.core.first(seq23119__$2);
  var seq23119__$3 = cljs.core.next(seq23119__$2);
  var G__23123 = cljs.core.first(seq23119__$3);
  var seq23119__$4 = cljs.core.next(seq23119__$3);
  var G__23124 = cljs.core.first(seq23119__$4);
  var seq23119__$5 = cljs.core.next(seq23119__$4);
  var G__23125 = cljs.core.first(seq23119__$5);
  var seq23119__$6 = cljs.core.next(seq23119__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__23120, G__23121, G__23122, G__23123, G__23124, G__23125, seq23119__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var args23147 = [];
  var len__5593__auto___23153 = arguments.length;
  var i__5594__auto___23154 = 0;
  while (true) {
    if (i__5594__auto___23154 < len__5593__auto___23153) {
      args23147.push(arguments[i__5594__auto___23154]);
      var G__23155 = i__5594__auto___23154 + 1;
      i__5594__auto___23154 = G__23155;
      continue;
    } else {
    }
    break;
  }
  var G__23152 = args23147.length;
  switch(G__23152) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23147.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq23148) {
  var G__23149 = cljs.core.first(seq23148);
  var seq23148__$1 = cljs.core.next(seq23148);
  var G__23150 = cljs.core.first(seq23148__$1);
  var seq23148__$2 = cljs.core.next(seq23148__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__23149, G__23150, seq23148__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t23160 !== "undefined") {
  } else {
    cljs.core.t23160 = function(nil_iter, meta23161) {
      this.nil_iter = nil_iter;
      this.meta23161 = meta23161;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t23160.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23162, meta23161__$1) {
      var self__ = this;
      var _23162__$1 = this;
      return new cljs.core.t23160(self__.nil_iter, meta23161__$1);
    };
    cljs.core.t23160.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23162) {
      var self__ = this;
      var _23162__$1 = this;
      return self__.meta23161;
    };
    cljs.core.t23160.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t23160.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t23160.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t23160.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta23161", "meta23161", 656708294, null)], 
      null);
    };
    cljs.core.t23160.cljs$lang$type = true;
    cljs.core.t23160.cljs$lang$ctorStr = "cljs.core/t23160";
    cljs.core.t23160.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
      return cljs.core._write(writer__5134__auto__, "cljs.core/t23160");
    };
    cljs.core.__GT_t23160 = function cljs$core$nil_iter_$___GT_t23160(nil_iter__$1, meta23161) {
      return new cljs.core.t23160(nil_iter__$1, meta23161);
    };
  }
  return new cljs.core.t23160(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = !(lt.stepper == null);
      if (and__4542__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4542__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__23163 = lt;
        var G__23164 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__23163, G__23164) : self__.xform.call(null, G__23163, G__23164);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__23165 = cljs.core.next(iters__$1);
        iters__$1 = G__23165;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5438__auto___23166 = self__.iters.length;
  var i_23167 = 0;
  while (true) {
    if (i_23167 < n__5438__auto___23166) {
      self__.nexts[i_23167] = self__.iters[i_23167].next();
      var G__23168 = i_23167 + 1;
      i_23167 = G__23168;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = !(lt.stepper == null);
      if (and__4542__auto__) {
        return this$.hasNext();
      } else {
        return and__4542__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var args23169 = [];
  var len__5593__auto___23172 = arguments.length;
  var i__5594__auto___23173 = 0;
  while (true) {
    if (i__5594__auto___23173 < len__5593__auto___23172) {
      args23169.push(arguments[i__5594__auto___23173]);
      var G__23174 = i__5594__auto___23173 + 1;
      i__5594__auto___23173 = G__23174;
      continue;
    } else {
    }
    break;
  }
  var G__23171 = args23169.length;
  switch(G__23171) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23169.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__23176_23180 = cljs.core.seq(colls);
  var chunk__23177_23181 = null;
  var count__23178_23182 = 0;
  var i__23179_23183 = 0;
  while (true) {
    if (i__23179_23183 < count__23178_23182) {
      var coll_23184 = chunk__23177_23181.cljs$core$IIndexed$_nth$arity$2(null, i__23179_23183);
      iters.push(cljs.core.iter(coll_23184));
      var G__23185 = seq__23176_23180;
      var G__23186 = chunk__23177_23181;
      var G__23187 = count__23178_23182;
      var G__23188 = i__23179_23183 + 1;
      seq__23176_23180 = G__23185;
      chunk__23177_23181 = G__23186;
      count__23178_23182 = G__23187;
      i__23179_23183 = G__23188;
      continue;
    } else {
      var temp__4425__auto___23189 = cljs.core.seq(seq__23176_23180);
      if (temp__4425__auto___23189) {
        var seq__23176_23190__$1 = temp__4425__auto___23189;
        if (cljs.core.chunked_seq_QMARK_(seq__23176_23190__$1)) {
          var c__5338__auto___23191 = cljs.core.chunk_first(seq__23176_23190__$1);
          var G__23192 = cljs.core.chunk_rest(seq__23176_23190__$1);
          var G__23193 = c__5338__auto___23191;
          var G__23194 = cljs.core.count(c__5338__auto___23191);
          var G__23195 = 0;
          seq__23176_23180 = G__23192;
          chunk__23177_23181 = G__23193;
          count__23178_23182 = G__23194;
          i__23179_23183 = G__23195;
          continue;
        } else {
          var coll_23196 = cljs.core.first(seq__23176_23190__$1);
          iters.push(cljs.core.iter(coll_23196));
          var G__23197 = cljs.core.next(seq__23176_23190__$1);
          var G__23198 = null;
          var G__23199 = 0;
          var G__23200 = 0;
          seq__23176_23180 = G__23197;
          chunk__23177_23181 = G__23198;
          count__23178_23182 = G__23199;
          i__23179_23183 = G__23200;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var args23201 = [];
  var len__5593__auto___23207 = arguments.length;
  var i__5594__auto___23208 = 0;
  while (true) {
    if (i__5594__auto___23208 < len__5593__auto___23207) {
      args23201.push(arguments[i__5594__auto___23208]);
      var G__23209 = i__5594__auto___23208 + 1;
      i__5594__auto___23208 = G__23209;
      continue;
    } else {
    }
    break;
  }
  var G__23206 = args23201.length;
  switch(G__23206) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23201.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4554__auto__ = cljs.core.seq(coll);
    if (or__4554__auto__) {
      return or__4554__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq23202) {
  var G__23203 = cljs.core.first(seq23202);
  var seq23202__$1 = cljs.core.next(seq23202);
  var G__23204 = cljs.core.first(seq23202__$1);
  var seq23202__$2 = cljs.core.next(seq23202__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__23203, G__23204, seq23202__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__23212 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23212) : pred.call(null, G__23212);
      }())) {
        var G__23213 = pred;
        var G__23214 = cljs.core.next(coll);
        pred = G__23213;
        coll = G__23214;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4554__auto__ = function() {
        var G__23218 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23218) : pred.call(null, G__23218);
      }();
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var G__23219 = pred;
        var G__23220 = cljs.core.next(coll);
        pred = G__23219;
        coll = G__23220;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__23221 = null;
    var G__23221__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__23221__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__23221__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__23221__3 = function() {
      var G__23222__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__23222 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__23223__i = 0, G__23223__a = new Array(arguments.length - 2);
          while (G__23223__i < G__23223__a.length) {
            G__23223__a[G__23223__i] = arguments[G__23223__i + 2];
            ++G__23223__i;
          }
          zs = new cljs.core.IndexedSeq(G__23223__a, 0);
        }
        return G__23222__delegate.call(this, x, y, zs);
      };
      G__23222.cljs$lang$maxFixedArity = 2;
      G__23222.cljs$lang$applyTo = function(arglist__23224) {
        var x = cljs.core.first(arglist__23224);
        arglist__23224 = cljs.core.next(arglist__23224);
        var y = cljs.core.first(arglist__23224);
        var zs = cljs.core.rest(arglist__23224);
        return G__23222__delegate(x, y, zs);
      };
      G__23222.cljs$core$IFn$_invoke$arity$variadic = G__23222__delegate;
      return G__23222;
    }();
    G__23221 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__23221__0.call(this);
        case 1:
          return G__23221__1.call(this, x);
        case 2:
          return G__23221__2.call(this, x, y);
        default:
          var G__23225 = null;
          if (arguments.length > 2) {
            var G__23226__i = 0, G__23226__a = new Array(arguments.length - 2);
            while (G__23226__i < G__23226__a.length) {
              G__23226__a[G__23226__i] = arguments[G__23226__i + 2];
              ++G__23226__i;
            }
            G__23225 = new cljs.core.IndexedSeq(G__23226__a, 0);
          }
          return G__23221__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__23225);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23221.cljs$lang$maxFixedArity = 2;
    G__23221.cljs$lang$applyTo = G__23221__3.cljs$lang$applyTo;
    G__23221.cljs$core$IFn$_invoke$arity$0 = G__23221__0;
    G__23221.cljs$core$IFn$_invoke$arity$1 = G__23221__1;
    G__23221.cljs$core$IFn$_invoke$arity$2 = G__23221__2;
    G__23221.cljs$core$IFn$_invoke$arity$variadic = G__23221__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__23221;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__23227__delegate = function(args) {
      return x;
    };
    var G__23227 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__23228__i = 0, G__23228__a = new Array(arguments.length - 0);
        while (G__23228__i < G__23228__a.length) {
          G__23228__a[G__23228__i] = arguments[G__23228__i + 0];
          ++G__23228__i;
        }
        args = new cljs.core.IndexedSeq(G__23228__a, 0);
      }
      return G__23227__delegate.call(this, args);
    };
    G__23227.cljs$lang$maxFixedArity = 0;
    G__23227.cljs$lang$applyTo = function(arglist__23229) {
      var args = cljs.core.seq(arglist__23229);
      return G__23227__delegate(args);
    };
    G__23227.cljs$core$IFn$_invoke$arity$variadic = G__23227__delegate;
    return G__23227;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var args23230 = [];
  var len__5593__auto___23257 = arguments.length;
  var i__5594__auto___23258 = 0;
  while (true) {
    if (i__5594__auto___23258 < len__5593__auto___23257) {
      args23230.push(arguments[i__5594__auto___23258]);
      var G__23259 = i__5594__auto___23258 + 1;
      i__5594__auto___23258 = G__23259;
      continue;
    } else {
    }
    break;
  }
  var G__23236 = args23230.length;
  switch(G__23236) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23230.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__23261 = null;
    var G__23261__0 = function() {
      var G__23237 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23237) : f.call(null, G__23237);
    };
    var G__23261__1 = function(x) {
      var G__23238 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23238) : f.call(null, G__23238);
    };
    var G__23261__2 = function(x, y) {
      var G__23239 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23239) : f.call(null, G__23239);
    };
    var G__23261__3 = function(x, y, z) {
      var G__23240 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23240) : f.call(null, G__23240);
    };
    var G__23261__4 = function() {
      var G__23262__delegate = function(x, y, z, args) {
        var G__23241 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23241) : f.call(null, G__23241);
      };
      var G__23262 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23263__i = 0, G__23263__a = new Array(arguments.length - 3);
          while (G__23263__i < G__23263__a.length) {
            G__23263__a[G__23263__i] = arguments[G__23263__i + 3];
            ++G__23263__i;
          }
          args = new cljs.core.IndexedSeq(G__23263__a, 0);
        }
        return G__23262__delegate.call(this, x, y, z, args);
      };
      G__23262.cljs$lang$maxFixedArity = 3;
      G__23262.cljs$lang$applyTo = function(arglist__23264) {
        var x = cljs.core.first(arglist__23264);
        arglist__23264 = cljs.core.next(arglist__23264);
        var y = cljs.core.first(arglist__23264);
        arglist__23264 = cljs.core.next(arglist__23264);
        var z = cljs.core.first(arglist__23264);
        var args = cljs.core.rest(arglist__23264);
        return G__23262__delegate(x, y, z, args);
      };
      G__23262.cljs$core$IFn$_invoke$arity$variadic = G__23262__delegate;
      return G__23262;
    }();
    G__23261 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23261__0.call(this);
        case 1:
          return G__23261__1.call(this, x);
        case 2:
          return G__23261__2.call(this, x, y);
        case 3:
          return G__23261__3.call(this, x, y, z);
        default:
          var G__23265 = null;
          if (arguments.length > 3) {
            var G__23266__i = 0, G__23266__a = new Array(arguments.length - 3);
            while (G__23266__i < G__23266__a.length) {
              G__23266__a[G__23266__i] = arguments[G__23266__i + 3];
              ++G__23266__i;
            }
            G__23265 = new cljs.core.IndexedSeq(G__23266__a, 0);
          }
          return G__23261__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23265);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23261.cljs$lang$maxFixedArity = 3;
    G__23261.cljs$lang$applyTo = G__23261__4.cljs$lang$applyTo;
    G__23261.cljs$core$IFn$_invoke$arity$0 = G__23261__0;
    G__23261.cljs$core$IFn$_invoke$arity$1 = G__23261__1;
    G__23261.cljs$core$IFn$_invoke$arity$2 = G__23261__2;
    G__23261.cljs$core$IFn$_invoke$arity$3 = G__23261__3;
    G__23261.cljs$core$IFn$_invoke$arity$variadic = G__23261__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23261;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__23267 = null;
    var G__23267__0 = function() {
      var G__23243 = function() {
        var G__23244 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23244) : g.call(null, G__23244);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23243) : f.call(null, G__23243);
    };
    var G__23267__1 = function(x) {
      var G__23246 = function() {
        var G__23247 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23247) : g.call(null, G__23247);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23246) : f.call(null, G__23246);
    };
    var G__23267__2 = function(x, y) {
      var G__23249 = function() {
        var G__23250 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23250) : g.call(null, G__23250);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23249) : f.call(null, G__23249);
    };
    var G__23267__3 = function(x, y, z) {
      var G__23252 = function() {
        var G__23253 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23253) : g.call(null, G__23253);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23252) : f.call(null, G__23252);
    };
    var G__23267__4 = function() {
      var G__23268__delegate = function(x, y, z, args) {
        var G__23255 = function() {
          var G__23256 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23256) : g.call(null, G__23256);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23255) : f.call(null, G__23255);
      };
      var G__23268 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23269__i = 0, G__23269__a = new Array(arguments.length - 3);
          while (G__23269__i < G__23269__a.length) {
            G__23269__a[G__23269__i] = arguments[G__23269__i + 3];
            ++G__23269__i;
          }
          args = new cljs.core.IndexedSeq(G__23269__a, 0);
        }
        return G__23268__delegate.call(this, x, y, z, args);
      };
      G__23268.cljs$lang$maxFixedArity = 3;
      G__23268.cljs$lang$applyTo = function(arglist__23270) {
        var x = cljs.core.first(arglist__23270);
        arglist__23270 = cljs.core.next(arglist__23270);
        var y = cljs.core.first(arglist__23270);
        arglist__23270 = cljs.core.next(arglist__23270);
        var z = cljs.core.first(arglist__23270);
        var args = cljs.core.rest(arglist__23270);
        return G__23268__delegate(x, y, z, args);
      };
      G__23268.cljs$core$IFn$_invoke$arity$variadic = G__23268__delegate;
      return G__23268;
    }();
    G__23267 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23267__0.call(this);
        case 1:
          return G__23267__1.call(this, x);
        case 2:
          return G__23267__2.call(this, x, y);
        case 3:
          return G__23267__3.call(this, x, y, z);
        default:
          var G__23271 = null;
          if (arguments.length > 3) {
            var G__23272__i = 0, G__23272__a = new Array(arguments.length - 3);
            while (G__23272__i < G__23272__a.length) {
              G__23272__a[G__23272__i] = arguments[G__23272__i + 3];
              ++G__23272__i;
            }
            G__23271 = new cljs.core.IndexedSeq(G__23272__a, 0);
          }
          return G__23267__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23271);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23267.cljs$lang$maxFixedArity = 3;
    G__23267.cljs$lang$applyTo = G__23267__4.cljs$lang$applyTo;
    G__23267.cljs$core$IFn$_invoke$arity$0 = G__23267__0;
    G__23267.cljs$core$IFn$_invoke$arity$1 = G__23267__1;
    G__23267.cljs$core$IFn$_invoke$arity$2 = G__23267__2;
    G__23267.cljs$core$IFn$_invoke$arity$3 = G__23267__3;
    G__23267.cljs$core$IFn$_invoke$arity$variadic = G__23267__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23267;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__23273__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__23274 = cljs.core.first(fs__$2).call(null, ret);
            var G__23275 = cljs.core.next(fs__$2);
            ret = G__23274;
            fs__$2 = G__23275;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__23273 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__23276__i = 0, G__23276__a = new Array(arguments.length - 0);
          while (G__23276__i < G__23276__a.length) {
            G__23276__a[G__23276__i] = arguments[G__23276__i + 0];
            ++G__23276__i;
          }
          args = new cljs.core.IndexedSeq(G__23276__a, 0);
        }
        return G__23273__delegate.call(this, args);
      };
      G__23273.cljs$lang$maxFixedArity = 0;
      G__23273.cljs$lang$applyTo = function(arglist__23277) {
        var args = cljs.core.seq(arglist__23277);
        return G__23273__delegate(args);
      };
      G__23273.cljs$core$IFn$_invoke$arity$variadic = G__23273__delegate;
      return G__23273;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq23231) {
  var G__23232 = cljs.core.first(seq23231);
  var seq23231__$1 = cljs.core.next(seq23231);
  var G__23233 = cljs.core.first(seq23231__$1);
  var seq23231__$2 = cljs.core.next(seq23231__$1);
  var G__23234 = cljs.core.first(seq23231__$2);
  var seq23231__$3 = cljs.core.next(seq23231__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__23232, G__23233, G__23234, seq23231__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var args23278 = [];
  var len__5593__auto___23286 = arguments.length;
  var i__5594__auto___23287 = 0;
  while (true) {
    if (i__5594__auto___23287 < len__5593__auto___23286) {
      args23278.push(arguments[i__5594__auto___23287]);
      var G__23288 = i__5594__auto___23287 + 1;
      i__5594__auto___23287 = G__23288;
      continue;
    } else {
    }
    break;
  }
  var G__23285 = args23278.length;
  switch(G__23285) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23278.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5612__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__23290 = null;
    var G__23290__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__23290__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__23290__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__23290__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__23290__4 = function() {
      var G__23291__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__23291 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23292__i = 0, G__23292__a = new Array(arguments.length - 3);
          while (G__23292__i < G__23292__a.length) {
            G__23292__a[G__23292__i] = arguments[G__23292__i + 3];
            ++G__23292__i;
          }
          args = new cljs.core.IndexedSeq(G__23292__a, 0);
        }
        return G__23291__delegate.call(this, x, y, z, args);
      };
      G__23291.cljs$lang$maxFixedArity = 3;
      G__23291.cljs$lang$applyTo = function(arglist__23293) {
        var x = cljs.core.first(arglist__23293);
        arglist__23293 = cljs.core.next(arglist__23293);
        var y = cljs.core.first(arglist__23293);
        arglist__23293 = cljs.core.next(arglist__23293);
        var z = cljs.core.first(arglist__23293);
        var args = cljs.core.rest(arglist__23293);
        return G__23291__delegate(x, y, z, args);
      };
      G__23291.cljs$core$IFn$_invoke$arity$variadic = G__23291__delegate;
      return G__23291;
    }();
    G__23290 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23290__0.call(this);
        case 1:
          return G__23290__1.call(this, x);
        case 2:
          return G__23290__2.call(this, x, y);
        case 3:
          return G__23290__3.call(this, x, y, z);
        default:
          var G__23294 = null;
          if (arguments.length > 3) {
            var G__23295__i = 0, G__23295__a = new Array(arguments.length - 3);
            while (G__23295__i < G__23295__a.length) {
              G__23295__a[G__23295__i] = arguments[G__23295__i + 3];
              ++G__23295__i;
            }
            G__23294 = new cljs.core.IndexedSeq(G__23295__a, 0);
          }
          return G__23290__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23294);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23290.cljs$lang$maxFixedArity = 3;
    G__23290.cljs$lang$applyTo = G__23290__4.cljs$lang$applyTo;
    G__23290.cljs$core$IFn$_invoke$arity$0 = G__23290__0;
    G__23290.cljs$core$IFn$_invoke$arity$1 = G__23290__1;
    G__23290.cljs$core$IFn$_invoke$arity$2 = G__23290__2;
    G__23290.cljs$core$IFn$_invoke$arity$3 = G__23290__3;
    G__23290.cljs$core$IFn$_invoke$arity$variadic = G__23290__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23290;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__23296 = null;
    var G__23296__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__23296__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__23296__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__23296__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__23296__4 = function() {
      var G__23297__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__23297 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23298__i = 0, G__23298__a = new Array(arguments.length - 3);
          while (G__23298__i < G__23298__a.length) {
            G__23298__a[G__23298__i] = arguments[G__23298__i + 3];
            ++G__23298__i;
          }
          args = new cljs.core.IndexedSeq(G__23298__a, 0);
        }
        return G__23297__delegate.call(this, x, y, z, args);
      };
      G__23297.cljs$lang$maxFixedArity = 3;
      G__23297.cljs$lang$applyTo = function(arglist__23299) {
        var x = cljs.core.first(arglist__23299);
        arglist__23299 = cljs.core.next(arglist__23299);
        var y = cljs.core.first(arglist__23299);
        arglist__23299 = cljs.core.next(arglist__23299);
        var z = cljs.core.first(arglist__23299);
        var args = cljs.core.rest(arglist__23299);
        return G__23297__delegate(x, y, z, args);
      };
      G__23297.cljs$core$IFn$_invoke$arity$variadic = G__23297__delegate;
      return G__23297;
    }();
    G__23296 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23296__0.call(this);
        case 1:
          return G__23296__1.call(this, x);
        case 2:
          return G__23296__2.call(this, x, y);
        case 3:
          return G__23296__3.call(this, x, y, z);
        default:
          var G__23300 = null;
          if (arguments.length > 3) {
            var G__23301__i = 0, G__23301__a = new Array(arguments.length - 3);
            while (G__23301__i < G__23301__a.length) {
              G__23301__a[G__23301__i] = arguments[G__23301__i + 3];
              ++G__23301__i;
            }
            G__23300 = new cljs.core.IndexedSeq(G__23301__a, 0);
          }
          return G__23296__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23300);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23296.cljs$lang$maxFixedArity = 3;
    G__23296.cljs$lang$applyTo = G__23296__4.cljs$lang$applyTo;
    G__23296.cljs$core$IFn$_invoke$arity$0 = G__23296__0;
    G__23296.cljs$core$IFn$_invoke$arity$1 = G__23296__1;
    G__23296.cljs$core$IFn$_invoke$arity$2 = G__23296__2;
    G__23296.cljs$core$IFn$_invoke$arity$3 = G__23296__3;
    G__23296.cljs$core$IFn$_invoke$arity$variadic = G__23296__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23296;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__23302 = null;
    var G__23302__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__23302__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__23302__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__23302__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__23302__4 = function() {
      var G__23303__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__23303 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23304__i = 0, G__23304__a = new Array(arguments.length - 3);
          while (G__23304__i < G__23304__a.length) {
            G__23304__a[G__23304__i] = arguments[G__23304__i + 3];
            ++G__23304__i;
          }
          args = new cljs.core.IndexedSeq(G__23304__a, 0);
        }
        return G__23303__delegate.call(this, x, y, z, args);
      };
      G__23303.cljs$lang$maxFixedArity = 3;
      G__23303.cljs$lang$applyTo = function(arglist__23305) {
        var x = cljs.core.first(arglist__23305);
        arglist__23305 = cljs.core.next(arglist__23305);
        var y = cljs.core.first(arglist__23305);
        arglist__23305 = cljs.core.next(arglist__23305);
        var z = cljs.core.first(arglist__23305);
        var args = cljs.core.rest(arglist__23305);
        return G__23303__delegate(x, y, z, args);
      };
      G__23303.cljs$core$IFn$_invoke$arity$variadic = G__23303__delegate;
      return G__23303;
    }();
    G__23302 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23302__0.call(this);
        case 1:
          return G__23302__1.call(this, x);
        case 2:
          return G__23302__2.call(this, x, y);
        case 3:
          return G__23302__3.call(this, x, y, z);
        default:
          var G__23306 = null;
          if (arguments.length > 3) {
            var G__23307__i = 0, G__23307__a = new Array(arguments.length - 3);
            while (G__23307__i < G__23307__a.length) {
              G__23307__a[G__23307__i] = arguments[G__23307__i + 3];
              ++G__23307__i;
            }
            G__23306 = new cljs.core.IndexedSeq(G__23307__a, 0);
          }
          return G__23302__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23306);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23302.cljs$lang$maxFixedArity = 3;
    G__23302.cljs$lang$applyTo = G__23302__4.cljs$lang$applyTo;
    G__23302.cljs$core$IFn$_invoke$arity$0 = G__23302__0;
    G__23302.cljs$core$IFn$_invoke$arity$1 = G__23302__1;
    G__23302.cljs$core$IFn$_invoke$arity$2 = G__23302__2;
    G__23302.cljs$core$IFn$_invoke$arity$3 = G__23302__3;
    G__23302.cljs$core$IFn$_invoke$arity$variadic = G__23302__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23302;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__23308__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__23308 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__23309__i = 0, G__23309__a = new Array(arguments.length - 0);
        while (G__23309__i < G__23309__a.length) {
          G__23309__a[G__23309__i] = arguments[G__23309__i + 0];
          ++G__23309__i;
        }
        args = new cljs.core.IndexedSeq(G__23309__a, 0);
      }
      return G__23308__delegate.call(this, args);
    };
    G__23308.cljs$lang$maxFixedArity = 0;
    G__23308.cljs$lang$applyTo = function(arglist__23310) {
      var args = cljs.core.seq(arglist__23310);
      return G__23308__delegate(args);
    };
    G__23308.cljs$core$IFn$_invoke$arity$variadic = G__23308__delegate;
    return G__23308;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq23279) {
  var G__23280 = cljs.core.first(seq23279);
  var seq23279__$1 = cljs.core.next(seq23279);
  var G__23281 = cljs.core.first(seq23279__$1);
  var seq23279__$2 = cljs.core.next(seq23279__$1);
  var G__23282 = cljs.core.first(seq23279__$2);
  var seq23279__$3 = cljs.core.next(seq23279__$2);
  var G__23283 = cljs.core.first(seq23279__$3);
  var seq23279__$4 = cljs.core.next(seq23279__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__23280, G__23281, G__23282, G__23283, seq23279__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var args23311 = [];
  var len__5593__auto___23330 = arguments.length;
  var i__5594__auto___23331 = 0;
  while (true) {
    if (i__5594__auto___23331 < len__5593__auto___23330) {
      args23311.push(arguments[i__5594__auto___23331]);
      var G__23332 = i__5594__auto___23331 + 1;
      i__5594__auto___23331 = G__23332;
      continue;
    } else {
    }
    break;
  }
  var G__23313 = args23311.length;
  switch(G__23313) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23311.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__23334 = null;
    var G__23334__1 = function(a) {
      var G__23314 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23314) : f.call(null, G__23314);
    };
    var G__23334__2 = function(a, b) {
      var G__23315 = a == null ? x : a;
      var G__23316 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23315, G__23316) : f.call(null, G__23315, G__23316);
    };
    var G__23334__3 = function(a, b, c) {
      var G__23317 = a == null ? x : a;
      var G__23318 = b;
      var G__23319 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23317, G__23318, G__23319) : f.call(null, G__23317, G__23318, G__23319);
    };
    var G__23334__4 = function() {
      var G__23335__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__23335 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__23336__i = 0, G__23336__a = new Array(arguments.length - 3);
          while (G__23336__i < G__23336__a.length) {
            G__23336__a[G__23336__i] = arguments[G__23336__i + 3];
            ++G__23336__i;
          }
          ds = new cljs.core.IndexedSeq(G__23336__a, 0);
        }
        return G__23335__delegate.call(this, a, b, c, ds);
      };
      G__23335.cljs$lang$maxFixedArity = 3;
      G__23335.cljs$lang$applyTo = function(arglist__23337) {
        var a = cljs.core.first(arglist__23337);
        arglist__23337 = cljs.core.next(arglist__23337);
        var b = cljs.core.first(arglist__23337);
        arglist__23337 = cljs.core.next(arglist__23337);
        var c = cljs.core.first(arglist__23337);
        var ds = cljs.core.rest(arglist__23337);
        return G__23335__delegate(a, b, c, ds);
      };
      G__23335.cljs$core$IFn$_invoke$arity$variadic = G__23335__delegate;
      return G__23335;
    }();
    G__23334 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__23334__1.call(this, a);
        case 2:
          return G__23334__2.call(this, a, b);
        case 3:
          return G__23334__3.call(this, a, b, c);
        default:
          var G__23338 = null;
          if (arguments.length > 3) {
            var G__23339__i = 0, G__23339__a = new Array(arguments.length - 3);
            while (G__23339__i < G__23339__a.length) {
              G__23339__a[G__23339__i] = arguments[G__23339__i + 3];
              ++G__23339__i;
            }
            G__23338 = new cljs.core.IndexedSeq(G__23339__a, 0);
          }
          return G__23334__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__23338);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23334.cljs$lang$maxFixedArity = 3;
    G__23334.cljs$lang$applyTo = G__23334__4.cljs$lang$applyTo;
    G__23334.cljs$core$IFn$_invoke$arity$1 = G__23334__1;
    G__23334.cljs$core$IFn$_invoke$arity$2 = G__23334__2;
    G__23334.cljs$core$IFn$_invoke$arity$3 = G__23334__3;
    G__23334.cljs$core$IFn$_invoke$arity$variadic = G__23334__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23334;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__23340 = null;
    var G__23340__2 = function(a, b) {
      var G__23320 = a == null ? x : a;
      var G__23321 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23320, G__23321) : f.call(null, G__23320, G__23321);
    };
    var G__23340__3 = function(a, b, c) {
      var G__23322 = a == null ? x : a;
      var G__23323 = b == null ? y : b;
      var G__23324 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23322, G__23323, G__23324) : f.call(null, G__23322, G__23323, G__23324);
    };
    var G__23340__4 = function() {
      var G__23341__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__23341 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__23342__i = 0, G__23342__a = new Array(arguments.length - 3);
          while (G__23342__i < G__23342__a.length) {
            G__23342__a[G__23342__i] = arguments[G__23342__i + 3];
            ++G__23342__i;
          }
          ds = new cljs.core.IndexedSeq(G__23342__a, 0);
        }
        return G__23341__delegate.call(this, a, b, c, ds);
      };
      G__23341.cljs$lang$maxFixedArity = 3;
      G__23341.cljs$lang$applyTo = function(arglist__23343) {
        var a = cljs.core.first(arglist__23343);
        arglist__23343 = cljs.core.next(arglist__23343);
        var b = cljs.core.first(arglist__23343);
        arglist__23343 = cljs.core.next(arglist__23343);
        var c = cljs.core.first(arglist__23343);
        var ds = cljs.core.rest(arglist__23343);
        return G__23341__delegate(a, b, c, ds);
      };
      G__23341.cljs$core$IFn$_invoke$arity$variadic = G__23341__delegate;
      return G__23341;
    }();
    G__23340 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__23340__2.call(this, a, b);
        case 3:
          return G__23340__3.call(this, a, b, c);
        default:
          var G__23344 = null;
          if (arguments.length > 3) {
            var G__23345__i = 0, G__23345__a = new Array(arguments.length - 3);
            while (G__23345__i < G__23345__a.length) {
              G__23345__a[G__23345__i] = arguments[G__23345__i + 3];
              ++G__23345__i;
            }
            G__23344 = new cljs.core.IndexedSeq(G__23345__a, 0);
          }
          return G__23340__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__23344);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23340.cljs$lang$maxFixedArity = 3;
    G__23340.cljs$lang$applyTo = G__23340__4.cljs$lang$applyTo;
    G__23340.cljs$core$IFn$_invoke$arity$2 = G__23340__2;
    G__23340.cljs$core$IFn$_invoke$arity$3 = G__23340__3;
    G__23340.cljs$core$IFn$_invoke$arity$variadic = G__23340__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23340;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__23346 = null;
    var G__23346__2 = function(a, b) {
      var G__23325 = a == null ? x : a;
      var G__23326 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23325, G__23326) : f.call(null, G__23325, G__23326);
    };
    var G__23346__3 = function(a, b, c) {
      var G__23327 = a == null ? x : a;
      var G__23328 = b == null ? y : b;
      var G__23329 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23327, G__23328, G__23329) : f.call(null, G__23327, G__23328, G__23329);
    };
    var G__23346__4 = function() {
      var G__23347__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__23347 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__23348__i = 0, G__23348__a = new Array(arguments.length - 3);
          while (G__23348__i < G__23348__a.length) {
            G__23348__a[G__23348__i] = arguments[G__23348__i + 3];
            ++G__23348__i;
          }
          ds = new cljs.core.IndexedSeq(G__23348__a, 0);
        }
        return G__23347__delegate.call(this, a, b, c, ds);
      };
      G__23347.cljs$lang$maxFixedArity = 3;
      G__23347.cljs$lang$applyTo = function(arglist__23349) {
        var a = cljs.core.first(arglist__23349);
        arglist__23349 = cljs.core.next(arglist__23349);
        var b = cljs.core.first(arglist__23349);
        arglist__23349 = cljs.core.next(arglist__23349);
        var c = cljs.core.first(arglist__23349);
        var ds = cljs.core.rest(arglist__23349);
        return G__23347__delegate(a, b, c, ds);
      };
      G__23347.cljs$core$IFn$_invoke$arity$variadic = G__23347__delegate;
      return G__23347;
    }();
    G__23346 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__23346__2.call(this, a, b);
        case 3:
          return G__23346__3.call(this, a, b, c);
        default:
          var G__23350 = null;
          if (arguments.length > 3) {
            var G__23351__i = 0, G__23351__a = new Array(arguments.length - 3);
            while (G__23351__i < G__23351__a.length) {
              G__23351__a[G__23351__i] = arguments[G__23351__i + 3];
              ++G__23351__i;
            }
            G__23350 = new cljs.core.IndexedSeq(G__23351__a, 0);
          }
          return G__23346__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__23350);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23346.cljs$lang$maxFixedArity = 3;
    G__23346.cljs$lang$applyTo = G__23346__4.cljs$lang$applyTo;
    G__23346.cljs$core$IFn$_invoke$arity$2 = G__23346__2;
    G__23346.cljs$core$IFn$_invoke$arity$3 = G__23346__3;
    G__23346.cljs$core$IFn$_invoke$arity$variadic = G__23346__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23346;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var args23352 = [];
  var len__5593__auto___23385 = arguments.length;
  var i__5594__auto___23386 = 0;
  while (true) {
    if (i__5594__auto___23386 < len__5593__auto___23385) {
      args23352.push(arguments[i__5594__auto___23386]);
      var G__23387 = i__5594__auto___23386 + 1;
      i__5594__auto___23386 = G__23387;
      continue;
    } else {
    }
    break;
  }
  var G__23354 = args23352.length;
  switch(G__23354) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23352.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__23389 = null;
        var G__23389__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23389__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23389__2 = function(result, input) {
          var G__23357 = result;
          var G__23358 = function() {
            var G__23359 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__23360 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23359, G__23360) : f.call(null, G__23359, G__23360);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23357, G__23358) : rf.call(null, G__23357, G__23358);
        };
        G__23389 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23389__0.call(this);
            case 1:
              return G__23389__1.call(this, result);
            case 2:
              return G__23389__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23389.cljs$core$IFn$_invoke$arity$0 = G__23389__0;
        G__23389.cljs$core$IFn$_invoke$arity$1 = G__23389__1;
        G__23389.cljs$core$IFn$_invoke$arity$2 = G__23389__2;
        return G__23389;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5438__auto___23390 = size;
          var i_23391 = 0;
          while (true) {
            if (i_23391 < n__5438__auto___23390) {
              cljs.core.chunk_append(b, function() {
                var G__23381 = idx + i_23391;
                var G__23382 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23391);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23381, G__23382) : f.call(null, G__23381, G__23382);
              }());
              var G__23392 = i_23391 + 1;
              i_23391 = G__23392;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__23383 = idx;
            var G__23384 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23383, G__23384) : f.call(null, G__23383, G__23384);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var args23393 = [];
  var len__5593__auto___23398 = arguments.length;
  var i__5594__auto___23399 = 0;
  while (true) {
    if (i__5594__auto___23399 < len__5593__auto___23398) {
      args23393.push(arguments[i__5594__auto___23399]);
      var G__23400 = i__5594__auto___23399 + 1;
      i__5594__auto___23399 = G__23400;
      continue;
    } else {
    }
    break;
  }
  var G__23395 = args23393.length;
  switch(G__23395) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23393.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__23402 = null;
      var G__23402__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__23402__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__23402__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__23402 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__23402__0.call(this);
          case 1:
            return G__23402__1.call(this, result);
          case 2:
            return G__23402__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23402.cljs$core$IFn$_invoke$arity$0 = G__23402__0;
      G__23402.cljs$core$IFn$_invoke$arity$1 = G__23402__1;
      G__23402.cljs$core$IFn$_invoke$arity$2 = G__23402__2;
      return G__23402;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5438__auto___23403 = size;
        var i_23404 = 0;
        while (true) {
          if (i_23404 < n__5438__auto___23403) {
            var x_23405 = function() {
              var G__23396 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23404);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23396) : f.call(null, G__23396);
            }();
            if (x_23405 == null) {
            } else {
              cljs.core.chunk_append(b, x_23405);
            }
            var G__23406 = i_23404 + 1;
            i_23404 = G__23406;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__23397 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23397) : f.call(null, G__23397);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__23407 = cljs.core.seq(self__.watches);
  var chunk__23408 = null;
  var count__23409 = 0;
  var i__23410 = 0;
  while (true) {
    if (i__23410 < count__23409) {
      var vec__23411 = chunk__23408.cljs$core$IIndexed$_nth$arity$2(null, i__23410);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23411, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23411, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__23413 = seq__23407;
      var G__23414 = chunk__23408;
      var G__23415 = count__23409;
      var G__23416 = i__23410 + 1;
      seq__23407 = G__23413;
      chunk__23408 = G__23414;
      count__23409 = G__23415;
      i__23410 = G__23416;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__23407);
      if (temp__4425__auto__) {
        var seq__23407__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23407__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__23407__$1);
          var G__23417 = cljs.core.chunk_rest(seq__23407__$1);
          var G__23418 = c__5338__auto__;
          var G__23419 = cljs.core.count(c__5338__auto__);
          var G__23420 = 0;
          seq__23407 = G__23417;
          chunk__23408 = G__23418;
          count__23409 = G__23419;
          i__23410 = G__23420;
          continue;
        } else {
          var vec__23412 = cljs.core.first(seq__23407__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23412, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23412, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__23421 = cljs.core.next(seq__23407__$1);
          var G__23422 = null;
          var G__23423 = 0;
          var G__23424 = 0;
          seq__23407 = G__23421;
          chunk__23408 = G__23422;
          count__23409 = G__23423;
          i__23410 = G__23424;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var args23425 = [];
  var len__5593__auto___23433 = arguments.length;
  var i__5594__auto___23434 = 0;
  while (true) {
    if (i__5594__auto___23434 < len__5593__auto___23433) {
      args23425.push(arguments[i__5594__auto___23434]);
      var G__23435 = i__5594__auto___23434 + 1;
      i__5594__auto___23434 = G__23435;
      continue;
    } else {
    }
    break;
  }
  var G__23429 = args23425.length;
  switch(G__23429) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23425.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5612__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__23430) {
  var map__23431 = p__23430;
  var map__23431__$1 = (!(map__23431 == null) ? map__23431.cljs$lang$protocol_mask$partition0$ & 64 || map__23431.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23431) : map__23431;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23431__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23431__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq23426) {
  var G__23427 = cljs.core.first(seq23426);
  var seq23426__$1 = cljs.core.next(seq23426);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__23427, seq23426__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__23438 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23438) : cljs.core.pr_str.call(null, G__23438);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var args23439 = [];
  var len__5593__auto___23453 = arguments.length;
  var i__5594__auto___23454 = 0;
  while (true) {
    if (i__5594__auto___23454 < len__5593__auto___23453) {
      args23439.push(arguments[i__5594__auto___23454]);
      var G__23455 = i__5594__auto___23454 + 1;
      i__5594__auto___23454 = G__23455;
      continue;
    } else {
    }
    break;
  }
  var G__23446 = args23439.length;
  switch(G__23446) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23439.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5612__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__23447 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23447) : f.call(null, G__23447);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__23448 = a.state;
      var G__23449 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23448, G__23449) : f.call(null, G__23448, G__23449);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__23450 = a.state;
      var G__23451 = x;
      var G__23452 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23450, G__23451, G__23452) : f.call(null, G__23450, G__23451, G__23452);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq23440) {
  var G__23441 = cljs.core.first(seq23440);
  var seq23440__$1 = cljs.core.next(seq23440);
  var G__23442 = cljs.core.first(seq23440__$1);
  var seq23440__$2 = cljs.core.next(seq23440__$1);
  var G__23443 = cljs.core.first(seq23440__$2);
  var seq23440__$3 = cljs.core.next(seq23440__$2);
  var G__23444 = cljs.core.first(seq23440__$3);
  var seq23440__$4 = cljs.core.next(seq23440__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__23441, G__23442, G__23443, G__23444, seq23440__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var args23457 = [];
  var len__5593__auto___23488 = arguments.length;
  var i__5594__auto___23489 = 0;
  while (true) {
    if (i__5594__auto___23489 < len__5593__auto___23488) {
      args23457.push(arguments[i__5594__auto___23489]);
      var G__23490 = i__5594__auto___23489 + 1;
      i__5594__auto___23489 = G__23490;
      continue;
    } else {
    }
    break;
  }
  var G__23459 = args23457.length;
  switch(G__23459) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23457.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__23492 = null;
        var G__23492__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23492__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23492__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__23492 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23492__0.call(this);
            case 1:
              return G__23492__1.call(this, result);
            case 2:
              return G__23492__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23492.cljs$core$IFn$_invoke$arity$0 = G__23492__0;
        G__23492.cljs$core$IFn$_invoke$arity$1 = G__23492__1;
        G__23492.cljs$core$IFn$_invoke$arity$2 = G__23492__2;
        return G__23492;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5438__auto___23493 = size;
          var i_23494 = 0;
          while (true) {
            if (i_23494 < n__5438__auto___23493) {
              var x_23495 = function() {
                var G__23484 = idx + i_23494;
                var G__23485 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23494);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23484, G__23485) : f.call(null, G__23484, G__23485);
              }();
              if (x_23495 == null) {
              } else {
                cljs.core.chunk_append(b, x_23495);
              }
              var G__23496 = i_23494 + 1;
              i_23494 = G__23496;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__23486 = idx;
            var G__23487 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23486, G__23487) : f.call(null, G__23486, G__23487);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var args23503 = [];
  var len__5593__auto___23510 = arguments.length;
  var i__5594__auto___23511 = 0;
  while (true) {
    if (i__5594__auto___23511 < len__5593__auto___23510) {
      args23503.push(arguments[i__5594__auto___23511]);
      var G__23512 = i__5594__auto___23511 + 1;
      i__5594__auto___23511 = G__23512;
      continue;
    } else {
    }
    break;
  }
  var G__23509 = args23503.length;
  switch(G__23509) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23503.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__23514__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4542__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4542__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4542__auto__;
          }
        }());
      };
      var G__23514 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23515__i = 0, G__23515__a = new Array(arguments.length - 3);
          while (G__23515__i < G__23515__a.length) {
            G__23515__a[G__23515__i] = arguments[G__23515__i + 3];
            ++G__23515__i;
          }
          args = new cljs.core.IndexedSeq(G__23515__a, 0);
        }
        return G__23514__delegate.call(this, x, y, z, args);
      };
      G__23514.cljs$lang$maxFixedArity = 3;
      G__23514.cljs$lang$applyTo = function(arglist__23516) {
        var x = cljs.core.first(arglist__23516);
        arglist__23516 = cljs.core.next(arglist__23516);
        var y = cljs.core.first(arglist__23516);
        arglist__23516 = cljs.core.next(arglist__23516);
        var z = cljs.core.first(arglist__23516);
        var args = cljs.core.rest(arglist__23516);
        return G__23514__delegate(x, y, z, args);
      };
      G__23514.cljs$core$IFn$_invoke$arity$variadic = G__23514__delegate;
      return G__23514;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__23517 = null;
          if (arguments.length > 3) {
            var G__23518__i = 0, G__23518__a = new Array(arguments.length - 3);
            while (G__23518__i < G__23518__a.length) {
              G__23518__a[G__23518__i] = arguments[G__23518__i + 3];
              ++G__23518__i;
            }
            G__23517 = new cljs.core.IndexedSeq(G__23518__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23517);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            var and__4542__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4542__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4542__auto____$2;
            }
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            var and__4542__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4542__auto____$2)) {
              var and__4542__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4542__auto____$3)) {
                var and__4542__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4542__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4542__auto____$4;
                }
              } else {
                return and__4542__auto____$3;
              }
            } else {
              return and__4542__auto____$2;
            }
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__23519__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4542__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4542__auto__)) {
            return cljs.core.every_QMARK_(function(and__4542__auto__) {
              return function(p1__23497_SHARP_) {
                var and__4542__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23497_SHARP_) : p1.call(null, p1__23497_SHARP_);
                if (cljs.core.truth_(and__4542__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23497_SHARP_) : p2.call(null, p1__23497_SHARP_);
                } else {
                  return and__4542__auto____$1;
                }
              };
            }(and__4542__auto__), args);
          } else {
            return and__4542__auto__;
          }
        }());
      };
      var G__23519 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23520__i = 0, G__23520__a = new Array(arguments.length - 3);
          while (G__23520__i < G__23520__a.length) {
            G__23520__a[G__23520__i] = arguments[G__23520__i + 3];
            ++G__23520__i;
          }
          args = new cljs.core.IndexedSeq(G__23520__a, 0);
        }
        return G__23519__delegate.call(this, x, y, z, args);
      };
      G__23519.cljs$lang$maxFixedArity = 3;
      G__23519.cljs$lang$applyTo = function(arglist__23521) {
        var x = cljs.core.first(arglist__23521);
        arglist__23521 = cljs.core.next(arglist__23521);
        var y = cljs.core.first(arglist__23521);
        arglist__23521 = cljs.core.next(arglist__23521);
        var z = cljs.core.first(arglist__23521);
        var args = cljs.core.rest(arglist__23521);
        return G__23519__delegate(x, y, z, args);
      };
      G__23519.cljs$core$IFn$_invoke$arity$variadic = G__23519__delegate;
      return G__23519;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__23522 = null;
          if (arguments.length > 3) {
            var G__23523__i = 0, G__23523__a = new Array(arguments.length - 3);
            while (G__23523__i < G__23523__a.length) {
              G__23523__a[G__23523__i] = arguments[G__23523__i + 3];
              ++G__23523__i;
            }
            G__23522 = new cljs.core.IndexedSeq(G__23523__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23522);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            var and__4542__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4542__auto____$2)) {
              var and__4542__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4542__auto____$3)) {
                var and__4542__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4542__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4542__auto____$4;
                }
              } else {
                return and__4542__auto____$3;
              }
            } else {
              return and__4542__auto____$2;
            }
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            var and__4542__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4542__auto____$2)) {
              var and__4542__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4542__auto____$3)) {
                var and__4542__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4542__auto____$4)) {
                  var and__4542__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4542__auto____$5)) {
                    var and__4542__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4542__auto____$6)) {
                      var and__4542__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4542__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4542__auto____$7;
                      }
                    } else {
                      return and__4542__auto____$6;
                    }
                  } else {
                    return and__4542__auto____$5;
                  }
                } else {
                  return and__4542__auto____$4;
                }
              } else {
                return and__4542__auto____$3;
              }
            } else {
              return and__4542__auto____$2;
            }
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__23524__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4542__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4542__auto__)) {
            return cljs.core.every_QMARK_(function(and__4542__auto__) {
              return function(p1__23498_SHARP_) {
                var and__4542__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23498_SHARP_) : p1.call(null, p1__23498_SHARP_);
                if (cljs.core.truth_(and__4542__auto____$1)) {
                  var and__4542__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23498_SHARP_) : p2.call(null, p1__23498_SHARP_);
                  if (cljs.core.truth_(and__4542__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__23498_SHARP_) : p3.call(null, p1__23498_SHARP_);
                  } else {
                    return and__4542__auto____$2;
                  }
                } else {
                  return and__4542__auto____$1;
                }
              };
            }(and__4542__auto__), args);
          } else {
            return and__4542__auto__;
          }
        }());
      };
      var G__23524 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23525__i = 0, G__23525__a = new Array(arguments.length - 3);
          while (G__23525__i < G__23525__a.length) {
            G__23525__a[G__23525__i] = arguments[G__23525__i + 3];
            ++G__23525__i;
          }
          args = new cljs.core.IndexedSeq(G__23525__a, 0);
        }
        return G__23524__delegate.call(this, x, y, z, args);
      };
      G__23524.cljs$lang$maxFixedArity = 3;
      G__23524.cljs$lang$applyTo = function(arglist__23526) {
        var x = cljs.core.first(arglist__23526);
        arglist__23526 = cljs.core.next(arglist__23526);
        var y = cljs.core.first(arglist__23526);
        arglist__23526 = cljs.core.next(arglist__23526);
        var z = cljs.core.first(arglist__23526);
        var args = cljs.core.rest(arglist__23526);
        return G__23524__delegate(x, y, z, args);
      };
      G__23524.cljs$core$IFn$_invoke$arity$variadic = G__23524__delegate;
      return G__23524;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__23527 = null;
          if (arguments.length > 3) {
            var G__23528__i = 0, G__23528__a = new Array(arguments.length - 3);
            while (G__23528__i < G__23528__a.length) {
              G__23528__a[G__23528__i] = arguments[G__23528__i + 3];
              ++G__23528__i;
            }
            G__23527 = new cljs.core.IndexedSeq(G__23528__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23527);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__23499_SHARP_) {
            return p1__23499_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23499_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23499_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__23500_SHARP_) {
            var and__4542__auto__ = p1__23500_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23500_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23500_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4542__auto__)) {
              return p1__23500_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23500_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23500_SHARP_.call(null, y);
            } else {
              return and__4542__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__23501_SHARP_) {
            var and__4542__auto__ = p1__23501_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23501_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23501_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4542__auto__)) {
              var and__4542__auto____$1 = p1__23501_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23501_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23501_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4542__auto____$1)) {
                return p1__23501_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23501_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__23501_SHARP_.call(null, z);
              } else {
                return and__4542__auto____$1;
              }
            } else {
              return and__4542__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__23529__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4542__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4542__auto__)) {
              return cljs.core.every_QMARK_(function(and__4542__auto__, ps__$1) {
                return function(p1__23502_SHARP_) {
                  return cljs.core.every_QMARK_(p1__23502_SHARP_, args);
                };
              }(and__4542__auto__, ps__$1), ps__$1);
            } else {
              return and__4542__auto__;
            }
          }());
        };
        var G__23529 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__23530__i = 0, G__23530__a = new Array(arguments.length - 3);
            while (G__23530__i < G__23530__a.length) {
              G__23530__a[G__23530__i] = arguments[G__23530__i + 3];
              ++G__23530__i;
            }
            args = new cljs.core.IndexedSeq(G__23530__a, 0);
          }
          return G__23529__delegate.call(this, x, y, z, args);
        };
        G__23529.cljs$lang$maxFixedArity = 3;
        G__23529.cljs$lang$applyTo = function(arglist__23531) {
          var x = cljs.core.first(arglist__23531);
          arglist__23531 = cljs.core.next(arglist__23531);
          var y = cljs.core.first(arglist__23531);
          arglist__23531 = cljs.core.next(arglist__23531);
          var z = cljs.core.first(arglist__23531);
          var args = cljs.core.rest(arglist__23531);
          return G__23529__delegate(x, y, z, args);
        };
        G__23529.cljs$core$IFn$_invoke$arity$variadic = G__23529__delegate;
        return G__23529;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__23532 = null;
            if (arguments.length > 3) {
              var G__23533__i = 0, G__23533__a = new Array(arguments.length - 3);
              while (G__23533__i < G__23533__a.length) {
                G__23533__a[G__23533__i] = arguments[G__23533__i + 3];
                ++G__23533__i;
              }
              G__23532 = new cljs.core.IndexedSeq(G__23533__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23532);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq23504) {
  var G__23505 = cljs.core.first(seq23504);
  var seq23504__$1 = cljs.core.next(seq23504);
  var G__23506 = cljs.core.first(seq23504__$1);
  var seq23504__$2 = cljs.core.next(seq23504__$1);
  var G__23507 = cljs.core.first(seq23504__$2);
  var seq23504__$3 = cljs.core.next(seq23504__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__23505, G__23506, G__23507, seq23504__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var args23540 = [];
  var len__5593__auto___23547 = arguments.length;
  var i__5594__auto___23548 = 0;
  while (true) {
    if (i__5594__auto___23548 < len__5593__auto___23547) {
      args23540.push(arguments[i__5594__auto___23548]);
      var G__23549 = i__5594__auto___23548 + 1;
      i__5594__auto___23548 = G__23549;
      continue;
    } else {
    }
    break;
  }
  var G__23546 = args23540.length;
  switch(G__23546) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23540.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4554__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4554__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__23551__delegate = function(x, y, z, args) {
        var or__4554__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__23551 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23552__i = 0, G__23552__a = new Array(arguments.length - 3);
          while (G__23552__i < G__23552__a.length) {
            G__23552__a[G__23552__i] = arguments[G__23552__i + 3];
            ++G__23552__i;
          }
          args = new cljs.core.IndexedSeq(G__23552__a, 0);
        }
        return G__23551__delegate.call(this, x, y, z, args);
      };
      G__23551.cljs$lang$maxFixedArity = 3;
      G__23551.cljs$lang$applyTo = function(arglist__23553) {
        var x = cljs.core.first(arglist__23553);
        arglist__23553 = cljs.core.next(arglist__23553);
        var y = cljs.core.first(arglist__23553);
        arglist__23553 = cljs.core.next(arglist__23553);
        var z = cljs.core.first(arglist__23553);
        var args = cljs.core.rest(arglist__23553);
        return G__23551__delegate(x, y, z, args);
      };
      G__23551.cljs$core$IFn$_invoke$arity$variadic = G__23551__delegate;
      return G__23551;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__23554 = null;
          if (arguments.length > 3) {
            var G__23555__i = 0, G__23555__a = new Array(arguments.length - 3);
            while (G__23555__i < G__23555__a.length) {
              G__23555__a[G__23555__i] = arguments[G__23555__i + 3];
              ++G__23555__i;
            }
            G__23554 = new cljs.core.IndexedSeq(G__23555__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23554);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            var or__4554__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4554__auto____$3)) {
              return or__4554__auto____$3;
            } else {
              var or__4554__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4554__auto____$4)) {
                return or__4554__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__23556__delegate = function(x, y, z, args) {
        var or__4554__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return cljs.core.some(function(or__4554__auto__) {
            return function(p1__23534_SHARP_) {
              var or__4554__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23534_SHARP_) : p1.call(null, p1__23534_SHARP_);
              if (cljs.core.truth_(or__4554__auto____$1)) {
                return or__4554__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23534_SHARP_) : p2.call(null, p1__23534_SHARP_);
              }
            };
          }(or__4554__auto__), args);
        }
      };
      var G__23556 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23557__i = 0, G__23557__a = new Array(arguments.length - 3);
          while (G__23557__i < G__23557__a.length) {
            G__23557__a[G__23557__i] = arguments[G__23557__i + 3];
            ++G__23557__i;
          }
          args = new cljs.core.IndexedSeq(G__23557__a, 0);
        }
        return G__23556__delegate.call(this, x, y, z, args);
      };
      G__23556.cljs$lang$maxFixedArity = 3;
      G__23556.cljs$lang$applyTo = function(arglist__23558) {
        var x = cljs.core.first(arglist__23558);
        arglist__23558 = cljs.core.next(arglist__23558);
        var y = cljs.core.first(arglist__23558);
        arglist__23558 = cljs.core.next(arglist__23558);
        var z = cljs.core.first(arglist__23558);
        var args = cljs.core.rest(arglist__23558);
        return G__23556__delegate(x, y, z, args);
      };
      G__23556.cljs$core$IFn$_invoke$arity$variadic = G__23556__delegate;
      return G__23556;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__23559 = null;
          if (arguments.length > 3) {
            var G__23560__i = 0, G__23560__a = new Array(arguments.length - 3);
            while (G__23560__i < G__23560__a.length) {
              G__23560__a[G__23560__i] = arguments[G__23560__i + 3];
              ++G__23560__i;
            }
            G__23559 = new cljs.core.IndexedSeq(G__23560__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23559);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            var or__4554__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4554__auto____$3)) {
              return or__4554__auto____$3;
            } else {
              var or__4554__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4554__auto____$4)) {
                return or__4554__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            var or__4554__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4554__auto____$3)) {
              return or__4554__auto____$3;
            } else {
              var or__4554__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4554__auto____$4)) {
                return or__4554__auto____$4;
              } else {
                var or__4554__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4554__auto____$5)) {
                  return or__4554__auto____$5;
                } else {
                  var or__4554__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4554__auto____$6)) {
                    return or__4554__auto____$6;
                  } else {
                    var or__4554__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4554__auto____$7)) {
                      return or__4554__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__23561__delegate = function(x, y, z, args) {
        var or__4554__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return cljs.core.some(function(or__4554__auto__) {
            return function(p1__23535_SHARP_) {
              var or__4554__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23535_SHARP_) : p1.call(null, p1__23535_SHARP_);
              if (cljs.core.truth_(or__4554__auto____$1)) {
                return or__4554__auto____$1;
              } else {
                var or__4554__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23535_SHARP_) : p2.call(null, p1__23535_SHARP_);
                if (cljs.core.truth_(or__4554__auto____$2)) {
                  return or__4554__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__23535_SHARP_) : p3.call(null, p1__23535_SHARP_);
                }
              }
            };
          }(or__4554__auto__), args);
        }
      };
      var G__23561 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23562__i = 0, G__23562__a = new Array(arguments.length - 3);
          while (G__23562__i < G__23562__a.length) {
            G__23562__a[G__23562__i] = arguments[G__23562__i + 3];
            ++G__23562__i;
          }
          args = new cljs.core.IndexedSeq(G__23562__a, 0);
        }
        return G__23561__delegate.call(this, x, y, z, args);
      };
      G__23561.cljs$lang$maxFixedArity = 3;
      G__23561.cljs$lang$applyTo = function(arglist__23563) {
        var x = cljs.core.first(arglist__23563);
        arglist__23563 = cljs.core.next(arglist__23563);
        var y = cljs.core.first(arglist__23563);
        arglist__23563 = cljs.core.next(arglist__23563);
        var z = cljs.core.first(arglist__23563);
        var args = cljs.core.rest(arglist__23563);
        return G__23561__delegate(x, y, z, args);
      };
      G__23561.cljs$core$IFn$_invoke$arity$variadic = G__23561__delegate;
      return G__23561;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__23564 = null;
          if (arguments.length > 3) {
            var G__23565__i = 0, G__23565__a = new Array(arguments.length - 3);
            while (G__23565__i < G__23565__a.length) {
              G__23565__a[G__23565__i] = arguments[G__23565__i + 3];
              ++G__23565__i;
            }
            G__23564 = new cljs.core.IndexedSeq(G__23565__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23564);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__23536_SHARP_) {
            return p1__23536_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23536_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23536_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__23537_SHARP_) {
            var or__4554__auto__ = p1__23537_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23537_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23537_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              return p1__23537_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23537_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23537_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__23538_SHARP_) {
            var or__4554__auto__ = p1__23538_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23538_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23538_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              var or__4554__auto____$1 = p1__23538_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23538_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23538_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4554__auto____$1)) {
                return or__4554__auto____$1;
              } else {
                return p1__23538_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23538_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__23538_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__23566__delegate = function(x, y, z, args) {
          var or__4554__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4554__auto__)) {
            return or__4554__auto__;
          } else {
            return cljs.core.some(function(or__4554__auto__, ps__$1) {
              return function(p1__23539_SHARP_) {
                return cljs.core.some(p1__23539_SHARP_, args);
              };
            }(or__4554__auto__, ps__$1), ps__$1);
          }
        };
        var G__23566 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__23567__i = 0, G__23567__a = new Array(arguments.length - 3);
            while (G__23567__i < G__23567__a.length) {
              G__23567__a[G__23567__i] = arguments[G__23567__i + 3];
              ++G__23567__i;
            }
            args = new cljs.core.IndexedSeq(G__23567__a, 0);
          }
          return G__23566__delegate.call(this, x, y, z, args);
        };
        G__23566.cljs$lang$maxFixedArity = 3;
        G__23566.cljs$lang$applyTo = function(arglist__23568) {
          var x = cljs.core.first(arglist__23568);
          arglist__23568 = cljs.core.next(arglist__23568);
          var y = cljs.core.first(arglist__23568);
          arglist__23568 = cljs.core.next(arglist__23568);
          var z = cljs.core.first(arglist__23568);
          var args = cljs.core.rest(arglist__23568);
          return G__23566__delegate(x, y, z, args);
        };
        G__23566.cljs$core$IFn$_invoke$arity$variadic = G__23566__delegate;
        return G__23566;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__23569 = null;
            if (arguments.length > 3) {
              var G__23570__i = 0, G__23570__a = new Array(arguments.length - 3);
              while (G__23570__i < G__23570__a.length) {
                G__23570__a[G__23570__i] = arguments[G__23570__i + 3];
                ++G__23570__i;
              }
              G__23569 = new cljs.core.IndexedSeq(G__23570__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23569);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq23541) {
  var G__23542 = cljs.core.first(seq23541);
  var seq23541__$1 = cljs.core.next(seq23541);
  var G__23543 = cljs.core.first(seq23541__$1);
  var seq23541__$2 = cljs.core.next(seq23541__$1);
  var G__23544 = cljs.core.first(seq23541__$2);
  var seq23541__$3 = cljs.core.next(seq23541__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__23542, G__23543, G__23544, seq23541__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var args23572 = [];
  var len__5593__auto___23592 = arguments.length;
  var i__5594__auto___23593 = 0;
  while (true) {
    if (i__5594__auto___23593 < len__5593__auto___23592) {
      args23572.push(arguments[i__5594__auto___23593]);
      var G__23594 = i__5594__auto___23593 + 1;
      i__5594__auto___23593 = G__23594;
      continue;
    } else {
    }
    break;
  }
  var G__23579 = args23572.length;
  switch(G__23579) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23572.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5612__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__23596 = null;
      var G__23596__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__23596__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__23596__2 = function(result, input) {
        var G__23580 = result;
        var G__23581 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23580, G__23581) : rf.call(null, G__23580, G__23581);
      };
      var G__23596__3 = function() {
        var G__23597__delegate = function(result, input, inputs) {
          var G__23582 = result;
          var G__23583 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23582, G__23583) : rf.call(null, G__23582, G__23583);
        };
        var G__23597 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__23598__i = 0, G__23598__a = new Array(arguments.length - 2);
            while (G__23598__i < G__23598__a.length) {
              G__23598__a[G__23598__i] = arguments[G__23598__i + 2];
              ++G__23598__i;
            }
            inputs = new cljs.core.IndexedSeq(G__23598__a, 0);
          }
          return G__23597__delegate.call(this, result, input, inputs);
        };
        G__23597.cljs$lang$maxFixedArity = 2;
        G__23597.cljs$lang$applyTo = function(arglist__23599) {
          var result = cljs.core.first(arglist__23599);
          arglist__23599 = cljs.core.next(arglist__23599);
          var input = cljs.core.first(arglist__23599);
          var inputs = cljs.core.rest(arglist__23599);
          return G__23597__delegate(result, input, inputs);
        };
        G__23597.cljs$core$IFn$_invoke$arity$variadic = G__23597__delegate;
        return G__23597;
      }();
      G__23596 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__23596__0.call(this);
          case 1:
            return G__23596__1.call(this, result);
          case 2:
            return G__23596__2.call(this, result, input);
          default:
            var G__23600 = null;
            if (arguments.length > 2) {
              var G__23601__i = 0, G__23601__a = new Array(arguments.length - 2);
              while (G__23601__i < G__23601__a.length) {
                G__23601__a[G__23601__i] = arguments[G__23601__i + 2];
                ++G__23601__i;
              }
              G__23600 = new cljs.core.IndexedSeq(G__23601__a, 0);
            }
            return G__23596__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__23600);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23596.cljs$lang$maxFixedArity = 2;
      G__23596.cljs$lang$applyTo = G__23596__3.cljs$lang$applyTo;
      G__23596.cljs$core$IFn$_invoke$arity$0 = G__23596__0;
      G__23596.cljs$core$IFn$_invoke$arity$1 = G__23596__1;
      G__23596.cljs$core$IFn$_invoke$arity$2 = G__23596__2;
      G__23596.cljs$core$IFn$_invoke$arity$variadic = G__23596__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__23596;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5438__auto___23602 = size;
        var i_23603 = 0;
        while (true) {
          if (i_23603 < n__5438__auto___23602) {
            cljs.core.chunk_append(b, function() {
              var G__23584 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23603);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23584) : f.call(null, G__23584);
            }());
            var G__23604 = i_23603 + 1;
            i_23603 = G__23604;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__23585 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23585) : f.call(null, G__23585);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__23586 = cljs.core.first(s1);
        var G__23587 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23586, G__23587) : f.call(null, G__23586, G__23587);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__23588 = cljs.core.first(s1);
        var G__23589 = cljs.core.first(s2);
        var G__23590 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23588, G__23589, G__23590) : f.call(null, G__23588, G__23589, G__23590);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__23571_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__23571_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq23573) {
  var G__23574 = cljs.core.first(seq23573);
  var seq23573__$1 = cljs.core.next(seq23573);
  var G__23575 = cljs.core.first(seq23573__$1);
  var seq23573__$2 = cljs.core.next(seq23573__$1);
  var G__23576 = cljs.core.first(seq23573__$2);
  var seq23573__$3 = cljs.core.next(seq23573__$2);
  var G__23577 = cljs.core.first(seq23573__$3);
  var seq23573__$4 = cljs.core.next(seq23573__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__23574, G__23575, G__23576, G__23577, seq23573__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var args23605 = [];
  var len__5593__auto___23610 = arguments.length;
  var i__5594__auto___23611 = 0;
  while (true) {
    if (i__5594__auto___23611 < len__5593__auto___23610) {
      args23605.push(arguments[i__5594__auto___23611]);
      var G__23612 = i__5594__auto___23611 + 1;
      i__5594__auto___23611 = G__23612;
      continue;
    } else {
    }
    break;
  }
  var G__23607 = args23605.length;
  switch(G__23607) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23605.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__23608 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23608) : cljs.core.pr_str.call(null, G__23608);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__23614 = null;
        var G__23614__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23614__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23614__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__23614 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23614__0.call(this);
            case 1:
              return G__23614__1.call(this, result);
            case 2:
              return G__23614__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23614.cljs$core$IFn$_invoke$arity$0 = G__23614__0;
        G__23614.cljs$core$IFn$_invoke$arity$1 = G__23614__1;
        G__23614.cljs$core$IFn$_invoke$arity$2 = G__23614__2;
        return G__23614;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__23609 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23609) : cljs.core.pr_str.call(null, G__23609);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var args23615 = [];
  var len__5593__auto___23620 = arguments.length;
  var i__5594__auto___23621 = 0;
  while (true) {
    if (i__5594__auto___23621 < len__5593__auto___23620) {
      args23615.push(arguments[i__5594__auto___23621]);
      var G__23622 = i__5594__auto___23621 + 1;
      i__5594__auto___23621 = G__23622;
      continue;
    } else {
    }
    break;
  }
  var G__23617 = args23615.length;
  switch(G__23617) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23615.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__23618 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23618) : cljs.core.pr_str.call(null, G__23618);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__23624 = null;
        var G__23624__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23624__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23624__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__23624 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23624__0.call(this);
            case 1:
              return G__23624__1.call(this, result);
            case 2:
              return G__23624__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23624.cljs$core$IFn$_invoke$arity$0 = G__23624__0;
        G__23624.cljs$core$IFn$_invoke$arity$1 = G__23624__1;
        G__23624.cljs$core$IFn$_invoke$arity$2 = G__23624__2;
        return G__23624;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__23619 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23619) : cljs.core.pr_str.call(null, G__23619);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__23625 = n__$1 - 1;
        var G__23626 = cljs.core.rest(s);
        n__$1 = G__23625;
        coll__$1 = G__23626;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var args23627 = [];
  var len__5593__auto___23630 = arguments.length;
  var i__5594__auto___23631 = 0;
  while (true) {
    if (i__5594__auto___23631 < len__5593__auto___23630) {
      args23627.push(arguments[i__5594__auto___23631]);
      var G__23632 = i__5594__auto___23631 + 1;
      i__5594__auto___23631 = G__23632;
      continue;
    } else {
    }
    break;
  }
  var G__23629 = args23627.length;
  switch(G__23629) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23627.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__23634 = cljs.core.next(s);
      var G__23635 = cljs.core.next(lead);
      s = G__23634;
      lead = G__23635;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var args23636 = [];
  var len__5593__auto___23641 = arguments.length;
  var i__5594__auto___23642 = 0;
  while (true) {
    if (i__5594__auto___23642 < len__5593__auto___23641) {
      args23636.push(arguments[i__5594__auto___23642]);
      var G__23643 = i__5594__auto___23642 + 1;
      i__5594__auto___23642 = G__23643;
      continue;
    } else {
    }
    break;
  }
  var G__23638 = args23636.length;
  switch(G__23638) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23636.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__23645 = null;
        var G__23645__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23645__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23645__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4542__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4542__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4542__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__23645 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23645__0.call(this);
            case 1:
              return G__23645__1.call(this, result);
            case 2:
              return G__23645__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23645.cljs$core$IFn$_invoke$arity$0 = G__23645__0;
        G__23645.cljs$core$IFn$_invoke$arity$1 = G__23645__1;
        G__23645.cljs$core$IFn$_invoke$arity$2 = G__23645__2;
        return G__23645;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = s;
        if (and__4542__auto__) {
          var G__23640 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__23640) : pred__$1.call(null, G__23640);
        } else {
          return and__4542__auto__;
        }
      }())) {
        var G__23646 = pred__$1;
        var G__23647 = cljs.core.rest(s);
        pred__$1 = G__23646;
        coll__$1 = G__23647;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var args23648 = [];
  var len__5593__auto___23651 = arguments.length;
  var i__5594__auto___23652 = 0;
  while (true) {
    if (i__5594__auto___23652 < len__5593__auto___23651) {
      args23648.push(arguments[i__5594__auto___23652]);
      var G__23653 = i__5594__auto___23652 + 1;
      i__5594__auto___23652 = G__23653;
      continue;
    } else {
    }
    break;
  }
  var G__23650 = args23648.length;
  switch(G__23650) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23648.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var args23655 = [];
  var len__5593__auto___23658 = arguments.length;
  var i__5594__auto___23659 = 0;
  while (true) {
    if (i__5594__auto___23659 < len__5593__auto___23658) {
      args23655.push(arguments[i__5594__auto___23659]);
      var G__23660 = i__5594__auto___23659 + 1;
      i__5594__auto___23659 = G__23660;
      continue;
    } else {
    }
    break;
  }
  var G__23657 = args23655.length;
  switch(G__23657) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23655.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var args23664 = [];
  var len__5593__auto___23670 = arguments.length;
  var i__5594__auto___23671 = 0;
  while (true) {
    if (i__5594__auto___23671 < len__5593__auto___23670) {
      args23664.push(arguments[i__5594__auto___23671]);
      var G__23672 = i__5594__auto___23671 + 1;
      i__5594__auto___23671 = G__23672;
      continue;
    } else {
    }
    break;
  }
  var G__23669 = args23664.length;
  switch(G__23669) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23664.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq23665) {
  var G__23666 = cljs.core.first(seq23665);
  var seq23665__$1 = cljs.core.next(seq23665);
  var G__23667 = cljs.core.first(seq23665__$1);
  var seq23665__$2 = cljs.core.next(seq23665__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__23666, G__23667, seq23665__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var args23674 = [];
  var len__5593__auto___23677 = arguments.length;
  var i__5594__auto___23678 = 0;
  while (true) {
    if (i__5594__auto___23678 < len__5593__auto___23677) {
      args23674.push(arguments[i__5594__auto___23678]);
      var G__23679 = i__5594__auto___23678 + 1;
      i__5594__auto___23678 = G__23679;
      continue;
    } else {
    }
    break;
  }
  var G__23676 = args23674.length;
  switch(G__23676) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23674.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__23681 = null;
        var G__23681__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23681__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23681__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__23681 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23681__0.call(this);
            case 1:
              return G__23681__1.call(this, result);
            case 2:
              return G__23681__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23681.cljs$core$IFn$_invoke$arity$0 = G__23681__0;
        G__23681.cljs$core$IFn$_invoke$arity$1 = G__23681__1;
        G__23681.cljs$core$IFn$_invoke$arity$2 = G__23681__2;
        return G__23681;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var args23690 = [];
  var len__5593__auto___23695 = arguments.length;
  var i__5594__auto___23696 = 0;
  while (true) {
    if (i__5594__auto___23696 < len__5593__auto___23695) {
      args23690.push(arguments[i__5594__auto___23696]);
      var G__23697 = i__5594__auto___23696 + 1;
      i__5594__auto___23696 = G__23697;
      continue;
    } else {
    }
    break;
  }
  var G__23694 = args23690.length;
  switch(G__23694) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23690.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5612__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq23691) {
  var G__23692 = cljs.core.first(seq23691);
  var seq23691__$1 = cljs.core.next(seq23691);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__23692, seq23691__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var args23699 = [];
  var len__5593__auto___23703 = arguments.length;
  var i__5594__auto___23704 = 0;
  while (true) {
    if (i__5594__auto___23704 < len__5593__auto___23703) {
      args23699.push(arguments[i__5594__auto___23704]);
      var G__23705 = i__5594__auto___23704 + 1;
      i__5594__auto___23704 = G__23705;
      continue;
    } else {
    }
    break;
  }
  var G__23701 = args23699.length;
  switch(G__23701) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23699.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__23707 = null;
      var G__23707__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__23707__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__23707__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__23707 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__23707__0.call(this);
          case 1:
            return G__23707__1.call(this, result);
          case 2:
            return G__23707__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23707.cljs$core$IFn$_invoke$arity$0 = G__23707__0;
      G__23707.cljs$core$IFn$_invoke$arity$1 = G__23707__1;
      G__23707.cljs$core$IFn$_invoke$arity$2 = G__23707__2;
      return G__23707;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5438__auto___23708 = size;
        var i_23709 = 0;
        while (true) {
          if (i_23709 < n__5438__auto___23708) {
            if (cljs.core.truth_(function() {
              var G__23702 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23709);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23702) : pred.call(null, G__23702);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23709));
            } else {
            }
            var G__23710 = i_23709 + 1;
            i_23709 = G__23710;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var args23711 = [];
  var len__5593__auto___23714 = arguments.length;
  var i__5594__auto___23715 = 0;
  while (true) {
    if (i__5594__auto___23715 < len__5593__auto___23714) {
      args23711.push(arguments[i__5594__auto___23715]);
      var G__23716 = i__5594__auto___23715 + 1;
      i__5594__auto___23715 = G__23716;
      continue;
    } else {
    }
    break;
  }
  var G__23713 = args23711.length;
  switch(G__23713) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23711.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__23718_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__23718_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var args23719 = [];
  var len__5593__auto___23724 = arguments.length;
  var i__5594__auto___23725 = 0;
  while (true) {
    if (i__5594__auto___23725 < len__5593__auto___23724) {
      args23719.push(arguments[i__5594__auto___23725]);
      var G__23726 = i__5594__auto___23725 + 1;
      i__5594__auto___23725 = G__23726;
      continue;
    } else {
    }
    break;
  }
  var G__23721 = args23719.length;
  switch(G__23721) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23719.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var args23728 = [];
  var len__5593__auto___23736 = arguments.length;
  var i__5594__auto___23737 = 0;
  while (true) {
    if (i__5594__auto___23737 < len__5593__auto___23736) {
      args23728.push(arguments[i__5594__auto___23737]);
      var G__23738 = i__5594__auto___23737 + 1;
      i__5594__auto___23737 = G__23738;
      continue;
    } else {
    }
    break;
  }
  var G__23735 = args23728.length;
  switch(G__23735) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23728.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5612__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq23729) {
  var G__23730 = cljs.core.first(seq23729);
  var seq23729__$1 = cljs.core.next(seq23729);
  var G__23731 = cljs.core.first(seq23729__$1);
  var seq23729__$2 = cljs.core.next(seq23729__$1);
  var G__23732 = cljs.core.first(seq23729__$2);
  var seq23729__$3 = cljs.core.next(seq23729__$2);
  var G__23733 = cljs.core.first(seq23729__$3);
  var seq23729__$4 = cljs.core.next(seq23729__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__23730, G__23731, G__23732, G__23733, seq23729__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var args23740 = [];
  var len__5593__auto___23743 = arguments.length;
  var i__5594__auto___23744 = 0;
  while (true) {
    if (i__5594__auto___23744 < len__5593__auto___23743) {
      args23740.push(arguments[i__5594__auto___23744]);
      var G__23745 = i__5594__auto___23744 + 1;
      i__5594__auto___23744 = G__23745;
      continue;
    } else {
    }
    break;
  }
  var G__23742 = args23740.length;
  switch(G__23742) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23740.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var args23747 = [];
  var len__5593__auto___23751 = arguments.length;
  var i__5594__auto___23752 = 0;
  while (true) {
    if (i__5594__auto___23752 < len__5593__auto___23751) {
      args23747.push(arguments[i__5594__auto___23752]);
      var G__23753 = i__5594__auto___23752 + 1;
      i__5594__auto___23752 = G__23753;
      continue;
    } else {
    }
    break;
  }
  var G__23749 = args23747.length;
  switch(G__23749) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23747.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__23755 = sentinel;
          var G__23756 = m__$2;
          var G__23757 = cljs.core.next(ks__$1);
          sentinel = G__23755;
          m__$1 = G__23756;
          ks__$1 = G__23757;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__23758, v) {
  var vec__23763 = p__23758;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23763, 0, null);
  var ks = cljs.core.nthnext(vec__23763, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var args23764 = [];
  var len__5593__auto___23794 = arguments.length;
  var i__5594__auto___23795 = 0;
  while (true) {
    if (i__5594__auto___23795 < len__5593__auto___23794) {
      args23764.push(arguments[i__5594__auto___23795]);
      var G__23796 = i__5594__auto___23795 + 1;
      i__5594__auto___23795 = G__23796;
      continue;
    } else {
    }
    break;
  }
  var G__23773 = args23764.length;
  switch(G__23773) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23764.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5612__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__23774, f) {
  var vec__23775 = p__23774;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23775, 0, null);
  var ks = cljs.core.nthnext(vec__23775, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__23776 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23776) : f.call(null, G__23776);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__23777, f, a) {
  var vec__23778 = p__23777;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23778, 0, null);
  var ks = cljs.core.nthnext(vec__23778, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__23779 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__23780 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23779, G__23780) : f.call(null, G__23779, G__23780);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__23781, f, a, b) {
  var vec__23782 = p__23781;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23782, 0, null);
  var ks = cljs.core.nthnext(vec__23782, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__23783 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__23784 = a;
      var G__23785 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23783, G__23784, G__23785) : f.call(null, G__23783, G__23784, G__23785);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__23786, f, a, b, c) {
  var vec__23787 = p__23786;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23787, 0, null);
  var ks = cljs.core.nthnext(vec__23787, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__23788 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__23789 = a;
      var G__23790 = b;
      var G__23791 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23788, G__23789, G__23790, G__23791) : f.call(null, G__23788, G__23789, G__23790, G__23791);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__23792, f, a, b, c, args) {
  var vec__23793 = p__23792;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23793, 0, null);
  var ks = cljs.core.nthnext(vec__23793, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq23765) {
  var G__23766 = cljs.core.first(seq23765);
  var seq23765__$1 = cljs.core.next(seq23765);
  var G__23767 = cljs.core.first(seq23765__$1);
  var seq23765__$2 = cljs.core.next(seq23765__$1);
  var G__23768 = cljs.core.first(seq23765__$2);
  var seq23765__$3 = cljs.core.next(seq23765__$2);
  var G__23769 = cljs.core.first(seq23765__$3);
  var seq23765__$4 = cljs.core.next(seq23765__$3);
  var G__23770 = cljs.core.first(seq23765__$4);
  var seq23765__$5 = cljs.core.next(seq23765__$4);
  var G__23771 = cljs.core.first(seq23765__$5);
  var seq23765__$6 = cljs.core.next(seq23765__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__23766, G__23767, G__23768, G__23769, G__23770, G__23771, seq23765__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var args23798 = [];
  var len__5593__auto___23818 = arguments.length;
  var i__5594__auto___23819 = 0;
  while (true) {
    if (i__5594__auto___23819 < len__5593__auto___23818) {
      args23798.push(arguments[i__5594__auto___23819]);
      var G__23820 = i__5594__auto___23819 + 1;
      i__5594__auto___23819 = G__23820;
      continue;
    } else {
    }
    break;
  }
  var G__23807 = args23798.length;
  switch(G__23807) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args23798.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5612__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__23808 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23808) : f.call(null, G__23808);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__23809 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__23810 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23809, G__23810) : f.call(null, G__23809, G__23810);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__23811 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__23812 = x;
    var G__23813 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23811, G__23812, G__23813) : f.call(null, G__23811, G__23812, G__23813);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__23814 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__23815 = x;
    var G__23816 = y;
    var G__23817 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23814, G__23815, G__23816, G__23817) : f.call(null, G__23814, G__23815, G__23816, G__23817);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq23799) {
  var G__23800 = cljs.core.first(seq23799);
  var seq23799__$1 = cljs.core.next(seq23799);
  var G__23801 = cljs.core.first(seq23799__$1);
  var seq23799__$2 = cljs.core.next(seq23799__$1);
  var G__23802 = cljs.core.first(seq23799__$2);
  var seq23799__$3 = cljs.core.next(seq23799__$2);
  var G__23803 = cljs.core.first(seq23799__$3);
  var seq23799__$4 = cljs.core.next(seq23799__$3);
  var G__23804 = cljs.core.first(seq23799__$4);
  var seq23799__$5 = cljs.core.next(seq23799__$4);
  var G__23805 = cljs.core.first(seq23799__$5);
  var seq23799__$6 = cljs.core.next(seq23799__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__23800, G__23801, G__23802, G__23803, G__23804, G__23805, seq23799__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__23822 = ll - 5;
      var G__23823 = r;
      ll = G__23822;
      ret = G__23823;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__23828 = cljs.core.pv_aget(node, 0);
      var G__23829 = level - 5;
      node = G__23828;
      level = G__23829;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__23830 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__23831 = level - 5;
        node = G__23830;
        level = G__23831;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__23841 = init__$2;
              var G__23842 = j + i;
              var G__23843 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23841, G__23842, G__23843) : f.call(null, G__23841, G__23842, G__23843);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__23850 = j + 1;
              var G__23851 = init__$3;
              j = G__23850;
              init__$2 = G__23851;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__23852 = i + len;
        var G__23853 = init__$2;
        i = G__23852;
        init__$1 = G__23853;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__23844 = init__$2;
              var G__23845 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23844, G__23845) : f.call(null, G__23844, G__23845);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__23854 = j + 1;
              var G__23855 = init__$3;
              j = G__23854;
              init__$2 = G__23855;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__23856 = i + len;
        var G__23857 = init__$2;
        i = G__23856;
        init__$1 = G__23857;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__23846 = coll__$1;
      var G__23847 = cljs.core.first_array_for_longvec(coll__$1);
      var G__23848 = 0;
      var G__23849 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23846, G__23847, G__23848, G__23849) : cljs.core.chunked_seq.call(null, G__23846, G__23847, G__23848, G__23849);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5438__auto___23858 = len;
    var i_23859 = 0;
    while (true) {
      if (i_23859 < n__5438__auto___23858) {
        new_tail[i_23859] = self__.tail[i_23859];
        var G__23860 = i_23859 + 1;
        i_23859 = G__23860;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__23861 = null;
  var G__23861__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__23861__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__23861 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23861__2.call(this, self__, k);
      case 3:
        return G__23861__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23861.cljs$core$IFn$_invoke$arity$2 = G__23861__2;
  G__23861.cljs$core$IFn$_invoke$arity$3 = G__23861__3;
  return G__23861;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args23840) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23840)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__23862 = i + 1;
        var G__23863 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__23862;
        out = G__23863;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var args__5600__auto__ = [];
  var len__5593__auto___23865 = arguments.length;
  var i__5594__auto___23866 = 0;
  while (true) {
    if (i__5594__auto___23866 < len__5593__auto___23865) {
      args__5600__auto__.push(arguments[i__5594__auto___23866]);
      var G__23867 = i__5594__auto___23866 + 1;
      i__5594__auto___23866 = G__23867;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq23864) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23864));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__23868 = self__.vec;
      var G__23869 = self__.node;
      var G__23870 = self__.i;
      var G__23871 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23868, G__23869, G__23870, G__23871) : cljs.core.chunked_seq.call(null, G__23868, G__23869, G__23870, G__23871);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__23872 = self__.vec;
    var G__23873 = self__.i + self__.off;
    var G__23874 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23872, G__23873, G__23874) : cljs.core.subvec.call(null, G__23872, G__23873, G__23874);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__23875 = self__.vec;
    var G__23876 = self__.i + self__.off;
    var G__23877 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23875, G__23876, G__23877) : cljs.core.subvec.call(null, G__23875, G__23876, G__23877);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__23878 = self__.vec;
      var G__23879 = self__.node;
      var G__23880 = self__.i;
      var G__23881 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23878, G__23879, G__23880, G__23881) : cljs.core.chunked_seq.call(null, G__23878, G__23879, G__23880, G__23881);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__23882 = self__.vec;
    var G__23883 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__23884 = end;
    var G__23885 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23882, G__23883, G__23884, G__23885) : cljs.core.chunked_seq.call(null, G__23882, G__23883, G__23884, G__23885);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__23886 = self__.vec;
    var G__23887 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__23888 = end;
    var G__23889 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23886, G__23887, G__23888, G__23889) : cljs.core.chunked_seq.call(null, G__23886, G__23887, G__23888, G__23889);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var args23890 = [];
  var len__5593__auto___23893 = arguments.length;
  var i__5594__auto___23894 = 0;
  while (true) {
    if (i__5594__auto___23894 < len__5593__auto___23893) {
      args23890.push(arguments[i__5594__auto___23894]);
      var G__23895 = i__5594__auto___23894 + 1;
      i__5594__auto___23894 = G__23895;
      continue;
    } else {
    }
    break;
  }
  var G__23892 = args23890.length;
  switch(G__23892) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23890.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__23898 = init__$1;
        var G__23899 = j;
        var G__23900 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23898, G__23899, G__23900) : f.call(null, G__23898, G__23899, G__23900);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__23917 = i + 1;
        var G__23918 = j + 1;
        var G__23919 = init__$2;
        i = G__23917;
        j = G__23918;
        init__$1 = G__23919;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__23901 = self__.meta;
  var G__23902 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__23903 = self__.start;
  var G__23904 = function() {
    var x__4866__auto__ = self__.end;
    var y__4867__auto__ = v_pos + 1;
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }();
  var G__23905 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23901, G__23902, G__23903, G__23904, G__23905) : cljs.core.build_subvec.call(null, G__23901, G__23902, G__23903, G__23904, G__23905);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__23906 = self__.meta;
    var G__23907 = self__.v;
    var G__23908 = self__.start;
    var G__23909 = self__.end - 1;
    var G__23910 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23906, G__23907, G__23908, G__23909, G__23910) : cljs.core.build_subvec.call(null, G__23906, G__23907, G__23908, G__23909, G__23910);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__23912 = self__.meta;
  var G__23913 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__23914 = self__.start;
  var G__23915 = self__.end + 1;
  var G__23916 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23912, G__23913, G__23914, G__23915, G__23916) : cljs.core.build_subvec.call(null, G__23912, G__23913, G__23914, G__23915, G__23916);
};
cljs.core.Subvec.prototype.call = function() {
  var G__23920 = null;
  var G__23920__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__23920__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__23920 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23920__2.call(this, self__, k);
      case 3:
        return G__23920__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23920.cljs$core$IFn$_invoke$arity$2 = G__23920__2;
  G__23920.cljs$core$IFn$_invoke$arity$3 = G__23920__3;
  return G__23920;
}();
cljs.core.Subvec.prototype.apply = function(self__, args23897) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23897)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__23921 = meta;
      var G__23922 = v.v;
      var G__23923 = v.start + start;
      var G__23924 = v.start + end;
      var G__23925 = __hash;
      meta = G__23921;
      v = G__23922;
      start = G__23923;
      end = G__23924;
      __hash = G__23925;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var args23926 = [];
  var len__5593__auto___23929 = arguments.length;
  var i__5594__auto___23930 = 0;
  while (true) {
    if (i__5594__auto___23930 < len__5593__auto___23929) {
      args23926.push(arguments[i__5594__auto___23930]);
      var G__23931 = i__5594__auto___23930 + 1;
      i__5594__auto___23930 = G__23931;
      continue;
    } else {
    }
    break;
  }
  var G__23928 = args23926.length;
  switch(G__23928) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23926.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__23944 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__23945 = level - 5;
        node = G__23944;
        level = G__23945;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__23949 = null;
  var G__23949__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23949__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23949 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23949__2.call(this, self__, k);
      case 3:
        return G__23949__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23949.cljs$core$IFn$_invoke$arity$2 = G__23949__2;
  G__23949.cljs$core$IFn$_invoke$arity$3 = G__23949__3;
  return G__23949;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args23946) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23946)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4554__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    var and__4542__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__4542__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4542__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4554__auto__ = self__.front;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4554__auto__ = self__.rear;
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__23950 = i + incr;
        i = G__23950;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__23951 = i + 1;
      var G__23952 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__23951;
      out = G__23952;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_23957 = 0;
  while (true) {
    if (i_23957 < l) {
      var k_23958 = ks[i_23957];
      new_obj[k_23958] = obj[k_23958];
      var G__23959 = i_23957 + 1;
      i_23957 = G__23959;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__23962 = init__$1;
        var G__23963 = k;
        var G__23964 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23962, G__23963, G__23964) : f.call(null, G__23962, G__23963, G__23964);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__23965 = cljs.core.rest(keys__$1);
        var G__23966 = init__$2;
        keys__$1 = G__23965;
        init__$1 = G__23966;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__23960_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__23960_SHARP_, self__.strobj[p1__23960_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__23967 = null;
  var G__23967__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23967__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23967 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23967__2.call(this, self__, k);
      case 3:
        return G__23967__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23967.cljs$core$IFn$_invoke$arity$2 = G__23967__2;
  G__23967.cljs$core$IFn$_invoke$arity$3 = G__23967__3;
  return G__23967;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args23961) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23961)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4554__auto__ = self__.i < self__.base_count;
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__23970 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23970, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23970, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__23971 = i + 2;
        i = G__23971;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__23972 = i + 2;
        i = G__23972;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__23973 = i + 2;
        i = G__23973;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__23974 = i + 2;
        i = G__23974;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__23975 = i + 2;
        i = G__23975;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_23976 = 0;
  while (true) {
    if (i_23976 < l) {
      narr[i_23976] = arr[i_23976];
      var G__23977 = i_23976 + 1;
      i_23976 = G__23977;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__23979 = cljs.core.seq(coll);
  var chunk__23980 = null;
  var count__23981 = 0;
  var i__23982 = 0;
  while (true) {
    if (i__23982 < count__23981) {
      var vec__23983 = chunk__23980.cljs$core$IIndexed$_nth$arity$2(null, i__23982);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23983, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23983, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__23992 = seq__23979;
      var G__23993 = chunk__23980;
      var G__23994 = count__23981;
      var G__23995 = i__23982 + 1;
      seq__23979 = G__23992;
      chunk__23980 = G__23993;
      count__23981 = G__23994;
      i__23982 = G__23995;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__23979);
      if (temp__4425__auto__) {
        var seq__23979__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23979__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__23979__$1);
          var G__23996 = cljs.core.chunk_rest(seq__23979__$1);
          var G__23997 = c__5338__auto__;
          var G__23998 = cljs.core.count(c__5338__auto__);
          var G__23999 = 0;
          seq__23979 = G__23996;
          chunk__23980 = G__23997;
          count__23981 = G__23998;
          i__23982 = G__23999;
          continue;
        } else {
          var vec__23984 = cljs.core.first(seq__23979__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23984, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23984, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__24000 = cljs.core.next(seq__23979__$1);
          var G__24001 = null;
          var G__24002 = 0;
          var G__24003 = 0;
          seq__23979 = G__24000;
          chunk__23980 = G__24001;
          count__23981 = G__24002;
          i__23982 = G__24003;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__23985 = init__$1;
        var G__23986 = self__.arr[i];
        var G__23987 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23985, G__23986, G__23987) : f.call(null, G__23985, G__23986, G__23987);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__24004 = i + 2;
        var G__24005 = init__$2;
        i = G__24004;
        init__$1 = G__24005;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__24006 = i + 2;
              i = G__24006;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__24007 = s + 2;
            var G__24008 = d;
            s = G__24007;
            d = G__24008;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__24009 = s + 2;
            var G__24010 = d + 2;
            s = G__24009;
            d = G__24010;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__23991 = cljs.core.aclone(self__.arr);
        G__23991[idx + 1] = v;
        return G__23991;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__24011 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__24012 = cljs.core.next(es);
          ret = G__24011;
          es = G__24012;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__24013 = null;
  var G__24013__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24013__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24013 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24013__2.call(this, self__, k);
      case 3:
        return G__24013__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24013.cljs$core$IFn$_invoke$arity$2 = G__24013__2;
  G__24013.cljs$core$IFn$_invoke$arity$3 = G__24013__3;
  return G__24013;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args23978) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23978)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_24014 = 0;
    while (true) {
      if (i_24014 < arr__$1.length) {
        var k_24015 = arr__$1[i_24014];
        var v_24016 = arr__$1[i_24014 + 1];
        var idx_24017 = cljs.core.array_index_of(ret, k_24015);
        if (idx_24017 === -1) {
          ret.push(k_24015);
          ret.push(v_24016);
        } else {
        }
        var G__24018 = i_24014 + 2;
        i_24014 = G__24018;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__24021 = cljs.core.next(es);
          var G__24022 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__24021;
          tcoll__$2 = G__24022;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__24020_24023 = self__.arr;
      G__24020_24023.pop();
      G__24020_24023.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__24024 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__24025 = i + 2;
      out = G__24024;
      i = G__24025;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var args24026 = [];
  var len__5593__auto___24031 = arguments.length;
  var i__5594__auto___24032 = 0;
  while (true) {
    if (i__5594__auto___24032 < len__5593__auto___24031) {
      args24026.push(arguments[i__5594__auto___24032]);
      var G__24033 = i__5594__auto___24032 + 1;
      i__5594__auto___24032 = G__24033;
      continue;
    } else {
    }
    break;
  }
  var G__24028 = args24026.length;
  switch(G__24028) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24026.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__24029 = cljs.core.aclone(arr);
  G__24029[i] = a;
  return G__24029;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__24030 = cljs.core.aclone(arr);
  G__24030[i] = a;
  G__24030[j] = b;
  return G__24030;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var args24035 = [];
  var len__5593__auto___24038 = arguments.length;
  var i__5594__auto___24039 = 0;
  while (true) {
    if (i__5594__auto___24039 < len__5593__auto___24038) {
      args24035.push(arguments[i__5594__auto___24039]);
      var G__24040 = i__5594__auto___24039 + 1;
      i__5594__auto___24039 = G__24040;
      continue;
    } else {
    }
    break;
  }
  var G__24037 = args24035.length;
  switch(G__24037) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24035.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__24045 = init__$1;
          var G__24046 = k;
          var G__24047 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24045, G__24046, G__24047) : f.call(null, G__24045, G__24046, G__24047);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__24048 = i + 2;
        var G__24049 = init__$2;
        i = G__24048;
        init__$1 = G__24049;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4554__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    var or__4554__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__4554__auto____$1) {
      return or__4554__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_24063 = 0;
        var j_24064 = 0;
        while (true) {
          if (i_24063 < 32) {
            if ((self__.bitmap >>> i_24063 & 1) === 0) {
              var G__24065 = i_24063 + 1;
              var G__24066 = j_24064;
              i_24063 = G__24065;
              j_24064 = G__24066;
              continue;
            } else {
              nodes[i_24063] = !(self__.arr[j_24064] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_24064]), self__.arr[j_24064], self__.arr[j_24064 + 1], added_leaf_QMARK_) : self__.arr[j_24064 + 1];
              var G__24067 = i_24063 + 1;
              var G__24068 = j_24064 + 2;
              i_24063 = G__24067;
              j_24064 = G__24068;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__24050 = edit__$1;
          var G__24051 = shift + 5;
          var G__24052 = key_or_nil;
          var G__24053 = val_or_node;
          var G__24054 = hash;
          var G__24055 = key;
          var G__24056 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__24050, G__24051, G__24052, G__24053, G__24054, G__24055, G__24056) : cljs.core.create_node.call(null, G__24050, G__24051, G__24052, G__24053, G__24054, G__24055, G__24056);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_24069 = 0;
      var j_24070 = 0;
      while (true) {
        if (i_24069 < 32) {
          if ((self__.bitmap >>> i_24069 & 1) === 0) {
            var G__24071 = i_24069 + 1;
            var G__24072 = j_24070;
            i_24069 = G__24071;
            j_24070 = G__24072;
            continue;
          } else {
            nodes[i_24069] = !(self__.arr[j_24070] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_24070]), self__.arr[j_24070], self__.arr[j_24070 + 1], added_leaf_QMARK_) : self__.arr[j_24070 + 1];
            var G__24073 = i_24069 + 1;
            var G__24074 = j_24070 + 2;
            i_24069 = G__24073;
            j_24070 = G__24074;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__24057 = shift + 5;
          var G__24058 = key_or_nil;
          var G__24059 = val_or_node;
          var G__24060 = hash;
          var G__24061 = key;
          var G__24062 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__24057, G__24058, G__24059, G__24060, G__24061, G__24062) : cljs.core.create_node.call(null, G__24057, G__24058, G__24059, G__24060, G__24061, G__24062);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__24075 = i + 1;
        var G__24076 = j + 2;
        var G__24077 = bitmap | 1 << i;
        i = G__24075;
        j = G__24076;
        bitmap = G__24077;
        continue;
      } else {
        var G__24078 = i + 1;
        var G__24079 = j;
        var G__24080 = bitmap;
        i = G__24078;
        j = G__24079;
        bitmap = G__24080;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__24081 = i + 1;
          var G__24082 = init__$2;
          i = G__24081;
          init__$1 = G__24082;
          continue;
        }
      } else {
        var G__24083 = i + 1;
        var G__24084 = init__$1;
        i = G__24083;
        init__$1 = G__24084;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__24085 = i + 2;
        i = G__24085;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var args24086 = [];
  var len__5593__auto___24089 = arguments.length;
  var i__5594__auto___24090 = 0;
  while (true) {
    if (i__5594__auto___24090 < len__5593__auto___24089) {
      args24086.push(arguments[i__5594__auto___24090]);
      var G__24091 = i__5594__auto___24090 + 1;
      i__5594__auto___24090 = G__24091;
      continue;
    } else {
    }
    break;
  }
  var G__24088 = args24086.length;
  switch(G__24088) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24086.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__24093 = self__.nodes;
    var G__24094 = self__.i + 2;
    var G__24095 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24093, G__24094, G__24095) : cljs.core.create_inode_seq.call(null, G__24093, G__24094, G__24095);
  } else {
    var G__24096 = self__.nodes;
    var G__24097 = self__.i;
    var G__24098 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24096, G__24097, G__24098) : cljs.core.create_inode_seq.call(null, G__24096, G__24097, G__24098);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var args24099 = [];
  var len__5593__auto___24102 = arguments.length;
  var i__5594__auto___24103 = 0;
  while (true) {
    if (i__5594__auto___24103 < len__5593__auto___24102) {
      args24099.push(arguments[i__5594__auto___24103]);
      var G__24104 = i__5594__auto___24103 + 1;
      i__5594__auto___24103 = G__24104;
      continue;
    } else {
    }
    break;
  }
  var G__24101 = args24099.length;
  switch(G__24101) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24099.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__24106 = j + 2;
              j = G__24106;
              continue;
            }
          } else {
            var G__24107 = j + 2;
            j = G__24107;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__24108 = null;
  var G__24109 = self__.nodes;
  var G__24110 = self__.i;
  var G__24111 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__24108, G__24109, G__24110, G__24111) : cljs.core.create_array_node_seq.call(null, G__24108, G__24109, G__24110, G__24111);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var args24112 = [];
  var len__5593__auto___24115 = arguments.length;
  var i__5594__auto___24116 = 0;
  while (true) {
    if (i__5594__auto___24116 < len__5593__auto___24115) {
      args24112.push(arguments[i__5594__auto___24116]);
      var G__24117 = i__5594__auto___24116 + 1;
      i__5594__auto___24116 = G__24117;
      continue;
    } else {
    }
    break;
  }
  var G__24114 = args24112.length;
  switch(G__24114) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24112.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__24119 = j + 1;
            j = G__24119;
            continue;
          }
        } else {
          var G__24120 = j + 1;
          j = G__24120;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__24122 = cljs.core.seq(coll);
  var chunk__24123 = null;
  var count__24124 = 0;
  var i__24125 = 0;
  while (true) {
    if (i__24125 < count__24124) {
      var vec__24126 = chunk__24123.cljs$core$IIndexed$_nth$arity$2(null, i__24125);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24126, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24126, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__24130 = seq__24122;
      var G__24131 = chunk__24123;
      var G__24132 = count__24124;
      var G__24133 = i__24125 + 1;
      seq__24122 = G__24130;
      chunk__24123 = G__24131;
      count__24124 = G__24132;
      i__24125 = G__24133;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__24122);
      if (temp__4425__auto__) {
        var seq__24122__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__24122__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__24122__$1);
          var G__24134 = cljs.core.chunk_rest(seq__24122__$1);
          var G__24135 = c__5338__auto__;
          var G__24136 = cljs.core.count(c__5338__auto__);
          var G__24137 = 0;
          seq__24122 = G__24134;
          chunk__24123 = G__24135;
          count__24124 = G__24136;
          i__24125 = G__24137;
          continue;
        } else {
          var vec__24127 = cljs.core.first(seq__24122__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24127, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24127, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__24138 = cljs.core.next(seq__24122__$1);
          var G__24139 = null;
          var G__24140 = 0;
          var G__24141 = 0;
          seq__24122 = G__24138;
          chunk__24123 = G__24139;
          count__24124 = G__24140;
          i__24125 = G__24141;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__24142 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__24143 = cljs.core.next(es);
          ret = G__24142;
          es = G__24143;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__24144 = null;
  var G__24144__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24144__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24144 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24144__2.call(this, self__, k);
      case 3:
        return G__24144__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24144.cljs$core$IFn$_invoke$arity$2 = G__24144__2;
  G__24144.cljs$core$IFn$_invoke$arity$3 = G__24144__3;
  return G__24144;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args24121) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24121)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__24145 = i + 2;
      var G__24146 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__24145;
      ret = G__24146;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__24147 = i + 1;
      var G__24148 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__24147;
      out = G__24148;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__24150 = cljs.core.next(es);
          var G__24151 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__24150;
          tcoll__$1 = G__24151;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__24152 = ascending_QMARK_ ? t.left : t.right;
      var G__24153 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__24152;
      stack__$1 = G__24153;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__24163 = init__$1;
      var G__24164 = node.key;
      var G__24165 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24163, G__24164, G__24165) : f.call(null, G__24163, G__24164, G__24165);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__24167 = null;
  var G__24167__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24167__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24167 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24167__2.call(this, self__, k);
      case 3:
        return G__24167__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24167.cljs$core$IFn$_invoke$arity$2 = G__24167__2;
  G__24167.cljs$core$IFn$_invoke$arity$3 = G__24167__3;
  return G__24167;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args24166) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24166)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__24169 = null;
  var G__24169__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24169__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24169 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24169__2.call(this, self__, k);
      case 3:
        return G__24169__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24169.cljs$core$IFn$_invoke$arity$2 = G__24169__2;
  G__24169.cljs$core$IFn$_invoke$arity$3 = G__24169__3;
  return G__24169;
}();
cljs.core.RedNode.prototype.apply = function(self__, args24168) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24168)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__24182 = k;
      var G__24183 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24182, G__24183) : comp.call(null, G__24182, G__24183);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__24202 = k;
      var G__24203 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24202, G__24203) : comp.call(null, G__24202, G__24203);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__24213 = cljs.core.seq(coll);
  var chunk__24214 = null;
  var count__24215 = 0;
  var i__24216 = 0;
  while (true) {
    if (i__24216 < count__24215) {
      var vec__24217 = chunk__24214.cljs$core$IIndexed$_nth$arity$2(null, i__24216);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24217, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24217, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__24223 = seq__24213;
      var G__24224 = chunk__24214;
      var G__24225 = count__24215;
      var G__24226 = i__24216 + 1;
      seq__24213 = G__24223;
      chunk__24214 = G__24224;
      count__24215 = G__24225;
      i__24216 = G__24226;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__24213);
      if (temp__4425__auto__) {
        var seq__24213__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__24213__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__24213__$1);
          var G__24227 = cljs.core.chunk_rest(seq__24213__$1);
          var G__24228 = c__5338__auto__;
          var G__24229 = cljs.core.count(c__5338__auto__);
          var G__24230 = 0;
          seq__24213 = G__24227;
          chunk__24214 = G__24228;
          count__24215 = G__24229;
          i__24216 = G__24230;
          continue;
        } else {
          var vec__24218 = cljs.core.first(seq__24213__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24218, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24218, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__24231 = cljs.core.next(seq__24213__$1);
          var G__24232 = null;
          var G__24233 = 0;
          var G__24234 = 0;
          seq__24213 = G__24231;
          chunk__24214 = G__24232;
          count__24215 = G__24233;
          i__24216 = G__24234;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__24219 = k;
        var G__24220 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__24219, G__24220) : self__.comp.call(null, G__24219, G__24220);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__24235 = t.left;
          t = G__24235;
          continue;
        } else {
          var G__24236 = t.right;
          t = G__24236;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__24237 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__24238 = cljs.core.next(es);
          ret = G__24237;
          es = G__24238;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__24239 = null;
  var G__24239__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24239__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24239 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24239__2.call(this, self__, k);
      case 3:
        return G__24239__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24239.cljs$core$IFn$_invoke$arity$2 = G__24239__2;
  G__24239.cljs$core$IFn$_invoke$arity$3 = G__24239__3;
  return G__24239;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args24212) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24212)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__24221 = k;
          var G__24222 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__24221, G__24222) : self__.comp.call(null, G__24221, G__24222);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__24240 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__24241 = t.left;
              stack = G__24240;
              t = G__24241;
              continue;
            } else {
              var G__24242 = stack;
              var G__24243 = t.right;
              stack = G__24242;
              t = G__24243;
              continue;
            }
          } else {
            if (c > 0) {
              var G__24244 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__24245 = t.right;
              stack = G__24244;
              t = G__24245;
              continue;
            } else {
              var G__24246 = stack;
              var G__24247 = t.left;
              stack = G__24246;
              t = G__24247;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var args__5600__auto__ = [];
  var len__5593__auto___24249 = arguments.length;
  var i__5594__auto___24250 = 0;
  while (true) {
    if (i__5594__auto___24250 < len__5593__auto___24249) {
      args__5600__auto__.push(arguments[i__5594__auto___24250]);
      var G__24251 = i__5594__auto___24250 + 1;
      i__5594__auto___24250 = G__24251;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__24252 = cljs.core.nnext(in$);
      var G__24253 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__24252;
      out = G__24253;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq24248) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24248));
};
cljs.core.array_map = function cljs$core$array_map() {
  var args__5600__auto__ = [];
  var len__5593__auto___24255 = arguments.length;
  var i__5594__auto___24256 = 0;
  while (true) {
    if (i__5594__auto___24256 < len__5593__auto___24255) {
      args__5600__auto__.push(arguments[i__5594__auto___24256]);
      var G__24257 = i__5594__auto___24256 + 1;
      i__5594__auto___24256 = G__24257;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq24254) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24254));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var args__5600__auto__ = [];
  var len__5593__auto___24261 = arguments.length;
  var i__5594__auto___24262 = 0;
  while (true) {
    if (i__5594__auto___24262 < len__5593__auto___24261) {
      args__5600__auto__.push(arguments[i__5594__auto___24262]);
      var G__24263 = i__5594__auto___24262 + 1;
      i__5594__auto___24262 = G__24263;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__24264 = cljs.core.nnext(kvs);
      kvs = G__24264;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq24258) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24258));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var args__5600__auto__ = [];
  var len__5593__auto___24266 = arguments.length;
  var i__5594__auto___24267 = 0;
  while (true) {
    if (i__5594__auto___24267 < len__5593__auto___24266) {
      args__5600__auto__.push(arguments[i__5594__auto___24267]);
      var G__24268 = i__5594__auto___24267 + 1;
      i__5594__auto___24267 = G__24268;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__24269 = cljs.core.nnext(in$);
      var G__24270 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__24269;
      out = G__24270;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq24265) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24265));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var args__5600__auto__ = [];
  var len__5593__auto___24273 = arguments.length;
  var i__5594__auto___24274 = 0;
  while (true) {
    if (i__5594__auto___24274 < len__5593__auto___24273) {
      args__5600__auto__.push(arguments[i__5594__auto___24274]);
      var G__24275 = i__5594__auto___24274 + 1;
      i__5594__auto___24274 = G__24275;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__24276 = cljs.core.nnext(in$);
      var G__24277 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__24276;
      out = G__24277;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq24271) {
  var G__24272 = cljs.core.first(seq24271);
  var seq24271__$1 = cljs.core.next(seq24271);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__24272, seq24271__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var args__5600__auto__ = [];
  var len__5593__auto___24285 = arguments.length;
  var i__5594__auto___24286 = 0;
  while (true) {
    if (i__5594__auto___24286 < len__5593__auto___24285) {
      args__5600__auto__.push(arguments[i__5594__auto___24286]);
      var G__24287 = i__5594__auto___24286 + 1;
      i__5594__auto___24286 = G__24287;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__24282_SHARP_, p2__24283_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4554__auto__ = p1__24282_SHARP_;
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__24283_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq24284) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24284));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var args__5600__auto__ = [];
  var len__5593__auto___24292 = arguments.length;
  var i__5594__auto___24293 = 0;
  while (true) {
    if (i__5594__auto___24293 < len__5593__auto___24292) {
      args__5600__auto__.push(arguments[i__5594__auto___24293]);
      var G__24294 = i__5594__auto___24293 + 1;
      i__5594__auto___24293 = G__24294;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__24290 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__24291 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24290, G__24291) : f.call(null, G__24290, G__24291);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4554__auto__ = m1;
          if (cljs.core.truth_(or__4554__auto__)) {
            return or__4554__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq24288) {
  var G__24289 = cljs.core.first(seq24288);
  var seq24288__$1 = cljs.core.next(seq24288);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__24289, seq24288__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__24295 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__24296 = cljs.core.next(keys);
      ret = G__24295;
      keys = G__24296;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__24299 = cljs.core.seq(coll);
  var chunk__24300 = null;
  var count__24301 = 0;
  var i__24302 = 0;
  while (true) {
    if (i__24302 < count__24301) {
      var vec__24303 = chunk__24300.cljs$core$IIndexed$_nth$arity$2(null, i__24302);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24303, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24303, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__24305 = seq__24299;
      var G__24306 = chunk__24300;
      var G__24307 = count__24301;
      var G__24308 = i__24302 + 1;
      seq__24299 = G__24305;
      chunk__24300 = G__24306;
      count__24301 = G__24307;
      i__24302 = G__24308;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__24299);
      if (temp__4425__auto__) {
        var seq__24299__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__24299__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__24299__$1);
          var G__24309 = cljs.core.chunk_rest(seq__24299__$1);
          var G__24310 = c__5338__auto__;
          var G__24311 = cljs.core.count(c__5338__auto__);
          var G__24312 = 0;
          seq__24299 = G__24309;
          chunk__24300 = G__24310;
          count__24301 = G__24311;
          i__24302 = G__24312;
          continue;
        } else {
          var vec__24304 = cljs.core.first(seq__24299__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24304, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24304, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__24313 = cljs.core.next(seq__24299__$1);
          var G__24314 = null;
          var G__24315 = 0;
          var G__24316 = 0;
          seq__24299 = G__24313;
          chunk__24300 = G__24314;
          count__24301 = G__24315;
          i__24302 = G__24316;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__24297_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__24297_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__24317 = null;
  var G__24317__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24317__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24317 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24317__2.call(this, self__, k);
      case 3:
        return G__24317__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24317.cljs$core$IFn$_invoke$arity$2 = G__24317__2;
  G__24317.cljs$core$IFn$_invoke$arity$3 = G__24317__3;
  return G__24317;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args24298) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24298)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__24318 = i + 1;
        var G__24319 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__24318;
        out = G__24319;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__24320 = i + 1;
        var G__24321 = cljs.core._conj_BANG_(out, items[i]);
        i = G__24320;
        out = G__24321;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__24323 = null;
  var G__24323__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__24323__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__24323 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24323__2.call(this, self__, k);
      case 3:
        return G__24323__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24323.cljs$core$IFn$_invoke$arity$2 = G__24323__2;
  G__24323.cljs$core$IFn$_invoke$arity$3 = G__24323__3;
  return G__24323;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args24322) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24322)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__24326 = cljs.core.seq(coll);
  var chunk__24327 = null;
  var count__24328 = 0;
  var i__24329 = 0;
  while (true) {
    if (i__24329 < count__24328) {
      var vec__24330 = chunk__24327.cljs$core$IIndexed$_nth$arity$2(null, i__24329);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24330, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24330, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__24332 = seq__24326;
      var G__24333 = chunk__24327;
      var G__24334 = count__24328;
      var G__24335 = i__24329 + 1;
      seq__24326 = G__24332;
      chunk__24327 = G__24333;
      count__24328 = G__24334;
      i__24329 = G__24335;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__24326);
      if (temp__4425__auto__) {
        var seq__24326__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__24326__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__24326__$1);
          var G__24336 = cljs.core.chunk_rest(seq__24326__$1);
          var G__24337 = c__5338__auto__;
          var G__24338 = cljs.core.count(c__5338__auto__);
          var G__24339 = 0;
          seq__24326 = G__24336;
          chunk__24327 = G__24337;
          count__24328 = G__24338;
          i__24329 = G__24339;
          continue;
        } else {
          var vec__24331 = cljs.core.first(seq__24326__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24331, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24331, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__24340 = cljs.core.next(seq__24326__$1);
          var G__24341 = null;
          var G__24342 = 0;
          var G__24343 = 0;
          seq__24326 = G__24340;
          chunk__24327 = G__24341;
          count__24328 = G__24342;
          i__24329 = G__24343;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__24324_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__24324_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__24344 = null;
  var G__24344__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24344__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24344 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24344__2.call(this, self__, k);
      case 3:
        return G__24344__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24344.cljs$core$IFn$_invoke$arity$2 = G__24344__2;
  G__24344.cljs$core$IFn$_invoke$arity$3 = G__24344__3;
  return G__24344;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args24325) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24325)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5432__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5432__auto__.length) {
        var G__24345 = i + 1;
        var G__24346 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__24345;
        res = G__24346;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__24347 = cljs.core.next(in$__$1);
          var G__24348 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__24347;
          out = G__24348;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var args24349 = [];
  var len__5593__auto___24353 = arguments.length;
  var i__5594__auto___24354 = 0;
  while (true) {
    if (i__5594__auto___24354 < len__5593__auto___24353) {
      args24349.push(arguments[i__5594__auto___24354]);
      var G__24355 = i__5594__auto___24354 + 1;
      i__5594__auto___24354 = G__24355;
      continue;
    } else {
    }
    break;
  }
  var G__24352 = args24349.length;
  switch(G__24352) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args24349.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5612__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq24350) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24350));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var args__5600__auto__ = [];
  var len__5593__auto___24358 = arguments.length;
  var i__5594__auto___24359 = 0;
  while (true) {
    if (i__5594__auto___24359 < len__5593__auto___24358) {
      args__5600__auto__.push(arguments[i__5594__auto___24359]);
      var G__24360 = i__5594__auto___24359 + 1;
      i__5594__auto___24359 = G__24360;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq24357) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24357));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var args__5600__auto__ = [];
  var len__5593__auto___24363 = arguments.length;
  var i__5594__auto___24364 = 0;
  while (true) {
    if (i__5594__auto___24364 < len__5593__auto___24363) {
      args__5600__auto__.push(arguments[i__5594__auto___24364]);
      var G__24365 = i__5594__auto___24364 + 1;
      i__5594__auto___24364 = G__24365;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq24361) {
  var G__24362 = cljs.core.first(seq24361);
  var seq24361__$1 = cljs.core.next(seq24361);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__24362, seq24361__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var args24368 = [];
  var len__5593__auto___24371 = arguments.length;
  var i__5594__auto___24372 = 0;
  while (true) {
    if (i__5594__auto___24372 < len__5593__auto___24371) {
      args24368.push(arguments[i__5594__auto___24372]);
      var G__24373 = i__5594__auto___24372 + 1;
      i__5594__auto___24372 = G__24373;
      continue;
    } else {
    }
    break;
  }
  var G__24370 = args24368.length;
  switch(G__24370) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24368.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__24366_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__24366_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__24366_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__24367_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__24367_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__24367_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var args24375 = [];
  var len__5593__auto___24384 = arguments.length;
  var i__5594__auto___24385 = 0;
  while (true) {
    if (i__5594__auto___24385 < len__5593__auto___24384) {
      args24375.push(arguments[i__5594__auto___24385]);
      var G__24386 = i__5594__auto___24385 + 1;
      i__5594__auto___24385 = G__24386;
      continue;
    } else {
    }
    break;
  }
  var G__24377 = args24375.length;
  switch(G__24377) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24375.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__24388 = null;
        var G__24388__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__24388__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__24388__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__24388 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__24388__0.call(this);
            case 1:
              return G__24388__1.call(this, result);
            case 2:
              return G__24388__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__24388.cljs$core$IFn$_invoke$arity$0 = G__24388__0;
        G__24388.cljs$core$IFn$_invoke$arity$1 = G__24388__1;
        G__24388.cljs$core$IFn$_invoke$arity$2 = G__24388__2;
        return G__24388;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__24382, seen__$1) {
        while (true) {
          var vec__24383 = p__24382;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24383, 0, null);
          var xs__$1 = vec__24383;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__24389 = cljs.core.rest(s);
              var G__24390 = seen__$1;
              p__24382 = G__24389;
              seen__$1 = G__24390;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__24391 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__24392 = cljs.core.next(s__$1);
      ret = G__24391;
      s__$1 = G__24392;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__24395 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__24396 = cljs.core.next(ks);
      var G__24397 = cljs.core.next(vs);
      map = G__24395;
      ks = G__24396;
      vs = G__24397;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var args24400 = [];
  var len__5593__auto___24407 = arguments.length;
  var i__5594__auto___24408 = 0;
  while (true) {
    if (i__5594__auto___24408 < len__5593__auto___24407) {
      args24400.push(arguments[i__5594__auto___24408]);
      var G__24409 = i__5594__auto___24408 + 1;
      i__5594__auto___24408 = G__24409;
      continue;
    } else {
    }
    break;
  }
  var G__24406 = args24400.length;
  switch(G__24406) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args24400.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__24398_SHARP_, p2__24399_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__24398_SHARP_, p2__24399_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq24401) {
  var G__24402 = cljs.core.first(seq24401);
  var seq24401__$1 = cljs.core.next(seq24401);
  var G__24403 = cljs.core.first(seq24401__$1);
  var seq24401__$2 = cljs.core.next(seq24401__$1);
  var G__24404 = cljs.core.first(seq24401__$2);
  var seq24401__$3 = cljs.core.next(seq24401__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__24402, G__24403, G__24404, seq24401__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var args24413 = [];
  var len__5593__auto___24420 = arguments.length;
  var i__5594__auto___24421 = 0;
  while (true) {
    if (i__5594__auto___24421 < len__5593__auto___24420) {
      args24413.push(arguments[i__5594__auto___24421]);
      var G__24422 = i__5594__auto___24421 + 1;
      i__5594__auto___24421 = G__24422;
      continue;
    } else {
    }
    break;
  }
  var G__24419 = args24413.length;
  switch(G__24419) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args24413.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__24411_SHARP_, p2__24412_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__24411_SHARP_, p2__24412_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq24414) {
  var G__24415 = cljs.core.first(seq24414);
  var seq24414__$1 = cljs.core.next(seq24414);
  var G__24416 = cljs.core.first(seq24414__$1);
  var seq24414__$2 = cljs.core.next(seq24414__$1);
  var G__24417 = cljs.core.first(seq24414__$2);
  var seq24414__$3 = cljs.core.next(seq24414__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__24415, G__24416, G__24417, seq24414__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var args24424 = [];
  var len__5593__auto___24427 = arguments.length;
  var i__5594__auto___24428 = 0;
  while (true) {
    if (i__5594__auto___24428 < len__5593__auto___24427) {
      args24424.push(arguments[i__5594__auto___24428]);
      var G__24429 = i__5594__auto___24428 + 1;
      i__5594__auto___24428 = G__24429;
      continue;
    } else {
    }
    break;
  }
  var G__24426 = args24424.length;
  switch(G__24426) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24424.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__24431 = null;
        var G__24431__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__24431__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__24431__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__24431 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__24431__0.call(this);
            case 1:
              return G__24431__1.call(this, result);
            case 2:
              return G__24431__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__24431.cljs$core$IFn$_invoke$arity$0 = G__24431__0;
        G__24431.cljs$core$IFn$_invoke$arity$1 = G__24431__1;
        G__24431.cljs$core$IFn$_invoke$arity$2 = G__24431__2;
        return G__24431;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var args24432 = [];
  var len__5593__auto___24436 = arguments.length;
  var i__5594__auto___24437 = 0;
  while (true) {
    if (i__5594__auto___24437 < len__5593__auto___24436) {
      args24432.push(arguments[i__5594__auto___24437]);
      var G__24438 = i__5594__auto___24437 + 1;
      i__5594__auto___24437 = G__24438;
      continue;
    } else {
    }
    break;
  }
  var G__24434 = args24432.length;
  switch(G__24434) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24432.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__24440 = null;
      var G__24440__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__24440__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__24440__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__24440 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__24440__0.call(this);
          case 1:
            return G__24440__1.call(this, result);
          case 2:
            return G__24440__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24440.cljs$core$IFn$_invoke$arity$0 = G__24440__0;
      G__24440.cljs$core$IFn$_invoke$arity$1 = G__24440__1;
      G__24440.cljs$core$IFn$_invoke$arity$2 = G__24440__2;
      return G__24440;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__24435 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24435) : pred.call(null, G__24435);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__24449 = function() {
      var G__24451 = cljs.core._entry_key(sc, e);
      var G__24452 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24451, G__24452) : comp.call(null, G__24451, G__24452);
    }();
    var G__24450 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__24449, G__24450) : test.call(null, G__24449, G__24450);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var args24453 = [];
  var len__5593__auto___24458 = arguments.length;
  var i__5594__auto___24459 = 0;
  while (true) {
    if (i__5594__auto___24459 < len__5593__auto___24458) {
      args24453.push(arguments[i__5594__auto___24459]);
      var G__24460 = i__5594__auto___24459 + 1;
      i__5594__auto___24459 = G__24460;
      continue;
    } else {
    }
    break;
  }
  var G__24455 = args24453.length;
  switch(G__24455) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24453.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__24456 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24456, 0, null);
      var s = vec__24456;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__24457 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24457, 0, null);
    var s = vec__24457;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var args24462 = [];
  var len__5593__auto___24467 = arguments.length;
  var i__5594__auto___24468 = 0;
  while (true) {
    if (i__5594__auto___24468 < len__5593__auto___24467) {
      args24462.push(arguments[i__5594__auto___24468]);
      var G__24469 = i__5594__auto___24468 + 1;
      i__5594__auto___24468 = G__24469;
      continue;
    } else {
    }
    break;
  }
  var G__24464 = args24462.length;
  switch(G__24464) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24462.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__24465 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24465, 0, null);
      var s = vec__24465;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__24466 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24466, 0, null);
    var s = vec__24466;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__24471 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__24471);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__24472 = i + self__.step;
        var G__24473 = ret__$1;
        i = G__24472;
        ret = G__24473;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.range = function cljs$core$range() {
  var args24474 = [];
  var len__5593__auto___24477 = arguments.length;
  var i__5594__auto___24478 = 0;
  while (true) {
    if (i__5594__auto___24478 < len__5593__auto___24477) {
      args24474.push(arguments[i__5594__auto___24478]);
      var G__24479 = i__5594__auto___24478 + 1;
      i__5594__auto___24478 = G__24479;
      continue;
    } else {
    }
    break;
  }
  var G__24476 = args24474.length;
  switch(G__24476) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24474.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var args24481 = [];
  var len__5593__auto___24486 = arguments.length;
  var i__5594__auto___24487 = 0;
  while (true) {
    if (i__5594__auto___24487 < len__5593__auto___24486) {
      args24481.push(arguments[i__5594__auto___24487]);
      var G__24488 = i__5594__auto___24487 + 1;
      i__5594__auto___24487 = G__24488;
      continue;
    } else {
    }
    break;
  }
  var G__24483 = args24481.length;
  switch(G__24483) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24481.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__24484 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__24484) : cljs.core.pr_str.call(null, G__24484);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__24490 = null;
        var G__24490__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__24490__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__24490__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__24490 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__24490__0.call(this);
            case 1:
              return G__24490__1.call(this, result);
            case 2:
              return G__24490__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__24490.cljs$core$IFn$_invoke$arity$0 = G__24490__0;
        G__24490.cljs$core$IFn$_invoke$arity$1 = G__24490__1;
        G__24490.cljs$core$IFn$_invoke$arity$2 = G__24490__2;
        return G__24490;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__24485 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__24485) : cljs.core.pr_str.call(null, G__24485);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var args24492 = [];
  var len__5593__auto___24495 = arguments.length;
  var i__5594__auto___24496 = 0;
  while (true) {
    if (i__5594__auto___24496 < len__5593__auto___24495) {
      args24492.push(arguments[i__5594__auto___24496]);
      var G__24497 = i__5594__auto___24496 + 1;
      i__5594__auto___24496 = G__24497;
      continue;
    } else {
    }
    break;
  }
  var G__24494 = args24492.length;
  switch(G__24494) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24492.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__24499 = null;
        var G__24499__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__24499__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__24499__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__24499 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__24499__0.call(this);
            case 1:
              return G__24499__1.call(this, result);
            case 2:
              return G__24499__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__24499.cljs$core$IFn$_invoke$arity$0 = G__24499__0;
        G__24499.cljs$core$IFn$_invoke$arity$1 = G__24499__1;
        G__24499.cljs$core$IFn$_invoke$arity$2 = G__24499__2;
        return G__24499;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__24491_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__24491_SHARP_) : f.call(null, p1__24491_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var args24500 = [];
  var len__5593__auto___24505 = arguments.length;
  var i__5594__auto___24506 = 0;
  while (true) {
    if (i__5594__auto___24506 < len__5593__auto___24505) {
      args24500.push(arguments[i__5594__auto___24506]);
      var G__24507 = i__5594__auto___24506 + 1;
      i__5594__auto___24506 = G__24507;
      continue;
    } else {
    }
    break;
  }
  var G__24502 = args24500.length;
  switch(G__24502) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24500.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__24503 = init;
        var G__24504 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24503, G__24504) : f.call(null, G__24503, G__24504);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var args24519 = [];
  var len__5593__auto___24526 = arguments.length;
  var i__5594__auto___24527 = 0;
  while (true) {
    if (i__5594__auto___24527 < len__5593__auto___24526) {
      args24519.push(arguments[i__5594__auto___24527]);
      var G__24528 = i__5594__auto___24527 + 1;
      i__5594__auto___24527 = G__24528;
      continue;
    } else {
    }
    break;
  }
  var G__24525 = args24519.length;
  switch(G__24525) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args24519.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__24530 = null;
    var G__24530__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__24530__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__24530__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__24530__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__24530__4 = function() {
      var G__24531__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__24531 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__24532__i = 0, G__24532__a = new Array(arguments.length - 3);
          while (G__24532__i < G__24532__a.length) {
            G__24532__a[G__24532__i] = arguments[G__24532__i + 3];
            ++G__24532__i;
          }
          args = new cljs.core.IndexedSeq(G__24532__a, 0);
        }
        return G__24531__delegate.call(this, x, y, z, args);
      };
      G__24531.cljs$lang$maxFixedArity = 3;
      G__24531.cljs$lang$applyTo = function(arglist__24533) {
        var x = cljs.core.first(arglist__24533);
        arglist__24533 = cljs.core.next(arglist__24533);
        var y = cljs.core.first(arglist__24533);
        arglist__24533 = cljs.core.next(arglist__24533);
        var z = cljs.core.first(arglist__24533);
        var args = cljs.core.rest(arglist__24533);
        return G__24531__delegate(x, y, z, args);
      };
      G__24531.cljs$core$IFn$_invoke$arity$variadic = G__24531__delegate;
      return G__24531;
    }();
    G__24530 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__24530__0.call(this);
        case 1:
          return G__24530__1.call(this, x);
        case 2:
          return G__24530__2.call(this, x, y);
        case 3:
          return G__24530__3.call(this, x, y, z);
        default:
          var G__24534 = null;
          if (arguments.length > 3) {
            var G__24535__i = 0, G__24535__a = new Array(arguments.length - 3);
            while (G__24535__i < G__24535__a.length) {
              G__24535__a[G__24535__i] = arguments[G__24535__i + 3];
              ++G__24535__i;
            }
            G__24534 = new cljs.core.IndexedSeq(G__24535__a, 0);
          }
          return G__24530__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__24534);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__24530.cljs$lang$maxFixedArity = 3;
    G__24530.cljs$lang$applyTo = G__24530__4.cljs$lang$applyTo;
    G__24530.cljs$core$IFn$_invoke$arity$0 = G__24530__0;
    G__24530.cljs$core$IFn$_invoke$arity$1 = G__24530__1;
    G__24530.cljs$core$IFn$_invoke$arity$2 = G__24530__2;
    G__24530.cljs$core$IFn$_invoke$arity$3 = G__24530__3;
    G__24530.cljs$core$IFn$_invoke$arity$variadic = G__24530__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__24530;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__24536 = null;
    var G__24536__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__24536__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__24536__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__24536__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__24536__4 = function() {
      var G__24537__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__24537 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__24538__i = 0, G__24538__a = new Array(arguments.length - 3);
          while (G__24538__i < G__24538__a.length) {
            G__24538__a[G__24538__i] = arguments[G__24538__i + 3];
            ++G__24538__i;
          }
          args = new cljs.core.IndexedSeq(G__24538__a, 0);
        }
        return G__24537__delegate.call(this, x, y, z, args);
      };
      G__24537.cljs$lang$maxFixedArity = 3;
      G__24537.cljs$lang$applyTo = function(arglist__24539) {
        var x = cljs.core.first(arglist__24539);
        arglist__24539 = cljs.core.next(arglist__24539);
        var y = cljs.core.first(arglist__24539);
        arglist__24539 = cljs.core.next(arglist__24539);
        var z = cljs.core.first(arglist__24539);
        var args = cljs.core.rest(arglist__24539);
        return G__24537__delegate(x, y, z, args);
      };
      G__24537.cljs$core$IFn$_invoke$arity$variadic = G__24537__delegate;
      return G__24537;
    }();
    G__24536 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__24536__0.call(this);
        case 1:
          return G__24536__1.call(this, x);
        case 2:
          return G__24536__2.call(this, x, y);
        case 3:
          return G__24536__3.call(this, x, y, z);
        default:
          var G__24540 = null;
          if (arguments.length > 3) {
            var G__24541__i = 0, G__24541__a = new Array(arguments.length - 3);
            while (G__24541__i < G__24541__a.length) {
              G__24541__a[G__24541__i] = arguments[G__24541__i + 3];
              ++G__24541__i;
            }
            G__24540 = new cljs.core.IndexedSeq(G__24541__a, 0);
          }
          return G__24536__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__24540);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__24536.cljs$lang$maxFixedArity = 3;
    G__24536.cljs$lang$applyTo = G__24536__4.cljs$lang$applyTo;
    G__24536.cljs$core$IFn$_invoke$arity$0 = G__24536__0;
    G__24536.cljs$core$IFn$_invoke$arity$1 = G__24536__1;
    G__24536.cljs$core$IFn$_invoke$arity$2 = G__24536__2;
    G__24536.cljs$core$IFn$_invoke$arity$3 = G__24536__3;
    G__24536.cljs$core$IFn$_invoke$arity$variadic = G__24536__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__24536;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__24542 = null;
    var G__24542__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__24542__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__24542__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__24542__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__24542__4 = function() {
      var G__24543__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__24543 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__24544__i = 0, G__24544__a = new Array(arguments.length - 3);
          while (G__24544__i < G__24544__a.length) {
            G__24544__a[G__24544__i] = arguments[G__24544__i + 3];
            ++G__24544__i;
          }
          args = new cljs.core.IndexedSeq(G__24544__a, 0);
        }
        return G__24543__delegate.call(this, x, y, z, args);
      };
      G__24543.cljs$lang$maxFixedArity = 3;
      G__24543.cljs$lang$applyTo = function(arglist__24545) {
        var x = cljs.core.first(arglist__24545);
        arglist__24545 = cljs.core.next(arglist__24545);
        var y = cljs.core.first(arglist__24545);
        arglist__24545 = cljs.core.next(arglist__24545);
        var z = cljs.core.first(arglist__24545);
        var args = cljs.core.rest(arglist__24545);
        return G__24543__delegate(x, y, z, args);
      };
      G__24543.cljs$core$IFn$_invoke$arity$variadic = G__24543__delegate;
      return G__24543;
    }();
    G__24542 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__24542__0.call(this);
        case 1:
          return G__24542__1.call(this, x);
        case 2:
          return G__24542__2.call(this, x, y);
        case 3:
          return G__24542__3.call(this, x, y, z);
        default:
          var G__24546 = null;
          if (arguments.length > 3) {
            var G__24547__i = 0, G__24547__a = new Array(arguments.length - 3);
            while (G__24547__i < G__24547__a.length) {
              G__24547__a[G__24547__i] = arguments[G__24547__i + 3];
              ++G__24547__i;
            }
            G__24546 = new cljs.core.IndexedSeq(G__24547__a, 0);
          }
          return G__24542__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__24546);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__24542.cljs$lang$maxFixedArity = 3;
    G__24542.cljs$lang$applyTo = G__24542__4.cljs$lang$applyTo;
    G__24542.cljs$core$IFn$_invoke$arity$0 = G__24542__0;
    G__24542.cljs$core$IFn$_invoke$arity$1 = G__24542__1;
    G__24542.cljs$core$IFn$_invoke$arity$2 = G__24542__2;
    G__24542.cljs$core$IFn$_invoke$arity$3 = G__24542__3;
    G__24542.cljs$core$IFn$_invoke$arity$variadic = G__24542__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__24542;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__24548 = null;
      var G__24548__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__24509_SHARP_, p2__24510_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24509_SHARP_, p2__24510_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__24510_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__24510_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__24548__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__24511_SHARP_, p2__24512_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24511_SHARP_, p2__24512_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__24512_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__24512_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__24548__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__24513_SHARP_, p2__24514_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24513_SHARP_, p2__24514_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__24514_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__24514_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__24548__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__24515_SHARP_, p2__24516_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24515_SHARP_, p2__24516_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__24516_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__24516_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__24548__4 = function() {
        var G__24549__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__24517_SHARP_, p2__24518_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24517_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__24518_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__24549 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__24550__i = 0, G__24550__a = new Array(arguments.length - 3);
            while (G__24550__i < G__24550__a.length) {
              G__24550__a[G__24550__i] = arguments[G__24550__i + 3];
              ++G__24550__i;
            }
            args = new cljs.core.IndexedSeq(G__24550__a, 0);
          }
          return G__24549__delegate.call(this, x, y, z, args);
        };
        G__24549.cljs$lang$maxFixedArity = 3;
        G__24549.cljs$lang$applyTo = function(arglist__24551) {
          var x = cljs.core.first(arglist__24551);
          arglist__24551 = cljs.core.next(arglist__24551);
          var y = cljs.core.first(arglist__24551);
          arglist__24551 = cljs.core.next(arglist__24551);
          var z = cljs.core.first(arglist__24551);
          var args = cljs.core.rest(arglist__24551);
          return G__24549__delegate(x, y, z, args);
        };
        G__24549.cljs$core$IFn$_invoke$arity$variadic = G__24549__delegate;
        return G__24549;
      }();
      G__24548 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__24548__0.call(this);
          case 1:
            return G__24548__1.call(this, x);
          case 2:
            return G__24548__2.call(this, x, y);
          case 3:
            return G__24548__3.call(this, x, y, z);
          default:
            var G__24552 = null;
            if (arguments.length > 3) {
              var G__24553__i = 0, G__24553__a = new Array(arguments.length - 3);
              while (G__24553__i < G__24553__a.length) {
                G__24553__a[G__24553__i] = arguments[G__24553__i + 3];
                ++G__24553__i;
              }
              G__24552 = new cljs.core.IndexedSeq(G__24553__a, 0);
            }
            return G__24548__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__24552);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24548.cljs$lang$maxFixedArity = 3;
      G__24548.cljs$lang$applyTo = G__24548__4.cljs$lang$applyTo;
      G__24548.cljs$core$IFn$_invoke$arity$0 = G__24548__0;
      G__24548.cljs$core$IFn$_invoke$arity$1 = G__24548__1;
      G__24548.cljs$core$IFn$_invoke$arity$2 = G__24548__2;
      G__24548.cljs$core$IFn$_invoke$arity$3 = G__24548__3;
      G__24548.cljs$core$IFn$_invoke$arity$variadic = G__24548__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__24548;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq24520) {
  var G__24521 = cljs.core.first(seq24520);
  var seq24520__$1 = cljs.core.next(seq24520);
  var G__24522 = cljs.core.first(seq24520__$1);
  var seq24520__$2 = cljs.core.next(seq24520__$1);
  var G__24523 = cljs.core.first(seq24520__$2);
  var seq24520__$3 = cljs.core.next(seq24520__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__24521, G__24522, G__24523, seq24520__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var args24554 = [];
  var len__5593__auto___24557 = arguments.length;
  var i__5594__auto___24558 = 0;
  while (true) {
    if (i__5594__auto___24558 < len__5593__auto___24557) {
      args24554.push(arguments[i__5594__auto___24558]);
      var G__24559 = i__5594__auto___24558 + 1;
      i__5594__auto___24558 = G__24559;
      continue;
    } else {
    }
    break;
  }
  var G__24556 = args24554.length;
  switch(G__24556) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24554.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__24561 = cljs.core.next(coll);
      coll = G__24561;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__24562 = n - 1;
      var G__24563 = cljs.core.next(coll);
      n = G__24562;
      coll = G__24563;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var args24564 = [];
  var len__5593__auto___24567 = arguments.length;
  var i__5594__auto___24568 = 0;
  while (true) {
    if (i__5594__auto___24568 < len__5593__auto___24567) {
      args24564.push(arguments[i__5594__auto___24568]);
      var G__24569 = i__5594__auto___24568 + 1;
      i__5594__auto___24568 = G__24569;
      continue;
    } else {
    }
    break;
  }
  var G__24566 = args24564.length;
  switch(G__24566) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24564.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__24572 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24572, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24572, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4554__auto__ = flags;
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_24580 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4554__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__24581_24587 = cljs.core.first(coll);
          var G__24582_24588 = writer;
          var G__24583_24589 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24581_24587, G__24582_24588, G__24583_24589) : print_one.call(null, G__24581_24587, G__24582_24588, G__24583_24589);
        } else {
        }
        var coll_24590__$1 = cljs.core.next(coll);
        var n_24591 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_24590__$1 && (n_24591 == null || !(n_24591 === 0))) {
            cljs.core._write(writer, sep);
            var G__24584_24592 = cljs.core.first(coll_24590__$1);
            var G__24585_24593 = writer;
            var G__24586_24594 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24584_24592, G__24585_24593, G__24586_24594) : print_one.call(null, G__24584_24592, G__24585_24593, G__24586_24594);
            var G__24595 = cljs.core.next(coll_24590__$1);
            var G__24596 = n_24591 - 1;
            coll_24590__$1 = G__24595;
            n_24591 = G__24596;
            continue;
          } else {
            if (cljs.core.seq(coll_24590__$1) && n_24591 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4554__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4554__auto__)) {
                  return or__4554__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_24580;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var args__5600__auto__ = [];
  var len__5593__auto___24603 = arguments.length;
  var i__5594__auto___24604 = 0;
  while (true) {
    if (i__5594__auto___24604 < len__5593__auto___24603) {
      args__5600__auto__.push(arguments[i__5594__auto___24604]);
      var G__24605 = i__5594__auto___24604 + 1;
      i__5594__auto___24604 = G__24605;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__24599 = cljs.core.seq(ss);
  var chunk__24600 = null;
  var count__24601 = 0;
  var i__24602 = 0;
  while (true) {
    if (i__24602 < count__24601) {
      var s = chunk__24600.cljs$core$IIndexed$_nth$arity$2(null, i__24602);
      cljs.core._write(writer, s);
      var G__24606 = seq__24599;
      var G__24607 = chunk__24600;
      var G__24608 = count__24601;
      var G__24609 = i__24602 + 1;
      seq__24599 = G__24606;
      chunk__24600 = G__24607;
      count__24601 = G__24608;
      i__24602 = G__24609;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__24599);
      if (temp__4425__auto__) {
        var seq__24599__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__24599__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__24599__$1);
          var G__24610 = cljs.core.chunk_rest(seq__24599__$1);
          var G__24611 = c__5338__auto__;
          var G__24612 = cljs.core.count(c__5338__auto__);
          var G__24613 = 0;
          seq__24599 = G__24610;
          chunk__24600 = G__24611;
          count__24601 = G__24612;
          i__24602 = G__24613;
          continue;
        } else {
          var s = cljs.core.first(seq__24599__$1);
          cljs.core._write(writer, s);
          var G__24614 = cljs.core.next(seq__24599__$1);
          var G__24615 = null;
          var G__24616 = 0;
          var G__24617 = 0;
          seq__24599 = G__24614;
          chunk__24600 = G__24615;
          count__24601 = G__24616;
          i__24602 = G__24617;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq24597) {
  var G__24598 = cljs.core.first(seq24597);
  var seq24597__$1 = cljs.core.next(seq24597);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__24598, seq24597__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj24619 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj24619;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4542__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4542__auto__) {
    var and__4542__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4542__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4542__auto____$1;
    }
  } else {
    return and__4542__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__24635_24644 = cljs.core.meta(obj);
      var G__24636_24645 = writer;
      var G__24637_24646 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__24635_24644, G__24636_24645, G__24637_24646) : cljs.core.pr_writer.call(null, G__24635_24644, G__24636_24645, G__24637_24646);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__24639 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__24640 = cljs.core.pr_writer;
            var G__24641 = writer;
            var G__24642 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__24639, G__24640, G__24641, G__24642) : cljs.core.print_map.call(null, G__24639, G__24640, G__24641, G__24642);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__4554__auto__ = name == null;
                    if (or__4554__auto__) {
                      return or__4554__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__24647 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__24647;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4554__auto__ = name == null;
                            if (or__4554__auto__) {
                              return or__4554__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__24651 = obj;
    var G__24652 = writer;
    var G__24653 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__24651, G__24652, G__24653) : alt_impl.call(null, G__24651, G__24652, G__24653);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__24658 = cljs.core.seq(cljs.core.next(objs));
  var chunk__24659 = null;
  var count__24660 = 0;
  var i__24661 = 0;
  while (true) {
    if (i__24661 < count__24660) {
      var obj = chunk__24659.cljs$core$IIndexed$_nth$arity$2(null, i__24661);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__24662 = seq__24658;
      var G__24663 = chunk__24659;
      var G__24664 = count__24660;
      var G__24665 = i__24661 + 1;
      seq__24658 = G__24662;
      chunk__24659 = G__24663;
      count__24660 = G__24664;
      i__24661 = G__24665;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__24658);
      if (temp__4425__auto__) {
        var seq__24658__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__24658__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__24658__$1);
          var G__24666 = cljs.core.chunk_rest(seq__24658__$1);
          var G__24667 = c__5338__auto__;
          var G__24668 = cljs.core.count(c__5338__auto__);
          var G__24669 = 0;
          seq__24658 = G__24666;
          chunk__24659 = G__24667;
          count__24660 = G__24668;
          i__24661 = G__24669;
          continue;
        } else {
          var obj = cljs.core.first(seq__24658__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__24670 = cljs.core.next(seq__24658__$1);
          var G__24671 = null;
          var G__24672 = 0;
          var G__24673 = 0;
          seq__24658 = G__24670;
          chunk__24659 = G__24671;
          count__24660 = G__24672;
          i__24661 = G__24673;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline() {
  var args24674 = [];
  var len__5593__auto___24677 = arguments.length;
  var i__5594__auto___24678 = 0;
  while (true) {
    if (i__5594__auto___24678 < len__5593__auto___24677) {
      args24674.push(arguments[i__5594__auto___24678]);
      var G__24679 = i__5594__auto___24678 + 1;
      i__5594__auto___24678 = G__24679;
      continue;
    } else {
    }
    break;
  }
  var G__24676 = args24674.length;
  switch(G__24676) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24674.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str() {
  var args__5600__auto__ = [];
  var len__5593__auto___24682 = arguments.length;
  var i__5594__auto___24683 = 0;
  while (true) {
    if (i__5594__auto___24683 < len__5593__auto___24682) {
      args__5600__auto__.push(arguments[i__5594__auto___24683]);
      var G__24684 = i__5594__auto___24683 + 1;
      i__5594__auto___24683 = G__24684;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq24681) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24681));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var args__5600__auto__ = [];
  var len__5593__auto___24686 = arguments.length;
  var i__5594__auto___24687 = 0;
  while (true) {
    if (i__5594__auto___24687 < len__5593__auto___24686) {
      args__5600__auto__.push(arguments[i__5594__auto___24687]);
      var G__24688 = i__5594__auto___24687 + 1;
      i__5594__auto___24687 = G__24688;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq24685) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24685));
};
cljs.core.pr = function cljs$core$pr() {
  var args__5600__auto__ = [];
  var len__5593__auto___24690 = arguments.length;
  var i__5594__auto___24691 = 0;
  while (true) {
    if (i__5594__auto___24691 < len__5593__auto___24690) {
      args__5600__auto__.push(arguments[i__5594__auto___24691]);
      var G__24692 = i__5594__auto___24691 + 1;
      i__5594__auto___24691 = G__24692;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq24689) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24689));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__24693__i = 0, G__24693__a = new Array(arguments.length - 0);
      while (G__24693__i < G__24693__a.length) {
        G__24693__a[G__24693__i] = arguments[G__24693__i + 0];
        ++G__24693__i;
      }
      objs = new cljs.core.IndexedSeq(G__24693__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__24694) {
    var objs = cljs.core.seq(arglist__24694);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var args__5600__auto__ = [];
  var len__5593__auto___24696 = arguments.length;
  var i__5594__auto___24697 = 0;
  while (true) {
    if (i__5594__auto___24697 < len__5593__auto___24696) {
      args__5600__auto__.push(arguments[i__5594__auto___24697]);
      var G__24698 = i__5594__auto___24697 + 1;
      i__5594__auto___24697 = G__24698;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq24695) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24695));
};
cljs.core.println = function cljs$core$println() {
  var args__5600__auto__ = [];
  var len__5593__auto___24700 = arguments.length;
  var i__5594__auto___24701 = 0;
  while (true) {
    if (i__5594__auto___24701 < len__5593__auto___24700) {
      args__5600__auto__.push(arguments[i__5594__auto___24701]);
      var G__24702 = i__5594__auto___24701 + 1;
      i__5594__auto___24701 = G__24702;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq24699) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24699));
};
cljs.core.println_str = function cljs$core$println_str() {
  var args__5600__auto__ = [];
  var len__5593__auto___24704 = arguments.length;
  var i__5594__auto___24705 = 0;
  while (true) {
    if (i__5594__auto___24705 < len__5593__auto___24704) {
      args__5600__auto__.push(arguments[i__5594__auto___24705]);
      var G__24706 = i__5594__auto___24705 + 1;
      i__5594__auto___24705 = G__24706;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq24703) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24703));
};
cljs.core.prn = function cljs$core$prn() {
  var args__5600__auto__ = [];
  var len__5593__auto___24708 = arguments.length;
  var i__5594__auto___24709 = 0;
  while (true) {
    if (i__5594__auto___24709 < len__5593__auto___24708) {
      args__5600__auto__.push(arguments[i__5594__auto___24709]);
      var G__24710 = i__5594__auto___24709 + 1;
      i__5594__auto___24709 = G__24710;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq24707) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24707));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__24717_24723 = cljs.core.key(e);
    var G__24718_24724 = w;
    var G__24719_24725 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24717_24723, G__24718_24724, G__24719_24725) : print_one.call(null, G__24717_24723, G__24718_24724, G__24719_24725);
    cljs.core._write(w, " ");
    var G__24720 = cljs.core.val(e);
    var G__24721 = w;
    var G__24722 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24720, G__24721, G__24722) : print_one.call(null, G__24720, G__24721, G__24722);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var args__5600__auto__ = [];
  var len__5593__auto___24729 = arguments.length;
  var i__5594__auto___24730 = 0;
  while (true) {
    if (i__5594__auto___24730 < len__5593__auto___24729) {
      args__5600__auto__.push(arguments[i__5594__auto___24730]);
      var G__24731 = i__5594__auto___24730 + 1;
      i__5594__auto___24730 = G__24731;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq24726) {
  var G__24727 = cljs.core.first(seq24726);
  var seq24726__$1 = cljs.core.next(seq24726);
  var G__24728 = cljs.core.first(seq24726__$1);
  var seq24726__$2 = cljs.core.next(seq24726__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__24727, G__24728, seq24726__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var args24732 = [];
  var len__5593__auto___24735 = arguments.length;
  var i__5594__auto___24736 = 0;
  while (true) {
    if (i__5594__auto___24736 < len__5593__auto___24735) {
      args24732.push(arguments[i__5594__auto___24736]);
      var G__24737 = i__5594__auto___24736 + 1;
      i__5594__auto___24736 = G__24737;
      continue;
    } else {
    }
    break;
  }
  var G__24734 = args24732.length;
  switch(G__24734) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24732.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__24739_SHARP_, p2__24740_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__24739_SHARP_, p2__24740_SHARP_) : rf.call(null, p1__24739_SHARP_, p2__24740_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__24741 = null;
      var G__24741__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__24741__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__24741__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__24741 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__24741__0.call(this);
          case 1:
            return G__24741__1.call(this, result);
          case 2:
            return G__24741__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24741.cljs$core$IFn$_invoke$arity$0 = G__24741__0;
      G__24741.cljs$core$IFn$_invoke$arity$1 = G__24741__1;
      G__24741.cljs$core$IFn$_invoke$arity$2 = G__24741__2;
      return G__24741;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var args24742 = [];
  var len__5593__auto___24745 = arguments.length;
  var i__5594__auto___24746 = 0;
  while (true) {
    if (i__5594__auto___24746 < len__5593__auto___24745) {
      args24742.push(arguments[i__5594__auto___24746]);
      var G__24747 = i__5594__auto___24746 + 1;
      i__5594__auto___24746 = G__24747;
      continue;
    } else {
    }
    break;
  }
  var G__24744 = args24742.length;
  switch(G__24744) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24742.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__24749 = null;
        var G__24749__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__24749__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__24749__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__24749 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__24749__0.call(this);
            case 1:
              return G__24749__1.call(this, result);
            case 2:
              return G__24749__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__24749.cljs$core$IFn$_invoke$arity$0 = G__24749__0;
        G__24749.cljs$core$IFn$_invoke$arity$1 = G__24749__1;
        G__24749.cljs$core$IFn$_invoke$arity$2 = G__24749__2;
        return G__24749;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var args24750 = [];
  var len__5593__auto___24753 = arguments.length;
  var i__5594__auto___24754 = 0;
  while (true) {
    if (i__5594__auto___24754 < len__5593__auto___24753) {
      args24750.push(arguments[i__5594__auto___24754]);
      var G__24755 = i__5594__auto___24754 + 1;
      i__5594__auto___24754 = G__24755;
      continue;
    } else {
    }
    break;
  }
  var G__24752 = args24750.length;
  switch(G__24752) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24750.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var args__5600__auto__ = [];
  var len__5593__auto___24758 = arguments.length;
  var i__5594__auto___24759 = 0;
  while (true) {
    if (i__5594__auto___24759 < len__5593__auto___24758) {
      args__5600__auto__.push(arguments[i__5594__auto___24759]);
      var G__24760 = i__5594__auto___24759 + 1;
      i__5594__auto___24759 = G__24760;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq24757) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24757));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__24762_SHARP_, p2__24761_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__24761_SHARP_) : proc.call(null, p2__24761_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto__.call(null, x);
    } else {
      var m__5191__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._key__GT_js[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto__.call(null, x);
    } else {
      var m__5191__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__24783_24793 = cljs.core.seq(x);
            var chunk__24784_24794 = null;
            var count__24785_24795 = 0;
            var i__24786_24796 = 0;
            while (true) {
              if (i__24786_24796 < count__24785_24795) {
                var vec__24787_24797 = chunk__24784_24794.cljs$core$IIndexed$_nth$arity$2(null, i__24786_24796);
                var k_24798 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24787_24797, 0, null);
                var v_24799 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24787_24797, 1, null);
                m[cljs.core.key__GT_js(k_24798)] = cljs$core$clj__GT_js(v_24799);
                var G__24800 = seq__24783_24793;
                var G__24801 = chunk__24784_24794;
                var G__24802 = count__24785_24795;
                var G__24803 = i__24786_24796 + 1;
                seq__24783_24793 = G__24800;
                chunk__24784_24794 = G__24801;
                count__24785_24795 = G__24802;
                i__24786_24796 = G__24803;
                continue;
              } else {
                var temp__4425__auto___24804 = cljs.core.seq(seq__24783_24793);
                if (temp__4425__auto___24804) {
                  var seq__24783_24805__$1 = temp__4425__auto___24804;
                  if (cljs.core.chunked_seq_QMARK_(seq__24783_24805__$1)) {
                    var c__5338__auto___24806 = cljs.core.chunk_first(seq__24783_24805__$1);
                    var G__24807 = cljs.core.chunk_rest(seq__24783_24805__$1);
                    var G__24808 = c__5338__auto___24806;
                    var G__24809 = cljs.core.count(c__5338__auto___24806);
                    var G__24810 = 0;
                    seq__24783_24793 = G__24807;
                    chunk__24784_24794 = G__24808;
                    count__24785_24795 = G__24809;
                    i__24786_24796 = G__24810;
                    continue;
                  } else {
                    var vec__24788_24811 = cljs.core.first(seq__24783_24805__$1);
                    var k_24812 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24788_24811, 0, null);
                    var v_24813 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24788_24811, 1, null);
                    m[cljs.core.key__GT_js(k_24812)] = cljs$core$clj__GT_js(v_24813);
                    var G__24814 = cljs.core.next(seq__24783_24805__$1);
                    var G__24815 = null;
                    var G__24816 = 0;
                    var G__24817 = 0;
                    seq__24783_24793 = G__24814;
                    chunk__24784_24794 = G__24815;
                    count__24785_24795 = G__24816;
                    i__24786_24796 = G__24817;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__24789_24818 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__24790_24819 = null;
              var count__24791_24820 = 0;
              var i__24792_24821 = 0;
              while (true) {
                if (i__24792_24821 < count__24791_24820) {
                  var x_24822__$1 = chunk__24790_24819.cljs$core$IIndexed$_nth$arity$2(null, i__24792_24821);
                  arr.push(x_24822__$1);
                  var G__24823 = seq__24789_24818;
                  var G__24824 = chunk__24790_24819;
                  var G__24825 = count__24791_24820;
                  var G__24826 = i__24792_24821 + 1;
                  seq__24789_24818 = G__24823;
                  chunk__24790_24819 = G__24824;
                  count__24791_24820 = G__24825;
                  i__24792_24821 = G__24826;
                  continue;
                } else {
                  var temp__4425__auto___24827 = cljs.core.seq(seq__24789_24818);
                  if (temp__4425__auto___24827) {
                    var seq__24789_24828__$1 = temp__4425__auto___24827;
                    if (cljs.core.chunked_seq_QMARK_(seq__24789_24828__$1)) {
                      var c__5338__auto___24829 = cljs.core.chunk_first(seq__24789_24828__$1);
                      var G__24830 = cljs.core.chunk_rest(seq__24789_24828__$1);
                      var G__24831 = c__5338__auto___24829;
                      var G__24832 = cljs.core.count(c__5338__auto___24829);
                      var G__24833 = 0;
                      seq__24789_24818 = G__24830;
                      chunk__24790_24819 = G__24831;
                      count__24791_24820 = G__24832;
                      i__24792_24821 = G__24833;
                      continue;
                    } else {
                      var x_24834__$1 = cljs.core.first(seq__24789_24828__$1);
                      arr.push(x_24834__$1);
                      var G__24835 = cljs.core.next(seq__24789_24828__$1);
                      var G__24836 = null;
                      var G__24837 = 0;
                      var G__24838 = 0;
                      seq__24789_24818 = G__24835;
                      chunk__24790_24819 = G__24836;
                      count__24791_24820 = G__24837;
                      i__24792_24821 = G__24838;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__5191__auto__.call(null, x, options);
    } else {
      var m__5191__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__5191__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var args24841 = [];
  var len__5593__auto___24866 = arguments.length;
  var i__5594__auto___24867 = 0;
  while (true) {
    if (i__5594__auto___24867 < len__5593__auto___24866) {
      args24841.push(arguments[i__5594__auto___24867]);
      var G__24868 = i__5594__auto___24867 + 1;
      i__5594__auto___24867 = G__24868;
      continue;
    } else {
    }
    break;
  }
  var G__24845 = args24841.length;
  switch(G__24845) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args24841.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5612__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__24846 = opts;
  var map__24846__$1 = (!(map__24846 == null) ? map__24846.cljs$lang$protocol_mask$partition0$ & 64 || map__24846.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24846) : map__24846;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24846__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__24846, map__24846__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5307__auto__ = function(map__24846, map__24846__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__24860(s__24861) {
                      return new cljs.core.LazySeq(null, function(map__24846, map__24846__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__24861__$1 = s__24861;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__24861__$1);
                            if (temp__4425__auto__) {
                              var s__24861__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__24861__$2)) {
                                var c__5305__auto__ = cljs.core.chunk_first(s__24861__$2);
                                var size__5306__auto__ = cljs.core.count(c__5305__auto__);
                                var b__24863 = cljs.core.chunk_buffer(size__5306__auto__);
                                if (function() {
                                  var i__24862 = 0;
                                  while (true) {
                                    if (i__24862 < size__5306__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5305__auto__, i__24862);
                                      cljs.core.chunk_append(b__24863, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__24870 = i__24862 + 1;
                                      i__24862 = G__24870;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__24863), cljs$core$thisfn_$_iter__24860(cljs.core.chunk_rest(s__24861__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__24863), null);
                                }
                              } else {
                                var k = cljs.core.first(s__24861__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__24860(cljs.core.rest(s__24861__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__24846, map__24846__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__24846, map__24846__$1, keywordize_keys, keyfn);
                  return iter__5307__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__24846, map__24846__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq24842) {
  var G__24843 = cljs.core.first(seq24842);
  var seq24842__$1 = cljs.core.next(seq24842);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__24843, seq24842__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__24872 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24872) : cljs.core.atom.call(null, G__24872);
  }();
  return function(mem) {
    return function() {
      var G__24873__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__24873 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__24874__i = 0, G__24874__a = new Array(arguments.length - 0);
          while (G__24874__i < G__24874__a.length) {
            G__24874__a[G__24874__i] = arguments[G__24874__i + 0];
            ++G__24874__i;
          }
          args = new cljs.core.IndexedSeq(G__24874__a, 0);
        }
        return G__24873__delegate.call(this, args);
      };
      G__24873.cljs$lang$maxFixedArity = 0;
      G__24873.cljs$lang$applyTo = function(arglist__24875) {
        var args = cljs.core.seq(arglist__24875);
        return G__24873__delegate(args);
      };
      G__24873.cljs$core$IFn$_invoke$arity$variadic = G__24873__delegate;
      return G__24873;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var args24876 = [];
  var len__5593__auto___24881 = arguments.length;
  var i__5594__auto___24882 = 0;
  while (true) {
    if (i__5594__auto___24882 < len__5593__auto___24881) {
      args24876.push(arguments[i__5594__auto___24882]);
      var G__24883 = i__5594__auto___24882 + 1;
      i__5594__auto___24882 = G__24883;
      continue;
    } else {
    }
    break;
  }
  var G__24880 = args24876.length;
  switch(G__24880) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args24876.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5612__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__24885 = ret;
      f = G__24885;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq24877) {
  var G__24878 = cljs.core.first(seq24877);
  var seq24877__$1 = cljs.core.next(seq24877);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__24878, seq24877__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var args24886 = [];
  var len__5593__auto___24889 = arguments.length;
  var i__5594__auto___24890 = 0;
  while (true) {
    if (i__5594__auto___24890 < len__5593__auto___24889) {
      args24886.push(arguments[i__5594__auto___24890]);
      var G__24891 = i__5594__auto___24890 + 1;
      i__5594__auto___24890 = G__24891;
      continue;
    } else {
    }
    break;
  }
  var G__24888 = args24886.length;
  switch(G__24888) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24886.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__24894 = Math.random() * n;
  return Math.floor(G__24894);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__24896 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24896) : cljs.core.atom.call(null, G__24896);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var args__5600__auto__ = [];
  var len__5593__auto___24899 = arguments.length;
  var i__5594__auto___24900 = 0;
  while (true) {
    if (i__5594__auto___24900 < len__5593__auto___24899) {
      args__5600__auto__.push(arguments[i__5594__auto___24900]);
      var G__24901 = i__5594__auto___24900 + 1;
      i__5594__auto___24900 = G__24901;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq24897) {
  var G__24898 = cljs.core.first(seq24897);
  var seq24897__$1 = cljs.core.next(seq24897);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__24898, seq24897__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var args24902 = [];
  var len__5593__auto___24906 = arguments.length;
  var i__5594__auto___24907 = 0;
  while (true) {
    if (i__5594__auto___24907 < len__5593__auto___24906) {
      args24902.push(arguments[i__5594__auto___24907]);
      var G__24908 = i__5594__auto___24907 + 1;
      i__5594__auto___24907 = G__24908;
      continue;
    } else {
    }
    break;
  }
  var G__24904 = args24902.length;
  switch(G__24904) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24902.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__24905 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24905) : cljs.core.deref.call(null, G__24905);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4554__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    var or__4554__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4554__auto____$1) {
      return or__4554__auto____$1;
    } else {
      var and__4542__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4542__auto__) {
        var and__4542__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4542__auto____$1) {
          var and__4542__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4542__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__24910 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__24911 = i + 1;
                ret = G__24910;
                i = G__24911;
                continue;
              }
              break;
            }
          } else {
            return and__4542__auto____$2;
          }
        } else {
          return and__4542__auto____$1;
        }
      } else {
        return and__4542__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var args24912 = [];
  var len__5593__auto___24916 = arguments.length;
  var i__5594__auto___24917 = 0;
  while (true) {
    if (i__5594__auto___24917 < len__5593__auto___24916) {
      args24912.push(arguments[i__5594__auto___24917]);
      var G__24918 = i__5594__auto___24917 + 1;
      i__5594__auto___24917 = G__24918;
      continue;
    } else {
    }
    break;
  }
  var G__24914 = args24912.length;
  switch(G__24914) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24912.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__24915 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24915) : cljs.core.deref.call(null, G__24915);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var args24920 = [];
  var len__5593__auto___24924 = arguments.length;
  var i__5594__auto___24925 = 0;
  while (true) {
    if (i__5594__auto___24925 < len__5593__auto___24924) {
      args24920.push(arguments[i__5594__auto___24925]);
      var G__24926 = i__5594__auto___24925 + 1;
      i__5594__auto___24925 = G__24926;
      continue;
    } else {
    }
    break;
  }
  var G__24922 = args24920.length;
  switch(G__24922) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24920.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__24923 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24923) : cljs.core.deref.call(null, G__24923);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var args24928 = [];
  var len__5593__auto___24932 = arguments.length;
  var i__5594__auto___24933 = 0;
  while (true) {
    if (i__5594__auto___24933 < len__5593__auto___24932) {
      args24928.push(arguments[i__5594__auto___24933]);
      var G__24934 = i__5594__auto___24933 + 1;
      i__5594__auto___24933 = G__24934;
      continue;
    } else {
    }
    break;
  }
  var G__24930 = args24928.length;
  switch(G__24930) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24928.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__24931 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24931) : cljs.core.deref.call(null, G__24931);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var args24936 = [];
  var len__5593__auto___24939 = arguments.length;
  var i__5594__auto___24940 = 0;
  while (true) {
    if (i__5594__auto___24940 < len__5593__auto___24939) {
      args24936.push(arguments[i__5594__auto___24940]);
      var G__24941 = i__5594__auto___24940 + 1;
      i__5594__auto___24940 = G__24941;
      continue;
    } else {
    }
    break;
  }
  var G__24938 = args24936.length;
  switch(G__24938) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24936.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4554__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var args24946 = [];
  var len__5593__auto___24949 = arguments.length;
  var i__5594__auto___24950 = 0;
  while (true) {
    if (i__5594__auto___24950 < len__5593__auto___24949) {
      args24946.push(arguments[i__5594__auto___24950]);
      var G__24951 = i__5594__auto___24950 + 1;
      i__5594__auto___24950 = G__24951;
      continue;
    } else {
    }
    break;
  }
  var G__24948 = args24946.length;
  switch(G__24948) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24946.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__24943_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__24943_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__24943_SHARP_), cljs.core.second(p1__24943_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__24944_SHARP_, p2__24945_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__24944_SHARP_, p2__24945_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__4554__auto__ = cljs.core.truth_(function() {
    var and__4542__auto__ = xprefs;
    if (cljs.core.truth_(and__4542__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4542__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    var or__4554__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__24965 = cljs.core.rest(ps);
          ps = G__24965;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4554__auto____$1)) {
      return or__4554__auto____$1;
    } else {
      var or__4554__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__24966 = cljs.core.rest(ps);
            ps = G__24966;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4554__auto____$2)) {
        return or__4554__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4554__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__24969) {
    var vec__24970 = p__24969;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24970, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24970, 1, null);
    var e = vec__24970;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4554__auto__ = be == null;
        if (or__4554__auto__) {
          return or__4554__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._reset[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto__.call(null, mf);
    } else {
      var m__5191__auto____$1 = cljs.core._reset["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._add_method[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5191__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__5191__auto____$1 = cljs.core._add_method["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5191__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._remove_method[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5191__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5191__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5191__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._prefer_method[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5191__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__5191__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5191__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._get_method[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5191__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5191__auto____$1 = cljs.core._get_method["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5191__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._methods[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto__.call(null, mf);
    } else {
      var m__5191__auto____$1 = cljs.core._methods["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._prefers[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto__.call(null, mf);
    } else {
      var m__5191__auto____$1 = cljs.core._prefers["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto__.call(null, mf);
    } else {
      var m__5191__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto__.call(null, mf);
    } else {
      var m__5191__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__24974 = null;
  var G__24974__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__24974__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__24974__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__24974__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__24974__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__24974__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__24974__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__24974__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__24974__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__24974__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__24974__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__24974__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__24974__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__24974__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__24974__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__24974__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__24974__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__24974__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__24974__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__24974__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__24974__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__24974__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__24974 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__24974__1.call(this, self__);
      case 2:
        return G__24974__2.call(this, self__, a);
      case 3:
        return G__24974__3.call(this, self__, a, b);
      case 4:
        return G__24974__4.call(this, self__, a, b, c);
      case 5:
        return G__24974__5.call(this, self__, a, b, c, d);
      case 6:
        return G__24974__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__24974__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__24974__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__24974__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__24974__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__24974__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__24974__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__24974__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__24974__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__24974__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__24974__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__24974__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__24974__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__24974__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__24974__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__24974__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__24974__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__24974.cljs$core$IFn$_invoke$arity$1 = G__24974__1;
  G__24974.cljs$core$IFn$_invoke$arity$2 = G__24974__2;
  G__24974.cljs$core$IFn$_invoke$arity$3 = G__24974__3;
  G__24974.cljs$core$IFn$_invoke$arity$4 = G__24974__4;
  G__24974.cljs$core$IFn$_invoke$arity$5 = G__24974__5;
  G__24974.cljs$core$IFn$_invoke$arity$6 = G__24974__6;
  G__24974.cljs$core$IFn$_invoke$arity$7 = G__24974__7;
  G__24974.cljs$core$IFn$_invoke$arity$8 = G__24974__8;
  G__24974.cljs$core$IFn$_invoke$arity$9 = G__24974__9;
  G__24974.cljs$core$IFn$_invoke$arity$10 = G__24974__10;
  G__24974.cljs$core$IFn$_invoke$arity$11 = G__24974__11;
  G__24974.cljs$core$IFn$_invoke$arity$12 = G__24974__12;
  G__24974.cljs$core$IFn$_invoke$arity$13 = G__24974__13;
  G__24974.cljs$core$IFn$_invoke$arity$14 = G__24974__14;
  G__24974.cljs$core$IFn$_invoke$arity$15 = G__24974__15;
  G__24974.cljs$core$IFn$_invoke$arity$16 = G__24974__16;
  G__24974.cljs$core$IFn$_invoke$arity$17 = G__24974__17;
  G__24974.cljs$core$IFn$_invoke$arity$18 = G__24974__18;
  G__24974.cljs$core$IFn$_invoke$arity$19 = G__24974__19;
  G__24974.cljs$core$IFn$_invoke$arity$20 = G__24974__20;
  G__24974.cljs$core$IFn$_invoke$arity$21 = G__24974__21;
  G__24974.cljs$core$IFn$_invoke$arity$22 = G__24974__22;
  return G__24974;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args24973) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args24973)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = goog.string.hashCode(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__24975 = self__.uuid;
  var G__24976 = other.uuid;
  return goog.array.defaultCompare(G__24975, G__24976);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var args24977 = [];
  var len__5593__auto___24980 = arguments.length;
  var i__5594__auto___24981 = 0;
  while (true) {
    if (i__5594__auto___24981 < len__5593__auto___24980) {
      args24977.push(arguments[i__5594__auto___24981]);
      var G__24982 = i__5594__auto___24981 + 1;
      i__5594__auto___24981 = G__24982;
      continue;
    } else {
    }
    break;
  }
  var G__24979 = args24977.length;
  switch(G__24979) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24977.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__24984 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__24984) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__24986_SHARP_, p2__24987_SHARP_) {
      goog.object.set(p1__24986_SHARP_, p2__24987_SHARP_, true);
      return p1__24986_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return goog.object.containsKey(cljs.core.js_reserved, x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__24990 = cljs.core.next(ks__$1);
          var G__24991 = [cljs.core.str(function() {
            var G__24989 = ret;
            var G__24989__$1 = !(ret === "") ? [cljs.core.str(G__24989), cljs.core.str("|")].join("") : G__24989;
            return G__24989__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__24990;
          ret = G__24991;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_24992 = 0;
  while (true) {
    if (i_24992 < name.length) {
      var c_24993 = name.charAt(i_24992);
      var sub_24994 = goog.object.get(cljs.core.CHAR_MAP, c_24993);
      if (!(sub_24994 == null)) {
        sb.append(sub_24994);
      } else {
        sb.append(c_24993);
      }
      var G__24995 = i_24992 + 1;
      i_24992 = G__24995;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__24997 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24997, 0, null);
      var G__24998 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__24999 = r.lastIndex;
      ret = G__24998;
      last_match_end = G__24999;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__25004 = function() {
          var G__25002 = ctxt;
          var G__25003 = cljs.core.first(xs);
          return goog.object.get(G__25002, G__25003);
        }();
        var G__25005 = cljs.core.next(xs);
        ctxt = G__25004;
        xs = G__25005;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__25007 = cljs.core._STAR_target_STAR_;
  switch(G__25007) {
    case "nodejs":
      if (COMPILED) {
        return eval(munged_ns);
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(window, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns() {
  var args25009 = [];
  var len__5593__auto___25012 = arguments.length;
  var i__5594__auto___25013 = 0;
  while (true) {
    if (i__5594__auto___25013 < len__5593__auto___25012) {
      args25009.push(arguments[i__5594__auto___25013]);
      var G__25014 = i__5594__auto___25013 + 1;
      i__5594__auto___25013 = G__25014;
      continue;
    } else {
    }
    break;
  }
  var G__25011 = args25009.length;
  switch(G__25011) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25009.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__25017 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25017) : cljs.core.atom.call(null, G__25017);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__25019 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25019) : cljs.core.atom.call(null, G__25019);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join() {
  var args21976 = [];
  var len__5593__auto___21979 = arguments.length;
  var i__5594__auto___21980 = 0;
  while (true) {
    if (i__5594__auto___21980 < len__5593__auto___21979) {
      args21976.push(arguments[i__5594__auto___21980]);
      var G__21981 = i__5594__auto___21980 + 1;
      i__5594__auto___21980 = G__21981;
      continue;
    } else {
    }
    break;
  }
  var G__21978 = args21976.length;
  switch(G__21978) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21976.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__21983 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__21984 = cljs.core.next.call(null, coll__$1);
      sb = G__21983;
      coll__$1 = G__21984;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__21985 = sb;
      var G__21986 = coll__$2;
      sb = G__21985;
      coll__$1 = G__21986;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__21987 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__21987;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__21991 = cljs.core._EQ__EQ_;
    var expr__21992 = limit;
    if (cljs.core.truth_(pred__21991.call(null, 1, expr__21992))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__21991.call(null, 2, expr__21992))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split() {
  var args21994 = [];
  var len__5593__auto___21997 = arguments.length;
  var i__5594__auto___21998 = 0;
  while (true) {
    if (i__5594__auto___21998 < len__5593__auto___21997) {
      args21994.push(arguments[i__5594__auto___21998]);
      var G__21999 = i__5594__auto___21998 + 1;
      i__5594__auto___21998 = G__21999;
      continue;
    } else {
    }
    break;
  }
  var G__21996 = args21994.length;
  switch(G__21996) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21994.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__22001 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__22002 = limit__$1 - 1;
          var G__22003 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__22001;
          limit__$1 = G__22002;
          parts = G__22003;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__22004 = index - 1;
        index = G__22004;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__22005 = index + 1;
      index = G__22005;
      continue;
    }
    break;
  }
};
goog.provide("tiltontec.util.base");
goog.require("cljs.core");
goog.require("clojure.string");
cljs.core.enable_console_print_BANG_.call(null);
tiltontec.util.base._STAR_trx_QMARK__STAR_ = true;
tiltontec.util.base._STAR_trc_ensure_STAR_ = null;
tiltontec.util.base._STAR_trx_path_id_STAR_ = null;
tiltontec.util.base._STAR_trxdepth_STAR_ = 0;
tiltontec.util.base.last_trc = cljs.core.atom.call(null, 0);
tiltontec.util.base.call_trc$ = function tiltontec$util$base$call_trc$(s, bits) {
  return [cljs.core.str(s), cljs.core.str(": "), cljs.core.str([cljs.core.str(bits)].join(""))].join("");
};
tiltontec.util.base.call_trc = function tiltontec$util$base$call_trc() {
  var args__5600__auto__ = [];
  var len__5593__auto___33911 = arguments.length;
  var i__5594__auto___33912 = 0;
  while (true) {
    if (i__5594__auto___33912 < len__5593__auto___33911) {
      args__5600__auto__.push(arguments[i__5594__auto___33912]);
      var G__33913 = i__5594__auto___33912 + 1;
      i__5594__auto___33912 = G__33913;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic = function(s, os) {
  if (cljs.core.truth_(tiltontec.util.base._STAR_trx_QMARK__STAR_)) {
    if (cljs.core.truth_(s)) {
      var path = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, tiltontec.util.base._STAR_trxdepth_STAR_, "."));
      return cljs.core.println.call(null, path, tiltontec.util.base.call_trc$.call(null, s, os));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
tiltontec.util.base.call_trc.cljs$lang$maxFixedArity = 1;
tiltontec.util.base.call_trc.cljs$lang$applyTo = function(seq33909) {
  var G__33910 = cljs.core.first.call(null, seq33909);
  var seq33909__$1 = cljs.core.next.call(null, seq33909);
  return tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic(G__33910, seq33909__$1);
};
tiltontec.util.base.trx = function tiltontec$util$base$trx() {
  var args__5600__auto__ = [];
  var len__5593__auto___33918 = arguments.length;
  var i__5594__auto___33919 = 0;
  while (true) {
    if (i__5594__auto___33919 < len__5593__auto___33918) {
      args__5600__auto__.push(arguments[i__5594__auto___33919]);
      var G__33920 = i__5594__auto___33919 + 1;
      i__5594__auto___33919 = G__33920;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, label, vals) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "call-trc", "tiltontec.util.base/call-trc", 242817092, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, !(label == null) ? [cljs.core.str(label)].join("") : null), vals)));
};
tiltontec.util.base.trx.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.trx.cljs$lang$applyTo = function(seq33914) {
  var G__33915 = cljs.core.first.call(null, seq33914);
  var seq33914__$1 = cljs.core.next.call(null, seq33914);
  var G__33916 = cljs.core.first.call(null, seq33914__$1);
  var seq33914__$2 = cljs.core.next.call(null, seq33914__$1);
  var G__33917 = cljs.core.first.call(null, seq33914__$2);
  var seq33914__$3 = cljs.core.next.call(null, seq33914__$2);
  return tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic(G__33915, G__33916, G__33917, seq33914__$3);
};
tiltontec.util.base.trx.cljs$lang$macro = true;
tiltontec.util.base.call_wtrx = function tiltontec$util$base$call_wtrx(fn, lo, hi, trxargs) {
  var _STAR_trxdepth_STAR_33922 = tiltontec.util.base._STAR_trxdepth_STAR_;
  tiltontec.util.base._STAR_trxdepth_STAR_ = tiltontec.util.base._STAR_trxdepth_STAR_ + 1;
  try {
    if (lo <= tiltontec.util.base._STAR_trxdepth_STAR_ && tiltontec.util.base._STAR_trxdepth_STAR_ <= hi) {
      cljs.core.apply.call(null, tiltontec.util.base.call_trc, trxargs);
    } else {
      if (tiltontec.util.base._STAR_trxdepth_STAR_ > hi) {
        throw new Error([cljs.core.str("wtrx exceeded max depth "), cljs.core.str(hi), cljs.core.str(":"), cljs.core.str(cljs.core.apply.call(null, tiltontec.util.base.call_trc$, cljs.core.first.call(null, trxargs), cljs.core.rest.call(null, trxargs)))].join(""));
      } else {
      }
    }
    return fn.call(null);
  } finally {
    tiltontec.util.base._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_33922;
  }
};
tiltontec.util.base.wtrx = function tiltontec$util$base$wtrx() {
  var args__5600__auto__ = [];
  var len__5593__auto___33929 = arguments.length;
  var i__5594__auto___33930 = 0;
  while (true) {
    if (i__5594__auto___33930 < len__5593__auto___33929) {
      args__5600__auto__.push(arguments[i__5594__auto___33930]);
      var G__33931 = i__5594__auto___33930 + 1;
      i__5594__auto___33930 = G__33931;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__33927, body) {
  var vec__33928 = p__33927;
  var lo = cljs.core.nth.call(null, vec__33928, 0, null);
  var hi = cljs.core.nth.call(null, vec__33928, 1, null);
  var trxargs = cljs.core.nthnext.call(null, vec__33928, 2);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "call-wtrx", "tiltontec.util.base/call-wtrx", -151750095, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, 
  null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null))))), body)))), cljs.core._conj.call(null, cljs.core.List.EMPTY, lo), cljs.core._conj.call(null, cljs.core.List.EMPTY, hi), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", 
  "list", "cljs.core/list", -1331406371, null)), trxargs)))))));
};
tiltontec.util.base.wtrx.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.wtrx.cljs$lang$applyTo = function(seq33923) {
  var G__33924 = cljs.core.first.call(null, seq33923);
  var seq33923__$1 = cljs.core.next.call(null, seq33923);
  var G__33925 = cljs.core.first.call(null, seq33923__$1);
  var seq33923__$2 = cljs.core.next.call(null, seq33923__$1);
  var G__33926 = cljs.core.first.call(null, seq33923__$2);
  var seq33923__$3 = cljs.core.next.call(null, seq33923__$2);
  return tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic(G__33924, G__33925, G__33926, seq33923__$3);
};
tiltontec.util.base.wtrx.cljs$lang$macro = true;
tiltontec.util.base.prog1 = function tiltontec$util$base$prog1() {
  var args__5600__auto__ = [];
  var len__5593__auto___33936 = arguments.length;
  var i__5594__auto___33937 = 0;
  while (true) {
    if (i__5594__auto___33937 < len__5593__auto___33936) {
      args__5600__auto__.push(arguments[i__5594__auto___33937]);
      var G__33938 = i__5594__auto___33937 + 1;
      i__5594__auto___33937 = G__33938;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "result__33932__auto__", "result__33932__auto__", 
  1166983264, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.first.call(null, body))))))), cljs.core.rest.call(null, body), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "result__33932__auto__", "result__33932__auto__", 1166983264, null)))));
};
tiltontec.util.base.prog1.cljs$lang$maxFixedArity = 2;
tiltontec.util.base.prog1.cljs$lang$applyTo = function(seq33933) {
  var G__33934 = cljs.core.first.call(null, seq33933);
  var seq33933__$1 = cljs.core.next.call(null, seq33933);
  var G__33935 = cljs.core.first.call(null, seq33933__$1);
  var seq33933__$2 = cljs.core.next.call(null, seq33933__$1);
  return tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic(G__33934, G__33935, seq33933__$2);
};
tiltontec.util.base.prog1.cljs$lang$macro = true;
tiltontec.util.base.b_when = function tiltontec$util$base$b_when() {
  var args__5600__auto__ = [];
  var len__5593__auto___33944 = arguments.length;
  var i__5594__auto___33945 = 0;
  while (true) {
    if (i__5594__auto___33945 < len__5593__auto___33944) {
      args__5600__auto__.push(arguments[i__5594__auto___33945]);
      var G__33946 = i__5594__auto___33945 + 1;
      i__5594__auto___33945 = G__33946;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, var$, form, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-let", "cljs.core/when-let", -2049838349, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, var$), cljs.core._conj.call(null, cljs.core.List.EMPTY, form)))))), 
  body)));
};
tiltontec.util.base.b_when.cljs$lang$maxFixedArity = 4;
tiltontec.util.base.b_when.cljs$lang$applyTo = function(seq33939) {
  var G__33940 = cljs.core.first.call(null, seq33939);
  var seq33939__$1 = cljs.core.next.call(null, seq33939);
  var G__33941 = cljs.core.first.call(null, seq33939__$1);
  var seq33939__$2 = cljs.core.next.call(null, seq33939__$1);
  var G__33942 = cljs.core.first.call(null, seq33939__$2);
  var seq33939__$3 = cljs.core.next.call(null, seq33939__$2);
  var G__33943 = cljs.core.first.call(null, seq33939__$3);
  var seq33939__$4 = cljs.core.next.call(null, seq33939__$3);
  return tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic(G__33940, G__33941, G__33942, G__33943, seq33939__$4);
};
tiltontec.util.base.b_when.cljs$lang$macro = true;
tiltontec.util.base.unless = function tiltontec$util$base$unless() {
  var args__5600__auto__ = [];
  var len__5593__auto___33951 = arguments.length;
  var i__5594__auto___33952 = 0;
  while (true) {
    if (i__5594__auto___33952 < len__5593__auto___33951) {
      args__5600__auto__.push(arguments[i__5594__auto___33952]);
      var G__33953 = i__5594__auto___33952 + 1;
      i__5594__auto___33952 = G__33953;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, form, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-not", "cljs.core/when-not", -556141047, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, form), body)));
};
tiltontec.util.base.unless.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.unless.cljs$lang$applyTo = function(seq33947) {
  var G__33948 = cljs.core.first.call(null, seq33947);
  var seq33947__$1 = cljs.core.next.call(null, seq33947);
  var G__33949 = cljs.core.first.call(null, seq33947__$1);
  var seq33947__$2 = cljs.core.next.call(null, seq33947__$1);
  var G__33950 = cljs.core.first.call(null, seq33947__$2);
  var seq33947__$3 = cljs.core.next.call(null, seq33947__$2);
  return tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic(G__33948, G__33949, G__33950, seq33947__$3);
};
tiltontec.util.base.unless.cljs$lang$macro = true;
tiltontec.util.base.def_rmap_slots = function tiltontec$util$base$def_rmap_slots() {
  var args__5600__auto__ = [];
  var len__5593__auto___33958 = arguments.length;
  var i__5594__auto___33959 = 0;
  while (true) {
    if (i__5594__auto___33959 < len__5593__auto___33958) {
      args__5600__auto__.push(arguments[i__5594__auto___33959]);
      var G__33960 = i__5594__auto___33959 + 1;
      i__5594__auto___33959 = G__33960;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, reader_prefix, slots) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core.map.call(null, function(slot_SHARP_) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defn", "cljs.core/defn", -1606493717, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.symbol.call(null, [cljs.core.str(function() {
      var or__4554__auto__ = reader_prefix;
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return "";
      }
    }()), cljs.core.str(slot_SHARP_)].join(""))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    cljs.core.keyword.call(null, slot_SHARP_)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))))))))));
  }, slots))));
};
tiltontec.util.base.def_rmap_slots.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.def_rmap_slots.cljs$lang$applyTo = function(seq33954) {
  var G__33955 = cljs.core.first.call(null, seq33954);
  var seq33954__$1 = cljs.core.next.call(null, seq33954);
  var G__33956 = cljs.core.first.call(null, seq33954__$1);
  var seq33954__$2 = cljs.core.next.call(null, seq33954__$1);
  var G__33957 = cljs.core.first.call(null, seq33954__$2);
  var seq33954__$3 = cljs.core.next.call(null, seq33954__$2);
  return tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic(G__33955, G__33956, G__33957, seq33954__$3);
};
tiltontec.util.base.def_rmap_slots.cljs$lang$macro = true;
tiltontec.util.base.def_rmap_meta_slots = function tiltontec$util$base$def_rmap_meta_slots() {
  var args__5600__auto__ = [];
  var len__5593__auto___33965 = arguments.length;
  var i__5594__auto___33966 = 0;
  while (true) {
    if (i__5594__auto___33966 < len__5593__auto___33965) {
      args__5600__auto__.push(arguments[i__5594__auto___33966]);
      var G__33967 = i__5594__auto___33966 + 1;
      i__5594__auto___33966 = G__33967;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, reader_prefix, slots) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core.map.call(null, function(slot_SHARP_) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defn", "cljs.core/defn", -1606493717, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.symbol.call(null, [cljs.core.str(function() {
      var or__4554__auto__ = reader_prefix;
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return "";
      }
    }()), cljs.core.str(slot_SHARP_)].join(""))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    cljs.core.keyword.call(null, slot_SHARP_)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "meta", "cljs.core/meta", -748218346, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))))))))));
  }, slots))));
};
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$applyTo = function(seq33961) {
  var G__33962 = cljs.core.first.call(null, seq33961);
  var seq33961__$1 = cljs.core.next.call(null, seq33961);
  var G__33963 = cljs.core.first.call(null, seq33961__$1);
  var seq33961__$2 = cljs.core.next.call(null, seq33961__$1);
  var G__33964 = cljs.core.first.call(null, seq33961__$2);
  var seq33961__$3 = cljs.core.next.call(null, seq33961__$2);
  return tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic(G__33962, G__33963, G__33964, seq33961__$3);
};
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$macro = true;
goog.provide("tiltontec.util.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("tiltontec.util.base");
cljs.core._STAR_print_level_STAR_ = 2;
tiltontec.util.core.type_of = function tiltontec$util$core$type_of(x) {
  return cljs.core.type.call(null, x);
};
tiltontec.util.core.set_ify = function tiltontec$util$core$set_ify(x) {
  if (x == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return cljs.core.set.call(null, x);
    } else {
      return cljs.core.PersistentHashSet.fromArray([x], true);
    }
  }
};
tiltontec.util.core.cl_find = function tiltontec$util$core$cl_find(sought, coll) {
  if (sought == null) {
    return null;
  } else {
    return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([sought], true), coll);
  }
};
tiltontec.util.core.ia_ref = function tiltontec$util$core$ia_ref(x) {
  return cljs.core.atom.call(null, x);
};
tiltontec.util.core.any_ref_QMARK_ = function tiltontec$util$core$any_ref_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
tiltontec.util.core.rmap_setf = function tiltontec$util$core$rmap_setf(p__33970, new_value) {
  var vec__33972 = p__33970;
  var slot = cljs.core.nth.call(null, vec__33972, 0, null);
  var ref = cljs.core.nth.call(null, vec__33972, 1, null);
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))].join(""));
  }
  cljs.core.swap_BANG_.call(null, ref, cljs.core.assoc, slot, new_value);
  return new_value;
};
tiltontec.util.core.rmap_meta_setf = function tiltontec$util$core$rmap_meta_setf(p__33973, new_value) {
  var vec__33975 = p__33973;
  var slot = cljs.core.nth.call(null, vec__33975, 0, null);
  var ref = cljs.core.nth.call(null, vec__33975, 1, null);
  if (cljs.core.truth_(cljs.core.meta.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  cljs.core.alter_meta_BANG_.call(null, ref, cljs.core.assoc, slot, new_value);
  return new_value;
};
if (typeof tiltontec.util.core.err !== "undefined") {
} else {
  tiltontec.util.core.err = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.util.core", "err"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function() {
        var G__33976__delegate = function(a1, args) {
          return cljs.core.fn_QMARK_.call(null, a1);
        };
        var G__33976 = function(a1, var_args) {
          var args = null;
          if (arguments.length > 1) {
            var G__33977__i = 0, G__33977__a = new Array(arguments.length - 1);
            while (G__33977__i < G__33977__a.length) {
              G__33977__a[G__33977__i] = arguments[G__33977__i + 1];
              ++G__33977__i;
            }
            args = new cljs.core.IndexedSeq(G__33977__a, 0);
          }
          return G__33976__delegate.call(this, a1, args);
        };
        G__33976.cljs$lang$maxFixedArity = 1;
        G__33976.cljs$lang$applyTo = function(arglist__33978) {
          var a1 = cljs.core.first(arglist__33978);
          var args = cljs.core.rest(arglist__33978);
          return G__33976__delegate(a1, args);
        };
        G__33976.cljs$core$IFn$_invoke$arity$variadic = G__33976__delegate;
        return G__33976;
      }();
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.util.core.err, true, function() {
  var G__33979__delegate = function(fn, mas) {
    return tiltontec.util.core.err.call(null, cljs.core.apply.call(null, fn, mas));
  };
  var G__33979 = function(fn, var_args) {
    var mas = null;
    if (arguments.length > 1) {
      var G__33980__i = 0, G__33980__a = new Array(arguments.length - 1);
      while (G__33980__i < G__33980__a.length) {
        G__33980__a[G__33980__i] = arguments[G__33980__i + 1];
        ++G__33980__i;
      }
      mas = new cljs.core.IndexedSeq(G__33980__a, 0);
    }
    return G__33979__delegate.call(this, fn, mas);
  };
  G__33979.cljs$lang$maxFixedArity = 1;
  G__33979.cljs$lang$applyTo = function(arglist__33981) {
    var fn = cljs.core.first(arglist__33981);
    var mas = cljs.core.rest(arglist__33981);
    return G__33979__delegate(fn, mas);
  };
  G__33979.cljs$core$IFn$_invoke$arity$variadic = G__33979__delegate;
  return G__33979;
}());
cljs.core._add_method.call(null, tiltontec.util.core.err, new cljs.core.Keyword(null, "default", "default", -1987822328), function() {
  var G__33982__delegate = function(bits) {
    throw new Error(clojure.string.join.call(null, " ", cljs.core.cons.call(null, "jz/err\x3e", bits)));
  };
  var G__33982 = function(var_args) {
    var bits = null;
    if (arguments.length > 0) {
      var G__33983__i = 0, G__33983__a = new Array(arguments.length - 0);
      while (G__33983__i < G__33983__a.length) {
        G__33983__a[G__33983__i] = arguments[G__33983__i + 0];
        ++G__33983__i;
      }
      bits = new cljs.core.IndexedSeq(G__33983__a, 0);
    }
    return G__33982__delegate.call(this, bits);
  };
  G__33982.cljs$lang$maxFixedArity = 0;
  G__33982.cljs$lang$applyTo = function(arglist__33984) {
    var bits = cljs.core.seq(arglist__33984);
    return G__33982__delegate(bits);
  };
  G__33982.cljs$core$IFn$_invoke$arity$variadic = G__33982__delegate;
  return G__33982;
}());
tiltontec.util.core.flz = function tiltontec$util$core$flz(x) {
  if (cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, x), cljs.core.LazySeq)) {
    return cljs.core.vec.call(null, cljs.core.doall.call(null, x));
  } else {
    return x;
  }
};
tiltontec.util.core.wtrx_test = function tiltontec$util$core$wtrx_test(n) {
  return tiltontec.util.base.call_wtrx.call(null, function() {
    if (n > 0) {
      return tiltontec$util$core$wtrx_test.call(null, n - 1);
    } else {
      return null;
    }
  }, 0, 10, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, n), "test"));
};
tiltontec.util.core.slot_users = function tiltontec$util$core$slot_users(me, slot) {
  return cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "slotq", "slotq", 1456717980), cljs.core.map.call(null, cljs.core.deref, (new cljs.core.Keyword(null, "callers", "callers", -1991542784)).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null, slot.call(null, cljs.core.deref.call(null, me))), cljs.core.PersistentHashSet.EMPTY))));
};
tiltontec.util.core.slot_useds = function tiltontec$util$core$slot_useds(me, slot) {
  return cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), cljs.core.map.call(null, cljs.core.deref, (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null, slot.call(null, cljs.core.deref.call(null, me))), cljs.core.PersistentHashSet.EMPTY))));
};
tiltontec.util.core.make_fifo_queue = function tiltontec$util$core$make_fifo_queue() {
  return cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
};
tiltontec.util.core.fifo_data = function tiltontec$util$core$fifo_data(q) {
  return cljs.core.deref.call(null, q);
};
tiltontec.util.core.fifo_clear = function tiltontec$util$core$fifo_clear(q) {
  return cljs.core.swap_BANG_.call(null, q, cljs.core.empty);
};
tiltontec.util.core.fifo_empty_QMARK_ = function tiltontec$util$core$fifo_empty_QMARK_(q) {
  return cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, q));
};
tiltontec.util.core.fifo_peek = function tiltontec$util$core$fifo_peek(q) {
  return cljs.core.first.call(null, cljs.core.deref.call(null, q));
};
tiltontec.util.core.fifo_add = function tiltontec$util$core$fifo_add(q, new$) {
  return cljs.core.swap_BANG_.call(null, q, cljs.core.conj, new$);
};
tiltontec.util.core.fifo_pop = function tiltontec$util$core$fifo_pop(q) {
  if (cljs.core.truth_(tiltontec.util.core.fifo_empty_QMARK_.call(null, q))) {
    return null;
  } else {
    var result__31774__auto__ = cljs.core.first.call(null, cljs.core.deref.call(null, q));
    cljs.core.swap_BANG_.call(null, q, cljs.core.subvec, 1);
    return result__31774__auto__;
  }
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print() {
  var args__5600__auto__ = [];
  var len__5593__auto___20862 = arguments.length;
  var i__5594__auto___20863 = 0;
  while (true) {
    if (i__5594__auto___20863 < len__5593__auto___20862) {
      args__5600__auto__.push(arguments[i__5594__auto___20863]);
      var G__20864 = i__5594__auto___20863 + 1;
      i__5594__auto___20863 = G__20864;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq20861) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq20861));
};
cljs.pprint.println = function cljs$pprint$println() {
  var args__5600__auto__ = [];
  var len__5593__auto___20866 = arguments.length;
  var i__5594__auto___20867 = 0;
  while (true) {
    if (i__5594__auto___20867 < len__5593__auto___20866) {
      args__5600__auto__.push(arguments[i__5594__auto___20867]);
      var G__20868 = i__5594__auto___20867 + 1;
      i__5594__auto___20867 = G__20868;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq20865) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq20865));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__20872 = cljs.core._EQ_;
    var expr__20873 = c;
    if (cljs.core.truth_(pred__20872.call(null, "\b", expr__20873))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__20872.call(null, "\t", expr__20873))) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(pred__20872.call(null, "\n", expr__20873))) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(pred__20872.call(null, "\f", expr__20873))) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(pred__20872.call(null, "\r", expr__20873))) {
              return "\\return";
            } else {
              if (cljs.core.truth_(pred__20872.call(null, '"', expr__20873))) {
                return '\\"';
              } else {
                if (cljs.core.truth_(pred__20872.call(null, "\\", expr__20873))) {
                  return "\\\\";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr() {
  var args__5600__auto__ = [];
  var len__5593__auto___20876 = arguments.length;
  var i__5594__auto___20877 = 0;
  while (true) {
    if (i__5594__auto___20877 < len__5593__auto___20876) {
      args__5600__auto__.push(arguments[i__5594__auto___20877]);
      var G__20878 = i__5594__auto___20877 + 1;
      i__5594__auto___20877 = G__20878;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq20875) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq20875));
};
cljs.pprint.prn = function cljs$pprint$prn() {
  var args__5600__auto__ = [];
  var len__5593__auto___20880 = arguments.length;
  var i__5594__auto___20881 = 0;
  while (true) {
    if (i__5594__auto___20881 < len__5593__auto___20880) {
      args__5600__auto__.push(arguments[i__5594__auto___20881]);
      var G__20882 = i__5594__auto___20881 + 1;
      i__5594__auto___20881 = G__20882;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq20879) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq20879));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__20884 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__20884, 0, null);
      var new_context = cljs.core.nth.call(null, vec__20884, 1, null);
      var G__20885 = new_context;
      var G__20886 = remainder;
      var G__20887 = cljs.core.conj.call(null, acc, result);
      context = G__20885;
      lis__$1 = G__20886;
      acc = G__20887;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__20889 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__20889, 0, null);
    var new_context = cljs.core.nth.call(null, vec__20889, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__20890 = new_context;
      var G__20891 = cljs.core.conj.call(null, acc, result);
      context = G__20890;
      acc = G__20891;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__20893 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__20893, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__20893, 1, null);
    var new_context = cljs.core.nth.call(null, vec__20893, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__20894 = new_context;
      var G__20895 = cljs.core.conj.call(null, acc, result);
      context = G__20894;
      acc = G__20895;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5307__auto__ = function cljs$pprint$unzip_map_$_iter__20920(s__20921) {
      return new cljs.core.LazySeq(null, function() {
        var s__20921__$1 = s__20921;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__20921__$1);
          if (temp__4425__auto__) {
            var s__20921__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20921__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__20921__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__20923 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__20922 = 0;
                while (true) {
                  if (i__20922 < size__5306__auto__) {
                    var vec__20928 = cljs.core._nth.call(null, c__5305__auto__, i__20922);
                    var k = cljs.core.nth.call(null, vec__20928, 0, null);
                    var vec__20929 = cljs.core.nth.call(null, vec__20928, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__20929, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__20929, 1, null);
                    cljs.core.chunk_append.call(null, b__20923, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__20944 = i__20922 + 1;
                    i__20922 = G__20944;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20923), cljs$pprint$unzip_map_$_iter__20920.call(null, cljs.core.chunk_rest.call(null, s__20921__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20923), null);
              }
            } else {
              var vec__20930 = cljs.core.first.call(null, s__20921__$2);
              var k = cljs.core.nth.call(null, vec__20930, 0, null);
              var vec__20931 = cljs.core.nth.call(null, vec__20930, 1, null);
              var v1 = cljs.core.nth.call(null, vec__20931, 0, null);
              var v2 = cljs.core.nth.call(null, vec__20931, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__20920.call(null, cljs.core.rest.call(null, s__20921__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5307__auto__ = function cljs$pprint$unzip_map_$_iter__20932(s__20933) {
      return new cljs.core.LazySeq(null, function() {
        var s__20933__$1 = s__20933;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__20933__$1);
          if (temp__4425__auto__) {
            var s__20933__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20933__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__20933__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__20935 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__20934 = 0;
                while (true) {
                  if (i__20934 < size__5306__auto__) {
                    var vec__20940 = cljs.core._nth.call(null, c__5305__auto__, i__20934);
                    var k = cljs.core.nth.call(null, vec__20940, 0, null);
                    var vec__20941 = cljs.core.nth.call(null, vec__20940, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__20941, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__20941, 1, null);
                    cljs.core.chunk_append.call(null, b__20935, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__20945 = i__20934 + 1;
                    i__20934 = G__20945;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20935), cljs$pprint$unzip_map_$_iter__20932.call(null, cljs.core.chunk_rest.call(null, s__20933__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20935), null);
              }
            } else {
              var vec__20942 = cljs.core.first.call(null, s__20933__$2);
              var k = cljs.core.nth.call(null, vec__20942, 0, null);
              var vec__20943 = cljs.core.nth.call(null, vec__20942, 1, null);
              var v1 = cljs.core.nth.call(null, vec__20943, 0, null);
              var v2 = cljs.core.nth.call(null, vec__20943, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__20932.call(null, cljs.core.rest.call(null, s__20933__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5307__auto__ = function cljs$pprint$tuple_map_$_iter__20954(s__20955) {
      return new cljs.core.LazySeq(null, function() {
        var s__20955__$1 = s__20955;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__20955__$1);
          if (temp__4425__auto__) {
            var s__20955__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20955__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__20955__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__20957 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__20956 = 0;
                while (true) {
                  if (i__20956 < size__5306__auto__) {
                    var vec__20960 = cljs.core._nth.call(null, c__5305__auto__, i__20956);
                    var k = cljs.core.nth.call(null, vec__20960, 0, null);
                    var v = cljs.core.nth.call(null, vec__20960, 1, null);
                    cljs.core.chunk_append.call(null, b__20957, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__20962 = i__20956 + 1;
                    i__20956 = G__20962;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20957), cljs$pprint$tuple_map_$_iter__20954.call(null, cljs.core.chunk_rest.call(null, s__20955__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20957), null);
              }
            } else {
              var vec__20961 = cljs.core.first.call(null, s__20955__$2);
              var k = cljs.core.nth.call(null, vec__20961, 0, null);
              var v = cljs.core.nth.call(null, vec__20961, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__20954.call(null, cljs.core.rest.call(null, s__20955__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__20963 = n - 1;
          n = G__20963;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__20964 = n + 1;
        n = G__20964;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.fromArray([val], true);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__20965 = pos + 1;
      pos = G__20965;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = {};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__5190__auto__ = pp == null ? null : pp;
    var m__5191__auto__ = cljs.pprint._ppflush[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.call(null, pp);
    } else {
      var m__5191__auto____$1 = cljs.pprint._ppflush["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer() {
  var args20969 = [];
  var len__5593__auto___20978 = arguments.length;
  var i__5594__auto___20979 = 0;
  while (true) {
    if (i__5594__auto___20979 < len__5593__auto___20978) {
      args20969.push(arguments[i__5594__auto___20979]);
      var G__20980 = i__5594__auto___20979 + 1;
      i__5594__auto___20979 = G__20980;
      continue;
    } else {
    }
    break;
  }
  var G__20971 = args20969.length;
  switch(G__20971) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20969.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs.pprint.t20972 !== "undefined") {
  } else {
    cljs.pprint.t20972 = function(writer, max_columns, fields, meta20973) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta20973 = meta20973;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t20972.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_20974, meta20973__$1) {
        var self__ = this;
        var _20974__$1 = this;
        return new cljs.pprint.t20972(self__.writer, self__.max_columns, self__.fields, meta20973__$1);
      };
    }(fields);
    cljs.pprint.t20972.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_20974) {
        var self__ = this;
        var _20974__$1 = this;
        return self__.meta20973;
      };
    }(fields);
    cljs.pprint.t20972.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t20972.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(fields);
    cljs.pprint.t20972.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__20975 = cljs.core._EQ_;
        var expr__20976 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__20975.call(null, String, expr__20976))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
          } else {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(s, nl, pred__20975, expr__20976, this$__$1, fields) {
              return function(p1__20968_SHARP_) {
                return cljs.core._EQ_.call(null, p1__20968_SHARP_, "\n");
              };
            }(s, nl, pred__20975, expr__20976, this$__$1, fields), s)));
          }
          return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__20975.call(null, Number, expr__20976))) {
            return cljs.pprint.c_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__20976)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t20972.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta20973", "meta20973", -427412063, null)], null);
      };
    }(fields);
    cljs.pprint.t20972.cljs$lang$type = true;
    cljs.pprint.t20972.cljs$lang$ctorStr = "cljs.pprint/t20972";
    cljs.pprint.t20972.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
        return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t20972");
      };
    }(fields);
    cljs.pprint.__GT_t20972 = function(fields) {
      return function cljs$pprint$__GT_t20972(writer__$1, max_columns__$1, fields__$1, meta20973) {
        return new cljs.pprint.t20972(writer__$1, max_columns__$1, fields__$1, meta20973);
      };
    }(fields);
  }
  return new cljs.pprint.t20972(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k20983, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__20985 = k20983 instanceof cljs.core.Keyword ? k20983.fqn : null;
  switch(G__20985) {
    case "suffix":
      return self__.suffix;
      break;
    case "indent":
      return self__.indent;
      break;
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20983, else__5152__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = true;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__20982) {
  var self__ = this;
  var G__20982__$1 = this;
  return new cljs.core.RecordIter(0, G__20982__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__20982) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__20986 = cljs.core.keyword_identical_QMARK_;
  var expr__20987 = k__5157__auto__;
  if (cljs.core.truth_(pred__20986.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__20987))) {
    return new cljs.pprint.logical_block(G__20982, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20986.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__20987))) {
      return new cljs.pprint.logical_block(self__.parent, G__20982, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20986.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__20987))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__20982, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20986.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__20987))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__20982, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__20986.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__20987))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__20982, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__20986.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__20987))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__20982, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__20986.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__20987))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__20982, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__20986.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__20987))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__20982, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__20986.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__20987))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__20982, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__20986.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__20987))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__20982, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__20982), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__20982) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__20982, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__20984) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__20984), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__20984), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__20984), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__20984), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__20984), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__20984), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__20984), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__20984), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__20984), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__20984), null, cljs.core.dissoc.call(null, G__20984, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", 
  "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__20990 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__20990;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k20992, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__20994 = k20992 instanceof cljs.core.Keyword ? k20992.fqn : null;
  switch(G__20994) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20992, else__5152__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = true;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__20991) {
  var self__ = this;
  var G__20991__$1 = this;
  return new cljs.core.RecordIter(0, G__20991__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__20991) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__20995 = cljs.core.keyword_identical_QMARK_;
  var expr__20996 = k__5157__auto__;
  if (cljs.core.truth_(pred__20995.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__20996))) {
    return new cljs.pprint.buffer_blob(G__20991, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20995.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__20996))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__20991, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20995.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__20996))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__20991, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20995.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__20996))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__20991, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__20995.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__20996))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__20991, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__20991), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], 
  null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__20991) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__20991, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__20993) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__20993), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__20993), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__20993), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__20993), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__20993), null, cljs.core.dissoc.call(null, G__20993, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__8020__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__8020__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k21000, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__21002 = k21000 instanceof cljs.core.Keyword ? k21000.fqn : null;
  switch(G__21002) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k21000, else__5152__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__20999) {
  var self__ = this;
  var G__20999__$1 = this;
  return new cljs.core.RecordIter(0, G__20999__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__20999) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__21003 = cljs.core.keyword_identical_QMARK_;
  var expr__21004 = k__5157__auto__;
  if (cljs.core.truth_(pred__21003.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__21004))) {
    return new cljs.pprint.nl_t(G__20999, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21003.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__21004))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__20999, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__21003.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__21004))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__20999, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__21003.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__21004))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__20999, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__21003.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__21004))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__20999, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__20999), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__20999) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__20999, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__21001) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__21001), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__21001), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__21001), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__21001), (new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__21001), null, cljs.core.dissoc.call(null, G__21001, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__8020__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__8020__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k21008, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__21010 = k21008 instanceof cljs.core.Keyword ? k21008.fqn : null;
  switch(G__21010) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k21008, else__5152__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__21007) {
  var self__ = this;
  var G__21007__$1 = this;
  return new cljs.core.RecordIter(0, G__21007__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__21007) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__21011 = cljs.core.keyword_identical_QMARK_;
  var expr__21012 = k__5157__auto__;
  if (cljs.core.truth_(pred__21011.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__21012))) {
    return new cljs.pprint.start_block_t(G__21007, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21011.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__21012))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__21007, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__21011.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__21012))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__21007, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__21011.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__21012))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__21007, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__21007), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__21007) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__21007, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__21009) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__21009), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__21009), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__21009), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__21009), null, cljs.core.dissoc.call(null, 
  G__21009, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__8020__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__8020__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k21016, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__21018 = k21016 instanceof cljs.core.Keyword ? k21016.fqn : null;
  switch(G__21018) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k21016, else__5152__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__21015) {
  var self__ = this;
  var G__21015__$1 = this;
  return new cljs.core.RecordIter(0, G__21015__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__21015) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__21019 = cljs.core.keyword_identical_QMARK_;
  var expr__21020 = k__5157__auto__;
  if (cljs.core.truth_(pred__21019.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__21020))) {
    return new cljs.pprint.end_block_t(G__21015, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21019.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__21020))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__21015, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__21019.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__21020))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__21015, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__21019.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__21020))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__21015, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__21015), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__21015) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__21015, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__21017) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__21017), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__21017), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__21017), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__21017), null, cljs.core.dissoc.call(null, 
  G__21017, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__8020__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__8020__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k21024, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__21026 = k21024 instanceof cljs.core.Keyword ? k21024.fqn : null;
  switch(G__21026) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k21024, else__5152__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__21023) {
  var self__ = this;
  var G__21023__$1 = this;
  return new cljs.core.RecordIter(0, G__21023__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__21023) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__21027 = cljs.core.keyword_identical_QMARK_;
  var expr__21028 = k__5157__auto__;
  if (cljs.core.truth_(pred__21027.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__21028))) {
    return new cljs.pprint.indent_t(G__21023, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21027.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__21028))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__21023, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__21027.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__21028))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__21023, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__21027.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__21028))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__21023, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__21027.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__21028))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__21023, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__21027.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__21028))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__21023, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__21023), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__21023) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__21023, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__21025) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__21025), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__21025), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__21025), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__21025), (new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__21025), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__21025), null, cljs.core.dissoc.call(null, G__21025, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__8020__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__8020__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(p1__21032_SHARP_, p2__21031_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__21031_SHARP_);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__4425__auto___21033 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto___21033)) {
    var cb_21034 = temp__4425__auto___21033;
    cb_21034.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__4425__auto___21035 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__4425__auto___21035)) {
    var prefix_21036 = temp__4425__auto___21035;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_21036);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__4425__auto___21037 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto___21037)) {
    var cb_21038 = temp__4425__auto___21037;
    cb_21038.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var suffix = temp__4425__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__21039 = cljs.core._EQ_;
    var expr__21040 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__21039.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__21040))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__21039.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__21040))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__21040)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__4554__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__4554__auto__) {
      return or__4554__auto__;
    } else {
      var and__4542__auto__ = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__4542__auto__) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__4542__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__4423__auto___21042 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4423__auto___21042)) {
      var tws_21043 = temp__4423__auto___21042;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_21043);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__21048 = cljs.core.seq.call(null, tokens);
  var chunk__21049 = null;
  var count__21050 = 0;
  var i__21051 = 0;
  while (true) {
    if (i__21051 < count__21050) {
      var token = cljs.core._nth.call(null, chunk__21049, i__21051);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__4423__auto___21052 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__4423__auto___21052)) {
          var tws_21053 = temp__4423__auto___21052;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_21053);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_21054 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__4542__auto__)) {
          return tws_21054;
        } else {
          return and__4542__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_21054);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__21055 = seq__21048;
      var G__21056 = chunk__21049;
      var G__21057 = count__21050;
      var G__21058 = i__21051 + 1;
      seq__21048 = G__21055;
      chunk__21049 = G__21056;
      count__21050 = G__21057;
      i__21051 = G__21058;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__21048);
      if (temp__4425__auto__) {
        var seq__21048__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21048__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__21048__$1);
          var G__21059 = cljs.core.chunk_rest.call(null, seq__21048__$1);
          var G__21060 = c__5338__auto__;
          var G__21061 = cljs.core.count.call(null, c__5338__auto__);
          var G__21062 = 0;
          seq__21048 = G__21059;
          chunk__21049 = G__21060;
          count__21050 = G__21061;
          i__21051 = G__21062;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__21048__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__4423__auto___21063 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__4423__auto___21063)) {
              var tws_21064 = temp__4423__auto___21063;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_21064);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_21065 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__4542__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__4542__auto__)) {
              return tws_21065;
            } else {
              return and__4542__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_21065);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__21066 = cljs.core.next.call(null, seq__21048__$1);
          var G__21067 = null;
          var G__21068 = 0;
          var G__21069 = 0;
          seq__21048 = G__21066;
          chunk__21049 = G__21067;
          count__21050 = G__21068;
          i__21051 = G__21069;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__4554__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, section));
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__4542__auto__ = miser_width;
  if (cljs.core.truth_(and__4542__auto__)) {
    var and__4542__auto____$1 = maxcol;
    if (cljs.core.truth_(and__4542__auto____$1)) {
      var and__4542__auto____$2 = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__4542__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return and__4542__auto____$2;
      }
    } else {
      return and__4542__auto____$1;
    }
  } else {
    return and__4542__auto__;
  }
};
if (typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__4554__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    var or__4554__auto____$1 = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection));
    if (or__4554__auto____$1) {
      return or__4554__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__21070_SHARP_) {
      return cljs.core.not.call(null, function() {
        var and__4542__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__21070_SHARP_);
        if (cljs.core.truth_(and__4542__auto__)) {
          return cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__21070_SHARP_), lb);
        } else {
          return and__4542__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__21071_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__21071_SHARP_);
      return cljs.core.not.call(null, function() {
        var and__4542__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__21071_SHARP_);
        if (cljs.core.truth_(and__4542__auto__)) {
          var or__4554__auto__ = cljs.core._EQ_.call(null, nl_lb, lb);
          if (or__4554__auto__) {
            return or__4554__auto__;
          } else {
            return cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb);
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__21072 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__21072;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_21073 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_21073);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__21074_SHARP_) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, p1__21074_SHARP_));
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__21077 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__21077, 0, null);
  var b = cljs.core.nth.call(null, vec__21077, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__21078 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__21078, 0, null);
    var remainder = cljs.core.nth.call(null, vec__21078, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, result));
    var result__$1 = long_section ? function() {
      var rem2 = cljs$pprint$write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer))) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__21079 = new_buffer;
        buffer = G__21079;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var buf = temp__4423__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var tws = temp__4425__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_21088 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_21089 = oldpos_21088 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_21089);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_21088, newpos_21089));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__21084_21090 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__21085_21091 = null;
    var count__21086_21092 = 0;
    var i__21087_21093 = 0;
    while (true) {
      if (i__21087_21093 < count__21086_21092) {
        var l_21094__$1 = cljs.core._nth.call(null, chunk__21085_21091, i__21087_21093);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_21094__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__21095 = seq__21084_21090;
        var G__21096 = chunk__21085_21091;
        var G__21097 = count__21086_21092;
        var G__21098 = i__21087_21093 + 1;
        seq__21084_21090 = G__21095;
        chunk__21085_21091 = G__21096;
        count__21086_21092 = G__21097;
        i__21087_21093 = G__21098;
        continue;
      } else {
        var temp__4425__auto___21099 = cljs.core.seq.call(null, seq__21084_21090);
        if (temp__4425__auto___21099) {
          var seq__21084_21100__$1 = temp__4425__auto___21099;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__21084_21100__$1)) {
            var c__5338__auto___21101 = cljs.core.chunk_first.call(null, seq__21084_21100__$1);
            var G__21102 = cljs.core.chunk_rest.call(null, seq__21084_21100__$1);
            var G__21103 = c__5338__auto___21101;
            var G__21104 = cljs.core.count.call(null, c__5338__auto___21101);
            var G__21105 = 0;
            seq__21084_21090 = G__21102;
            chunk__21085_21091 = G__21103;
            count__21086_21092 = G__21104;
            i__21087_21093 = G__21105;
            continue;
          } else {
            var l_21106__$1 = cljs.core.first.call(null, seq__21084_21100__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_21106__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__21107 = cljs.core.next.call(null, seq__21084_21100__$1);
            var G__21108 = null;
            var G__21109 = 0;
            var G__21110 = 0;
            seq__21084_21090 = G__21107;
            chunk__21085_21091 = G__21108;
            count__21086_21092 = G__21109;
            i__21087_21093 = G__21110;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs.pprint.t21117 !== "undefined") {
  } else {
    cljs.pprint.t21117 = function(pretty_writer, writer, max_columns, miser_width, lb, fields, meta21118) {
      this.pretty_writer = pretty_writer;
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta21118 = meta21118;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t21117.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_21119, meta21118__$1) {
        var self__ = this;
        var _21119__$1 = this;
        return new cljs.pprint.t21117(self__.pretty_writer, self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta21118__$1);
      };
    }(lb, fields);
    cljs.pprint.t21117.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_21119) {
        var self__ = this;
        var _21119__$1 = this;
        return self__.meta21118;
      };
    }(lb, fields);
    cljs.pprint.t21117.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t21117.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__21120 = cljs.core._EQ_;
        var expr__21121 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__21120.call(null, String, expr__21121))) {
          var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
          var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
          var white_space = cljs.core.subs.call(null, s0, cljs.core.count.call(null, s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space.call(null, this$__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
            return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
            var newpos = oldpos + cljs.core.count.call(null, s0);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__21120.call(null, Number, expr__21121))) {
            return cljs.pprint.p_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__21121)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t21117.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        cljs.pprint._ppflush.call(null, this$__$1);
        return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t21117.prototype.cljs$pprint$IPrettyFlush$ = true;
    cljs.pprint.t21117.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space.call(null, this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t21117.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
        new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta21118", "meta21118", 1983100157, null)], null);
      };
    }(lb, fields);
    cljs.pprint.t21117.cljs$lang$type = true;
    cljs.pprint.t21117.cljs$lang$ctorStr = "cljs.pprint/t21117";
    cljs.pprint.t21117.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
        return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t21117");
      };
    }(lb, fields);
    cljs.pprint.__GT_t21117 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t21117(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta21118) {
        return new cljs.pprint.t21117(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta21118);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t21117(cljs$pprint$pretty_writer, writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__4425__auto___21123 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4425__auto___21123)) {
      var cb_21124 = temp__4425__auto___21123;
      cb_21124.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__4425__auto___21125 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4425__auto___21125)) {
      var cb_21126 = temp__4425__auto___21125;
      cb_21126.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_21127 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_21128 = oldpos_21127 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_21128);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_21127, newpos_21128));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__21132 = cljs.core._EQ_;
      var expr__21133 = relative_to;
      if (cljs.core.truth_(pred__21132.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__21133))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__21132.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__21133))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__21133)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 21, 1, true, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 22, 1, true, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 15, 1, true, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 14, 1, true, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 28, 1, true, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 
14, 1, true, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 1, true, 112, 122, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, true, 80, 86, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 25, 1, true, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 17, 1, true, 104, 110, cljs.core.List.EMPTY, "When set to logical true, objects will be printed in a way that preserves\n  their type when read in later.\n\n  Defaults to false.", 
cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 
16, 1, true, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 
13, 1, true, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__21135_SHARP_) {
    var temp__4425__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__21135_SHARP_));
    if (cljs.core.truth_(temp__4425__auto__)) {
      var v = temp__4425__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__21135_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__4542__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  if (and__4542__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return and__4542__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__4542__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__4542__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write() {
  var args__5600__auto__ = [];
  var len__5593__auto___21156 = arguments.length;
  var i__5594__auto___21157 = 0;
  while (true) {
    if (i__5594__auto___21157 < len__5593__auto___21156) {
      args__5600__auto__.push(arguments[i__5594__auto___21157]);
      var G__21158 = i__5594__auto___21157 + 1;
      i__5594__auto___21157 = G__21158;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR_21142 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR_21143 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR_21144 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR_21145 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR_21146 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR_21147 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR_21148 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR_21149 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR_21150 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR_21151 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR_21152 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR_21153 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__8003__auto___21159 = base_writer;
        var new_writer__8004__auto___21160 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__8003__auto___21159));
        var _STAR_out_STAR_21154_21161 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new_writer__8004__auto___21160 ? cljs.pprint.make_pretty_writer.call(null, base_writer__8003__auto___21159, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__8003__auto___21159;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_21154_21161;
        }
      } else {
        var _STAR_out_STAR_21155_21162 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = base_writer;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_21155_21162;
        }
      }
      if (optval === true) {
        cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
      }
      if (optval == null) {
        return [cljs.core.str(sb)].join("");
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR_21153;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR_21152;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR_21151;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR_21150;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_21149;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR_21148;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR_21147;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR_21146;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_21145;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_21144;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR_21143;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR_21142;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq21140) {
  var G__21141 = cljs.core.first.call(null, seq21140);
  var seq21140__$1 = cljs.core.next.call(null, seq21140);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(G__21141, seq21140__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint() {
  var args21163 = [];
  var len__5593__auto___21169 = arguments.length;
  var i__5594__auto___21170 = 0;
  while (true) {
    if (i__5594__auto___21170 < len__5593__auto___21169) {
      args21163.push(arguments[i__5594__auto___21170]);
      var G__21171 = i__5594__auto___21170 + 1;
      i__5594__auto___21170 = G__21171;
      continue;
    } else {
    }
    break;
  }
  var G__21165 = args21163.length;
  switch(G__21165) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21163.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR_21166 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_21166;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__8003__auto__ = writer;
  var new_writer__8004__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__8003__auto__));
  var _STAR_out_STAR_21167 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new_writer__8004__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__8003__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__8003__auto__;
  try {
    var _STAR_print_pretty_STAR_21168_21173 = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = true;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_21168_21173;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_21167;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error([cljs.core.str("Bad argument: "), cljs.core.str(arg), cljs.core.str(". It must be one of "), cljs.core.str(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__4542__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__4542__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__4542__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format() {
  var args__5600__auto__ = [];
  var len__5593__auto___21177 = arguments.length;
  var i__5594__auto___21178 = 0;
  while (true) {
    if (i__5594__auto___21178 < len__5593__auto___21177) {
      args__5600__auto__.push(arguments[i__5594__auto___21178]);
      var G__21179 = i__5594__auto___21178 + 1;
      i__5594__auto___21178 = G__21179;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq21174) {
  var G__21175 = cljs.core.first.call(null, seq21174);
  var seq21174__$1 = cljs.core.next.call(null, seq21174);
  var G__21176 = cljs.core.first.call(null, seq21174__$1);
  var seq21174__$2 = cljs.core.next.call(null, seq21174__$1);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(G__21175, G__21176, seq21174__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str(message), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k21181, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__21183 = k21181 instanceof cljs.core.Keyword ? k21181.fqn : null;
  switch(G__21183) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k21181, else__5152__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = true;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__21180) {
  var self__ = this;
  var G__21180__$1 = this;
  return new cljs.core.RecordIter(0, G__21180__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__21180) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__21184 = cljs.core.keyword_identical_QMARK_;
  var expr__21185 = k__5157__auto__;
  if (cljs.core.truth_(pred__21184.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__21185))) {
    return new cljs.pprint.arg_navigator(G__21180, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21184.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__21185))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__21180, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__21184.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__21185))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__21180, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__21180), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__21180) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__21180, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__21182) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__21182), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__21182), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__21182), null, cljs.core.dissoc.call(null, G__21182, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220)), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__21189 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__21189, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21189, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k21191, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__21193 = k21191 instanceof cljs.core.Keyword ? k21191.fqn : null;
  switch(G__21193) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k21191, else__5152__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = true;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__21190) {
  var self__ = this;
  var G__21190__$1 = this;
  return new cljs.core.RecordIter(0, G__21190__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__21190) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__21194 = cljs.core.keyword_identical_QMARK_;
  var expr__21195 = k__5157__auto__;
  if (cljs.core.truth_(pred__21194.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__21195))) {
    return new cljs.pprint.compiled_directive(G__21190, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21194.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__21195))) {
      return new cljs.pprint.compiled_directive(self__.func, G__21190, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__21194.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__21195))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__21190, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__21194.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__21195))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__21190, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__21190), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__21190) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__21190, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__21192) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__21192), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__21192), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__21192), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__21192), null, cljs.core.dissoc.call(null, G__21192, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__21198, navigator) {
  var vec__21202 = p__21198;
  var param = cljs.core.nth.call(null, vec__21202, 0, null);
  var vec__21203 = cljs.core.nth.call(null, vec__21202, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__21203, 0, null);
  var offset = cljs.core.nth.call(null, vec__21203, 1, null);
  var vec__21204 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__21204, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__21204, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__21206 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__21206, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__21206, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str(n), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("");
    } else {
      return [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__4554__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
        }
      }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__21208 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__21208, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__21208, 1, null);
  var base_output = function() {
    var or__4554__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str(chars), cljs.core.str(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(base_output), cljs.core.str(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__21209_SHARP_) {
    if (p1__21209_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__21209_SHARP_, base), cljs.core.quot.call(null, p1__21209_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(xlated_val) {
      return function(p1__21210_SHARP_) {
        if (p1__21210_SHARP_ < 10) {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__21210_SHARP_);
        } else {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__21210_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__21213 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__21213, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__21213, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, arg))) {
    var neg_21214 = arg < 0;
    var pos_arg_21215 = neg_21214 ? -arg : arg;
    var raw_str_21216 = cljs.pprint.opt_base_str.call(null, base, pos_arg_21215);
    var group_str_21217 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(neg_21214, pos_arg_21215, raw_str_21216, vec__21213, arg, arg_navigator__$1) {
        return function(p1__21211_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, p1__21211_SHARP_);
        };
      }(neg_21214, pos_arg_21215, raw_str_21216, vec__21213, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_21216));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_21216;
    var signed_str_21218 = neg_21214 ? [cljs.core.str("-"), cljs.core.str(group_str_21217)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? [cljs.core.str("+"), cljs.core.str(group_str_21217)].join("") : group_str_21217;
    var padded_str_21219 = signed_str_21218.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_21218.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(signed_str_21218)].join("") : 
    signed_str_21218;
    cljs.pprint.print.call(null, padded_str_21219);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null), cljs.core.str(this$), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null)].join("");
    } else {
      var G__21220 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str(this$), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__21221 = pos - 1;
      var G__21222 = cljs.core.first.call(null, remainder);
      var G__21223 = cljs.core.next.call(null, remainder);
      acc = G__21220;
      pos = G__21221;
      this$ = G__21222;
      remainder = G__21223;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__21225 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__21225, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21225, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_21226 = arg < 0 ? -arg : arg;
    var parts_21227 = cljs.pprint.remainders.call(null, 1E3, abs_arg_21226);
    if (cljs.core.count.call(null, parts_21227) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_21228 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_21227);
      var full_str_21229 = cljs.pprint.add_english_scales.call(null, parts_strs_21228, 0);
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(full_str_21229)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__21231 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__21231, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21231, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_21232 = arg < 0 ? -arg : arg;
    var parts_21233 = cljs.pprint.remainders.call(null, 1E3, abs_arg_21232);
    if (cljs.core.count.call(null, parts_21233) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_21234 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_21233));
      var head_str_21235 = cljs.pprint.add_english_scales.call(null, parts_strs_21234, 1);
      var tail_str_21236 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_21233));
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(!cljs.core.empty_QMARK_.call(null, head_str_21235) && !cljs.core.empty_QMARK_.call(null, tail_str_21236) ? [cljs.core.str(head_str_21235), cljs.core.str(", "), cljs.core.str(tail_str_21236)].join("") : !cljs.core.empty_QMARK_.call(null, head_str_21235) ? [cljs.core.str(head_str_21235), cljs.core.str("th")].join("") : tail_str_21236)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_21237 = cljs.core.rem.call(null, arg, 100);
      var not_teens_21238 = 11 < low_two_digits_21237 || 19 > low_two_digits_21237;
      var low_digit_21239 = cljs.core.rem.call(null, low_two_digits_21237, 10);
      cljs.pprint.print.call(null, low_digit_21239 === 1 && not_teens_21238 ? "st" : low_digit_21239 === 2 && not_teens_21238 ? "nd" : low_digit_21239 === 3 && not_teens_21238 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__21241 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__21241, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21241, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4E3) {
    var digits_21242 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_21243 = cljs.core.PersistentVector.EMPTY;
    var pos_21244 = cljs.core.count.call(null, digits_21242) - 1;
    var digits_21245__$1 = digits_21242;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_21245__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_21243));
      } else {
        var digit_21246 = cljs.core.first.call(null, digits_21245__$1);
        var G__21247 = cljs.core._EQ_.call(null, 0, digit_21246) ? acc_21243 : cljs.core.conj.call(null, acc_21243, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_21244), digit_21246 - 1));
        var G__21248 = pos_21244 - 1;
        var G__21249 = cljs.core.next.call(null, digits_21245__$1);
        acc_21243 = G__21247;
        pos_21244 = G__21248;
        digits_21245__$1 = G__21249;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__21251 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__21251, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21251, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__21256 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__21256, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21256, 1, null);
  var pred__21257_21260 = cljs.core._EQ_;
  var expr__21258_21261 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__21257_21260.call(null, "o", expr__21258_21261))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__21257_21260.call(null, "u", expr__21258_21261))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__21257_21260.call(null, null, expr__21258_21261))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__21258_21261)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__21263 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__21263, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21263, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__21266 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__21266, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__21266, 1, null);
      var vec__21267 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__21267, 0, null);
      var offsets = cljs.core.nth.call(null, vec__21267, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, [cljs.core.str(f)].join(""));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, [cljs.core.str(cljs.core.count.call(null, s) - 1)].join("")], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, dotloc)), cljs.core.str(cljs.core.subs.call(null, s, dotloc + 1))].join(""), [cljs.core.str(dotloc - 1)].join("")], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, 1)), cljs.core.str(cljs.core.subs.call(null, s, 2, exploc))].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__21269 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__21269, 0, null);
  var e = cljs.core.nth.call(null, vec__21269, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__21270 = i - 1;
        i = G__21270;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__4554__auto__ = d;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__4866__auto__ = 2;
      var y__4867__auto__ = w;
      return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__4866__auto__ = e + 1;
      var y__4867__auto__ = w__$1 - 1;
      return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
    }() : w__$1 + e;
    var vec__21272 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__21272, 0, null);
    var e1 = cljs.core.nth.call(null, vec__21272, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__21272, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__21272, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > cljs.core.count.call(null, result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__21274 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__21274, 0, null);
  var e1 = cljs.core.nth.call(null, vec__21274, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str(m1), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, loc)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, k)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__21279 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__21279, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21279, 1, null);
  var vec__21280 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__21280, 0, null);
  var abs = cljs.core.nth.call(null, vec__21280, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__21281 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__21281, 0, null);
  var exp = cljs.core.nth.call(null, vec__21281, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__21282 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__21282, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__21282, 1, null);
  var expanded = cljs.core.nth.call(null, vec__21282, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__4542__auto__ = w;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = d;
      if (cljs.core.truth_(and__4542__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && cljs.core.count.call(null, fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_21283 = cljs.core.count.call(null, fixed_repr__$1);
    var signed_len_21284 = cljs.core.truth_(add_sign) ? len_21283 + 1 : len_21283;
    var prepend_zero_21285__$1 = prepend_zero && !(signed_len_21284 >= w);
    var append_zero_21286__$1 = append_zero && !(signed_len_21284 >= w);
    var full_len_21287 = prepend_zero_21285__$1 || append_zero_21286__$1 ? signed_len_21284 + 1 : signed_len_21284;
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = full_len_21287 > w;
      if (and__4542__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4542__auto__;
      }
    }())) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_21287, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero_21285__$1 ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero_21286__$1 ? "0" : null)].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero ? "0" : null)].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__21294 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__21294, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21294, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__21296_21300 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__21297_21301 = G__21296_21300;
  var mantissa_21302 = cljs.core.nth.call(null, vec__21297_21301, 0, null);
  var exp_21303 = cljs.core.nth.call(null, vec__21297_21301, 1, null);
  var G__21296_21304__$1 = G__21296_21300;
  while (true) {
    var vec__21298_21305 = G__21296_21304__$1;
    var mantissa_21306__$1 = cljs.core.nth.call(null, vec__21298_21305, 0, null);
    var exp_21307__$1 = cljs.core.nth.call(null, vec__21298_21305, 1, null);
    var w_21308 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_21309 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_21310 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_21311 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_21312 = function() {
      var or__4554__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_21313 = function() {
      var or__4554__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_21314 = k_21311 <= 0;
    var scaled_exp_21315 = exp_21307__$1 - (k_21311 - 1);
    var scaled_exp_str_21316 = [cljs.core.str(Math.abs(scaled_exp_21315))].join("");
    var scaled_exp_str_21317__$1 = [cljs.core.str(expchar_21312), cljs.core.str(scaled_exp_21315 < 0 ? "-" : "+"), cljs.core.str(cljs.core.truth_(e_21310) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_21310 - cljs.core.count.call(null, scaled_exp_str_21316), "0")) : null), cljs.core.str(scaled_exp_str_21316)].join("");
    var exp_width_21318 = cljs.core.count.call(null, scaled_exp_str_21317__$1);
    var base_mantissa_width_21319 = cljs.core.count.call(null, mantissa_21306__$1);
    var scaled_mantissa_21320 = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_21311, "0"))), cljs.core.str(mantissa_21306__$1), cljs.core.str(cljs.core.truth_(d_21309) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_21309 - (base_mantissa_width_21319 - 1) - (k_21311 < 0 ? -k_21311 : 0), "0")) : null)].join("");
    var w_mantissa_21321 = cljs.core.truth_(w_21308) ? w_21308 - exp_width_21318 : null;
    var vec__21299_21322 = cljs.pprint.round_str.call(null, scaled_mantissa_21320, 0, cljs.core._EQ_.call(null, k_21311, 0) ? d_21309 - 1 : k_21311 > 0 ? d_21309 : k_21311 < 0 ? d_21309 - 1 : null, cljs.core.truth_(w_mantissa_21321) ? w_mantissa_21321 - (cljs.core.truth_(add_sign_21313) ? 1 : 0) : null);
    var rounded_mantissa_21323 = cljs.core.nth.call(null, vec__21299_21322, 0, null);
    var __21324 = cljs.core.nth.call(null, vec__21299_21322, 1, null);
    var incr_exp_21325 = cljs.core.nth.call(null, vec__21299_21322, 2, null);
    var full_mantissa_21326 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_21323, k_21311);
    var append_zero_21327 = cljs.core._EQ_.call(null, k_21311, cljs.core.count.call(null, rounded_mantissa_21323)) && d_21309 == null;
    if (cljs.core.not.call(null, incr_exp_21325)) {
      if (cljs.core.truth_(w_21308)) {
        var len_21328 = cljs.core.count.call(null, full_mantissa_21326) + exp_width_21318;
        var signed_len_21329 = cljs.core.truth_(add_sign_21313) ? len_21328 + 1 : len_21328;
        var prepend_zero_21330__$1 = prepend_zero_21314 && !cljs.core._EQ_.call(null, signed_len_21329, w_21308);
        var full_len_21331 = prepend_zero_21330__$1 ? signed_len_21329 + 1 : signed_len_21329;
        var append_zero_21332__$1 = append_zero_21327 && full_len_21331 < w_21308;
        if (cljs.core.truth_(function() {
          var and__4542__auto__ = function() {
            var or__4554__auto__ = full_len_21331 > w_21308;
            if (or__4554__auto__) {
              return or__4554__auto__;
            } else {
              var and__4542__auto__ = e_21310;
              if (cljs.core.truth_(and__4542__auto__)) {
                return exp_width_21318 - 2 > e_21310;
              } else {
                return and__4542__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__4542__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__4542__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_21308, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_21308 - full_len_21331 - (append_zero_21332__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign_21313) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_21330__$1 ? "0" : null), cljs.core.str(full_mantissa_21326), cljs.core.str(append_zero_21332__$1 ? "0" : 
          null), cljs.core.str(scaled_exp_str_21317__$1)].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign_21313) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_21314 ? "0" : null), cljs.core.str(full_mantissa_21326), cljs.core.str(append_zero_21327 ? "0" : null), cljs.core.str(scaled_exp_str_21317__$1)].join(""));
      }
    } else {
      var G__21333 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_21323, exp_21307__$1 + 1], null);
      G__21296_21304__$1 = G__21333;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__21336 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__21336, 0, null);
  var _ = cljs.core.nth.call(null, vec__21336, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__21337 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__21337, 0, null);
  var exp = cljs.core.nth.call(null, vec__21337, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__4866__auto__ = cljs.core.count.call(null, mantissa);
    var y__4867__auto__ = function() {
      var x__4873__auto__ = n;
      var y__4874__auto__ = 7;
      return x__4873__auto__ < y__4874__auto__ ? x__4873__auto__ : y__4874__auto__;
    }();
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__21341 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__21341, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21341, 1, null);
  var vec__21342 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__21342, 0, null);
  var exp = cljs.core.nth.call(null, vec__21342, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__21343 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__21343, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__21343, 1, null);
  var expanded = cljs.core.nth.call(null, vec__21343, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), cljs.core.str(fixed_repr)].join("");
  var full_len = cljs.core.count.call(null, full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var and__4542__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4542__auto__)) {
      return add_sign;
    } else {
      return and__4542__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(function() {
    var and__4542__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__4542__auto__) {
      return add_sign;
    } else {
      return and__4542__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(full_repr)].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__21345 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__21345, 0, null);
  var navigator = cljs.core.nth.call(null, vec__21345, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__21347 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__21347, 0, null);
  var navigator = cljs.core.nth.call(null, vec__21347, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__21349 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__21349, 0, null);
  var navigator = cljs.core.nth.call(null, vec__21349, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__21352 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__21352, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21352, 1, null);
  var vec__21353 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__21353, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__21353, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4554__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4554__auto__) {
        return or__4554__auto__;
      } else {
        var and__4542__auto__ = max_count;
        if (cljs.core.truth_(and__4542__auto__)) {
          return count >= max_count;
        } else {
          return and__4542__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__21354 = count + 1;
        var G__21355 = iter_result;
        var G__21356 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__21354;
        args__$1 = G__21355;
        last_pos = G__21356;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__21359 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__21359, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21359, 1, null);
  var vec__21360 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__21360, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__21360, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4554__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4554__auto__) {
        return or__4554__auto__;
      } else {
        var and__4542__auto__ = max_count;
        if (cljs.core.truth_(and__4542__auto__)) {
          return count >= max_count;
        } else {
          return and__4542__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__21361 = count + 1;
        var G__21362 = cljs.core.next.call(null, arg_list__$1);
        count = G__21361;
        arg_list__$1 = G__21362;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__21364 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__21364, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21364, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4554__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4554__auto__) {
        return or__4554__auto__;
      } else {
        var and__4542__auto__ = max_count;
        if (cljs.core.truth_(and__4542__auto__)) {
          return count >= max_count;
        } else {
          return and__4542__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__21365 = count + 1;
        var G__21366 = iter_result;
        var G__21367 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__21365;
        navigator__$2 = G__21366;
        last_pos = G__21367;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__21370 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__21370, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21370, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4554__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4554__auto__) {
        return or__4554__auto__;
      } else {
        var and__4542__auto__ = max_count;
        if (cljs.core.truth_(and__4542__auto__)) {
          return count >= max_count;
        } else {
          return and__4542__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__21371 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__21371, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__21371, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__21372 = count + 1;
        var G__21373 = navigator__$3;
        count = G__21372;
        navigator__$2 = G__21373;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__21376 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR_21377 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), [cljs.core.str(sb)].join("")], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_21377;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__21376, 0, null);
      var result_str = cljs.core.nth.call(null, vec__21376, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__21378 = cljs.core.next.call(null, clauses__$1);
        var G__21379 = cljs.core.conj.call(null, acc, result_str);
        var G__21380 = iter_result;
        clauses__$1 = G__21378;
        acc = G__21379;
        navigator__$1 = G__21380;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__21385 = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var else$ = temp__4425__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__21386 = cljs.core.nth.call(null, vec__21385, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__21386, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__21385, 1, null);
  var navigator__$1 = function() {
    var or__4554__auto__ = new_navigator;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__21387 = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var p = temp__4425__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__21387, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__21387, 1, null);
  var navigator__$2 = function() {
    var or__4554__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__4554__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__4554__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__21388 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__21388, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__21388, 1, null);
  var slots = function() {
    var x__4866__auto__ = 1;
    var y__4867__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__4866__auto__ = minpad;
    var y__4867__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = eol_str;
    if (cljs.core.truth_(and__4542__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__4542__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_21389__$1 = slots;
  var extra_pad_21390__$1 = extra_pad;
  var strs_21391__$1 = strs;
  var pad_only_21392 = function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_21391__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_21391__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, pad_only_21392) ? cljs.core.first.call(null, strs_21391__$1) : null), cljs.core.str(cljs.core.truth_(function() {
        var or__4554__auto__ = pad_only_21392;
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          var or__4554__auto____$1 = cljs.core.next.call(null, strs_21391__$1);
          if (or__4554__auto____$1) {
            return or__4554__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str(extra_pad_21390__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__21393 = slots_21389__$1 - 1;
      var G__21394 = extra_pad_21390__$1 - 1;
      var G__21395 = cljs.core.truth_(pad_only_21392) ? strs_21391__$1 : cljs.core.next.call(null, strs_21391__$1);
      var G__21396 = false;
      slots_21389__$1 = G__21393;
      extra_pad_21390__$1 = G__21394;
      strs_21391__$1 = G__21395;
      pad_only_21392 = G__21396;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs.pprint.t21403 !== "undefined") {
  } else {
    cljs.pprint.t21403 = function(downcase_writer, writer, meta21404) {
      this.downcase_writer = downcase_writer;
      this.writer = writer;
      this.meta21404 = meta21404;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t21403.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21405, meta21404__$1) {
      var self__ = this;
      var _21405__$1 = this;
      return new cljs.pprint.t21403(self__.downcase_writer, self__.writer, meta21404__$1);
    };
    cljs.pprint.t21403.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21405) {
      var self__ = this;
      var _21405__$1 = this;
      return self__.meta21404;
    };
    cljs.pprint.t21403.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t21403.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__21406 = cljs.core._EQ_;
      var expr__21407 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__21406.call(null, String, expr__21407))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__21406.call(null, Number, expr__21407))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__21407)].join(""));
        }
      }
    };
    cljs.pprint.t21403.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta21404", "meta21404", 1380754204, null)], null);
    };
    cljs.pprint.t21403.cljs$lang$type = true;
    cljs.pprint.t21403.cljs$lang$ctorStr = "cljs.pprint/t21403";
    cljs.pprint.t21403.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
      return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t21403");
    };
    cljs.pprint.__GT_t21403 = function cljs$pprint$downcase_writer_$___GT_t21403(downcase_writer__$1, writer__$1, meta21404) {
      return new cljs.pprint.t21403(downcase_writer__$1, writer__$1, meta21404);
    };
  }
  return new cljs.pprint.t21403(cljs$pprint$downcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs.pprint.t21415 !== "undefined") {
  } else {
    cljs.pprint.t21415 = function(upcase_writer, writer, meta21416) {
      this.upcase_writer = upcase_writer;
      this.writer = writer;
      this.meta21416 = meta21416;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t21415.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21417, meta21416__$1) {
      var self__ = this;
      var _21417__$1 = this;
      return new cljs.pprint.t21415(self__.upcase_writer, self__.writer, meta21416__$1);
    };
    cljs.pprint.t21415.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21417) {
      var self__ = this;
      var _21417__$1 = this;
      return self__.meta21416;
    };
    cljs.pprint.t21415.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t21415.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__21418 = cljs.core._EQ_;
      var expr__21419 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__21418.call(null, String, expr__21419))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__21418.call(null, Number, expr__21419))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__21419)].join(""));
        }
      }
    };
    cljs.pprint.t21415.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta21416", "meta21416", -1220821790, null)], null);
    };
    cljs.pprint.t21415.cljs$lang$type = true;
    cljs.pprint.t21415.cljs$lang$ctorStr = "cljs.pprint/t21415";
    cljs.pprint.t21415.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
      return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t21415");
    };
    cljs.pprint.__GT_t21415 = function cljs$pprint$upcase_writer_$___GT_t21415(upcase_writer__$1, writer__$1, meta21416) {
      return new cljs.pprint.t21415(upcase_writer__$1, writer__$1, meta21416);
    };
  }
  return new cljs.pprint.t21415(cljs$pprint$upcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__4542__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = f;
      if (cljs.core.truth_(and__4542__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }()) ? [cljs.core.str(clojure.string.upper_case.call(null, f)), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_.call(null, s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__4542__auto__ = m;
          if (cljs.core.truth_(and__4542__auto__)) {
            return m.index + 1;
          } else {
            return and__4542__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s__$2, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset)))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs.pprint.t21427 !== "undefined") {
  } else {
    cljs.pprint.t21427 = function(capitalize_word_writer, writer, last_was_whitespace_QMARK_, meta21428) {
      this.capitalize_word_writer = capitalize_word_writer;
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta21428 = meta21428;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t21427.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_21429, meta21428__$1) {
        var self__ = this;
        var _21429__$1 = this;
        return new cljs.pprint.t21427(self__.capitalize_word_writer, self__.writer, self__.last_was_whitespace_QMARK_, meta21428__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t21427.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_21429) {
        var self__ = this;
        var _21429__$1 = this;
        return self__.meta21428;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t21427.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t21427.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__21430 = cljs.core._EQ_;
        var expr__21431 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__21430.call(null, String, expr__21431))) {
          var s = x;
          cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__21430.call(null, Number, expr__21431))) {
            var c = cljs.core.char$.call(null, x);
            var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
            cljs.core._write.call(null, self__.writer, mod_c);
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__21431)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t21427.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta21428", "meta21428", 1570553762, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t21427.cljs$lang$type = true;
    cljs.pprint.t21427.cljs$lang$ctorStr = "cljs.pprint/t21427";
    cljs.pprint.t21427.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
        return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t21427");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t21427 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t21427(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta21428) {
        return new cljs.pprint.t21427(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta21428);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t21427(cljs$pprint$capitalize_word_writer, writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs.pprint.t21439 !== "undefined") {
  } else {
    cljs.pprint.t21439 = function(init_cap_writer, writer, capped, meta21440) {
      this.init_cap_writer = init_cap_writer;
      this.writer = writer;
      this.capped = capped;
      this.meta21440 = meta21440;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t21439.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_21441, meta21440__$1) {
        var self__ = this;
        var _21441__$1 = this;
        return new cljs.pprint.t21439(self__.init_cap_writer, self__.writer, self__.capped, meta21440__$1);
      };
    }(capped);
    cljs.pprint.t21439.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_21441) {
        var self__ = this;
        var _21441__$1 = this;
        return self__.meta21440;
      };
    }(capped);
    cljs.pprint.t21439.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(capped);
    cljs.pprint.t21439.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__21442 = cljs.core._EQ_;
        var expr__21443 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__21442.call(null, String, expr__21443))) {
          var s = clojure.string.lower_case.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__4542__auto__ = m;
              if (cljs.core.truth_(and__4542__auto__)) {
                return m.index;
              } else {
                return and__4542__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write.call(null, self__.writer, [cljs.core.str(cljs.core.subs.call(null, s, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_.call(null, self__.capped, true);
            } else {
              return cljs.core._write.call(null, self__.writer, s);
            }
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
          }
        } else {
          if (cljs.core.truth_(pred__21442.call(null, Number, expr__21443))) {
            var c = cljs.core.char$.call(null, x);
            if (cljs.core.truth_(function() {
              var and__4542__auto__ = cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped));
              if (and__4542__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__4542__auto__;
              }
            }())) {
              cljs.core.reset_BANG_.call(null, self__.capped, true);
              return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
            } else {
              return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
            }
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__21443)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t21439.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta21440", "meta21440", -283219748, null)], null);
      };
    }(capped);
    cljs.pprint.t21439.cljs$lang$type = true;
    cljs.pprint.t21439.cljs$lang$ctorStr = "cljs.pprint/t21439";
    cljs.pprint.t21439.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
        return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t21439");
      };
    }(capped);
    cljs.pprint.__GT_t21439 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t21439(init_cap_writer__$1, writer__$1, capped__$1, meta21440) {
        return new cljs.pprint.t21439(init_cap_writer__$1, writer__$1, capped__$1, meta21440);
      };
    }(capped);
  }
  return new cljs.pprint.t21439(cljs$pprint$init_cap_writer, writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR_21446 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = make_writer.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_21446;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_21449 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_21450 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_21451 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_21452 = current_21451 < colnum_21449 ? colnum_21449 - current_21451 : cljs.core._EQ_.call(null, colinc_21450, 0) ? 0 : colinc_21450 - cljs.core.rem.call(null, current_21451 - colnum_21449, colinc_21450);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_21452, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_21453 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_21454 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_21455 = colrel_21453 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_21456 = colinc_21454 > 0 ? cljs.core.rem.call(null, start_col_21455, colinc_21454) : 0;
  var space_count_21457 = colrel_21453 + (cljs.core._EQ_.call(null, 0, offset_21456) ? 0 : colinc_21454 - offset_21456);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_21457, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__21461 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__21461, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__21461, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_21462_21464 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_21463_21465 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21463_21465;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21462_21464;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__21466_SHARP_, p2__21467_SHARP_, p3__21468_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__21466_SHARP_, p2__21467_SHARP_, p3__21468_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__21469_SHARP_, p2__21470_SHARP_, p3__21471_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__21469_SHARP_, p2__21470_SHARP_, p3__21471_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__21472_SHARP_, p2__21473_SHARP_, p3__21474_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__21472_SHARP_, p2__21473_SHARP_, p3__21474_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__21475_SHARP_, p2__21476_SHARP_, p3__21477_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__21475_SHARP_, p2__21476_SHARP_, p3__21477_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__21478_SHARP_, p2__21479_SHARP_, p3__21480_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__21478_SHARP_, p2__21479_SHARP_, p3__21480_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__21481_SHARP_, p2__21482_SHARP_, p3__21483_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__21481_SHARP_, p2__21482_SHARP_, p3__21483_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__21484_SHARP_, p2__21485_SHARP_, p3__21486_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__21484_SHARP_), p1__21484_SHARP_, p2__21485_SHARP_, p3__21486_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__4542__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4542__auto__;
      }
    }())) {
      return function(p1__21487_SHARP_, p2__21488_SHARP_, p3__21489_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__21487_SHARP_, p2__21488_SHARP_, p3__21489_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__21490_SHARP_, p2__21491_SHARP_, p3__21492_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__21490_SHARP_, p2__21491_SHARP_, p3__21492_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__21493_SHARP_, p2__21494_SHARP_, p3__21495_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__21493_SHARP_, p2__21494_SHARP_, p3__21495_SHARP_);
          };
        } else {
          return function(p1__21496_SHARP_, p2__21497_SHARP_, p3__21498_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__21496_SHARP_, p2__21497_SHARP_, p3__21498_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__21508 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__21508, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__21508, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__5438__auto___21514 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_21515 = 0;
    while (true) {
      if (i_21515 < n__5438__auto___21514) {
        cljs.pprint.prn.call(null);
        var G__21516 = i_21515 + 1;
        i_21515 = G__21516;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_21517 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_21517 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__5438__auto___21518 = cnt_21517 - 1;
    var i_21519 = 0;
    while (true) {
      if (i_21519 < n__5438__auto___21518) {
        cljs.pprint.prn.call(null);
        var G__21520 = i_21519 + 1;
        i_21519 = G__21520;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__5438__auto___21521 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_21522 = 0;
    while (true) {
      if (i_21522 < n__5438__auto___21521) {
        cljs.pprint.print.call(null, "\f");
        var G__21523 = i_21522 + 1;
        i_21522 = G__21523;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__21499_SHARP_, p2__21500_SHARP_, p3__21501_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__21499_SHARP_, p2__21500_SHARP_, p3__21501_SHARP_);
    };
  } else {
    return function(p1__21502_SHARP_, p2__21503_SHARP_, p3__21504_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__21502_SHARP_, p2__21503_SHARP_, p3__21504_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__21509 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__21509, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__21509, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__21510 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__21510, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__21510, 1, null);
      var vec__21511 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__21511, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__21511, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__4542__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4542__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4542__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__21505_SHARP_, p2__21506_SHARP_, p3__21507_SHARP_) {
      return cljs.pprint.modify_case.call(null, mod_case_writer, p1__21505_SHARP_, p2__21506_SHARP_, p3__21507_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4542__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4542__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = arg1;
      if (cljs.core.truth_(and__4542__auto__)) {
        var and__4542__auto____$1 = arg2;
        if (cljs.core.truth_(and__4542__auto____$1)) {
          return arg3;
        } else {
          return and__4542__auto____$1;
        }
      } else {
        return and__4542__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = arg1;
        if (cljs.core.truth_(and__4542__auto__)) {
          return arg2;
        } else {
          return and__4542__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__21512 = cljs.pprint.next_arg.call(null, navigator);
        var arg = cljs.core.nth.call(null, vec__21512, 0, null);
        var navigator__$1 = cljs.core.nth.call(null, vec__21512, 1, null);
        if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__21513 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__21513, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__21513, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__21524) {
  var vec__21526 = p__21524;
  var s = cljs.core.nth.call(null, vec__21526, 0, null);
  var offset = cljs.core.nth.call(null, vec__21526, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__21526, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__21527) {
  var vec__21529 = p__21527;
  var p = cljs.core.nth.call(null, vec__21529, 0, null);
  var offset = cljs.core.nth.call(null, vec__21529, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__21532) {
    var vec__21533 = p__21532;
    var s__$1 = cljs.core.nth.call(null, vec__21533, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__21533, 1, null);
    var flags = cljs.core.nth.call(null, vec__21533, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, s__$1)), cljs.core.str('" appears more than once in a directive')].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4542__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4542__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4542__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4542__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4542__auto__) {
      var and__4542__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__4542__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), function() {
      var x__4873__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__4874__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__4873__auto__ < y__4874__auto__ ? x__4873__auto__ : y__4874__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__21534_SHARP_, p2__21535_SHARP_) {
    var val = cljs.core.first.call(null, p1__21534_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__21535_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, p2__21535_SHARP_))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__21534_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__5307__auto__ = function cljs$pprint$map_params_$_iter__21551(s__21552) {
      return new cljs.core.LazySeq(null, function() {
        var s__21552__$1 = s__21552;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__21552__$1);
          if (temp__4425__auto__) {
            var s__21552__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__21552__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__21552__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__21554 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__21553 = 0;
                while (true) {
                  if (i__21553 < size__5306__auto__) {
                    var vec__21559 = cljs.core._nth.call(null, c__5305__auto__, i__21553);
                    var name = cljs.core.nth.call(null, vec__21559, 0, null);
                    var vec__21560 = cljs.core.nth.call(null, vec__21559, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__21560, 0, null);
                    cljs.core.chunk_append.call(null, b__21554, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__21563 = i__21553 + 1;
                    i__21553 = G__21563;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21554), cljs$pprint$map_params_$_iter__21551.call(null, cljs.core.chunk_rest.call(null, s__21552__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21554), null);
              }
            } else {
              var vec__21561 = cljs.core.first.call(null, s__21552__$2);
              var name = cljs.core.nth.call(null, vec__21561, 0, null);
              var vec__21562 = cljs.core.nth.call(null, vec__21561, 1, null);
              var default$ = cljs.core.nth.call(null, vec__21562, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__21551.call(null, cljs.core.rest.call(null, s__21552__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__21536_SHARP_, p2__21537_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__21536_SHARP_, p2__21537_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__21538_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__21538_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__21568 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__21568, 0, null);
  var vec__21569 = cljs.core.nth.call(null, vec__21568, 1, null);
  var rest = cljs.core.nth.call(null, vec__21569, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__21569, 1, null);
  var vec__21570 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__21570, 0, null);
  var vec__21571 = cljs.core.nth.call(null, vec__21570, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__21571, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__21571, 1, null);
  var flags = cljs.core.nth.call(null, vec__21571, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(directive), cljs.core.str('" is undefined')].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__4542__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__4542__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__4542__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__21573 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__21573, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__21573, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__21578) {
    var vec__21579 = p__21578;
    var clause_map = cljs.core.nth.call(null, vec__21579, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__21579, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__21579, 2, null);
    var vec__21580 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__21580, 0, null);
    var vec__21581 = cljs.core.nth.call(null, vec__21580, 1, null);
    var type = cljs.core.nth.call(null, vec__21581, 0, null);
    var right_params = cljs.core.nth.call(null, vec__21581, 1, null);
    var else_params = cljs.core.nth.call(null, vec__21581, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__21581, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params], true, false)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null)
              ;
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR_21585 = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = format_str;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(_STAR_format_str_STAR_21585) {
      return function(p__21586) {
        var vec__21587 = p__21586;
        var s = cljs.core.nth.call(null, vec__21587, 0, null);
        var offset = cljs.core.nth.call(null, vec__21587, 1, null);
        if (cljs.core.empty_QMARK_.call(null, s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR_21585), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR_21585;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__4554__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          var or__4554__auto____$1 = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__4554__auto____$1)) {
            return or__4554__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__21588 = cljs.core.next.call(null, format__$1);
        format__$1 = G__21588;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format() {
  var args21589 = [];
  var len__5593__auto___21595 = arguments.length;
  var i__5594__auto___21596 = 0;
  while (true) {
    if (i__5594__auto___21596 < len__5593__auto___21595) {
      args21589.push(arguments[i__5594__auto___21596]);
      var G__21597 = i__5594__auto___21596 + 1;
      i__5594__auto___21596 = G__21597;
      continue;
    } else {
    }
    break;
  }
  var G__21591 = args21589.length;
  switch(G__21591) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21589.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.core.truth_(function() {
    var and__4542__auto__ = cljs.pprint.needs_pretty.call(null, format);
    if (cljs.core.truth_(and__4542__auto__)) {
      return cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream));
    } else {
      return and__4542__auto__;
    }
  }()) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR_21592 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = wrapped_stream;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return [cljs.core.str(sb)].join("");
    } else {
      if (stream === true) {
        return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_21592;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__21593 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__21593, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__21593, 1, null);
      var vec__21594 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__21594, 0, null);
      var offsets = cljs.core.nth.call(null, vec__21594, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = macro_char;
    if (cljs.core.truth_(and__4542__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__4542__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_21602_21605 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_21603_21606 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count21604_21607 = 0;
      var alis_21608__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count21604_21607 < cljs.core._STAR_print_length_STAR_) {
          if (alis_21608__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_21608__$1));
            if (cljs.core.next.call(null, alis_21608__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__21609 = length_count21604_21607 + 1;
              var G__21610 = cljs.core.next.call(null, alis_21608__$1);
              length_count21604_21607 = G__21609;
              alis_21608__$1 = G__21610;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21603_21606;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21602_21605;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_21614_21617 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_21615_21618 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count21616_21619 = 0;
      var aseq_21620 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count21616_21619 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_21620) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_21620));
            if (cljs.core.next.call(null, aseq_21620)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__21621 = length_count21616_21619 + 1;
              var G__21622 = cljs.core.next.call(null, aseq_21620);
              length_count21616_21619 = G__21621;
              aseq_21620 = G__21622;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21615_21618;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21614_21617;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__8065__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
  return function(format_in__8065__auto__, cf__8066__auto__) {
    return function() {
      var G__21623__delegate = function(args__8067__auto__) {
        var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
        return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
      };
      var G__21623 = function(var_args) {
        var args__8067__auto__ = null;
        if (arguments.length > 0) {
          var G__21624__i = 0, G__21624__a = new Array(arguments.length - 0);
          while (G__21624__i < G__21624__a.length) {
            G__21624__a[G__21624__i] = arguments[G__21624__i + 0];
            ++G__21624__i;
          }
          args__8067__auto__ = new cljs.core.IndexedSeq(G__21624__a, 0);
        }
        return G__21623__delegate.call(this, args__8067__auto__);
      };
      G__21623.cljs$lang$maxFixedArity = 0;
      G__21623.cljs$lang$applyTo = function(arglist__21625) {
        var args__8067__auto__ = cljs.core.seq(arglist__21625);
        return G__21623__delegate(args__8067__auto__);
      };
      G__21623.cljs$core$IFn$_invoke$arity$variadic = G__21623__delegate;
      return G__21623;
    }();
  }(format_in__8065__auto__, cf__8066__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_21631_21636 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_21632_21637 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      var length_count21633_21638 = 0;
      var aseq_21639 = cljs.core.seq.call(null, amap);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count21633_21638 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_21639) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_21634_21640 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_21635_21641 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_21639));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_21639)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21635_21641;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21634_21640;
              }
            }
            if (cljs.core.next.call(null, aseq_21639)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__21642 = length_count21633_21638 + 1;
              var G__21643 = cljs.core.next.call(null, aseq_21639);
              length_count21633_21638 = G__21642;
              aseq_21639 = G__21643;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21632_21637;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21631_21636;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__8065__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
  return function(format_in__8065__auto__, cf__8066__auto__) {
    return function() {
      var G__21644__delegate = function(args__8067__auto__) {
        var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
        return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
      };
      var G__21644 = function(var_args) {
        var args__8067__auto__ = null;
        if (arguments.length > 0) {
          var G__21645__i = 0, G__21645__a = new Array(arguments.length - 0);
          while (G__21645__i < G__21645__a.length) {
            G__21645__a[G__21645__i] = arguments[G__21645__i + 0];
            ++G__21645__i;
          }
          args__8067__auto__ = new cljs.core.IndexedSeq(G__21645__a, 0);
        }
        return G__21644__delegate.call(this, args__8067__auto__);
      };
      G__21644.cljs$lang$maxFixedArity = 0;
      G__21644.cljs$lang$applyTo = function(arglist__21646) {
        var args__8067__auto__ = cljs.core.seq(arglist__21646);
        return G__21644__delegate(args__8067__auto__);
      };
      G__21644.cljs$core$IFn$_invoke$arity$variadic = G__21644__delegate;
      return G__21644;
    }();
  }(format_in__8065__auto__, cf__8066__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__4554__auto__ = function() {
    var temp__4425__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var match = temp__4425__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(o)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_21651_21655 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_21652_21656 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, prefix) - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, function() {
        var and__4542__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o);
        if (and__4542__auto__) {
          return !cljs.core._realized_QMARK_.call(null, o);
        } else {
          return and__4542__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21652_21656;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21651_21655;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__8065__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
  return function(format_in__8065__auto__, cf__8066__auto__) {
    return function() {
      var G__21657__delegate = function(args__8067__auto__) {
        var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
        return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
      };
      var G__21657 = function(var_args) {
        var args__8067__auto__ = null;
        if (arguments.length > 0) {
          var G__21658__i = 0, G__21658__a = new Array(arguments.length - 0);
          while (G__21658__i < G__21658__a.length) {
            G__21658__a[G__21658__i] = arguments[G__21658__i + 0];
            ++G__21658__i;
          }
          args__8067__auto__ = new cljs.core.IndexedSeq(G__21658__a, 0);
        }
        return G__21657__delegate.call(this, args__8067__auto__);
      };
      G__21657.cljs$lang$maxFixedArity = 0;
      G__21657.cljs$lang$applyTo = function(arglist__21659) {
        var args__8067__auto__ = cljs.core.seq(arglist__21659);
        return G__21657__delegate(args__8067__auto__);
      };
      G__21657.cljs$core$IFn$_invoke$arity$variadic = G__21657__delegate;
      return G__21657;
    }();
  }(format_in__8065__auto__, cf__8066__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__21670 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__21670, 0, null);
    var end = cljs.core.nth.call(null, vec__21670, 1, null);
    var vec__21671 = reference;
    var keyw = cljs.core.nth.call(null, vec__21671, 0, null);
    var args = cljs.core.nthnext.call(null, vec__21671, 1);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_21672_21678 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_21673_21679 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__8065__auto__ = "~w~:i";
          var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
          return function(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args) {
            return function() {
              var G__21680__delegate = function(args__8067__auto__) {
                var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
              };
              var G__21680 = function(var_args) {
                var args__8067__auto__ = null;
                if (arguments.length > 0) {
                  var G__21681__i = 0, G__21681__a = new Array(arguments.length - 0);
                  while (G__21681__i < G__21681__a.length) {
                    G__21681__a[G__21681__i] = arguments[G__21681__i + 0];
                    ++G__21681__i;
                  }
                  args__8067__auto__ = new cljs.core.IndexedSeq(G__21681__a, 0);
                }
                return G__21680__delegate.call(this, args__8067__auto__);
              };
              G__21680.cljs$lang$maxFixedArity = 0;
              G__21680.cljs$lang$applyTo = function(arglist__21682) {
                var args__8067__auto__ = cljs.core.seq(arglist__21682);
                return G__21680__delegate(args__8067__auto__);
              };
              G__21680.cljs$core$IFn$_invoke$arity$variadic = G__21680__delegate;
              return G__21680;
            }();
          }(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args);
        })().call(null, keyw);
        var args_21683__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_21683__$1)) {
            (function() {
              var format_in__8065__auto__ = " ";
              var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
              return function(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args) {
                return function() {
                  var G__21684__delegate = function(args__8067__auto__) {
                    var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                    return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
                  };
                  var G__21684 = function(var_args) {
                    var args__8067__auto__ = null;
                    if (arguments.length > 0) {
                      var G__21685__i = 0, G__21685__a = new Array(arguments.length - 0);
                      while (G__21685__i < G__21685__a.length) {
                        G__21685__a[G__21685__i] = arguments[G__21685__i + 0];
                        ++G__21685__i;
                      }
                      args__8067__auto__ = new cljs.core.IndexedSeq(G__21685__a, 0);
                    }
                    return G__21684__delegate.call(this, args__8067__auto__);
                  };
                  G__21684.cljs$lang$maxFixedArity = 0;
                  G__21684.cljs$lang$applyTo = function(arglist__21686) {
                    var args__8067__auto__ = cljs.core.seq(arglist__21686);
                    return G__21684__delegate(args__8067__auto__);
                  };
                  G__21684.cljs$core$IFn$_invoke$arity$variadic = G__21684__delegate;
                  return G__21684;
                }();
              }(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args);
            })().call(null);
            var arg_21687 = cljs.core.first.call(null, args_21683__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_21687)) {
              var vec__21674_21688 = cljs.pprint.brackets.call(null, arg_21687);
              var start_21689__$1 = cljs.core.nth.call(null, vec__21674_21688, 0, null);
              var end_21690__$1 = cljs.core.nth.call(null, vec__21674_21688, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_21675_21691 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_21676_21692 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_21689__$1, null, end_21690__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_21687), 3) && cljs.core.second.call(null, arg_21687) instanceof cljs.core.Keyword) {
                    var vec__21677_21693 = arg_21687;
                    var ns_21694 = cljs.core.nth.call(null, vec__21677_21693, 0, null);
                    var kw_21695 = cljs.core.nth.call(null, vec__21677_21693, 1, null);
                    var lis_21696 = cljs.core.nth.call(null, vec__21677_21693, 2, null);
                    (function() {
                      var format_in__8065__auto__ = "~w ~w ";
                      var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
                      return function(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, vec__21677_21693, ns_21694, kw_21695, lis_21696, _STAR_current_level_STAR_21675_21691, _STAR_current_length_STAR_21676_21692, vec__21674_21688, start_21689__$1, end_21690__$1, arg_21687, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args) {
                        return function() {
                          var G__21697__delegate = function(args__8067__auto__) {
                            var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                            return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
                          };
                          var G__21697 = function(var_args) {
                            var args__8067__auto__ = null;
                            if (arguments.length > 0) {
                              var G__21698__i = 0, G__21698__a = new Array(arguments.length - 0);
                              while (G__21698__i < G__21698__a.length) {
                                G__21698__a[G__21698__i] = arguments[G__21698__i + 0];
                                ++G__21698__i;
                              }
                              args__8067__auto__ = new cljs.core.IndexedSeq(G__21698__a, 0);
                            }
                            return G__21697__delegate.call(this, args__8067__auto__);
                          };
                          G__21697.cljs$lang$maxFixedArity = 0;
                          G__21697.cljs$lang$applyTo = function(arglist__21699) {
                            var args__8067__auto__ = cljs.core.seq(arglist__21699);
                            return G__21697__delegate(args__8067__auto__);
                          };
                          G__21697.cljs$core$IFn$_invoke$arity$variadic = G__21697__delegate;
                          return G__21697;
                        }();
                      }(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, vec__21677_21693, ns_21694, kw_21695, lis_21696, _STAR_current_level_STAR_21675_21691, _STAR_current_length_STAR_21676_21692, vec__21674_21688, start_21689__$1, end_21690__$1, arg_21687, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args);
                    })().call(null, ns_21694, kw_21695);
                    if (cljs.core.sequential_QMARK_.call(null, lis_21696)) {
                      (function() {
                        var format_in__8065__auto__ = cljs.core.vector_QMARK_.call(null, lis_21696) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
                        return function(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, vec__21677_21693, ns_21694, kw_21695, lis_21696, _STAR_current_level_STAR_21675_21691, _STAR_current_length_STAR_21676_21692, vec__21674_21688, start_21689__$1, end_21690__$1, arg_21687, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args) {
                          return function() {
                            var G__21700__delegate = function(args__8067__auto__) {
                              var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                              return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
                            };
                            var G__21700 = function(var_args) {
                              var args__8067__auto__ = null;
                              if (arguments.length > 0) {
                                var G__21701__i = 0, G__21701__a = new Array(arguments.length - 0);
                                while (G__21701__i < G__21701__a.length) {
                                  G__21701__a[G__21701__i] = arguments[G__21701__i + 0];
                                  ++G__21701__i;
                                }
                                args__8067__auto__ = new cljs.core.IndexedSeq(G__21701__a, 0);
                              }
                              return G__21700__delegate.call(this, args__8067__auto__);
                            };
                            G__21700.cljs$lang$maxFixedArity = 0;
                            G__21700.cljs$lang$applyTo = function(arglist__21702) {
                              var args__8067__auto__ = cljs.core.seq(arglist__21702);
                              return G__21700__delegate(args__8067__auto__);
                            };
                            G__21700.cljs$core$IFn$_invoke$arity$variadic = G__21700__delegate;
                            return G__21700;
                          }();
                        }(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, vec__21677_21693, ns_21694, kw_21695, lis_21696, _STAR_current_level_STAR_21675_21691, _STAR_current_length_STAR_21676_21692, vec__21674_21688, start_21689__$1, end_21690__$1, arg_21687, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args);
                      })().call(null, lis_21696);
                    } else {
                      cljs.pprint.write_out.call(null, lis_21696);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__8065__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
                      return function(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21675_21691, _STAR_current_length_STAR_21676_21692, vec__21674_21688, start_21689__$1, end_21690__$1, arg_21687, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args) {
                        return function() {
                          var G__21703__delegate = function(args__8067__auto__) {
                            var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                            return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
                          };
                          var G__21703 = function(var_args) {
                            var args__8067__auto__ = null;
                            if (arguments.length > 0) {
                              var G__21704__i = 0, G__21704__a = new Array(arguments.length - 0);
                              while (G__21704__i < G__21704__a.length) {
                                G__21704__a[G__21704__i] = arguments[G__21704__i + 0];
                                ++G__21704__i;
                              }
                              args__8067__auto__ = new cljs.core.IndexedSeq(G__21704__a, 0);
                            }
                            return G__21703__delegate.call(this, args__8067__auto__);
                          };
                          G__21703.cljs$lang$maxFixedArity = 0;
                          G__21703.cljs$lang$applyTo = function(arglist__21705) {
                            var args__8067__auto__ = cljs.core.seq(arglist__21705);
                            return G__21703__delegate(args__8067__auto__);
                          };
                          G__21703.cljs$core$IFn$_invoke$arity$variadic = G__21703__delegate;
                          return G__21703;
                        }();
                      }(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21675_21691, _STAR_current_length_STAR_21676_21692, vec__21674_21688, start_21689__$1, end_21690__$1, arg_21687, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args);
                    }(), arg_21687);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21676_21692;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21675_21691;
                }
              }
              if (cljs.core.next.call(null, args_21683__$1)) {
                (function() {
                  var format_in__8065__auto__ = "~_";
                  var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
                  return function(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, vec__21674_21688, start_21689__$1, end_21690__$1, arg_21687, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args) {
                    return function() {
                      var G__21706__delegate = function(args__8067__auto__) {
                        var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                        return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
                      };
                      var G__21706 = function(var_args) {
                        var args__8067__auto__ = null;
                        if (arguments.length > 0) {
                          var G__21707__i = 0, G__21707__a = new Array(arguments.length - 0);
                          while (G__21707__i < G__21707__a.length) {
                            G__21707__a[G__21707__i] = arguments[G__21707__i + 0];
                            ++G__21707__i;
                          }
                          args__8067__auto__ = new cljs.core.IndexedSeq(G__21707__a, 0);
                        }
                        return G__21706__delegate.call(this, args__8067__auto__);
                      };
                      G__21706.cljs$lang$maxFixedArity = 0;
                      G__21706.cljs$lang$applyTo = function(arglist__21708) {
                        var args__8067__auto__ = cljs.core.seq(arglist__21708);
                        return G__21706__delegate(args__8067__auto__);
                      };
                      G__21706.cljs$core$IFn$_invoke$arity$variadic = G__21706__delegate;
                      return G__21706;
                    }();
                  }(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, vec__21674_21688, start_21689__$1, end_21690__$1, arg_21687, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_21687);
              if (cljs.core.next.call(null, args_21683__$1)) {
                (function() {
                  var format_in__8065__auto__ = "~:_";
                  var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
                  return function(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, arg_21687, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args) {
                    return function() {
                      var G__21709__delegate = function(args__8067__auto__) {
                        var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                        return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
                      };
                      var G__21709 = function(var_args) {
                        var args__8067__auto__ = null;
                        if (arguments.length > 0) {
                          var G__21710__i = 0, G__21710__a = new Array(arguments.length - 0);
                          while (G__21710__i < G__21710__a.length) {
                            G__21710__a[G__21710__i] = arguments[G__21710__i + 0];
                            ++G__21710__i;
                          }
                          args__8067__auto__ = new cljs.core.IndexedSeq(G__21710__a, 0);
                        }
                        return G__21709__delegate.call(this, args__8067__auto__);
                      };
                      G__21709.cljs$lang$maxFixedArity = 0;
                      G__21709.cljs$lang$applyTo = function(arglist__21711) {
                        var args__8067__auto__ = cljs.core.seq(arglist__21711);
                        return G__21709__delegate(args__8067__auto__);
                      };
                      G__21709.cljs$core$IFn$_invoke$arity$variadic = G__21709__delegate;
                      return G__21709;
                    }();
                  }(args_21683__$1, format_in__8065__auto__, cf__8066__auto__, arg_21687, _STAR_current_level_STAR_21672_21678, _STAR_current_length_STAR_21673_21679, vec__21670, start, end, vec__21671, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__21712 = cljs.core.next.call(null, args_21683__$1);
            args_21683__$1 = G__21712;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21673_21679;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21672_21678;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__21718 = alis;
    var ns_sym = cljs.core.nth.call(null, vec__21718, 0, null);
    var ns_name = cljs.core.nth.call(null, vec__21718, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__21718, 2);
    var vec__21719 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__21719, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__21719, 1, null);
    var vec__21720 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__21720, 0, null);
    var references = cljs.core.nth.call(null, vec__21720, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_21721_21723 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_21722_21724 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__8065__auto__ = "~w ~1I~@_~w";
          var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
          return function(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21721_21723, _STAR_current_length_STAR_21722_21724, vec__21718, ns_sym, ns_name, stuff, vec__21719, doc_str, stuff__$1, vec__21720, attr_map, references) {
            return function() {
              var G__21725__delegate = function(args__8067__auto__) {
                var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
              };
              var G__21725 = function(var_args) {
                var args__8067__auto__ = null;
                if (arguments.length > 0) {
                  var G__21726__i = 0, G__21726__a = new Array(arguments.length - 0);
                  while (G__21726__i < G__21726__a.length) {
                    G__21726__a[G__21726__i] = arguments[G__21726__i + 0];
                    ++G__21726__i;
                  }
                  args__8067__auto__ = new cljs.core.IndexedSeq(G__21726__a, 0);
                }
                return G__21725__delegate.call(this, args__8067__auto__);
              };
              G__21725.cljs$lang$maxFixedArity = 0;
              G__21725.cljs$lang$applyTo = function(arglist__21727) {
                var args__8067__auto__ = cljs.core.seq(arglist__21727);
                return G__21725__delegate(args__8067__auto__);
              };
              G__21725.cljs$core$IFn$_invoke$arity$variadic = G__21725__delegate;
              return G__21725;
            }();
          }(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21721_21723, _STAR_current_length_STAR_21722_21724, vec__21718, ns_sym, ns_name, stuff, vec__21719, doc_str, stuff__$1, vec__21720, attr_map, references);
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__4554__auto__ = doc_str;
          if (cljs.core.truth_(or__4554__auto__)) {
            return or__4554__auto__;
          } else {
            var or__4554__auto____$1 = attr_map;
            if (cljs.core.truth_(or__4554__auto____$1)) {
              return or__4554__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__8065__auto__ = "~@:_";
            var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
            return function(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21721_21723, _STAR_current_length_STAR_21722_21724, vec__21718, ns_sym, ns_name, stuff, vec__21719, doc_str, stuff__$1, vec__21720, attr_map, references) {
              return function() {
                var G__21728__delegate = function(args__8067__auto__) {
                  var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                  return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
                };
                var G__21728 = function(var_args) {
                  var args__8067__auto__ = null;
                  if (arguments.length > 0) {
                    var G__21729__i = 0, G__21729__a = new Array(arguments.length - 0);
                    while (G__21729__i < G__21729__a.length) {
                      G__21729__a[G__21729__i] = arguments[G__21729__i + 0];
                      ++G__21729__i;
                    }
                    args__8067__auto__ = new cljs.core.IndexedSeq(G__21729__a, 0);
                  }
                  return G__21728__delegate.call(this, args__8067__auto__);
                };
                G__21728.cljs$lang$maxFixedArity = 0;
                G__21728.cljs$lang$applyTo = function(arglist__21730) {
                  var args__8067__auto__ = cljs.core.seq(arglist__21730);
                  return G__21728__delegate(args__8067__auto__);
                };
                G__21728.cljs$core$IFn$_invoke$arity$variadic = G__21728__delegate;
                return G__21728;
              }();
            }(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21721_21723, _STAR_current_length_STAR_21722_21724, vec__21718, ns_sym, ns_name, stuff, vec__21719, doc_str, stuff__$1, vec__21720, attr_map, references);
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__4554__auto__ = attr_map;
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__8065__auto__ = "~w~:[~;~:@_~]";
            var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
            return function(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21721_21723, _STAR_current_length_STAR_21722_21724, vec__21718, ns_sym, ns_name, stuff, vec__21719, doc_str, stuff__$1, vec__21720, attr_map, references) {
              return function() {
                var G__21731__delegate = function(args__8067__auto__) {
                  var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                  return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
                };
                var G__21731 = function(var_args) {
                  var args__8067__auto__ = null;
                  if (arguments.length > 0) {
                    var G__21732__i = 0, G__21732__a = new Array(arguments.length - 0);
                    while (G__21732__i < G__21732__a.length) {
                      G__21732__a[G__21732__i] = arguments[G__21732__i + 0];
                      ++G__21732__i;
                    }
                    args__8067__auto__ = new cljs.core.IndexedSeq(G__21732__a, 0);
                  }
                  return G__21731__delegate.call(this, args__8067__auto__);
                };
                G__21731.cljs$lang$maxFixedArity = 0;
                G__21731.cljs$lang$applyTo = function(arglist__21733) {
                  var args__8067__auto__ = cljs.core.seq(arglist__21733);
                  return G__21731__delegate(args__8067__auto__);
                };
                G__21731.cljs$core$IFn$_invoke$arity$variadic = G__21731__delegate;
                return G__21731;
              }();
            }(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21721_21723, _STAR_current_length_STAR_21722_21724, vec__21718, ns_sym, ns_name, stuff, vec__21719, doc_str, stuff__$1, vec__21720, attr_map, references);
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_21734__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_21734__$1));
          var temp__4425__auto___21735 = cljs.core.next.call(null, references_21734__$1);
          if (temp__4425__auto___21735) {
            var references_21736__$2 = temp__4425__auto___21735;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__21737 = references_21736__$2;
            references_21734__$1 = G__21737;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21722_21724;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21721_21723;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__8065__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
  return function(format_in__8065__auto__, cf__8066__auto__) {
    return function() {
      var G__21738__delegate = function(args__8067__auto__) {
        var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
        return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
      };
      var G__21738 = function(var_args) {
        var args__8067__auto__ = null;
        if (arguments.length > 0) {
          var G__21739__i = 0, G__21739__a = new Array(arguments.length - 0);
          while (G__21739__i < G__21739__a.length) {
            G__21739__a[G__21739__i] = arguments[G__21739__i + 0];
            ++G__21739__i;
          }
          args__8067__auto__ = new cljs.core.IndexedSeq(G__21739__a, 0);
        }
        return G__21738__delegate.call(this, args__8067__auto__);
      };
      G__21738.cljs$lang$maxFixedArity = 0;
      G__21738.cljs$lang$applyTo = function(arglist__21740) {
        var args__8067__auto__ = cljs.core.seq(arglist__21740);
        return G__21738__delegate(args__8067__auto__);
      };
      G__21738.cljs$core$IFn$_invoke$arity$variadic = G__21738__delegate;
      return G__21738;
    }();
  }(format_in__8065__auto__, cf__8066__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__8065__auto__ = " ~_";
        var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
        return function(format_in__8065__auto__, cf__8066__auto__) {
          return function() {
            var G__21741__delegate = function(args__8067__auto__) {
              var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
              return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
            };
            var G__21741 = function(var_args) {
              var args__8067__auto__ = null;
              if (arguments.length > 0) {
                var G__21742__i = 0, G__21742__a = new Array(arguments.length - 0);
                while (G__21742__i < G__21742__a.length) {
                  G__21742__a[G__21742__i] = arguments[G__21742__i + 0];
                  ++G__21742__i;
                }
                args__8067__auto__ = new cljs.core.IndexedSeq(G__21742__a, 0);
              }
              return G__21741__delegate.call(this, args__8067__auto__);
            };
            G__21741.cljs$lang$maxFixedArity = 0;
            G__21741.cljs$lang$applyTo = function(arglist__21743) {
              var args__8067__auto__ = cljs.core.seq(arglist__21743);
              return G__21741__delegate(args__8067__auto__);
            };
            G__21741.cljs$core$IFn$_invoke$arity$variadic = G__21741__delegate;
            return G__21741;
          }();
        }(format_in__8065__auto__, cf__8066__auto__);
      })().call(null);
    } else {
      (function() {
        var format_in__8065__auto__ = " ~@_";
        var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
        return function(format_in__8065__auto__, cf__8066__auto__) {
          return function() {
            var G__21744__delegate = function(args__8067__auto__) {
              var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
              return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
            };
            var G__21744 = function(var_args) {
              var args__8067__auto__ = null;
              if (arguments.length > 0) {
                var G__21745__i = 0, G__21745__a = new Array(arguments.length - 0);
                while (G__21745__i < G__21745__a.length) {
                  G__21745__a[G__21745__i] = arguments[G__21745__i + 0];
                  ++G__21745__i;
                }
                args__8067__auto__ = new cljs.core.IndexedSeq(G__21745__a, 0);
              }
              return G__21744__delegate.call(this, args__8067__auto__);
            };
            G__21744.cljs$lang$maxFixedArity = 0;
            G__21744.cljs$lang$applyTo = function(arglist__21746) {
              var args__8067__auto__ = cljs.core.seq(arglist__21746);
              return G__21744__delegate(args__8067__auto__);
            };
            G__21744.cljs$core$IFn$_invoke$arity$variadic = G__21744__delegate;
            return G__21744;
          }();
        }(format_in__8065__auto__, cf__8066__auto__);
      })().call(null);
    }
    return function() {
      var format_in__8065__auto__ = "~{~w~^ ~_~}";
      var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
      return function(format_in__8065__auto__, cf__8066__auto__) {
        return function() {
          var G__21747__delegate = function(args__8067__auto__) {
            var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
            return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
          };
          var G__21747 = function(var_args) {
            var args__8067__auto__ = null;
            if (arguments.length > 0) {
              var G__21748__i = 0, G__21748__a = new Array(arguments.length - 0);
              while (G__21748__i < G__21748__a.length) {
                G__21748__a[G__21748__i] = arguments[G__21748__i + 0];
                ++G__21748__i;
              }
              args__8067__auto__ = new cljs.core.IndexedSeq(G__21748__a, 0);
            }
            return G__21747__delegate.call(this, args__8067__auto__);
          };
          G__21747.cljs$lang$maxFixedArity = 0;
          G__21747.cljs$lang$applyTo = function(arglist__21749) {
            var args__8067__auto__ = cljs.core.seq(arglist__21749);
            return G__21747__delegate(args__8067__auto__);
          };
          G__21747.cljs$core$IFn$_invoke$arity$variadic = G__21747__delegate;
          return G__21747;
        }();
      }(format_in__8065__auto__, cf__8066__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__8065__auto__ = " ~_~{~w~^ ~_~}";
      var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
      return function(format_in__8065__auto__, cf__8066__auto__) {
        return function() {
          var G__21750__delegate = function(args__8067__auto__) {
            var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
            return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
          };
          var G__21750 = function(var_args) {
            var args__8067__auto__ = null;
            if (arguments.length > 0) {
              var G__21751__i = 0, G__21751__a = new Array(arguments.length - 0);
              while (G__21751__i < G__21751__a.length) {
                G__21751__a[G__21751__i] = arguments[G__21751__i + 0];
                ++G__21751__i;
              }
              args__8067__auto__ = new cljs.core.IndexedSeq(G__21751__a, 0);
            }
            return G__21750__delegate.call(this, args__8067__auto__);
          };
          G__21750.cljs$lang$maxFixedArity = 0;
          G__21750.cljs$lang$applyTo = function(arglist__21752) {
            var args__8067__auto__ = cljs.core.seq(arglist__21752);
            return G__21750__delegate(args__8067__auto__);
          };
          G__21750.cljs$core$IFn$_invoke$arity$variadic = G__21750__delegate;
          return G__21750;
        }();
      }(format_in__8065__auto__, cf__8066__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__21758 = alis;
    var defn_sym = cljs.core.nth.call(null, vec__21758, 0, null);
    var defn_name = cljs.core.nth.call(null, vec__21758, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__21758, 2);
    var vec__21759 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__21759, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__21759, 1, null);
    var vec__21760 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__21760, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__21760, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_21761_21763 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_21762_21764 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__8065__auto__ = "~w ~1I~@_~w";
          var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
          return function(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21761_21763, _STAR_current_length_STAR_21762_21764, vec__21758, defn_sym, defn_name, stuff, vec__21759, doc_str, stuff__$1, vec__21760, attr_map, stuff__$2) {
            return function() {
              var G__21765__delegate = function(args__8067__auto__) {
                var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
              };
              var G__21765 = function(var_args) {
                var args__8067__auto__ = null;
                if (arguments.length > 0) {
                  var G__21766__i = 0, G__21766__a = new Array(arguments.length - 0);
                  while (G__21766__i < G__21766__a.length) {
                    G__21766__a[G__21766__i] = arguments[G__21766__i + 0];
                    ++G__21766__i;
                  }
                  args__8067__auto__ = new cljs.core.IndexedSeq(G__21766__a, 0);
                }
                return G__21765__delegate.call(this, args__8067__auto__);
              };
              G__21765.cljs$lang$maxFixedArity = 0;
              G__21765.cljs$lang$applyTo = function(arglist__21767) {
                var args__8067__auto__ = cljs.core.seq(arglist__21767);
                return G__21765__delegate(args__8067__auto__);
              };
              G__21765.cljs$core$IFn$_invoke$arity$variadic = G__21765__delegate;
              return G__21765;
            }();
          }(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21761_21763, _STAR_current_length_STAR_21762_21764, vec__21758, defn_sym, defn_name, stuff, vec__21759, doc_str, stuff__$1, vec__21760, attr_map, stuff__$2);
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__8065__auto__ = " ~_~w";
            var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
            return function(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21761_21763, _STAR_current_length_STAR_21762_21764, vec__21758, defn_sym, defn_name, stuff, vec__21759, doc_str, stuff__$1, vec__21760, attr_map, stuff__$2) {
              return function() {
                var G__21768__delegate = function(args__8067__auto__) {
                  var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                  return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
                };
                var G__21768 = function(var_args) {
                  var args__8067__auto__ = null;
                  if (arguments.length > 0) {
                    var G__21769__i = 0, G__21769__a = new Array(arguments.length - 0);
                    while (G__21769__i < G__21769__a.length) {
                      G__21769__a[G__21769__i] = arguments[G__21769__i + 0];
                      ++G__21769__i;
                    }
                    args__8067__auto__ = new cljs.core.IndexedSeq(G__21769__a, 0);
                  }
                  return G__21768__delegate.call(this, args__8067__auto__);
                };
                G__21768.cljs$lang$maxFixedArity = 0;
                G__21768.cljs$lang$applyTo = function(arglist__21770) {
                  var args__8067__auto__ = cljs.core.seq(arglist__21770);
                  return G__21768__delegate(args__8067__auto__);
                };
                G__21768.cljs$core$IFn$_invoke$arity$variadic = G__21768__delegate;
                return G__21768;
              }();
            }(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21761_21763, _STAR_current_length_STAR_21762_21764, vec__21758, defn_sym, defn_name, stuff, vec__21759, doc_str, stuff__$1, vec__21760, attr_map, stuff__$2);
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__8065__auto__ = " ~_~w";
            var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
            return function(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21761_21763, _STAR_current_length_STAR_21762_21764, vec__21758, defn_sym, defn_name, stuff, vec__21759, doc_str, stuff__$1, vec__21760, attr_map, stuff__$2) {
              return function() {
                var G__21771__delegate = function(args__8067__auto__) {
                  var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                  return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
                };
                var G__21771 = function(var_args) {
                  var args__8067__auto__ = null;
                  if (arguments.length > 0) {
                    var G__21772__i = 0, G__21772__a = new Array(arguments.length - 0);
                    while (G__21772__i < G__21772__a.length) {
                      G__21772__a[G__21772__i] = arguments[G__21772__i + 0];
                      ++G__21772__i;
                    }
                    args__8067__auto__ = new cljs.core.IndexedSeq(G__21772__a, 0);
                  }
                  return G__21771__delegate.call(this, args__8067__auto__);
                };
                G__21771.cljs$lang$maxFixedArity = 0;
                G__21771.cljs$lang$applyTo = function(arglist__21773) {
                  var args__8067__auto__ = cljs.core.seq(arglist__21773);
                  return G__21771__delegate(args__8067__auto__);
                };
                G__21771.cljs$core$IFn$_invoke$arity$variadic = G__21771__delegate;
                return G__21771;
              }();
            }(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21761_21763, _STAR_current_length_STAR_21762_21764, vec__21758, defn_sym, defn_name, stuff, vec__21759, doc_str, stuff__$1, vec__21760, attr_map, stuff__$2);
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__4554__auto__ = doc_str;
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__4554__auto__ = doc_str;
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21762_21764;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21761_21763;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_21779_21784 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_21780_21785 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count21781_21786 = 0;
      var binding_21787 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count21781_21786 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_21787)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_21782_21788 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_21783_21789 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_21787));
                if (cljs.core.next.call(null, binding_21787)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_21787));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21783_21789;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21782_21788;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_21787))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__21790 = length_count21781_21786 + 1;
              var G__21791 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_21787));
              length_count21781_21786 = G__21790;
              binding_21787 = G__21791;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21780_21785;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21779_21784;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_21794_21796 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_21795_21797 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__8065__auto__ = "~w ~1I~@_";
          var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
          return function(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21794_21796, _STAR_current_length_STAR_21795_21797, base_sym) {
            return function() {
              var G__21798__delegate = function(args__8067__auto__) {
                var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
              };
              var G__21798 = function(var_args) {
                var args__8067__auto__ = null;
                if (arguments.length > 0) {
                  var G__21799__i = 0, G__21799__a = new Array(arguments.length - 0);
                  while (G__21799__i < G__21799__a.length) {
                    G__21799__a[G__21799__i] = arguments[G__21799__i + 0];
                    ++G__21799__i;
                  }
                  args__8067__auto__ = new cljs.core.IndexedSeq(G__21799__a, 0);
                }
                return G__21798__delegate.call(this, args__8067__auto__);
              };
              G__21798.cljs$lang$maxFixedArity = 0;
              G__21798.cljs$lang$applyTo = function(arglist__21800) {
                var args__8067__auto__ = cljs.core.seq(arglist__21800);
                return G__21798__delegate(args__8067__auto__);
              };
              G__21798.cljs$core$IFn$_invoke$arity$variadic = G__21798__delegate;
              return G__21798;
            }();
          }(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21794_21796, _STAR_current_length_STAR_21795_21797, base_sym);
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__8065__auto__ = " ~_~{~w~^ ~_~}";
          var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
          return function(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21794_21796, _STAR_current_length_STAR_21795_21797, base_sym) {
            return function() {
              var G__21801__delegate = function(args__8067__auto__) {
                var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
              };
              var G__21801 = function(var_args) {
                var args__8067__auto__ = null;
                if (arguments.length > 0) {
                  var G__21802__i = 0, G__21802__a = new Array(arguments.length - 0);
                  while (G__21802__i < G__21802__a.length) {
                    G__21802__a[G__21802__i] = arguments[G__21802__i + 0];
                    ++G__21802__i;
                  }
                  args__8067__auto__ = new cljs.core.IndexedSeq(G__21802__a, 0);
                }
                return G__21801__delegate.call(this, args__8067__auto__);
              };
              G__21801.cljs$lang$maxFixedArity = 0;
              G__21801.cljs$lang$applyTo = function(arglist__21803) {
                var args__8067__auto__ = cljs.core.seq(arglist__21803);
                return G__21801__delegate(args__8067__auto__);
              };
              G__21801.cljs$core$IFn$_invoke$arity$variadic = G__21801__delegate;
              return G__21801;
            }();
          }(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21794_21796, _STAR_current_length_STAR_21795_21797, base_sym);
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21795_21797;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21794_21796;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__8065__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
  return function(format_in__8065__auto__, cf__8066__auto__) {
    return function() {
      var G__21804__delegate = function(args__8067__auto__) {
        var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
        return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
      };
      var G__21804 = function(var_args) {
        var args__8067__auto__ = null;
        if (arguments.length > 0) {
          var G__21805__i = 0, G__21805__a = new Array(arguments.length - 0);
          while (G__21805__i < G__21805__a.length) {
            G__21805__a[G__21805__i] = arguments[G__21805__i + 0];
            ++G__21805__i;
          }
          args__8067__auto__ = new cljs.core.IndexedSeq(G__21805__a, 0);
        }
        return G__21804__delegate.call(this, args__8067__auto__);
      };
      G__21804.cljs$lang$maxFixedArity = 0;
      G__21804.cljs$lang$applyTo = function(arglist__21806) {
        var args__8067__auto__ = cljs.core.seq(arglist__21806);
        return G__21804__delegate(args__8067__auto__);
      };
      G__21804.cljs$core$IFn$_invoke$arity$variadic = G__21804__delegate;
      return G__21804;
    }();
  }(format_in__8065__auto__, cf__8066__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_21812_21817 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_21813_21818 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count21814_21819 = 0;
        var alis_21820__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count21814_21819 < cljs.core._STAR_print_length_STAR_) {
            if (alis_21820__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_21815_21821 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_21816_21822 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_21820__$1));
                  if (cljs.core.next.call(null, alis_21820__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_21820__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21816_21822;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21815_21821;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_21820__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__21823 = length_count21814_21819 + 1;
                var G__21824 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_21820__$1));
                length_count21814_21819 = G__21823;
                alis_21820__$1 = G__21824;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21813_21818;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21812_21817;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_21830_21835 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_21831_21836 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__8065__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
          return function(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21830_21835, _STAR_current_length_STAR_21831_21836) {
            return function() {
              var G__21837__delegate = function(args__8067__auto__) {
                var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
                return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
              };
              var G__21837 = function(var_args) {
                var args__8067__auto__ = null;
                if (arguments.length > 0) {
                  var G__21838__i = 0, G__21838__a = new Array(arguments.length - 0);
                  while (G__21838__i < G__21838__a.length) {
                    G__21838__a[G__21838__i] = arguments[G__21838__i + 0];
                    ++G__21838__i;
                  }
                  args__8067__auto__ = new cljs.core.IndexedSeq(G__21838__a, 0);
                }
                return G__21837__delegate.call(this, args__8067__auto__);
              };
              G__21837.cljs$lang$maxFixedArity = 0;
              G__21837.cljs$lang$applyTo = function(arglist__21839) {
                var args__8067__auto__ = cljs.core.seq(arglist__21839);
                return G__21837__delegate(args__8067__auto__);
              };
              G__21837.cljs$core$IFn$_invoke$arity$variadic = G__21837__delegate;
              return G__21837;
            }();
          }(format_in__8065__auto__, cf__8066__auto__, _STAR_current_level_STAR_21830_21835, _STAR_current_length_STAR_21831_21836);
        }(), alis);
        var length_count21832_21840 = 0;
        var alis_21841__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count21832_21840 < cljs.core._STAR_print_length_STAR_) {
            if (alis_21841__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_21833_21842 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_21834_21843 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_21841__$1));
                  if (cljs.core.next.call(null, alis_21841__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_21841__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21834_21843;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21833_21842;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_21841__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__21844 = length_count21832_21840 + 1;
                var G__21845 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_21841__$1));
                length_count21832_21840 = G__21844;
                alis_21841__$1 = G__21845;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21831_21836;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21830_21835;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR_21849 = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? new cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, args), "%"], true, false) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(_STAR_symbol_map_STAR_21849, args, nlis) {
      return function(p1__21846_SHARP_, p2__21847_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__21846_SHARP_, [cljs.core.str("%"), cljs.core.str(p2__21847_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR_21849, args, nlis), args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    try {
      return function() {
        var format_in__8065__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__8066__auto__ = typeof format_in__8065__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8065__auto__) : format_in__8065__auto__;
        return function(format_in__8065__auto__, cf__8066__auto__, _STAR_symbol_map_STAR_21849, args, nlis) {
          return function() {
            var G__21850__delegate = function(args__8067__auto__) {
              var navigator__8068__auto__ = cljs.pprint.init_navigator.call(null, args__8067__auto__);
              return cljs.pprint.execute_format.call(null, cf__8066__auto__, navigator__8068__auto__);
            };
            var G__21850 = function(var_args) {
              var args__8067__auto__ = null;
              if (arguments.length > 0) {
                var G__21851__i = 0, G__21851__a = new Array(arguments.length - 0);
                while (G__21851__i < G__21851__a.length) {
                  G__21851__a[G__21851__i] = arguments[G__21851__i + 0];
                  ++G__21851__i;
                }
                args__8067__auto__ = new cljs.core.IndexedSeq(G__21851__a, 0);
              }
              return G__21850__delegate.call(this, args__8067__auto__);
            };
            G__21850.cljs$lang$maxFixedArity = 0;
            G__21850.cljs$lang$applyTo = function(arglist__21852) {
              var args__8067__auto__ = cljs.core.seq(arglist__21852);
              return G__21850__delegate(args__8067__auto__);
            };
            G__21850.cljs$core$IFn$_invoke$arity$variadic = G__21850__delegate;
            return G__21850;
          }();
        }(format_in__8065__auto__, cf__8066__auto__, _STAR_symbol_map_STAR_21849, args, nlis);
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR_21849;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_21856_21859 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_21857_21860 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count21858_21861 = 0;
      var alis_21862__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count21858_21861 < cljs.core._STAR_print_length_STAR_) {
          if (alis_21862__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_21862__$1));
            if (cljs.core.next.call(null, alis_21862__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__21863 = length_count21858_21861 + 1;
              var G__21864 = cljs.core.next.call(null, alis_21862__$1);
              length_count21858_21861 = G__21863;
              alis_21862__$1 = G__21864;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_21857_21860;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_21856_21859;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__5307__auto__ = function cljs$pprint$two_forms_$_iter__21869(s__21870) {
      return new cljs.core.LazySeq(null, function() {
        var s__21870__$1 = s__21870;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__21870__$1);
          if (temp__4425__auto__) {
            var s__21870__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__21870__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__21870__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__21872 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__21871 = 0;
                while (true) {
                  if (i__21871 < size__5306__auto__) {
                    var x = cljs.core._nth.call(null, c__5305__auto__, i__21871);
                    cljs.core.chunk_append.call(null, b__21872, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__21873 = i__21871 + 1;
                    i__21871 = G__21873;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21872), cljs$pprint$two_forms_$_iter__21869.call(null, cljs.core.chunk_rest.call(null, s__21870__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21872), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__21870__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__21869.call(null, cljs.core.rest.call(null, s__21870__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(core) {
    return function(p1__21874_SHARP_) {
      var vec__21876 = p1__21874_SHARP_;
      var s = cljs.core.nth.call(null, vec__21876, 0, null);
      var f = cljs.core.nth.call(null, vec__21876, 1, null);
      if (cljs.core.not.call(null, function() {
        var or__4554__auto__ = cljs.core.namespace.call(null, s);
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_.call(null, s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
      } else {
        return p1__21874_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__4423__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__4423__auto__)) {
      var special_form = temp__4423__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__4423__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var arg_num = temp__4423__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__4866__auto__ = 0;
    var y__4867__auto__ = width - cljs.core.count.call(null, s);
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table() {
  var args21880 = [];
  var len__5593__auto___21896 = arguments.length;
  var i__5594__auto___21897 = 0;
  while (true) {
    if (i__5594__auto___21897 < len__5593__auto___21896) {
      args21880.push(arguments[i__5594__auto___21897]);
      var G__21898 = i__5594__auto___21897 + 1;
      i__5594__auto___21897 = G__21898;
      continue;
    } else {
    }
    break;
  }
  var G__21882 = args21880.length;
  switch(G__21882) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21880.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  var _STAR_print_newline_STAR_21883 = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, rows)) {
      var widths = cljs.core.map.call(null, function(_STAR_print_newline_STAR_21883) {
        return function(k) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str(k)].join("")), cljs.core.map.call(null, function(_STAR_print_newline_STAR_21883) {
            return function(p1__21877_SHARP_) {
              return cljs.core.count.call(null, [cljs.core.str(cljs.core.get.call(null, p1__21877_SHARP_, k))].join(""));
            };
          }(_STAR_print_newline_STAR_21883), rows));
        };
      }(_STAR_print_newline_STAR_21883), ks);
      var spacers = cljs.core.map.call(null, function(widths, _STAR_print_newline_STAR_21883) {
        return function(p1__21878_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__21878_SHARP_, "-"));
        };
      }(widths, _STAR_print_newline_STAR_21883), widths);
      var fmt_row = function(widths, spacers, _STAR_print_newline_STAR_21883) {
        return function(leader, divider, trailer, row) {
          return [cljs.core.str(leader), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
            var iter__5307__auto__ = function(widths, spacers, _STAR_print_newline_STAR_21883) {
              return function cljs$pprint$iter__21884(s__21885) {
                return new cljs.core.LazySeq(null, function(widths, spacers, _STAR_print_newline_STAR_21883) {
                  return function() {
                    var s__21885__$1 = s__21885;
                    while (true) {
                      var temp__4425__auto__ = cljs.core.seq.call(null, s__21885__$1);
                      if (temp__4425__auto__) {
                        var s__21885__$2 = temp__4425__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__21885__$2)) {
                          var c__5305__auto__ = cljs.core.chunk_first.call(null, s__21885__$2);
                          var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
                          var b__21887 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
                          if (function() {
                            var i__21886 = 0;
                            while (true) {
                              if (i__21886 < size__5306__auto__) {
                                var vec__21890 = cljs.core._nth.call(null, c__5305__auto__, i__21886);
                                var col = cljs.core.nth.call(null, vec__21890, 0, null);
                                var width = cljs.core.nth.call(null, vec__21890, 1, null);
                                cljs.core.chunk_append.call(null, b__21887, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")));
                                var G__21900 = i__21886 + 1;
                                i__21886 = G__21900;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21887), cljs$pprint$iter__21884.call(null, cljs.core.chunk_rest.call(null, s__21885__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__21887), null);
                          }
                        } else {
                          var vec__21891 = cljs.core.first.call(null, s__21885__$2);
                          var col = cljs.core.nth.call(null, vec__21891, 0, null);
                          var width = cljs.core.nth.call(null, vec__21891, 1, null);
                          return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")), cljs$pprint$iter__21884.call(null, cljs.core.rest.call(null, s__21885__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(widths, spacers, _STAR_print_newline_STAR_21883), null, null);
              };
            }(widths, spacers, _STAR_print_newline_STAR_21883);
            return iter__5307__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(iter__5307__auto__, widths, spacers, _STAR_print_newline_STAR_21883) {
              return function(p1__21879_SHARP_) {
                return cljs.core.get.call(null, row, p1__21879_SHARP_);
              };
            }(iter__5307__auto__, widths, spacers, _STAR_print_newline_STAR_21883), ks), widths));
          }()))), cljs.core.str(trailer)].join("");
        };
      }(widths, spacers, _STAR_print_newline_STAR_21883);
      cljs.core.println.call(null);
      cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
      cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
      var seq__21892 = cljs.core.seq.call(null, rows);
      var chunk__21893 = null;
      var count__21894 = 0;
      var i__21895 = 0;
      while (true) {
        if (i__21895 < count__21894) {
          var row = cljs.core._nth.call(null, chunk__21893, i__21895);
          cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
          var G__21901 = seq__21892;
          var G__21902 = chunk__21893;
          var G__21903 = count__21894;
          var G__21904 = i__21895 + 1;
          seq__21892 = G__21901;
          chunk__21893 = G__21902;
          count__21894 = G__21903;
          i__21895 = G__21904;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__21892);
          if (temp__4425__auto__) {
            var seq__21892__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__21892__$1)) {
              var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__21892__$1);
              var G__21905 = cljs.core.chunk_rest.call(null, seq__21892__$1);
              var G__21906 = c__5338__auto__;
              var G__21907 = cljs.core.count.call(null, c__5338__auto__);
              var G__21908 = 0;
              seq__21892 = G__21905;
              chunk__21893 = G__21906;
              count__21894 = G__21907;
              i__21895 = G__21908;
              continue;
            } else {
              var row = cljs.core.first.call(null, seq__21892__$1);
              cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
              var G__21909 = cljs.core.next.call(null, seq__21892__$1);
              var G__21910 = null;
              var G__21911 = 0;
              var G__21912 = 0;
              seq__21892 = G__21909;
              chunk__21893 = G__21910;
              count__21894 = G__21911;
              i__21895 = G__21912;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_21883;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env() {
  var args20778 = [];
  var len__5593__auto___20782 = arguments.length;
  var i__5594__auto___20783 = 0;
  while (true) {
    if (i__5594__auto___20783 < len__5593__auto___20782) {
      args20778.push(arguments[i__5594__auto___20783]);
      var G__20784 = i__5594__auto___20783 + 1;
      i__5594__auto___20783 = G__20784;
      continue;
    } else {
    }
    break;
  }
  var G__20780 = args20778.length;
  switch(G__20780) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20778.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__20781 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  var G__20781__$1 = cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter) ? cljs.core.assoc.call(null, G__20781, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint) : G__20781;
  return G__20781__$1;
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__4554__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_() {
  var args__5600__auto__ = [];
  var len__5593__auto___20789 = arguments.length;
  var i__5594__auto___20790 = 0;
  while (true) {
    if (i__5594__auto___20790 < len__5593__auto___20789) {
      args__5600__auto__.push(arguments[i__5594__auto___20790]);
      var G__20791 = i__5594__auto___20790 + 1;
      i__5594__auto___20790 = G__20791;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq20786) {
  var G__20787 = cljs.core.first.call(null, seq20786);
  var seq20786__$1 = cljs.core.next.call(null, seq20786);
  var G__20788 = cljs.core.first.call(null, seq20786__$1);
  var seq20786__$2 = cljs.core.next.call(null, seq20786__$1);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__20787, G__20788, seq20786__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__20795 = m;
  var map__20795__$1 = (!(map__20795 == null) ? map__20795.cljs$lang$protocol_mask$partition0$ & 64 || map__20795.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20795) : map__20795;
  var file = cljs.core.get.call(null, map__20795__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__20795__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__20795__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(map__20795, map__20795__$1, file, line, column) {
    return function(p1__20792_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__20792_SHARP_));
    };
  }(map__20795, map__20795__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(cljs.core.truth_(column) ? [cljs.core.str(":"), cljs.core.str(column)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4425__auto___20797 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4425__auto___20797)) {
    var message_20798 = temp__4425__auto___20797;
    cljs.core.println.call(null, message_20798);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4425__auto___20799 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4425__auto___20799)) {
    var message_20800 = temp__4425__auto___20799;
    cljs.core.println.call(null, message_20800);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2)), parseInt(cljs.core.nth.call(null, parts, cnt - 1))], null);
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var source_map = temp__4423__auto__;
    var temp__4423__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var columns = temp__4423__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__4423__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__4423__auto____$2)) {
          var mapping = temp__4423__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__4423__auto__ = function() {
    var and__4542__auto__ = typeof exception.stack === "string";
    if (and__4542__auto__) {
      var G__20806 = exception.stack;
      var G__20806__$1 = G__20806 == null ? null : clojure.string.split_lines.call(null, G__20806);
      var G__20806__$2 = G__20806__$1 == null ? null : cljs.core.get.call(null, G__20806__$1, depth);
      var G__20806__$3 = G__20806__$2 == null ? null : clojure.string.trim.call(null, G__20806__$2);
      return G__20806__$3;
    } else {
      return and__4542__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4423__auto__)) {
    var stack_element = temp__4423__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__20807 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__20807, 0, null);
    var column = cljs.core.nth.call(null, vec__20807, 1, null);
    var vec__20808 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__20808, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__20808, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__20808, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__20810 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
    switch(G__20810) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = {};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__4425__auto__ = cljs.core.seq.call(null, fns);
    if (temp__4425__auto__) {
      var xs__4977__auto__ = temp__4425__auto__;
      var f = cljs.core.first.call(null, xs__4977__auto__);
      var obj = f.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__4977__auto__, temp__4425__auto__) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__4977__auto__, temp__4425__auto__), null);
          return function(fns, d, obj, f, xs__4977__auto__, temp__4425__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__4977__auto__, temp__4425__auto__);
        }());
      } else {
        var G__20818 = function() {
          var G__20817 = cljs.core.rest.call(null, fns);
          var G__20817__$1 = cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj))) ? cljs.core.concat.call(null, obj, G__20817) : G__20817;
          return G__20817__$1;
        }();
        fns = G__20818;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__20820 = fns;
  var G__20820__$1 = G__20820 == null ? null : cljs.core.vary_meta.call(null, G__20820, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  return G__20820__$1;
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "Var", "Var", -1833791616, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e20823) {
      var e = e20823;
      var G__20824 = e instanceof cljs.core.Keyword ? e.fqn : null;
      switch(G__20824) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var t = temp__4423__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__20827 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__20827, 0, null);
  var types = vec__20827;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not-any?", "not-any?", -2114707554, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "types", "types", -2064405130, null))))].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "types", "types", -2064405130, null)))))].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__20835) {
    var vec__20836 = p__20835;
    var ns = cljs.core.nth.call(null, vec__20836, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__20836, 1, null);
    return function(vec__20836, ns, vars__$1) {
      return function() {
        return cljs.test.block.call(null, function() {
          var env = cljs.test.get_current_env.call(null);
          var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__20837 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures).fqn : null;
          switch(G__20837) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__20837, env, once_fixtures, each_fixtures, vec__20836, ns, vars__$1) {
                return function() {
                  return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function(each_fixture_fn, G__20837, env, once_fixtures, each_fixtures, vec__20836, ns, vars__$1) {
                    return function() {
                      var seq__20838 = cljs.core.seq.call(null, vars__$1);
                      var chunk__20839 = null;
                      var count__20840 = 0;
                      var i__20841 = 0;
                      while (true) {
                        if (i__20841 < count__20840) {
                          var v = cljs.core._nth.call(null, chunk__20839, i__20841);
                          var temp__4425__auto___20843 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                          if (cljs.core.truth_(temp__4425__auto___20843)) {
                            var t_20844 = temp__4425__auto___20843;
                            each_fixture_fn.call(null, function(seq__20838, chunk__20839, count__20840, i__20841, t_20844, temp__4425__auto___20843, v, each_fixture_fn, G__20837, env, once_fixtures, each_fixtures, vec__20836, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_20844)));
                              };
                            }(seq__20838, chunk__20839, count__20840, i__20841, t_20844, temp__4425__auto___20843, v, each_fixture_fn, G__20837, env, once_fixtures, each_fixtures, vec__20836, ns, vars__$1));
                          } else {
                          }
                          var G__20845 = seq__20838;
                          var G__20846 = chunk__20839;
                          var G__20847 = count__20840;
                          var G__20848 = i__20841 + 1;
                          seq__20838 = G__20845;
                          chunk__20839 = G__20846;
                          count__20840 = G__20847;
                          i__20841 = G__20848;
                          continue;
                        } else {
                          var temp__4425__auto__ = cljs.core.seq.call(null, seq__20838);
                          if (temp__4425__auto__) {
                            var seq__20838__$1 = temp__4425__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, seq__20838__$1)) {
                              var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__20838__$1);
                              var G__20849 = cljs.core.chunk_rest.call(null, seq__20838__$1);
                              var G__20850 = c__5338__auto__;
                              var G__20851 = cljs.core.count.call(null, c__5338__auto__);
                              var G__20852 = 0;
                              seq__20838 = G__20849;
                              chunk__20839 = G__20850;
                              count__20840 = G__20851;
                              i__20841 = G__20852;
                              continue;
                            } else {
                              var v = cljs.core.first.call(null, seq__20838__$1);
                              var temp__4425__auto___20853__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                              if (cljs.core.truth_(temp__4425__auto___20853__$1)) {
                                var t_20854 = temp__4425__auto___20853__$1;
                                each_fixture_fn.call(null, function(seq__20838, chunk__20839, count__20840, i__20841, t_20854, temp__4425__auto___20853__$1, v, seq__20838__$1, temp__4425__auto__, each_fixture_fn, G__20837, env, once_fixtures, each_fixtures, vec__20836, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_20854)));
                                  };
                                }(seq__20838, chunk__20839, count__20840, i__20841, t_20854, temp__4425__auto___20853__$1, v, seq__20838__$1, temp__4425__auto__, each_fixture_fn, G__20837, env, once_fixtures, each_fixtures, vec__20836, ns, vars__$1));
                              } else {
                              }
                              var G__20855 = cljs.core.next.call(null, seq__20838__$1);
                              var G__20856 = null;
                              var G__20857 = 0;
                              var G__20858 = 0;
                              seq__20838 = G__20855;
                              chunk__20839 = G__20856;
                              count__20840 = G__20857;
                              i__20841 = G__20858;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__20837, env, once_fixtures, each_fixtures, vec__20836, ns, vars__$1));
                };
              }(each_fixture_fn, G__20837, env, once_fixtures, each_fixtures, vec__20836, ns, vars__$1)], null);
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures))].join(""));;
          }
        }());
      };
    }(vec__20836, ns, vars__$1);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("tiltontec.cell.base");
goog.require("cljs.core");
goog.require("tiltontec.util.base");
goog.require("cljs.test");
goog.require("tiltontec.util.core");
tiltontec.cell.base._PLUS_pulse_PLUS_ = cljs.core.atom.call(null, 0);
tiltontec.cell.base.cells_init = function tiltontec$cell$base$cells_init() {
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_, 0);
};
tiltontec.cell.base._STAR_causation_STAR_ = cljs.core.List.EMPTY;
tiltontec.cell.base._STAR_call_stack_STAR_ = null;
tiltontec.cell.base._STAR_depender_STAR_ = null;
tiltontec.cell.base._STAR_defer_changes_STAR_ = false;
tiltontec.cell.base._PLUS_client_q_handler_PLUS_ = cljs.core.atom.call(null, null);
if (typeof tiltontec.cell.base.unbound !== "undefined") {
} else {
  tiltontec.cell.base.unbound = cljs.core.gensym.call(null, "unbound-cell-value");
}
if (typeof tiltontec.cell.base.uncurrent !== "undefined") {
} else {
  tiltontec.cell.base.uncurrent = cljs.core.gensym.call(null, "uncurrent-formulaic-value");
}
tiltontec.cell.base._STAR_not_to_be_STAR_ = false;
tiltontec.cell.base._STAR_unfinished_business_STAR_ = null;
tiltontec.cell.base._STAR_within_integrity_STAR_ = false;
tiltontec.cell.base._STAR_finbiz_id_STAR_ = 0;
tiltontec.cell.base._STAR_c_prop_depth_STAR_ = 0;
tiltontec.cell.base._PLUS_c_debug_PLUS_ = cljs.core.atom.call(null, false);
tiltontec.cell.base._PLUS_stop_PLUS_ = cljs.core.atom.call(null, false);
tiltontec.cell.base.pcell = function tiltontec$cell$base$pcell(_AMPERSAND_form, _AMPERSAND_env, tag, c) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "println", "cljs.core/println", -331834442, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "pcell", "pcell", -240144130)), cljs.core._conj.call(null, cljs.core.List.EMPTY, tag), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-slot", "tiltontec.cell.base/c-slot", 1453031347, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, c))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-state", "tiltontec.cell.base/c-state", 1205895034, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, c))))))));
};
tiltontec.cell.base.pcell.cljs$lang$macro = true;
tiltontec.cell.base.cells_reset = function tiltontec$cell$base$cells_reset() {
  var args33987 = [];
  var len__5593__auto___33990 = arguments.length;
  var i__5594__auto___33991 = 0;
  while (true) {
    if (i__5594__auto___33991 < len__5593__auto___33990) {
      args33987.push(arguments[i__5594__auto___33991]);
      var G__33992 = i__5594__auto___33991 + 1;
      i__5594__auto___33991 = G__33992;
      continue;
    } else {
    }
    break;
  }
  var G__33989 = args33987.length;
  switch(G__33989) {
    case 0:
      return tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33987.length)].join(""));;
  }
};
tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.base.cells_reset.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$1 = function(options) {
  cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_c_debug_PLUS_, (new cljs.core.Keyword(null, "debug", "debug", -1608172596)).cljs$core$IFn$_invoke$arity$2(options, false));
  cljs.core.reset_BANG_.call(null, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), 0);
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_, (new cljs.core.Keyword(null, "client-queue-handler", "client-queue-handler", -817174181)).cljs$core$IFn$_invoke$arity$1(options));
};
tiltontec.cell.base.cells_reset.cljs$lang$maxFixedArity = 1;
tiltontec.cell.base.without_c_dependency = function tiltontec$cell$base$without_c_dependency() {
  var args__5600__auto__ = [];
  var len__5593__auto___33997 = arguments.length;
  var i__5594__auto___33998 = 0;
  while (true) {
    if (i__5594__auto___33998 < len__5593__auto___33997) {
      args__5600__auto__.push(arguments[i__5594__auto___33998]);
      var G__33999 = i__5594__auto___33998 + 1;
      i__5594__auto___33998 = G__33999;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*depender*", "tiltontec.cell.base/*depender*", 
  1302959745, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null)))))), body)));
};
tiltontec.cell.base.without_c_dependency.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.without_c_dependency.cljs$lang$applyTo = function(seq33994) {
  var G__33995 = cljs.core.first.call(null, seq33994);
  var seq33994__$1 = cljs.core.next.call(null, seq33994);
  var G__33996 = cljs.core.first.call(null, seq33994__$1);
  var seq33994__$2 = cljs.core.next.call(null, seq33994__$1);
  return tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic(G__33995, G__33996, seq33994__$2);
};
tiltontec.cell.base.without_c_dependency.cljs$lang$macro = true;
tiltontec.cell.base._PLUS_cause = function tiltontec$cell$base$_PLUS_cause() {
  return cljs.core.first.call(null, tiltontec.cell.base._STAR_causation_STAR_);
};
tiltontec.cell.base.c_stopper = function tiltontec$cell$base$c_stopper(why) {
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_stop_PLUS_, why);
};
tiltontec.cell.base._PLUS_c_stopper_PLUS_ = cljs.core.atom.call(null, tiltontec.cell.base.c_stopper);
tiltontec.cell.base.c_stop = function tiltontec$cell$base$c_stop() {
  var args34000 = [];
  var len__5593__auto___34003 = arguments.length;
  var i__5594__auto___34004 = 0;
  while (true) {
    if (i__5594__auto___34004 < len__5593__auto___34003) {
      args34000.push(arguments[i__5594__auto___34004]);
      var G__34005 = i__5594__auto___34004 + 1;
      i__5594__auto___34004 = G__34005;
      continue;
    } else {
    }
    break;
  }
  var G__34002 = args34000.length;
  switch(G__34002) {
    case 0:
      return tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34000.length)].join(""));;
  }
};
tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.base.c_stop.call(null, true);
};
tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$1 = function(why) {
  return cljs.core.deref.call(null, tiltontec.cell.base._PLUS_c_stopper_PLUS_).call(null, why);
};
tiltontec.cell.base.c_stop.cljs$lang$maxFixedArity = 1;
tiltontec.cell.base.c_stopped = function tiltontec$cell$base$c_stopped() {
  return cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_);
};
tiltontec.cell.base.un_stopped = function tiltontec$cell$base$un_stopped() {
  var args__5600__auto__ = [];
  var len__5593__auto___34010 = arguments.length;
  var i__5594__auto___34011 = 0;
  while (true) {
    if (i__5594__auto___34011 < len__5593__auto___34010) {
      args__5600__auto__.push(arguments[i__5594__auto___34011]);
      var G__34012 = i__5594__auto___34011 + 1;
      i__5594__auto___34011 = G__34012;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-not", "cljs.core/when-not", -556141047, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "+stop+", "tiltontec.cell.base/+stop+", 1421569483, null)))))), body)));
};
tiltontec.cell.base.un_stopped.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.un_stopped.cljs$lang$applyTo = function(seq34007) {
  var G__34008 = cljs.core.first.call(null, seq34007);
  var seq34007__$1 = cljs.core.next.call(null, seq34007);
  var G__34009 = cljs.core.first.call(null, seq34007__$1);
  var seq34007__$2 = cljs.core.next.call(null, seq34007__$1);
  return tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic(G__34008, G__34009, seq34007__$2);
};
tiltontec.cell.base.un_stopped.cljs$lang$macro = true;
tiltontec.cell.base.ustack$ = function tiltontec$cell$base$ustack$(tag) {
  return [cljs.core.str(tag), cljs.core.str("ustack\x3e "), cljs.core.str(cljs.core.vec.call(null, cljs.core.map.call(null, function(c) {
    return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
  }, tiltontec.cell.base._STAR_call_stack_STAR_)))].join("");
};
tiltontec.cell.base.c_assert = function tiltontec$cell$base$c_assert() {
  var args34013 = [];
  var len__5593__auto___34019 = arguments.length;
  var i__5594__auto___34020 = 0;
  while (true) {
    if (i__5594__auto___34020 < len__5593__auto___34019) {
      args34013.push(arguments[i__5594__auto___34020]);
      var G__34021 = i__5594__auto___34020 + 1;
      i__5594__auto___34020 = G__34021;
      continue;
    } else {
    }
    break;
  }
  var G__34018 = args34013.length;
  switch(G__34018) {
    case 1:
      return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args34013.slice(2), 0);
      return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$1 = function(assertion) {
  if (cljs.core.truth_(assertion)) {
    return null;
  } else {
    return tiltontec.util.core.err.call(null, "c-assert anon failed");
  }
};
tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic = function(assertion, fmt$, fmt_args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    if (cljs.core.truth_(assertion)) {
      return null;
    } else {
      return cljs.core.apply.call(null, new cljs.core.Var(function() {
        return tiltontec.util.core.err;
      }, new cljs.core.Symbol("tiltontec.util.core", "err", "tiltontec.util.core/err", -267832473, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core", "tiltontec.util.core", -133870969, null), new cljs.core.Symbol(null, "err", "err", -448925678, null), "src/tiltontec/util/core.cljc", 16, 3, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core.err) ? tiltontec.util.core.err.cljs$lang$test : 
      null])), [cljs.core.str("c-assert\x3e "), cljs.core.str(fmt$), cljs.core.str(fmt_args)].join(""));
    }
  }
};
tiltontec.cell.base.c_assert.cljs$lang$applyTo = function(seq34014) {
  var G__34015 = cljs.core.first.call(null, seq34014);
  var seq34014__$1 = cljs.core.next.call(null, seq34014);
  var G__34016 = cljs.core.first.call(null, seq34014__$1);
  var seq34014__$2 = cljs.core.next.call(null, seq34014__$1);
  return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic(G__34015, G__34016, seq34014__$2);
};
tiltontec.cell.base.c_assert.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.c_break = function tiltontec$cell$base$c_break() {
  var args__5600__auto__ = [];
  var len__5593__auto___34024 = arguments.length;
  var i__5594__auto___34025 = 0;
  while (true) {
    if (i__5594__auto___34025 < len__5593__auto___34024) {
      args__5600__auto__.push(arguments[i__5594__auto___34025]);
      var G__34026 = i__5594__auto___34025 + 1;
      i__5594__auto___34025 = G__34026;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    return tiltontec.util.core.err.call(null, [cljs.core.str(args)].join(""));
  }
};
tiltontec.cell.base.c_break.cljs$lang$maxFixedArity = 0;
tiltontec.cell.base.c_break.cljs$lang$applyTo = function(seq34023) {
  return tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq34023));
};
tiltontec.cell.base.c_warn = function tiltontec$cell$base$c_warn() {
  var args__5600__auto__ = [];
  var len__5593__auto___34028 = arguments.length;
  var i__5594__auto___34029 = 0;
  while (true) {
    if (i__5594__auto___34029 < len__5593__auto___34028) {
      args__5600__auto__.push(arguments[i__5594__auto___34029]);
      var G__34030 = i__5594__auto___34029 + 1;
      i__5594__auto___34029 = G__34030;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    return cljs.core.println.call(null, cljs.core.apply.call(null, cljs.core.str, "WARNING: ", args));
  }
};
tiltontec.cell.base.c_warn.cljs$lang$maxFixedArity = 0;
tiltontec.cell.base.c_warn.cljs$lang$applyTo = function(seq34027) {
  return tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq34027));
};
tiltontec.cell.base.ia_types = cljs.core.derive.call(null, cljs.core.derive.call(null, cljs.core.derive.call(null, cljs.core.make_hierarchy.call(null), new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830), new cljs.core.Keyword("tiltontec.cell.base", "object", "tiltontec.cell.base/object", 1595927066)), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071), new cljs.core.Keyword("tiltontec.cell.base", "object", "tiltontec.cell.base/object", 
1595927066)), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071));
tiltontec.cell.base.ia_type = function tiltontec$cell$base$ia_type(it) {
  if (it instanceof cljs.core.Atom) {
    return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, it));
  } else {
    return cljs.core.type.call(null, it);
  }
};
tiltontec.cell.base.ia_type_QMARK_ = function tiltontec$cell$base$ia_type_QMARK_(it, typ) {
  return cljs.core.isa_QMARK_.call(null, tiltontec.cell.base.ia_types, tiltontec.cell.base.ia_type.call(null, it), typ);
};
tiltontec.cell.base.c_formula_QMARK_ = function tiltontec$cell$base$c_formula_QMARK_(c) {
  return tiltontec.cell.base.ia_type_QMARK_.call(null, c, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037));
};
tiltontec.cell.base.c_ref_QMARK_ = function tiltontec$cell$base$c_ref_QMARK_(x) {
  return tiltontec.cell.base.ia_type_QMARK_.call(null, x, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071));
};
tiltontec.cell.base.c_me = function tiltontec$cell$base$c_me(ref) {
  return (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_slot = function tiltontec$cell$base$c_slot(ref) {
  return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_state = function tiltontec$cell$base$c_state(ref) {
  return (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_input_QMARK_ = function tiltontec$cell$base$c_input_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "input?", "input?", -1792843173)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_rule = function tiltontec$cell$base$c_rule(ref) {
  return (new cljs.core.Keyword(null, "rule", "rule", 729973257)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse = function tiltontec$cell$base$c_pulse(ref) {
  return (new cljs.core.Keyword(null, "pulse", "pulse", -244494476)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse_last_changed = function tiltontec$cell$base$c_pulse_last_changed(ref) {
  return (new cljs.core.Keyword(null, "pulse-last-changed", "pulse-last-changed", 1035703380)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse_observed = function tiltontec$cell$base$c_pulse_observed(ref) {
  return (new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_useds = function tiltontec$cell$base$c_useds(ref) {
  return (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_users = function tiltontec$cell$base$c_users(ref) {
  return (new cljs.core.Keyword(null, "users", "users", -713552705)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_callers = function tiltontec$cell$base$c_callers(ref) {
  return (new cljs.core.Keyword(null, "callers", "callers", -1991542784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_optimize = function tiltontec$cell$base$c_optimize(ref) {
  return (new cljs.core.Keyword(null, "optimize", "optimize", -1912349448)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_ephemeral_QMARK_ = function tiltontec$cell$base$c_ephemeral_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_lazy = function tiltontec$cell$base$c_lazy(ref) {
  return (new cljs.core.Keyword(null, "lazy", "lazy", -424547181)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_synaptic_QMARK_ = function tiltontec$cell$base$c_synaptic_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "synaptic?", "synaptic?", -2113061248)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_value = function tiltontec$cell$base$c_value(c) {
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = tiltontec.cell.base.c_ref_QMARK_.call(null, c);
    if (cljs.core.truth_(and__4542__auto__)) {
      return cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c));
    } else {
      return and__4542__auto__;
    }
  }())) {
    return (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
  } else {
    return cljs.core.deref.call(null, c);
  }
};
tiltontec.cell.base.c_optimized_away_QMARK_ = function tiltontec$cell$base$c_optimized_away_QMARK_(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    return !cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c)) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "optimized-away", "optimized-away", 876765856), (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c)));
  } else {
    return true;
  }
};
tiltontec.cell.base.c_model = function tiltontec$cell$base$c_model(rc) {
  return (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
};
tiltontec.cell.base.c_md_name = function tiltontec$cell$base$c_md_name(c) {
  var temp__4423__auto__ = tiltontec.cell.base.c_model.call(null, c);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var md = temp__4423__auto__;
    var or__4554__auto__ = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, md));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return "anon";
    }
  } else {
    return "no-md";
  }
};
tiltontec.cell.base.c_slot_name = function tiltontec$cell$base$c_slot_name(rc) {
  return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
};
tiltontec.cell.base.c_value_state = function tiltontec$cell$base$c_value_state(rc) {
  var v = tiltontec.cell.base.c_value.call(null, rc);
  if (cljs.core._EQ_.call(null, v, tiltontec.cell.base.unbound)) {
    return new cljs.core.Keyword(null, "unbound", "unbound", -1366326654);
  } else {
    if (cljs.core._EQ_.call(null, v, tiltontec.cell.base.uncurrent)) {
      return new cljs.core.Keyword(null, "uncurrent", "uncurrent", -217246265);
    } else {
      return new cljs.core.Keyword(null, "valid", "valid", 155614240);
    }
  }
};
tiltontec.cell.base.c_unbound_QMARK_ = function tiltontec$cell$base$c_unbound_QMARK_(rc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654), tiltontec.cell.base.c_value_state.call(null, rc));
};
tiltontec.cell.base.c_valid_QMARK_ = function tiltontec$cell$base$c_valid_QMARK_(rc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "valid", "valid", 155614240), tiltontec.cell.base.c_value_state.call(null, rc));
};
tiltontec.cell.base.caller_ensure = function tiltontec$cell$base$caller_ensure(used, new_caller) {
  return cljs.core.swap_BANG_.call(null, used, cljs.core.assoc, new cljs.core.Keyword(null, "callers", "callers", -1991542784), cljs.core.conj.call(null, tiltontec.cell.base.c_callers.call(null, used), new_caller));
};
tiltontec.cell.base.caller_drop = function tiltontec$cell$base$caller_drop(used, caller) {
  return cljs.core.swap_BANG_.call(null, used, cljs.core.assoc, new cljs.core.Keyword(null, "callers", "callers", -1991542784), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), caller));
};
tiltontec.cell.base.unlink_from_callers = function tiltontec$cell$base$unlink_from_callers(c) {
  var iter__5307__auto___34039 = function tiltontec$cell$base$unlink_from_callers_$_iter__34035(s__34036) {
    return new cljs.core.LazySeq(null, function() {
      var s__34036__$1 = s__34036;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__34036__$1);
        if (temp__4425__auto__) {
          var s__34036__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__34036__$2)) {
            var c__5305__auto__ = cljs.core.chunk_first.call(null, s__34036__$2);
            var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
            var b__34038 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
            if (function() {
              var i__34037 = 0;
              while (true) {
                if (i__34037 < size__5306__auto__) {
                  var caller = cljs.core._nth.call(null, c__5305__auto__, i__34037);
                  cljs.core.chunk_append.call(null, b__34038, tiltontec.cell.base.caller_drop.call(null, c, caller));
                  var G__34040 = i__34037 + 1;
                  i__34037 = G__34040;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34038), tiltontec$cell$base$unlink_from_callers_$_iter__34035.call(null, cljs.core.chunk_rest.call(null, s__34036__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34038), null);
            }
          } else {
            var caller = cljs.core.first.call(null, s__34036__$2);
            return cljs.core.cons.call(null, tiltontec.cell.base.caller_drop.call(null, c, caller), tiltontec$cell$base$unlink_from_callers_$_iter__34035.call(null, cljs.core.rest.call(null, s__34036__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  iter__5307__auto___34039.call(null, tiltontec.cell.base.c_callers.call(null, c));
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), c], null), null);
};
tiltontec.cell.base.c_slots = function tiltontec$cell$base$c_slots(c, k) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  return cljs.core.set.call(null, cljs.core.map.call(null, tiltontec.cell.base.c_slot, k.call(null, cljs.core.deref.call(null, c))));
};
tiltontec.cell.base.md_ref_QMARK_ = function tiltontec$cell$base$md_ref_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
if (typeof tiltontec.cell.base.mdead_QMARK_ !== "undefined") {
} else {
  tiltontec.cell.base.mdead_QMARK_ = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.base", "mdead?"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(me) {
        if (cljs.core.truth_(function() {
          var or__4554__auto__ = me == null;
          if (or__4554__auto__) {
            return or__4554__auto__;
          } else {
            return tiltontec.cell.base.md_ref_QMARK_.call(null, me);
          }
        }())) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))))].join(""));
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, cljs.core.truth_(me) ? cljs.core.deref.call(null, me) : null)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.base.mdead_QMARK_, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return false;
});
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.base.md_slot_owning_QMARK_ = function tiltontec$cell$base$md_slot_owning_QMARK_(class_name, slot_name) {
  return false;
};
goog.provide("tiltontec.cell.observer");
goog.require("cljs.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
tiltontec.cell.observer.type_cljc = function tiltontec$cell$observer$type_cljc(x) {
  var or__4554__auto__ = function() {
    var temp__4425__auto__ = cljs.core.meta.call(null, x);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var m = temp__4425__auto__;
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return cljs.core.type.call(null, x);
  }
};
if (typeof tiltontec.cell.observer.observe !== "undefined") {
} else {
  tiltontec.cell.observer.observe = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.observer", "observe"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(slot_name, me, new_val, old_val, c) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot_name, tiltontec.cell.observer.type_cljc.call(null, me)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.Keyword(null, "default", "default", -1987822328), function(slot, me, new_val, old_val, c) {
  return null;
});
tiltontec.cell.observer.defobserver = function tiltontec$cell$observer$defobserver() {
  var args__5600__auto__ = [];
  var len__5593__auto___34057 = arguments.length;
  var i__5594__auto___34058 = 0;
  while (true) {
    if (i__5594__auto___34058 < len__5593__auto___34057) {
      args__5600__auto__.push(arguments[i__5594__auto___34058]);
      var G__34059 = i__5594__auto___34058 + 1;
      i__5594__auto___34058 = G__34059;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 5 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(5), 0) : null;
  return tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5601__auto__);
};
tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, slot, types, params, body) {
  if (slot instanceof cljs.core.Keyword) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("defobserver\x3e slot should be a keyword."), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "slot", "slot", 1880761098, null))))].join(""));
  }
  var ftypes = cljs.core.concat.call(null, types, cljs.core.take_last.call(null, 1 - cljs.core.count.call(null, types), cljs.core.list(new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830))));
  var fparams = cljs.core.concat.call(null, params, cljs.core.take_last.call(null, 4 - cljs.core.count.call(null, params), cljs.core.list(new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null), new cljs.core.Symbol(null, "old-value", "old-value", -1791888974, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defmethod", "cljs.core/defmethod", -180785162, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.observer", "observe", "tiltontec.cell.observer/observe", -883619497, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, slot), ftypes))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot", "slot", 1880761098, null)), fparams))))), body)));
};
tiltontec.cell.observer.defobserver.cljs$lang$maxFixedArity = 5;
tiltontec.cell.observer.defobserver.cljs$lang$applyTo = function(seq34051) {
  var G__34052 = cljs.core.first.call(null, seq34051);
  var seq34051__$1 = cljs.core.next.call(null, seq34051);
  var G__34053 = cljs.core.first.call(null, seq34051__$1);
  var seq34051__$2 = cljs.core.next.call(null, seq34051__$1);
  var G__34054 = cljs.core.first.call(null, seq34051__$2);
  var seq34051__$3 = cljs.core.next.call(null, seq34051__$2);
  var G__34055 = cljs.core.first.call(null, seq34051__$3);
  var seq34051__$4 = cljs.core.next.call(null, seq34051__$3);
  var G__34056 = cljs.core.first.call(null, seq34051__$4);
  var seq34051__$5 = cljs.core.next.call(null, seq34051__$4);
  return tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic(G__34052, G__34053, G__34054, G__34055, G__34056, seq34051__$5);
};
tiltontec.cell.observer.defobserver.cljs$lang$macro = true;
tiltontec.cell.observer.fn_obs = function tiltontec$cell$observer$fn_obs() {
  var args__5600__auto__ = [];
  var len__5593__auto___34063 = arguments.length;
  var i__5594__auto___34064 = 0;
  while (true) {
    if (i__5594__auto___34064 < len__5593__auto___34063) {
      args__5600__auto__.push(arguments[i__5594__auto___34064]);
      var G__34065 = i__5594__auto___34064 + 1;
      i__5594__auto___34064 = G__34065;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot", "slot", 1880761098, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "old", "old", -184691163, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c", "c", -122660552, null))))))), body)));
};
tiltontec.cell.observer.fn_obs.cljs$lang$maxFixedArity = 2;
tiltontec.cell.observer.fn_obs.cljs$lang$applyTo = function(seq34060) {
  var G__34061 = cljs.core.first.call(null, seq34060);
  var seq34060__$1 = cljs.core.next.call(null, seq34060);
  var G__34062 = cljs.core.first.call(null, seq34060__$1);
  var seq34060__$2 = cljs.core.next.call(null, seq34060__$1);
  return tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic(G__34061, G__34062, seq34060__$2);
};
tiltontec.cell.observer.fn_obs.cljs$lang$macro = true;
tiltontec.cell.observer.c_observe = function tiltontec$cell$observer$c_observe() {
  var args34066 = [];
  var len__5593__auto___34069 = arguments.length;
  var i__5594__auto___34070 = 0;
  while (true) {
    if (i__5594__auto___34070 < len__5593__auto___34069) {
      args34066.push(arguments[i__5594__auto___34070]);
      var G__34071 = i__5594__auto___34070 + 1;
      i__5594__auto___34070 = G__34071;
      continue;
    } else {
    }
    break;
  }
  var G__34068 = args34066.length;
  switch(G__34068) {
    case 2:
      return tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34066.length)].join(""));;
  }
};
tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$2 = function(c, why) {
  return tiltontec.cell.observer.c_observe.call(null, c, tiltontec.cell.base.unbound, why);
};
tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$3 = function(c, prior_value, why) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), c], null), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
  return function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "obs", "obs", -664011444)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return tiltontec.cell.observer.observe;
    }
  }().call(null, tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_value.call(null, c), prior_value, c);
};
tiltontec.cell.observer.c_observe.cljs$lang$maxFixedArity = 3;
goog.provide("tiltontec.qxia.types");
goog.require("cljs.core");
goog.require("tiltontec.cell.base");
tiltontec.qxia.types.qx_type_tree = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225), new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724), new cljs.core.Keyword("tiltontec.qxia.types", "m.DialogManager", "tiltontec.qxia.types/m.DialogManager", 
1877638749), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "Application", "tiltontec.qxia.types/Application", 1827091049), new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "ml.Abstract", "tiltontec.qxia.types/ml.Abstract", -80525119), 
new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "ml.AbstractBox", "tiltontec.qxia.types/ml.AbstractBox", -448932332), new cljs.core.Keyword("tiltontec.qxia.types", "ml.HBox", "tiltontec.qxia.types/ml.HBox", -1665012713), new cljs.core.Keyword("tiltontec.qxia.types", "ml.VBox", "tiltontec.qxia.types/ml.VBox", -1184375499)], null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword("tiltontec.qxia.types", "mWidget", "tiltontec.qxia.types/mWidget", 1692474345), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword("tiltontec.qxia.types", "m.Image", "tiltontec.qxia.types/m.Image", 336928926), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword("tiltontec.qxia.types", 
"m.Button", "tiltontec.qxia.types/m.Button", -668586230)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Input", "tiltontec.qxia.types/m.Input", -509810846), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.TextField", "tiltontec.qxia.types/m.TextField", 1587442644), new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", 
"tiltontec.qxia.types/m.PasswordField", -1705460348)], null)], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword("tiltontec.qxia.types", "m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516), new cljs.core.Keyword("tiltontec.qxia.types", "m.Drawer", "tiltontec.qxia.types/m.Drawer", -1699090239), new cljs.core.Keyword("tiltontec.qxia.types", 
"m.Collapsible", "tiltontec.qxia.types/m.Collapsible", -561923066), new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Page", "tiltontec.qxia.types/m.Page", 978557493), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995)], null)], null)], null)], 
null);
tiltontec.qxia.types.ensure_vec = function tiltontec$qxia$types$ensure_vec(x) {
  if (cljs.core.coll_QMARK_.call(null, x)) {
    return cljs.core.vec.call(null, x);
  } else {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
  }
};
tiltontec.qxia.types.derive_tree = function tiltontec$qxia$types$derive_tree(super$, tree) {
  var vec__34501 = tiltontec.qxia.types.ensure_vec.call(null, tree);
  var class$ = cljs.core.nth.call(null, vec__34501, 0, null);
  var subs = cljs.core.nthnext.call(null, vec__34501, 1);
  if (cljs.core.truth_(super$)) {
    cljs.core.println.call(null, new cljs.core.Keyword(null, "deriving", "deriving", -617211266), class$, new cljs.core.Keyword(null, "from", "from", 1815293044), super$);
    tiltontec.cell.base.ia_types = cljs.core.derive.call(null, tiltontec.cell.base.ia_types, class$, super$);
  } else {
  }
  var seq__34502 = cljs.core.seq.call(null, subs);
  var chunk__34503 = null;
  var count__34504 = 0;
  var i__34505 = 0;
  while (true) {
    if (i__34505 < count__34504) {
      var sub = cljs.core._nth.call(null, chunk__34503, i__34505);
      tiltontec$qxia$types$derive_tree.call(null, class$, sub);
      var G__34506 = seq__34502;
      var G__34507 = chunk__34503;
      var G__34508 = count__34504;
      var G__34509 = i__34505 + 1;
      seq__34502 = G__34506;
      chunk__34503 = G__34507;
      count__34504 = G__34508;
      i__34505 = G__34509;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__34502);
      if (temp__4425__auto__) {
        var seq__34502__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__34502__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__34502__$1);
          var G__34510 = cljs.core.chunk_rest.call(null, seq__34502__$1);
          var G__34511 = c__5338__auto__;
          var G__34512 = cljs.core.count.call(null, c__5338__auto__);
          var G__34513 = 0;
          seq__34502 = G__34510;
          chunk__34503 = G__34511;
          count__34504 = G__34512;
          i__34505 = G__34513;
          continue;
        } else {
          var sub = cljs.core.first.call(null, seq__34502__$1);
          tiltontec$qxia$types$derive_tree.call(null, class$, sub);
          var G__34514 = cljs.core.next.call(null, seq__34502__$1);
          var G__34515 = null;
          var G__34516 = 0;
          var G__34517 = 0;
          seq__34502 = G__34514;
          chunk__34503 = G__34515;
          count__34504 = G__34516;
          i__34505 = G__34517;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
tiltontec.qxia.types.derive_tree.call(null, null, tiltontec.qxia.types.qx_type_tree);
var seq__34518_34522 = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516)], null));
var chunk__34519_34523 = null;
var count__34520_34524 = 0;
var i__34521_34525 = 0;
while (true) {
  if (i__34521_34525 < count__34520_34524) {
    var ctype_34526 = cljs.core._nth.call(null, chunk__34519_34523, i__34521_34525);
    tiltontec.cell.base.ia_types = cljs.core.derive.call(null, tiltontec.cell.base.ia_types, ctype_34526, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163));
    var G__34527 = seq__34518_34522;
    var G__34528 = chunk__34519_34523;
    var G__34529 = count__34520_34524;
    var G__34530 = i__34521_34525 + 1;
    seq__34518_34522 = G__34527;
    chunk__34519_34523 = G__34528;
    count__34520_34524 = G__34529;
    i__34521_34525 = G__34530;
    continue;
  } else {
    var temp__4425__auto___34531 = cljs.core.seq.call(null, seq__34518_34522);
    if (temp__4425__auto___34531) {
      var seq__34518_34532__$1 = temp__4425__auto___34531;
      if (cljs.core.chunked_seq_QMARK_.call(null, seq__34518_34532__$1)) {
        var c__5338__auto___34533 = cljs.core.chunk_first.call(null, seq__34518_34532__$1);
        var G__34534 = cljs.core.chunk_rest.call(null, seq__34518_34532__$1);
        var G__34535 = c__5338__auto___34533;
        var G__34536 = cljs.core.count.call(null, c__5338__auto___34533);
        var G__34537 = 0;
        seq__34518_34522 = G__34534;
        chunk__34519_34523 = G__34535;
        count__34520_34524 = G__34536;
        i__34521_34525 = G__34537;
        continue;
      } else {
        var ctype_34538 = cljs.core.first.call(null, seq__34518_34532__$1);
        tiltontec.cell.base.ia_types = cljs.core.derive.call(null, tiltontec.cell.base.ia_types, ctype_34538, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163));
        var G__34539 = cljs.core.next.call(null, seq__34518_34532__$1);
        var G__34540 = null;
        var G__34541 = 0;
        var G__34542 = 0;
        seq__34518_34522 = G__34539;
        chunk__34519_34523 = G__34540;
        count__34520_34524 = G__34541;
        i__34521_34525 = G__34542;
        continue;
      }
    } else {
    }
  }
  break;
}
;goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__21915_SHARP_) {
      return max === p1__21915_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union() {
  var args21916 = [];
  var len__5593__auto___21922 = arguments.length;
  var i__5594__auto___21923 = 0;
  while (true) {
    if (i__5594__auto___21923 < len__5593__auto___21922) {
      args21916.push(arguments[i__5594__auto___21923]);
      var G__21924 = i__5594__auto___21923 + 1;
      i__5594__auto___21923 = G__21924;
      continue;
    } else {
    }
    break;
  }
  var G__21921 = args21916.length;
  switch(G__21921) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args21916.slice(2), 0);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq21917) {
  var G__21918 = cljs.core.first.call(null, seq21917);
  var seq21917__$1 = cljs.core.next.call(null, seq21917);
  var G__21919 = cljs.core.first.call(null, seq21917__$1);
  var seq21917__$2 = cljs.core.next.call(null, seq21917__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__21918, G__21919, seq21917__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection() {
  var args21927 = [];
  var len__5593__auto___21933 = arguments.length;
  var i__5594__auto___21934 = 0;
  while (true) {
    if (i__5594__auto___21934 < len__5593__auto___21933) {
      args21927.push(arguments[i__5594__auto___21934]);
      var G__21935 = i__5594__auto___21934 + 1;
      i__5594__auto___21934 = G__21935;
      continue;
    } else {
    }
    break;
  }
  var G__21932 = args21927.length;
  switch(G__21932) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args21927.slice(2), 0);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__21937 = s2;
      var G__21938 = s1;
      s1 = G__21937;
      s2 = G__21938;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__21926_SHARP_) {
    return -cljs.core.count.call(null, p1__21926_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq21928) {
  var G__21929 = cljs.core.first.call(null, seq21928);
  var seq21928__$1 = cljs.core.next.call(null, seq21928);
  var G__21930 = cljs.core.first.call(null, seq21928__$1);
  var seq21928__$2 = cljs.core.next.call(null, seq21928__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__21929, G__21930, seq21928__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference() {
  var args21939 = [];
  var len__5593__auto___21945 = arguments.length;
  var i__5594__auto___21946 = 0;
  while (true) {
    if (i__5594__auto___21946 < len__5593__auto___21945) {
      args21939.push(arguments[i__5594__auto___21946]);
      var G__21947 = i__5594__auto___21946 + 1;
      i__5594__auto___21946 = G__21947;
      continue;
    } else {
    }
    break;
  }
  var G__21944 = args21939.length;
  switch(G__21944) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args21939.slice(2), 0);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq21940) {
  var G__21941 = cljs.core.first.call(null, seq21940);
  var seq21940__$1 = cljs.core.next.call(null, seq21940);
  var G__21942 = cljs.core.first.call(null, seq21940__$1);
  var seq21940__$2 = cljs.core.next.call(null, seq21940__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__21941, G__21942, seq21940__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__21949_SHARP_) {
    return cljs.core.select_keys.call(null, p1__21949_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__21952) {
    var vec__21953 = p__21952;
    var old = cljs.core.nth.call(null, vec__21953, 0, null);
    var new$ = cljs.core.nth.call(null, vec__21953, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__21954_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__21954_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__21957) {
    var vec__21958 = p__21957;
    var k = cljs.core.nth.call(null, vec__21958, 0, null);
    var v = cljs.core.nth.call(null, vec__21958, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join() {
  var args21963 = [];
  var len__5593__auto___21968 = arguments.length;
  var i__5594__auto___21969 = 0;
  while (true) {
    if (i__5594__auto___21969 < len__5593__auto___21968) {
      args21963.push(arguments[i__5594__auto___21969]);
      var G__21970 = i__5594__auto___21969 + 1;
      i__5594__auto___21969 = G__21970;
      continue;
    } else {
    }
    break;
  }
  var G__21965 = args21963.length;
  switch(G__21965) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21963.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__21966 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__21966, 0, null);
    var s = cljs.core.nth.call(null, vec__21966, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ks, vec__21966, r, s, idx) {
      return function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, ks, vec__21966, r, s, idx) {
            return function(p1__21959_SHARP_, p2__21960_SHARP_) {
              return cljs.core.conj.call(null, p1__21959_SHARP_, cljs.core.merge.call(null, p2__21960_SHARP_, x));
            };
          }(found, ks, vec__21966, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__21966, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__21967 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__21967, 0, null);
  var s = cljs.core.nth.call(null, vec__21967, 1, null);
  var k = cljs.core.nth.call(null, vec__21967, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(vec__21967, r, s, k, idx) {
    return function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(found, vec__21967, r, s, k, idx) {
          return function(p1__21961_SHARP_, p2__21962_SHARP_) {
            return cljs.core.conj.call(null, p1__21961_SHARP_, cljs.core.merge.call(null, p2__21962_SHARP_, x));
          };
        }(found, vec__21967, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__21967, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__21972_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__21972_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__21973_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__21973_SHARP_);
  }, set2);
};
goog.provide("tiltontec.cell.integrity");
goog.require("cljs.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_ = false;
tiltontec.cell.integrity._STAR_dp_log_STAR_ = false;
tiltontec.cell.integrity.data_pulse_next = function tiltontec$cell$integrity$data_pulse_next() {
  var args34075 = [];
  var len__5593__auto___34078 = arguments.length;
  var i__5594__auto___34079 = 0;
  while (true) {
    if (i__5594__auto___34079 < len__5593__auto___34078) {
      args34075.push(arguments[i__5594__auto___34079]);
      var G__34080 = i__5594__auto___34079 + 1;
      i__5594__auto___34079 = G__34080;
      continue;
    } else {
    }
    break;
  }
  var G__34077 = args34075.length;
  switch(G__34077) {
    case 0:
      return tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34075.length)].join(""));;
  }
};
tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "anon", "anon", -765650478));
};
tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$1 = function(pulse_info) {
  if (cljs.core.truth_(tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_)) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.integrity._STAR_dp_log_STAR_)) {
      tiltontec.util.base.call_trc.call(null, "dp-next\x3e ", cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) + 1, pulse_info);
    } else {
    }
    return cljs.core.swap_BANG_.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_, cljs.core.inc);
  }
};
tiltontec.cell.integrity.data_pulse_next.cljs$lang$maxFixedArity = 1;
tiltontec.cell.integrity.c_current_QMARK_ = function tiltontec$cell$integrity$c_current_QMARK_(c) {
  return cljs.core._EQ_.call(null, tiltontec.cell.base.c_pulse.call(null, c), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
};
tiltontec.cell.integrity.c_pulse_update = function tiltontec$cell$integrity$c_pulse_update(c, key) {
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c))) {
    return null;
  } else {
    if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) >= tiltontec.cell.base.c_pulse.call(null, c)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
    }
    return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "pulse", "pulse", -244494476), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
  }
};
tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_ = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388), new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603), new cljs.core.Keyword(null, "change", "change", -1163046502)], null);
tiltontec.cell.integrity.unfin_biz = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
  var iter__5307__auto__ = function tiltontec$cell$integrity$iter__34082(s__34083) {
    return new cljs.core.LazySeq(null, function() {
      var s__34083__$1 = s__34083;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__34083__$1);
        if (temp__4425__auto__) {
          var s__34083__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__34083__$2)) {
            var c__5305__auto__ = cljs.core.chunk_first.call(null, s__34083__$2);
            var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
            var b__34085 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
            if (function() {
              var i__34084 = 0;
              while (true) {
                if (i__34084 < size__5306__auto__) {
                  var i = cljs.core._nth.call(null, c__5305__auto__, i__34084);
                  cljs.core.chunk_append.call(null, b__34085, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY)], null));
                  var G__34086 = i__34084 + 1;
                  i__34084 = G__34086;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34085), tiltontec$cell$integrity$iter__34082.call(null, cljs.core.chunk_rest.call(null, s__34083__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34085), null);
            }
          } else {
            var i = cljs.core.first.call(null, s__34083__$2);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY)], null), tiltontec$cell$integrity$iter__34082.call(null, cljs.core.rest.call(null, s__34083__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__5307__auto__.call(null, tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_);
}());
tiltontec.cell.integrity.ufb_queue = function tiltontec$cell$integrity$ufb_queue(opcode) {
  var or__4554__auto__ = opcode.call(null, tiltontec.cell.integrity.unfin_biz);
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return tiltontec.util.core.err.call(null, [cljs.core.str("ufb-queue\x3e opcode unknown: "), cljs.core.str(opcode)].join(""));
  }
};
tiltontec.cell.integrity.ufb_queue_ensure = function tiltontec$cell$integrity$ufb_queue_ensure(opcode) {
  return tiltontec.cell.integrity.ufb_queue.call(null, opcode);
};
tiltontec.cell.integrity.ufb_add = function tiltontec$cell$integrity$ufb_add(opcode, continuation) {
  return tiltontec.util.core.fifo_add.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, opcode), continuation);
};
tiltontec.cell.integrity.ufb_assert_q_empty = function tiltontec$cell$integrity$ufb_assert_q_empty(opcode) {
  var temp__4423__auto__ = tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, opcode));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var uqp = temp__4423__auto__;
    return tiltontec.util.core.err.call(null, [cljs.core.str("ufb queue %s not empty, viz %s"), cljs.core.str(opcode), cljs.core.str(uqp)].join(""));
  } else {
    return true;
  }
};
tiltontec.cell.integrity._STAR_ufb_do_q_STAR_ = null;
tiltontec.cell.integrity.ufb_do = function tiltontec$cell$integrity$ufb_do() {
  var args34087 = [];
  var len__5593__auto___34091 = arguments.length;
  var i__5594__auto___34092 = 0;
  while (true) {
    if (i__5594__auto___34092 < len__5593__auto___34091) {
      args34087.push(arguments[i__5594__auto___34092]);
      var G__34093 = i__5594__auto___34092 + 1;
      i__5594__auto___34092 = G__34093;
      continue;
    } else {
    }
    break;
  }
  var G__34089 = args34087.length;
  switch(G__34089) {
    case 1:
      return tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34087.length)].join(""));;
  }
};
tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$1 = function(opcode) {
  return tiltontec.cell.integrity.ufb_do.call(null, tiltontec.cell.integrity.ufb_queue.call(null, opcode), opcode);
};
tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$2 = function(q, opcode) {
  while (true) {
    var temp__4425__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__34090 = temp__4425__auto__;
      var defer_info = cljs.core.nth.call(null, vec__34090, 0, null);
      var task = cljs.core.nth.call(null, vec__34090, 1, null);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "ufb-do-yep", "ufb-do-yep", -2077548937), defer_info, task);
      task.call(null, opcode, defer_info);
      var G__34095 = q;
      var G__34096 = opcode;
      q = G__34095;
      opcode = G__34096;
      continue;
    } else {
      return null;
    }
    break;
  }
};
tiltontec.cell.integrity.ufb_do.cljs$lang$maxFixedArity = 2;
tiltontec.cell.integrity.finish_business = function tiltontec$cell$integrity$finish_business() {
  if (cljs.core.truth_(cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_))) {
    return null;
  } else {
    var tag = new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388);
    while (true) {
      var G__34099 = tag instanceof cljs.core.Keyword ? tag.fqn : null;
      switch(G__34099) {
        case "tell-dependents":
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388));
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "awaken", "awaken", -1899628152));
          var G__34102 = cljs.core.truth_(tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388)))) ? new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388) : new cljs.core.Keyword(null, "handle-clients", "handle-clients", -1446571173);
          tag = G__34102;
          continue;
          break;
        case "handle-clients":
          var temp__4425__auto__ = tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117));
          if (cljs.core.truth_(temp__4425__auto__)) {
            var clientq = temp__4425__auto__;
            var temp__4423__auto___34103 = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_);
            if (cljs.core.truth_(temp__4423__auto___34103)) {
              var cqh_34104 = temp__4423__auto___34103;
              cqh_34104.call(null, clientq);
            } else {
              tiltontec.cell.integrity.ufb_do.call(null, clientq, new cljs.core.Keyword(null, "client", "client", -1323448117));
            }
            var G__34105 = cljs.core.truth_(tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117)))) ? new cljs.core.Keyword(null, "handle-clients", "handle-clients", -1446571173) : new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603);
            tag = G__34105;
            continue;
          } else {
            return null;
          }
          break;
        case "ephemeral-reset":
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603));
          var G__34106 = new cljs.core.Keyword(null, "deferred-state-change", "deferred-state-change", -1362791478);
          tag = G__34106;
          continue;
          break;
        case "deferred-state-change":
          var temp__4425__auto__ = tiltontec.util.core.fifo_pop.call(null, tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502)));
          if (cljs.core.truth_(temp__4425__auto__)) {
            var vec__34100 = temp__4425__auto__;
            var defer_info = cljs.core.nth.call(null, vec__34100, 0, null);
            var task_fn = cljs.core.nth.call(null, vec__34100, 1, null);
            tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "def-state-chg", "def-state-chg", 1797246466));
            task_fn.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), defer_info);
            var G__34107 = new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388);
            tag = G__34107;
            continue;
          } else {
            return null;
          }
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(tag)].join(""));;
      }
      break;
    }
  }
};
tiltontec.cell.integrity.with_integrity = function tiltontec$cell$integrity$with_integrity() {
  var args__5600__auto__ = [];
  var len__5593__auto___34114 = arguments.length;
  var i__5594__auto___34115 = 0;
  while (true) {
    if (i__5594__auto___34115 < len__5593__auto___34114) {
      args__5600__auto__.push(arguments[i__5594__auto___34115]);
      var G__34116 = i__5594__auto___34115 + 1;
      i__5594__auto___34115 = G__34116;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34112, body) {
  var vec__34113 = p__34112;
  var opcode = cljs.core.nth.call(null, vec__34113, 0, null);
  var info = cljs.core.nth.call(null, vec__34113, 1, null);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "call-with-integrity", "tiltontec.cell.integrity/call-with-integrity", -729981427, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, opcode), cljs.core._conj.call(null, cljs.core.List.EMPTY, info), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "defer-info", "defer-info", 
  -446799704, null))))))), body)))))));
};
tiltontec.cell.integrity.with_integrity.cljs$lang$maxFixedArity = 3;
tiltontec.cell.integrity.with_integrity.cljs$lang$applyTo = function(seq34108) {
  var G__34109 = cljs.core.first.call(null, seq34108);
  var seq34108__$1 = cljs.core.next.call(null, seq34108);
  var G__34110 = cljs.core.first.call(null, seq34108__$1);
  var seq34108__$2 = cljs.core.next.call(null, seq34108__$1);
  var G__34111 = cljs.core.first.call(null, seq34108__$2);
  var seq34108__$3 = cljs.core.next.call(null, seq34108__$2);
  return tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic(G__34109, G__34110, G__34111, seq34108__$3);
};
tiltontec.cell.integrity.with_integrity.cljs$lang$macro = true;
tiltontec.cell.integrity.with_cc = function tiltontec$cell$integrity$with_cc(_AMPERSAND_form, _AMPERSAND_env, id, _AMPERSAND_body, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "with-integrity", "tiltontec.cell.integrity/with-integrity", -1374442056, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "change", "change", 
  -1163046502)), cljs.core._conj.call(null, cljs.core.List.EMPTY, id))))), body)));
};
tiltontec.cell.integrity.with_cc.cljs$lang$macro = true;
tiltontec.cell.integrity.without_integrity = function tiltontec$cell$integrity$without_integrity() {
  var args__5600__auto__ = [];
  var len__5593__auto___34120 = arguments.length;
  var i__5594__auto___34121 = 0;
  while (true) {
    if (i__5594__auto___34121 < len__5593__auto___34120) {
      args__5600__auto__.push(arguments[i__5594__auto___34121]);
      var G__34122 = i__5594__auto___34121 + 1;
      i__5594__auto___34121 = G__34122;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*within-integrity*", "tiltontec.cell.base/*within-integrity*", 
  1558744567, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*defer-changes*", "tiltontec.cell.base/*defer-changes*", 405681033, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "*call-stack*", "tiltontec.cell.integrity/*call-stack*", 1793416916, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.List.EMPTY)))))))))), body)));
};
tiltontec.cell.integrity.without_integrity.cljs$lang$maxFixedArity = 2;
tiltontec.cell.integrity.without_integrity.cljs$lang$applyTo = function(seq34117) {
  var G__34118 = cljs.core.first.call(null, seq34117);
  var seq34117__$1 = cljs.core.next.call(null, seq34117);
  var G__34119 = cljs.core.first.call(null, seq34117__$1);
  var seq34117__$2 = cljs.core.next.call(null, seq34117__$1);
  return tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic(G__34118, G__34119, seq34117__$2);
};
tiltontec.cell.integrity.without_integrity.cljs$lang$macro = true;
tiltontec.cell.integrity.call_with_integrity = function tiltontec$cell$integrity$call_with_integrity(opcode, defer_info, action) {
  if (cljs.core.truth_(opcode)) {
    if (cljs.core.truth_(tiltontec.util.core.cl_find.call(null, opcode, tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid opcode for with-integrity: %s. Allowed values: %s"), cljs.core.str(opcode), cljs.core.str(tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cl-find", "cl-find", -402244315, null), new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null), new cljs.core.Symbol(null, "+ufb-opcodes+", 
      "+ufb-opcodes+", -1562699838, null))))].join(""));
    }
  } else {
  }
  return tiltontec.util.base.call_wtrx.call(null, function() {
    if (cljs.core.truth_(cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_))) {
      return null;
    } else {
      if (cljs.core.truth_(tiltontec.cell.base.c_stopped.call(null))) {
        return cljs.core.println.call(null, new cljs.core.Keyword(null, "cwi-sees-stop!!!!!!!!!!!", "cwi-sees-stop!!!!!!!!!!!", -1009254623));
      } else {
        if (cljs.core.truth_(tiltontec.cell.base._STAR_within_integrity_STAR_)) {
          if (cljs.core.truth_(opcode)) {
            var result__31774__auto__ = new cljs.core.Keyword(null, "deferred-to-ufb-1", "deferred-to-ufb-1", -1094275721);
            cljs.core.println.call(null, new cljs.core.Keyword(null, "cwi-defers", "cwi-defers", -765324305), opcode, defer_info);
            tiltontec.cell.integrity.ufb_add.call(null, opcode, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [defer_info, action], null));
            return result__31774__auto__;
          } else {
            return action.call(null, opcode, defer_info);
          }
        } else {
          var _STAR_within_integrity_STAR_34125 = tiltontec.cell.base._STAR_within_integrity_STAR_;
          var _STAR_defer_changes_STAR_34126 = tiltontec.cell.base._STAR_defer_changes_STAR_;
          tiltontec.cell.base._STAR_within_integrity_STAR_ = true;
          tiltontec.cell.base._STAR_defer_changes_STAR_ = false;
          try {
            if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) === 0 || cljs.core._EQ_.call(null, opcode, new cljs.core.Keyword(null, "change", "change", -1163046502))) {
              tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "cwi", "cwi", 1748296377));
            } else {
            }
            var result__31774__auto__ = action.call(null, opcode, defer_info);
            tiltontec.cell.integrity.finish_business.call(null);
            tiltontec.cell.integrity.ufb_assert_q_empty.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388));
            tiltontec.cell.integrity.ufb_assert_q_empty.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502));
            return result__31774__auto__;
          } finally {
            tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_34126;
            tiltontec.cell.base._STAR_within_integrity_STAR_ = _STAR_within_integrity_STAR_34125;
          }
        }
      }
    }
  }, 0, 100, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base._STAR_within_integrity_STAR_), opcode), "cwi-begin"));
};
goog.provide("tiltontec.cell.evaluate");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.integrity");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.evaluate.ephemeral_reset = function tiltontec$cell$evaluate$ephemeral_reset(rc) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ephemeral_QMARK_.call(null, rc))) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603), rc, function(opcode, defer_info) {
      var temp__4425__auto___34129 = (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
      if (cljs.core.truth_(temp__4425__auto___34129)) {
        var me_34130 = temp__4425__auto___34129;
        cljs.core.swap_BANG_.call(null, me_34130, cljs.core.assoc, (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc)), null);
      } else {
      }
      return cljs.core.swap_BANG_.call(null, rc, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), null);
    });
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.record_dependency = function tiltontec$cell$evaluate$record_dependency(used) {
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, used))) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.base._STAR_depender_STAR_)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "*depender*", "*depender*", 1156413950, null)))].join(""));
    }
    tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reco-dep!!!", "reco-dep!!!", 380319801), new cljs.core.Keyword(null, "used", "used", -1414786177), tiltontec.cell.base.c_slot.call(null, used), new cljs.core.Keyword(null, "caller", "caller", -1275362879), tiltontec.cell.base.c_slot.call(null, tiltontec.cell.base._STAR_depender_STAR_));
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "useds", "useds", 621350967), tiltontec.cell.base._STAR_depender_STAR_], null), cljs.core.conj.call(null, tiltontec.cell.base.c_useds.call(null, tiltontec.cell.base._STAR_depender_STAR_), used));
    return tiltontec.cell.base.caller_ensure.call(null, used, tiltontec.cell.base._STAR_depender_STAR_);
  }
};
tiltontec.cell.evaluate.ensure_value_is_current = function tiltontec$cell$evaluate$ensure_value_is_current(c, debug_id, ensurer) {
  if (cljs.core.truth_(tiltontec.cell.base._STAR_not_to_be_STAR_)) {
    if (cljs.core.truth_(tiltontec.cell.base.c_unbound_QMARK_.call(null, c))) {
      return tiltontec.util.core.err.call(null, "evic\x3e unbound slot %s of model %s", tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_model.call(null, c));
    } else {
      if (cljs.core.truth_(tiltontec.cell.base.c_valid_QMARK_.call(null, c))) {
        return tiltontec.cell.base.c_value.call(null, c);
      } else {
        return null;
      }
    }
  } else {
    if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
      return tiltontec.cell.base.c_value.call(null, c);
    } else {
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = tiltontec.cell.base.c_input_QMARK_.call(null, c);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = tiltontec.cell.base.c_valid_QMARK_.call(null, c);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return cljs.core.not.call(null, function() {
              var and__4542__auto____$2 = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
              if (cljs.core.truth_(and__4542__auto____$2)) {
                return cljs.core._EQ_.call(null, tiltontec.cell.base.c_optimize.call(null, c), new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336)) && tiltontec.cell.base.c_value.call(null, c) == null;
              } else {
                return and__4542__auto____$2;
              }
            }());
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }())) {
        return tiltontec.cell.base.c_value.call(null, c);
      } else {
        if (cljs.core.truth_(function() {
          var temp__4425__auto__ = tiltontec.cell.base.c_model.call(null, c);
          if (cljs.core.truth_(temp__4425__auto__)) {
            var md = temp__4425__auto__;
            return tiltontec.cell.base.mdead_QMARK_.call(null, tiltontec.cell.base.c_model.call(null, c));
          } else {
            return null;
          }
        }())) {
          return tiltontec.util.core.err.call(null, cljs.core.str, "evic\x3e model %s of cell %s is dead", tiltontec.cell.base.c_model.call(null, c), c);
        } else {
          if (cljs.core.truth_(function() {
            var or__4554__auto__ = cljs.core.not.call(null, tiltontec.cell.base.c_valid_QMARK_.call(null, c));
            if (or__4554__auto__) {
              return or__4554__auto__;
            } else {
              var G__34144 = cljs.core.seq.call(null, tiltontec.cell.base.c_useds.call(null, c));
              var vec__34145 = G__34144;
              var used = cljs.core.nth.call(null, vec__34145, 0, null);
              var urest = cljs.core.nthnext.call(null, vec__34145, 1);
              var G__34144__$1 = G__34144;
              while (true) {
                var vec__34146 = G__34144__$1;
                var used__$1 = cljs.core.nth.call(null, vec__34146, 0, null);
                var urest__$1 = cljs.core.nthnext.call(null, vec__34146, 1);
                if (cljs.core.truth_(used__$1)) {
                  cljs.core.println.call(null, new cljs.core.Keyword(null, "pcell", "pcell", -240144130), new cljs.core.Keyword(null, "cnset-evicing", "cnset-evicing", 380848352), tiltontec.cell.base.c_slot.call(null, used__$1), tiltontec.cell.base.c_state.call(null, used__$1));
                  tiltontec$cell$evaluate$ensure_value_is_current.call(null, used__$1, new cljs.core.Keyword(null, "nested", "nested", 18943849), c);
                  var or__4554__auto____$1 = tiltontec.cell.base.c_pulse_last_changed.call(null, used__$1) > tiltontec.cell.base.c_pulse.call(null, c);
                  if (or__4554__auto____$1) {
                    return or__4554__auto____$1;
                  } else {
                    var G__34147 = urest__$1;
                    G__34144__$1 = G__34147;
                    continue;
                  }
                } else {
                  return null;
                }
                break;
              }
            }
          }())) {
            if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
            } else {
              tiltontec.util.base.call_trc.call(null, ":not-current-so-calc", tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_state.call(null, c));
              tiltontec.cell.evaluate.calculate_and_set.call(null, c, new cljs.core.Keyword(null, "evic", "evic", 1309656753), ensurer);
            }
            return tiltontec.cell.base.c_value.call(null, c);
          } else {
            tiltontec.cell.integrity.c_pulse_update.call(null, c, new cljs.core.Keyword(null, "valid-uninfluenced", "valid-uninfluenced", 676756797));
            return tiltontec.cell.base.c_value.call(null, c);
          }
        }
      }
    }
  }
};
tiltontec.cell.evaluate.c_get = function tiltontec$cell$evaluate$c_get(c) {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "cget-entry", "cget-entry", -828825243), tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.ia_type.call(null, tiltontec.cell.base.c_model.call(null, c)), cljs.core.truth_(tiltontec.cell.base._STAR_depender_STAR_) ? tiltontec.cell.base.c_slot.call(null, tiltontec.cell.base._STAR_depender_STAR_) : new cljs.core.Keyword(null, "nodepender", "nodepender", -229880152));
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    var result__31774__auto__ = tiltontec.cell.integrity.call_with_integrity.call(null, null, null, function(opcode, defer_info) {
      var prior_value = tiltontec.cell.base.c_value.call(null, c);
      cljs.core.println.call(null, new cljs.core.Keyword(null, "cget-to-evic", "cget-to-evic", -1511174411), tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.ia_type.call(null, tiltontec.cell.base.c_model.call(null, c)), cljs.core.truth_(tiltontec.cell.base._STAR_depender_STAR_) ? [cljs.core.str("asker\x3d"), cljs.core.str(tiltontec.cell.base.c_slot.call(null, tiltontec.cell.base._STAR_depender_STAR_)), cljs.core.str(tiltontec.cell.base.c_md_name.call(null, tiltontec.cell.base._STAR_depender_STAR_))].join("") : 
      null);
      var result__31774__auto__ = tiltontec.cell.evaluate.ensure_value_is_current.call(null, c, new cljs.core.Keyword(null, "c-read", "c-read", -1481921085), null);
      if (tiltontec.cell.base.c_model.call(null, c) == null && cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, c), new cljs.core.Keyword(null, "nascent", "nascent", 443401807)) && cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c)) {
        tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
        tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "cget", "cget", 1794378742));
        tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
      } else {
      }
      return result__31774__auto__;
    });
    if (cljs.core.truth_(tiltontec.cell.base._STAR_depender_STAR_)) {
      tiltontec.cell.evaluate.record_dependency.call(null, c);
    } else {
    }
    return result__31774__auto__;
  } else {
    if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c))) {
      return cljs.core.deref.call(null, c);
    } else {
      return c;
    }
  }
};
tiltontec.cell.evaluate.calculate_and_set = function tiltontec$cell$evaluate$calculate_and_set(c, dbgid, dbgdata) {
  return tiltontec.util.base.call_wtrx.call(null, function() {
    var raw_value = tiltontec.cell.evaluate.calculate_and_link.call(null, c);
    tiltontec.util.base.call_trc.call(null, ":cn-set-raw!!!!", tiltontec.cell.base.c_slot.call(null, c), raw_value);
    if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c))) {
      return null;
    } else {
      if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("calc-n-set"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
      }
      return tiltontec.cell.evaluate.c_value_assume.call(null, c, raw_value, null);
    }
  }, 0, 20, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "cnset-entry", "cnset-entry", -1122785079)));
};
tiltontec.cell.evaluate.calculate_and_link = function tiltontec$cell$evaluate$calculate_and_link(c) {
  var _STAR_call_stack_STAR_34151 = tiltontec.cell.base._STAR_call_stack_STAR_;
  var _STAR_depender_STAR_34152 = tiltontec.cell.base._STAR_depender_STAR_;
  var _STAR_defer_changes_STAR_34153 = tiltontec.cell.base._STAR_defer_changes_STAR_;
  tiltontec.cell.base._STAR_call_stack_STAR_ = cljs.core.cons.call(null, c, tiltontec.cell.base._STAR_call_stack_STAR_);
  tiltontec.cell.base._STAR_depender_STAR_ = c;
  tiltontec.cell.base._STAR_defer_changes_STAR_ = true;
  try {
    tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "pre-rule-clear", "pre-rule-clear", 258781380));
    if (cljs.core.truth_(tiltontec.cell.base.c_rule.call(null, c))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No rule in %s type %s"), cljs.core.str((new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(c)), cljs.core.str(cljs.core.type.call(null, cljs.core.deref.call(null, c)))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
    }
    return tiltontec.cell.base.c_rule.call(null, c).call(null, c);
  } finally {
    tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_34153;
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_34152;
    tiltontec.cell.base._STAR_call_stack_STAR_ = _STAR_call_stack_STAR_34151;
  }
};
if (typeof tiltontec.cell.evaluate.c_awaken !== "undefined") {
} else {
  tiltontec.cell.evaluate.c_awaken = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "c-awaken"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(c) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c));
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword(null, "default", "default", -1987822328), function(c) {
  if (cljs.core.coll_QMARK_.call(null, c)) {
    return cljs.core.doall.call(null, function() {
      var iter__5307__auto__ = function tiltontec$cell$evaluate$iter__34154(s__34155) {
        return new cljs.core.LazySeq(null, function() {
          var s__34155__$1 = s__34155;
          while (true) {
            var temp__4425__auto__ = cljs.core.seq.call(null, s__34155__$1);
            if (temp__4425__auto__) {
              var s__34155__$2 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__34155__$2)) {
                var c__5305__auto__ = cljs.core.chunk_first.call(null, s__34155__$2);
                var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
                var b__34157 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
                if (function() {
                  var i__34156 = 0;
                  while (true) {
                    if (i__34156 < size__5306__auto__) {
                      var ce = cljs.core._nth.call(null, c__5305__auto__, i__34156);
                      cljs.core.chunk_append.call(null, b__34157, tiltontec.cell.evaluate.c_awaken.call(null, ce));
                      var G__34158 = i__34156 + 1;
                      i__34156 = G__34158;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34157), tiltontec$cell$evaluate$iter__34154.call(null, cljs.core.chunk_rest.call(null, s__34155__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34157), null);
                }
              } else {
                var ce = cljs.core.first.call(null, s__34155__$2);
                return cljs.core.cons.call(null, tiltontec.cell.evaluate.c_awaken.call(null, ce), tiltontec$cell$evaluate$iter__34154.call(null, cljs.core.rest.call(null, s__34155__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__5307__auto__.call(null, c);
    }());
  } else {
    return cljs.core.println.call(null, new cljs.core.Keyword(null, "c-awaken-fall-thru", "c-awaken-fall-thru", -2004606871), cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ref-of", "ref-of", 1886926194), cljs.core.type.call(null, c), cljs.core.deref.call(null, c)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
    "unref", "unref", -1884894186), c, cljs.core.type.call(null, c)], null));
  }
});
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071), function(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_input_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c)) {
    var temp__4425__auto___34159 = tiltontec.cell.base.c_me.call(null, c);
    if (cljs.core.truth_(temp__4425__auto___34159)) {
      var me_34160 = temp__4425__auto___34159;
      tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.c_slot.call(null, c), me_34160], null), tiltontec.cell.base.c_value.call(null, c));
    } else {
    }
    tiltontec.cell.observer.c_observe.call(null, c, new cljs.core.Keyword(null, "cell-awaken", "cell-awaken", 2137807704));
    return tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), function(c) {
  tiltontec.util.base.call_trc.call(null, ":c-formula-awk", tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.integrity.c_current_QMARK_.call(null, c));
  var _STAR_depender_STAR_34161 = tiltontec.cell.base._STAR_depender_STAR_;
  tiltontec.cell.base._STAR_depender_STAR_ = null;
  try {
    if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
      return null;
    } else {
      return tiltontec.cell.evaluate.calculate_and_set.call(null, c, new cljs.core.Keyword(null, "fn-c-awaken", "fn-c-awaken", 1597115821), null);
    }
  } finally {
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_34161;
  }
});
tiltontec.cell.evaluate.md_slot_value_store = function tiltontec$cell$evaluate$md_slot_value_store(me, slot, value) {
  if (cljs.core.truth_(me)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "me", "me", 1501524834, null)))].join(""));
  }
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, me))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
  }
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), value);
};
tiltontec.cell.evaluate.c_value_assume = function tiltontec$cell$evaluate$c_value_assume(c, new_value, propagation_code) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  return tiltontec.util.base.call_wtrx.call(null, function() {
    var result__31774__auto__ = new_value;
    var _STAR_depender_STAR_34164_34166 = tiltontec.cell.base._STAR_depender_STAR_;
    tiltontec.cell.base._STAR_depender_STAR_ = null;
    try {
      var prior_value_34167 = tiltontec.cell.base.c_value.call(null, c);
      var prior_state_34168 = tiltontec.cell.base.c_value_state.call(null, c);
      tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), c], null), new_value);
      tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
      tiltontec.util.base.call_trc.call(null, ":new-vlue-installed", tiltontec.cell.base.c_slot.call(null, c), new_value, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(c));
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = tiltontec.cell.base.c_model.call(null, c);
        if (cljs.core.truth_(and__4542__auto__)) {
          return cljs.core.not.call(null, tiltontec.cell.base.c_synaptic_QMARK_.call(null, c));
        } else {
          return and__4542__auto__;
        }
      }())) {
        tiltontec.cell.evaluate.md_slot_value_store.call(null, tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_slot_name.call(null, c), new_value);
      } else {
      }
      tiltontec.cell.integrity.c_pulse_update.call(null, c, new cljs.core.Keyword(null, "slotv-assume", "slotv-assume", -1071260275));
      if (cljs.core.truth_(function() {
        var or__4554__auto__ = cljs.core._EQ_.call(null, propagation_code, new cljs.core.Keyword(null, "propagate", "propagate", 274376905));
        if (or__4554__auto__) {
          return or__4554__auto__;
        } else {
          var or__4554__auto____$1 = cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([prior_state_34168], true), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "valid", "valid", 155614240), new cljs.core.Keyword(null, "uncurrent", "uncurrent", -217246265)], null)));
          if (or__4554__auto____$1) {
            return or__4554__auto____$1;
          } else {
            return tiltontec.cell.evaluate.c_value_changed_QMARK_.call(null, c, new_value, prior_value_34167);
          }
        }
      }())) {
        var callers_34169 = tiltontec.cell.base.c_callers.call(null, c);
        var temp__4425__auto___34170 = function() {
          var and__4542__auto__ = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
          if (cljs.core.truth_(and__4542__auto__)) {
            return tiltontec.cell.base.c_optimize.call(null, c);
          } else {
            return and__4542__auto__;
          }
        }();
        if (cljs.core.truth_(temp__4425__auto___34170)) {
          var optimize_34171 = temp__4425__auto___34170;
          tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "wtf", "wtf", -1581114577), optimize_34171);
          var G__34165_34172 = optimize_34171;
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), G__34165_34172)) {
            if (cljs.core.truth_(tiltontec.cell.base.c_value.call(null, c))) {
              tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), tiltontec.cell.base.c_slot.call(null, c));
              tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336));
            } else {
            }
          } else {
            if (cljs.core._EQ_.call(null, true, G__34165_34172)) {
              tiltontec.cell.evaluate.optimize_away_QMARK__BANG_.call(null, c, prior_value_34167);
            } else {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(optimize_34171)].join(""));
            }
          }
        } else {
        }
        if (cljs.core.truth_(function() {
          var or__4554__auto__ = cljs.core._EQ_.call(null, propagation_code, new cljs.core.Keyword(null, "no-propagate", "no-propagate", -573850970));
          if (or__4554__auto__) {
            return or__4554__auto__;
          } else {
            return tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c);
          }
        }())) {
        } else {
          if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
          }
          tiltontec.cell.evaluate.propagate.call(null, c, prior_value_34167, callers_34169);
        }
      } else {
      }
    } finally {
      tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_34164_34166;
    }
    return result__31774__auto__;
  }, 0, 100, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new_value), (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))), new cljs.core.Keyword(null, "cv-ass", "cv-ass", 1064200034)));
};
tiltontec.cell.evaluate.unlink_from_used = function tiltontec$cell$evaluate$unlink_from_used(c, why) {
  var iter__5307__auto___34181 = function tiltontec$cell$evaluate$unlink_from_used_$_iter__34177(s__34178) {
    return new cljs.core.LazySeq(null, function() {
      var s__34178__$1 = s__34178;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__34178__$1);
        if (temp__4425__auto__) {
          var s__34178__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__34178__$2)) {
            var c__5305__auto__ = cljs.core.chunk_first.call(null, s__34178__$2);
            var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
            var b__34180 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
            if (function() {
              var i__34179 = 0;
              while (true) {
                if (i__34179 < size__5306__auto__) {
                  var used = cljs.core._nth.call(null, c__5305__auto__, i__34179);
                  cljs.core.chunk_append.call(null, b__34180, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), used], null), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), c)));
                  var G__34182 = i__34179 + 1;
                  i__34179 = G__34182;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34180), tiltontec$cell$evaluate$unlink_from_used_$_iter__34177.call(null, cljs.core.chunk_rest.call(null, s__34178__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34180), null);
            }
          } else {
            var used = cljs.core.first.call(null, s__34178__$2);
            return cljs.core.cons.call(null, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), used], null), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), c)), tiltontec$cell$evaluate$unlink_from_used_$_iter__34177.call(null, cljs.core.rest.call(null, s__34178__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  iter__5307__auto___34181.call(null, tiltontec.cell.base.c_useds.call(null, c));
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "useds", "useds", 621350967), c], null), cljs.core.PersistentHashSet.EMPTY);
};
tiltontec.cell.evaluate.md_cell_flush = function tiltontec$cell$evaluate$md_cell_flush(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  var temp__4425__auto__ = tiltontec.cell.base.c_model.call(null, c);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var me = temp__4425__auto__;
    return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-flushed", "cells-flushed", -1653073949), me], null), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "cells-flushed", "cells-flushed", -1653073949)).cljs$core$IFn$_invoke$arity$1(me), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_pulse_observed.call(null, 
    c)], null)));
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.optimize_away_QMARK__BANG_ = function tiltontec$cell$evaluate$optimize_away_QMARK__BANG_(c, prior_value) {
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = cljs.core.empty_QMARK_.call(null, tiltontec.cell.base.c_useds.call(null, c));
      if (and__4542__auto____$1) {
        var and__4542__auto____$2 = tiltontec.cell.base.c_optimize.call(null, c);
        if (cljs.core.truth_(and__4542__auto____$2)) {
          var and__4542__auto____$3 = cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
          if (and__4542__auto____$3) {
            var and__4542__auto____$4 = tiltontec.cell.base.c_valid_QMARK_.call(null, c);
            if (cljs.core.truth_(and__4542__auto____$4)) {
              return cljs.core.not.call(null, tiltontec.cell.base.c_synaptic_QMARK_.call(null, c)) && cljs.core.not.call(null, tiltontec.cell.base.c_input_QMARK_.call(null, c));
            } else {
              return and__4542__auto____$4;
            }
          } else {
            return and__4542__auto____$3;
          }
        } else {
          return and__4542__auto____$2;
        }
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "optimized-away", "optimized-away", 876765856));
    tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "opti-away", "opti-away", 1290785499));
    var temp__4425__auto___34191 = tiltontec.cell.base.c_model.call(null, c);
    if (cljs.core.truth_(temp__4425__auto___34191)) {
      var me_34192 = temp__4425__auto___34191;
      tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cz", "cz", 1670864932), me_34192], null), cljs.core.dissoc.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me_34192)), tiltontec.cell.base.c_slot.call(null, c)));
      tiltontec.cell.evaluate.md_cell_flush.call(null, c);
    } else {
    }
    var seq__34187_34193 = cljs.core.seq.call(null, cljs.core.seq.call(null, tiltontec.cell.base.c_callers.call(null, c)));
    var chunk__34188_34194 = null;
    var count__34189_34195 = 0;
    var i__34190_34196 = 0;
    while (true) {
      if (i__34190_34196 < count__34189_34195) {
        var caller_34197 = cljs.core._nth.call(null, chunk__34188_34194, i__34190_34196);
        cljs.core.swap_BANG_.call(null, caller_34197, cljs.core.assoc, new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller_34197)));
        tiltontec.cell.base.caller_drop.call(null, c, caller_34197);
        tiltontec.cell.evaluate.ensure_value_is_current.call(null, caller_34197, new cljs.core.Keyword(null, "opti-used", "opti-used", 660350789), c);
        var G__34198 = seq__34187_34193;
        var G__34199 = chunk__34188_34194;
        var G__34200 = count__34189_34195;
        var G__34201 = i__34190_34196 + 1;
        seq__34187_34193 = G__34198;
        chunk__34188_34194 = G__34199;
        count__34189_34195 = G__34200;
        i__34190_34196 = G__34201;
        continue;
      } else {
        var temp__4425__auto___34202 = cljs.core.seq.call(null, seq__34187_34193);
        if (temp__4425__auto___34202) {
          var seq__34187_34203__$1 = temp__4425__auto___34202;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__34187_34203__$1)) {
            var c__5338__auto___34204 = cljs.core.chunk_first.call(null, seq__34187_34203__$1);
            var G__34205 = cljs.core.chunk_rest.call(null, seq__34187_34203__$1);
            var G__34206 = c__5338__auto___34204;
            var G__34207 = cljs.core.count.call(null, c__5338__auto___34204);
            var G__34208 = 0;
            seq__34187_34193 = G__34205;
            chunk__34188_34194 = G__34206;
            count__34189_34195 = G__34207;
            i__34190_34196 = G__34208;
            continue;
          } else {
            var caller_34209 = cljs.core.first.call(null, seq__34187_34203__$1);
            cljs.core.swap_BANG_.call(null, caller_34209, cljs.core.assoc, new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller_34209)));
            tiltontec.cell.base.caller_drop.call(null, c, caller_34209);
            tiltontec.cell.evaluate.ensure_value_is_current.call(null, caller_34209, new cljs.core.Keyword(null, "opti-used", "opti-used", 660350789), c);
            var G__34210 = cljs.core.next.call(null, seq__34187_34203__$1);
            var G__34211 = null;
            var G__34212 = 0;
            var G__34213 = 0;
            seq__34187_34193 = G__34210;
            chunk__34188_34194 = G__34211;
            count__34189_34195 = G__34212;
            i__34190_34196 = G__34213;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.reset_BANG_.call(null, c, tiltontec.cell.base.c_value.call(null, c));
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.c_quiesce = function tiltontec$cell$evaluate$c_quiesce(c) {
  tiltontec.cell.base.unlink_from_callers.call(null, c);
  tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "quiesce", "quiesce", -798294121));
  return cljs.core.reset_BANG_.call(null, c, new cljs.core.Keyword(null, "dead-c", "dead-c", 385485497));
};
if (typeof tiltontec.cell.evaluate.not_to_be !== "undefined") {
} else {
  tiltontec.cell.evaluate.not_to_be = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "not-to-be"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(me) {
        if (cljs.core.truth_(tiltontec.cell.base.md_ref_QMARK_.call(null, me))) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, cljs.core.truth_(me) ? cljs.core.deref.call(null, me) : null)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.not_to_be, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  var seq__34214_34218 = cljs.core.seq.call(null, cljs.core.vals.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me))));
  var chunk__34215_34219 = null;
  var count__34216_34220 = 0;
  var i__34217_34221 = 0;
  while (true) {
    if (i__34217_34221 < count__34216_34220) {
      var c_34222 = cljs.core._nth.call(null, chunk__34215_34219, i__34217_34221);
      tiltontec.cell.evaluate.c_quiesce.call(null, c_34222);
      var G__34223 = seq__34214_34218;
      var G__34224 = chunk__34215_34219;
      var G__34225 = count__34216_34220;
      var G__34226 = i__34217_34221 + 1;
      seq__34214_34218 = G__34223;
      chunk__34215_34219 = G__34224;
      count__34216_34220 = G__34225;
      i__34217_34221 = G__34226;
      continue;
    } else {
      var temp__4425__auto___34227 = cljs.core.seq.call(null, seq__34214_34218);
      if (temp__4425__auto___34227) {
        var seq__34214_34228__$1 = temp__4425__auto___34227;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__34214_34228__$1)) {
          var c__5338__auto___34229 = cljs.core.chunk_first.call(null, seq__34214_34228__$1);
          var G__34230 = cljs.core.chunk_rest.call(null, seq__34214_34228__$1);
          var G__34231 = c__5338__auto___34229;
          var G__34232 = cljs.core.count.call(null, c__5338__auto___34229);
          var G__34233 = 0;
          seq__34214_34218 = G__34230;
          chunk__34215_34219 = G__34231;
          count__34216_34220 = G__34232;
          i__34217_34221 = G__34233;
          continue;
        } else {
          var c_34234 = cljs.core.first.call(null, seq__34214_34228__$1);
          tiltontec.cell.evaluate.c_quiesce.call(null, c_34234);
          var G__34235 = cljs.core.next.call(null, seq__34214_34228__$1);
          var G__34236 = null;
          var G__34237 = 0;
          var G__34238 = 0;
          seq__34214_34218 = G__34235;
          chunk__34215_34219 = G__34236;
          count__34216_34220 = G__34237;
          i__34217_34221 = G__34238;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.core.reset_BANG_.call(null, me, null);
  return tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "dead", "dead", -1946604091));
});
if (typeof tiltontec.cell.evaluate.unchanged_test !== "undefined") {
} else {
  tiltontec.cell.evaluate.unchanged_test = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "unchanged-test"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(me, slot) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(me) ? cljs.core.type.call(null, cljs.core.deref.call(null, me)) : null, slot], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.unchanged_test, new cljs.core.Keyword(null, "default", "default", -1987822328), function(self, slotname) {
  return cljs.core._EQ_;
});
tiltontec.cell.evaluate.c_value_changed_QMARK_ = function tiltontec$cell$evaluate$c_value_changed_QMARK_(c, new_value, old_value) {
  return cljs.core.not.call(null, function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "unchanged-if", "unchanged-if", -923210106)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return tiltontec.cell.evaluate.unchanged_test.call(null, tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_slot.call(null, c));
    }
  }().call(null, new_value, old_value));
};
tiltontec.cell.evaluate._STAR_custom_propagater_STAR_ = null;
tiltontec.cell.evaluate.propagate = function tiltontec$cell$evaluate$propagate(c, prior_value, callers) {
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c)));
  if (cljs.core.truth_(tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_)) {
    if (cljs.core.truth_(tiltontec.cell.evaluate._STAR_custom_propagater_STAR_)) {
      return tiltontec.cell.evaluate._STAR_custom_propagater_STAR_.call(null, c, prior_value);
    } else {
      return null;
    }
  } else {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pulse-last-changed", "pulse-last-changed", 1035703380), c], null), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
    var _STAR_depender_STAR_34247 = tiltontec.cell.base._STAR_depender_STAR_;
    var _STAR_call_stack_STAR_34248 = tiltontec.cell.base._STAR_call_stack_STAR_;
    var _STAR_c_prop_depth_STAR_34249 = tiltontec.cell.base._STAR_c_prop_depth_STAR_;
    var _STAR_defer_changes_STAR_34250 = tiltontec.cell.base._STAR_defer_changes_STAR_;
    tiltontec.cell.base._STAR_depender_STAR_ = null;
    tiltontec.cell.base._STAR_call_stack_STAR_ = null;
    tiltontec.cell.base._STAR_c_prop_depth_STAR_ = tiltontec.cell.base._STAR_c_prop_depth_STAR_ + 1;
    tiltontec.cell.base._STAR_defer_changes_STAR_ = true;
    try {
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = prior_value;
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = tiltontec.cell.base.c_model.call(null, c);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return tiltontec.cell.base.md_slot_owning_QMARK_.call(null, cljs.core.type.call(null, tiltontec.cell.base.c_model.call(null, c)), tiltontec.cell.base.c_slot_name.call(null, c));
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }())) {
        var temp__4425__auto___34255 = clojure.set.difference.call(null, tiltontec.util.core.set_ify.call(null, prior_value), tiltontec.util.core.set_ify.call(null, tiltontec.cell.base.c_value.call(null, c)));
        if (cljs.core.truth_(temp__4425__auto___34255)) {
          var ownees_34256 = temp__4425__auto___34255;
          var seq__34251_34257 = cljs.core.seq.call(null, ownees_34256);
          var chunk__34252_34258 = null;
          var count__34253_34259 = 0;
          var i__34254_34260 = 0;
          while (true) {
            if (i__34254_34260 < count__34253_34259) {
              var ownee_34261 = cljs.core._nth.call(null, chunk__34252_34258, i__34254_34260);
              tiltontec.cell.evaluate.not_to_be.call(null, ownee_34261);
              var G__34262 = seq__34251_34257;
              var G__34263 = chunk__34252_34258;
              var G__34264 = count__34253_34259;
              var G__34265 = i__34254_34260 + 1;
              seq__34251_34257 = G__34262;
              chunk__34252_34258 = G__34263;
              count__34253_34259 = G__34264;
              i__34254_34260 = G__34265;
              continue;
            } else {
              var temp__4425__auto___34266__$1 = cljs.core.seq.call(null, seq__34251_34257);
              if (temp__4425__auto___34266__$1) {
                var seq__34251_34267__$1 = temp__4425__auto___34266__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__34251_34267__$1)) {
                  var c__5338__auto___34268 = cljs.core.chunk_first.call(null, seq__34251_34267__$1);
                  var G__34269 = cljs.core.chunk_rest.call(null, seq__34251_34267__$1);
                  var G__34270 = c__5338__auto___34268;
                  var G__34271 = cljs.core.count.call(null, c__5338__auto___34268);
                  var G__34272 = 0;
                  seq__34251_34257 = G__34269;
                  chunk__34252_34258 = G__34270;
                  count__34253_34259 = G__34271;
                  i__34254_34260 = G__34272;
                  continue;
                } else {
                  var ownee_34273 = cljs.core.first.call(null, seq__34251_34267__$1);
                  tiltontec.cell.evaluate.not_to_be.call(null, ownee_34273);
                  var G__34274 = cljs.core.next.call(null, seq__34251_34267__$1);
                  var G__34275 = null;
                  var G__34276 = 0;
                  var G__34277 = 0;
                  seq__34251_34257 = G__34274;
                  chunk__34252_34258 = G__34275;
                  count__34253_34259 = G__34276;
                  i__34254_34260 = G__34277;
                  continue;
                }
              } else {
              }
            }
            break;
          }
        } else {
        }
      } else {
      }
      tiltontec.cell.evaluate.propagate_to_callers.call(null, c, callers);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obs-chkpulse!!!!!!!!", "obs-chkpulse!!!!!!!!", 498932923), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), tiltontec.cell.base.c_pulse_observed.call(null, c));
      if (cljs.core.truth_(function() {
        var or__4554__auto__ = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c);
        if (or__4554__auto__) {
          return or__4554__auto__;
        } else {
          return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null));
        }
      }())) {
        tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "propagate", "propagate", 274376905));
      } else {
      }
      return tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
    } finally {
      tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_34250;
      tiltontec.cell.base._STAR_c_prop_depth_STAR_ = _STAR_c_prop_depth_STAR_34249;
      tiltontec.cell.base._STAR_call_stack_STAR_ = _STAR_call_stack_STAR_34248;
      tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_34247;
    }
  }
};
tiltontec.cell.evaluate.propagate_to_callers = function tiltontec$cell$evaluate$propagate_to_callers(c, callers) {
  if (cljs.core.empty_QMARK_.call(null, callers)) {
    return null;
  } else {
    var causation = cljs.core.cons.call(null, c, tiltontec.cell.base._STAR_causation_STAR_);
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388), c, function(causation) {
      return function(opcode, defer_info) {
        if (cljs.core.truth_(tiltontec.cell.base.mdead_QMARK_.call(null, tiltontec.cell.base.c_model.call(null, c)))) {
          return tiltontec.util.base.call_trc.call(null, "WHOAA!!!! dead by time :tell-deps dispatched; bailing", c);
        } else {
          var _STAR_causation_STAR_34283 = tiltontec.cell.base._STAR_causation_STAR_;
          tiltontec.cell.base._STAR_causation_STAR_ = causation;
          try {
            var seq__34284 = cljs.core.seq.call(null, cljs.core.seq.call(null, callers));
            var chunk__34285 = null;
            var count__34286 = 0;
            var i__34287 = 0;
            while (true) {
              if (i__34287 < count__34286) {
                var caller = cljs.core._nth.call(null, chunk__34285, i__34287);
                if (cljs.core.truth_(function() {
                  var or__4554__auto__ = cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, caller), new cljs.core.Keyword(null, "quiesced", "quiesced", 421940903));
                  if (or__4554__auto__) {
                    return or__4554__auto__;
                  } else {
                    var or__4554__auto____$1 = tiltontec.cell.integrity.c_current_QMARK_.call(null, caller);
                    if (cljs.core.truth_(or__4554__auto____$1)) {
                      return or__4554__auto____$1;
                    } else {
                      var or__4554__auto____$2 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, caller)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.Keyword(null, "always", "always", -1772028770), new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854)], null));
                      if (cljs.core.truth_(or__4554__auto____$2)) {
                        return or__4554__auto____$2;
                      } else {
                        return cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller))) && cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
                      }
                    }
                  }
                }())) {
                  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "not-propping", "not-propping", 438111539), tiltontec.cell.base.c_slot.call(null, c), new cljs.core.Keyword(null, "to", "to", 192099007), tiltontec.cell.base.c_slot.call(null, caller));
                } else {
                  tiltontec.cell.evaluate.calculate_and_set.call(null, caller, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), c);
                }
                var G__34288 = seq__34284;
                var G__34289 = chunk__34285;
                var G__34290 = count__34286;
                var G__34291 = i__34287 + 1;
                seq__34284 = G__34288;
                chunk__34285 = G__34289;
                count__34286 = G__34290;
                i__34287 = G__34291;
                continue;
              } else {
                var temp__4425__auto__ = cljs.core.seq.call(null, seq__34284);
                if (temp__4425__auto__) {
                  var seq__34284__$1 = temp__4425__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__34284__$1)) {
                    var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__34284__$1);
                    var G__34292 = cljs.core.chunk_rest.call(null, seq__34284__$1);
                    var G__34293 = c__5338__auto__;
                    var G__34294 = cljs.core.count.call(null, c__5338__auto__);
                    var G__34295 = 0;
                    seq__34284 = G__34292;
                    chunk__34285 = G__34293;
                    count__34286 = G__34294;
                    i__34287 = G__34295;
                    continue;
                  } else {
                    var caller = cljs.core.first.call(null, seq__34284__$1);
                    if (cljs.core.truth_(function() {
                      var or__4554__auto__ = cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, caller), new cljs.core.Keyword(null, "quiesced", "quiesced", 421940903));
                      if (or__4554__auto__) {
                        return or__4554__auto__;
                      } else {
                        var or__4554__auto____$1 = tiltontec.cell.integrity.c_current_QMARK_.call(null, caller);
                        if (cljs.core.truth_(or__4554__auto____$1)) {
                          return or__4554__auto____$1;
                        } else {
                          var or__4554__auto____$2 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, caller)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.Keyword(null, "always", "always", -1772028770), new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854)], null));
                          if (cljs.core.truth_(or__4554__auto____$2)) {
                            return or__4554__auto____$2;
                          } else {
                            return cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller))) && cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
                          }
                        }
                      }
                    }())) {
                      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "not-propping", "not-propping", 438111539), tiltontec.cell.base.c_slot.call(null, c), new cljs.core.Keyword(null, "to", "to", 192099007), tiltontec.cell.base.c_slot.call(null, caller));
                    } else {
                      tiltontec.cell.evaluate.calculate_and_set.call(null, caller, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), c);
                    }
                    var G__34296 = cljs.core.next.call(null, seq__34284__$1);
                    var G__34297 = null;
                    var G__34298 = 0;
                    var G__34299 = 0;
                    seq__34284 = G__34296;
                    chunk__34285 = G__34297;
                    count__34286 = G__34298;
                    i__34287 = G__34299;
                    continue;
                  }
                } else {
                  return null;
                }
              }
              break;
            }
          } finally {
            tiltontec.cell.base._STAR_causation_STAR_ = _STAR_causation_STAR_34283;
          }
        }
      };
    }(causation));
  }
};
goog.provide("tiltontec.cell.core");
goog.require("cljs.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.core.make_cell = function tiltontec$cell$core$make_cell() {
  var args__5600__auto__ = [];
  var len__5593__auto___34303 = arguments.length;
  var i__5594__auto___34304 = 0;
  while (true) {
    if (i__5594__auto___34304 < len__5593__auto___34303) {
      args__5600__auto__.push(arguments[i__5594__auto___34304]);
      var G__34305 = i__5594__auto___34304 + 1;
      i__5594__auto___34304 = G__34305;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic = function(kvs) {
  var options = cljs.core.apply.call(null, cljs.core.hash_map, kvs);
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "callers", "callers", -1991542784), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, 
  "pulse-last-changed", "pulse-last-changed", 1035703380), new cljs.core.Keyword(null, "pulse", "pulse", -244494476), new cljs.core.Keyword(null, "input?", "input?", -1792843173)], [cljs.core.PersistentHashSet.EMPTY, tiltontec.cell.base.unbound, false, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), 0, false, 0, 0, true]), options), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), 
  new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)], null));
};
tiltontec.cell.core.make_cell.cljs$lang$maxFixedArity = 0;
tiltontec.cell.core.make_cell.cljs$lang$applyTo = function(seq34302) {
  return tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq34302));
};
tiltontec.cell.core.make_c_formula = function tiltontec$cell$core$make_c_formula() {
  var args__5600__auto__ = [];
  var len__5593__auto___34307 = arguments.length;
  var i__5594__auto___34308 = 0;
  while (true) {
    if (i__5594__auto___34308 < len__5593__auto___34307) {
      args__5600__auto__.push(arguments[i__5594__auto___34308]);
      var G__34309 = i__5594__auto___34308 + 1;
      i__5594__auto___34308 = G__34309;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic = function(kvs) {
  var options = cljs.core.apply.call(null, cljs.core.hash_map, kvs);
  var rule = (new cljs.core.Keyword(null, "rule", "rule", 729973257)).cljs$core$IFn$_invoke$arity$1(options);
  if (cljs.core.truth_(rule)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "rule", "rule", -1924462512, null)))].join(""));
  }
  if (cljs.core.fn_QMARK_.call(null, rule)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), new cljs.core.Symbol(null, "rule", "rule", -1924462512, null))))].join(""));
  }
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "callers", "callers", -1991542784), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, 
  "pulse-last-changed", "pulse-last-changed", 1035703380), new cljs.core.Keyword(null, "pulse", "pulse", -244494476), new cljs.core.Keyword(null, "useds", "useds", 621350967), new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), new cljs.core.Keyword(null, "input?", "input?", -1792843173)], [cljs.core.PersistentHashSet.EMPTY, tiltontec.cell.base.unbound, false, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), 0, false, 0, 0, cljs.core.PersistentHashSet.EMPTY, true, false]), 
  options), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)], null));
};
tiltontec.cell.core.make_c_formula.cljs$lang$maxFixedArity = 0;
tiltontec.cell.core.make_c_formula.cljs$lang$applyTo = function(seq34306) {
  return tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq34306));
};
tiltontec.cell.core.c_fn_var = function tiltontec$cell$core$c_fn_var() {
  var args__5600__auto__ = [];
  var len__5593__auto___34316 = arguments.length;
  var i__5594__auto___34317 = 0;
  while (true) {
    if (i__5594__auto___34317 < len__5593__auto___34316) {
      args__5600__auto__.push(arguments[i__5594__auto___34317]);
      var G__34318 = i__5594__auto___34317 + 1;
      i__5594__auto___34317 = G__34318;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34314, body) {
  var vec__34315 = p__34314;
  var c = cljs.core.nth.call(null, vec__34315, 0, null);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, c)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-model", "tiltontec.cell.base/c-model", 566190580, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, c))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "cache", "cache", 403508473, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-value", "tiltontec.cell.base/c-value", -808509395, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, c)))))))))), body)))))));
};
tiltontec.cell.core.c_fn_var.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_fn_var.cljs$lang$applyTo = function(seq34310) {
  var G__34311 = cljs.core.first.call(null, seq34310);
  var seq34310__$1 = cljs.core.next.call(null, seq34310);
  var G__34312 = cljs.core.first.call(null, seq34310__$1);
  var seq34310__$2 = cljs.core.next.call(null, seq34310__$1);
  var G__34313 = cljs.core.first.call(null, seq34310__$2);
  var seq34310__$3 = cljs.core.next.call(null, seq34310__$2);
  return tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic(G__34311, G__34312, G__34313, seq34310__$3);
};
tiltontec.cell.core.c_fn_var.cljs$lang$macro = true;
tiltontec.cell.core.c_fn = function tiltontec$cell$core$c_fn() {
  var args__5600__auto__ = [];
  var len__5593__auto___34322 = arguments.length;
  var i__5594__auto___34323 = 0;
  while (true) {
    if (i__5594__auto___34323 < len__5593__auto___34322) {
      args__5600__auto__.push(arguments[i__5594__auto___34323]);
      var G__34324 = i__5594__auto___34323 + 1;
      i__5594__auto___34323 = G__34324;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn-var", "tiltontec.cell.core/c-fn-var", -1960595436, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot-c#", "slot-c#", 1084398166, null)))))), 
  body)));
};
tiltontec.cell.core.c_fn.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_fn.cljs$lang$applyTo = function(seq34319) {
  var G__34320 = cljs.core.first.call(null, seq34319);
  var seq34319__$1 = cljs.core.next.call(null, seq34319);
  var G__34321 = cljs.core.first.call(null, seq34319__$1);
  var seq34319__$2 = cljs.core.next.call(null, seq34319__$1);
  return tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic(G__34320, G__34321, seq34319__$2);
};
tiltontec.cell.core.c_fn.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_ = function tiltontec$cell$core$c_QMARK_() {
  var args__5600__auto__ = [];
  var len__5593__auto___34328 = arguments.length;
  var i__5594__auto___34329 = 0;
  while (true) {
    if (i__5594__auto___34329 < len__5593__auto___34328) {
      args__5600__auto__.push(arguments[i__5594__auto___34329]);
      var G__34330 = i__5594__auto___34329 + 1;
      i__5594__auto___34329 = G__34330;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 
  729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK_.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_.cljs$lang$applyTo = function(seq34325) {
  var G__34326 = cljs.core.first.call(null, seq34325);
  var seq34325__$1 = cljs.core.next.call(null, seq34325);
  var G__34327 = cljs.core.first.call(null, seq34325__$1);
  var seq34325__$2 = cljs.core.next.call(null, seq34325__$1);
  return tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__34326, G__34327, seq34325__$2);
};
tiltontec.cell.core.c_QMARK_.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__PLUS_ = function tiltontec$cell$core$c_QMARK__PLUS_() {
  var args__5600__auto__ = [];
  var len__5593__auto___34337 = arguments.length;
  var i__5594__auto___34338 = 0;
  while (true) {
    if (i__5594__auto___34338 < len__5593__auto___34337) {
      args__5600__auto__.push(arguments[i__5594__auto___34338]);
      var G__34339 = i__5594__auto___34338 + 1;
      i__5594__auto___34338 = G__34339;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34335, body) {
  var vec__34336 = p__34335;
  var options = cljs.core.nthnext.call(null, vec__34336, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$applyTo = function(seq34331) {
  var G__34332 = cljs.core.first.call(null, seq34331);
  var seq34331__$1 = cljs.core.next.call(null, seq34331);
  var G__34333 = cljs.core.first.call(null, seq34331__$1);
  var seq34331__$2 = cljs.core.next.call(null, seq34331__$1);
  var G__34334 = cljs.core.first.call(null, seq34331__$2);
  var seq34331__$3 = cljs.core.next.call(null, seq34331__$2);
  return tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__34332, G__34333, G__34334, seq34331__$3);
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__PLUS_n = function tiltontec$cell$core$c_QMARK__PLUS_n() {
  var args__5600__auto__ = [];
  var len__5593__auto___34343 = arguments.length;
  var i__5594__auto___34344 = 0;
  while (true) {
    if (i__5594__auto___34344 < len__5593__auto___34343) {
      args__5600__auto__.push(arguments[i__5594__auto___34344]);
      var G__34345 = i__5594__auto___34344 + 1;
      i__5594__auto___34344 = G__34345;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$applyTo = function(seq34340) {
  var G__34341 = cljs.core.first.call(null, seq34340);
  var seq34340__$1 = cljs.core.next.call(null, seq34340);
  var G__34342 = cljs.core.first.call(null, seq34340__$1);
  var seq34340__$2 = cljs.core.next.call(null, seq34340__$1);
  return tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic(G__34341, G__34342, seq34340__$2);
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n = function tiltontec$cell$core$c_QMARK_n() {
  var args__5600__auto__ = [];
  var len__5593__auto___34349 = arguments.length;
  var i__5594__auto___34350 = 0;
  while (true) {
    if (i__5594__auto___34350 < len__5593__auto___34349) {
      args__5600__auto__.push(arguments[i__5594__auto___34350]);
      var G__34351 = i__5594__auto___34350 + 1;
      i__5594__auto___34350 = G__34351;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, 
  null)), body)))))))))));
};
tiltontec.cell.core.c_QMARK_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_n.cljs$lang$applyTo = function(seq34346) {
  var G__34347 = cljs.core.first.call(null, seq34346);
  var seq34346__$1 = cljs.core.next.call(null, seq34346);
  var G__34348 = cljs.core.first.call(null, seq34346__$1);
  var seq34346__$2 = cljs.core.next.call(null, seq34346__$1);
  return tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic(G__34347, G__34348, seq34346__$2);
};
tiltontec.cell.core.c_QMARK_n.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_n = function tiltontec$cell$core$c__QMARK_n() {
  var args__5600__auto__ = [];
  var len__5593__auto___34355 = arguments.length;
  var i__5594__auto___34356 = 0;
  while (true) {
    if (i__5594__auto___34356 < len__5593__auto___34355) {
      args__5600__auto__.push(arguments[i__5594__auto___34356]);
      var G__34357 = i__5594__auto___34356 + 1;
      i__5594__auto___34356 = G__34357;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))))));
};
tiltontec.cell.core.c__QMARK_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c__QMARK_n.cljs$lang$applyTo = function(seq34352) {
  var G__34353 = cljs.core.first.call(null, seq34352);
  var seq34352__$1 = cljs.core.next.call(null, seq34352);
  var G__34354 = cljs.core.first.call(null, seq34352__$1);
  var seq34352__$2 = cljs.core.next.call(null, seq34352__$1);
  return tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic(G__34353, G__34354, seq34352__$2);
};
tiltontec.cell.core.c__QMARK_n.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n_dbg = function tiltontec$cell$core$c_QMARK_n_dbg() {
  var args__5600__auto__ = [];
  var len__5593__auto___34361 = arguments.length;
  var i__5594__auto___34362 = 0;
  while (true) {
    if (i__5594__auto___34362 < len__5593__auto___34361) {
      args__5600__auto__.push(arguments[i__5594__auto___34362]);
      var G__34363 = i__5594__auto___34362 + 1;
      i__5594__auto___34362 = G__34363;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, 
  null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))))));
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$applyTo = function(seq34358) {
  var G__34359 = cljs.core.first.call(null, seq34358);
  var seq34358__$1 = cljs.core.next.call(null, seq34358);
  var G__34360 = cljs.core.first.call(null, seq34358__$1);
  var seq34358__$2 = cljs.core.next.call(null, seq34358__$1);
  return tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic(G__34359, G__34360, seq34358__$2);
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n_until = function tiltontec$cell$core$c_QMARK_n_until() {
  var args__5600__auto__ = [];
  var len__5593__auto___34368 = arguments.length;
  var i__5594__auto___34369 = 0;
  while (true) {
    if (i__5594__auto___34369 < len__5593__auto___34368) {
      args__5600__auto__.push(arguments[i__5594__auto___34369]);
      var G__34370 = i__5594__auto___34369 + 1;
      i__5594__auto___34369 = G__34370;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, args, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "optimize", "optimize", -1912349448)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))), args)));
};
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$applyTo = function(seq34364) {
  var G__34365 = cljs.core.first.call(null, seq34364);
  var seq34364__$1 = cljs.core.next.call(null, seq34364);
  var G__34366 = cljs.core.first.call(null, seq34364__$1);
  var seq34364__$2 = cljs.core.next.call(null, seq34364__$1);
  var G__34367 = cljs.core.first.call(null, seq34364__$2);
  var seq34364__$3 = cljs.core.next.call(null, seq34364__$2);
  return tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic(G__34365, G__34366, G__34367, seq34364__$3);
};
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_once = function tiltontec$cell$core$c_QMARK_once() {
  var args__5600__auto__ = [];
  var len__5593__auto___34374 = arguments.length;
  var i__5594__auto___34375 = 0;
  while (true) {
    if (i__5594__auto___34375 < len__5593__auto___34374) {
      args__5600__auto__.push(arguments[i__5594__auto___34375]);
      var G__34376 = i__5594__auto___34375 + 1;
      i__5594__auto___34375 = G__34376;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, 
  null)), body)))))))))));
};
tiltontec.cell.core.c_QMARK_once.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_once.cljs$lang$applyTo = function(seq34371) {
  var G__34372 = cljs.core.first.call(null, seq34371);
  var seq34371__$1 = cljs.core.next.call(null, seq34371);
  var G__34373 = cljs.core.first.call(null, seq34371__$1);
  var seq34371__$2 = cljs.core.next.call(null, seq34371__$1);
  return tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic(G__34372, G__34373, seq34371__$2);
};
tiltontec.cell.core.c_QMARK_once.cljs$lang$macro = true;
tiltontec.cell.core.c_1 = function tiltontec$cell$core$c_1() {
  var args__5600__auto__ = [];
  var len__5593__auto___34380 = arguments.length;
  var i__5594__auto___34381 = 0;
  while (true) {
    if (i__5594__auto___34381 < len__5593__auto___34380) {
      args__5600__auto__.push(arguments[i__5594__auto___34381]);
      var G__34382 = i__5594__auto___34381 + 1;
      i__5594__auto___34381 = G__34382;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))))));
};
tiltontec.cell.core.c_1.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_1.cljs$lang$applyTo = function(seq34377) {
  var G__34378 = cljs.core.first.call(null, seq34377);
  var seq34377__$1 = cljs.core.next.call(null, seq34377);
  var G__34379 = cljs.core.first.call(null, seq34377__$1);
  var seq34377__$2 = cljs.core.next.call(null, seq34377__$1);
  return tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic(G__34378, G__34379, seq34377__$2);
};
tiltontec.cell.core.c_1.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_1 = function tiltontec$cell$core$c_QMARK_1() {
  var args__5600__auto__ = [];
  var len__5593__auto___34386 = arguments.length;
  var i__5594__auto___34387 = 0;
  while (true) {
    if (i__5594__auto___34387 < len__5593__auto___34386) {
      args__5600__auto__.push(arguments[i__5594__auto___34387]);
      var G__34388 = i__5594__auto___34387 + 1;
      i__5594__auto___34387 = G__34388;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c?once", "tiltontec.cell.core/c?once", 88229667, null)), body)));
};
tiltontec.cell.core.c_QMARK_1.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_1.cljs$lang$applyTo = function(seq34383) {
  var G__34384 = cljs.core.first.call(null, seq34383);
  var seq34383__$1 = cljs.core.next.call(null, seq34383);
  var G__34385 = cljs.core.first.call(null, seq34383__$1);
  var seq34383__$2 = cljs.core.next.call(null, seq34383__$1);
  return tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic(G__34384, G__34385, seq34383__$2);
};
tiltontec.cell.core.c_QMARK_1.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_dbg = function tiltontec$cell$core$c_QMARK_dbg() {
  var args__5600__auto__ = [];
  var len__5593__auto___34392 = arguments.length;
  var i__5594__auto___34393 = 0;
  while (true) {
    if (i__5594__auto___34393 < len__5593__auto___34392) {
      args__5600__auto__.push(arguments[i__5594__auto___34393]);
      var G__34394 = i__5594__auto___34393 + 1;
      i__5594__auto___34393 = G__34394;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", 
  -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$applyTo = function(seq34389) {
  var G__34390 = cljs.core.first.call(null, seq34389);
  var seq34389__$1 = cljs.core.next.call(null, seq34389);
  var G__34391 = cljs.core.first.call(null, seq34389__$1);
  var seq34389__$2 = cljs.core.next.call(null, seq34389__$1);
  return tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(G__34390, G__34391, seq34389__$2);
};
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__ = function tiltontec$cell$core$c_QMARK__() {
  var args__5600__auto__ = [];
  var len__5593__auto___34401 = arguments.length;
  var i__5594__auto___34402 = 0;
  while (true) {
    if (i__5594__auto___34402 < len__5593__auto___34401) {
      args__5600__auto__.push(arguments[i__5594__auto___34402]);
      var G__34403 = i__5594__auto___34402 + 1;
      i__5594__auto___34402 = G__34403;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34399, body) {
  var vec__34400 = p__34399;
  var options = cljs.core.nthnext.call(null, vec__34400, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK__.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK__.cljs$lang$applyTo = function(seq34395) {
  var G__34396 = cljs.core.first.call(null, seq34395);
  var seq34395__$1 = cljs.core.next.call(null, seq34395);
  var G__34397 = cljs.core.first.call(null, seq34395__$1);
  var seq34395__$2 = cljs.core.next.call(null, seq34395__$1);
  var G__34398 = cljs.core.first.call(null, seq34395__$2);
  var seq34395__$3 = cljs.core.next.call(null, seq34395__$2);
  return tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic(G__34396, G__34397, G__34398, seq34395__$3);
};
tiltontec.cell.core.c_QMARK__.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_ = function tiltontec$cell$core$c__QMARK_() {
  var args__5600__auto__ = [];
  var len__5593__auto___34410 = arguments.length;
  var i__5594__auto___34411 = 0;
  while (true) {
    if (i__5594__auto___34411 < len__5593__auto___34410) {
      args__5600__auto__.push(arguments[i__5594__auto___34411]);
      var G__34412 = i__5594__auto___34411 + 1;
      i__5594__auto___34411 = G__34412;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34408, body) {
  var vec__34409 = p__34408;
  var options = cljs.core.nthnext.call(null, vec__34409, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 
  1198019642, null)), body)))))));
};
tiltontec.cell.core.c__QMARK_.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c__QMARK_.cljs$lang$applyTo = function(seq34404) {
  var G__34405 = cljs.core.first.call(null, seq34404);
  var seq34404__$1 = cljs.core.next.call(null, seq34404);
  var G__34406 = cljs.core.first.call(null, seq34404__$1);
  var seq34404__$2 = cljs.core.next.call(null, seq34404__$1);
  var G__34407 = cljs.core.first.call(null, seq34404__$2);
  var seq34404__$3 = cljs.core.next.call(null, seq34404__$2);
  return tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__34405, G__34406, G__34407, seq34404__$3);
};
tiltontec.cell.core.c__QMARK_.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_dbg = function tiltontec$cell$core$c__QMARK_dbg() {
  var args__5600__auto__ = [];
  var len__5593__auto___34416 = arguments.length;
  var i__5594__auto___34417 = 0;
  while (true) {
    if (i__5594__auto___34417 < len__5593__auto___34416) {
      args__5600__auto__.push(arguments[i__5594__auto___34417]);
      var G__34418 = i__5594__auto___34417 + 1;
      i__5594__auto___34417 = G__34418;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", 
  -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 
  1198019642, null)), body)))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true))));
};
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$applyTo = function(seq34413) {
  var G__34414 = cljs.core.first.call(null, seq34413);
  var seq34413__$1 = cljs.core.next.call(null, seq34413);
  var G__34415 = cljs.core.first.call(null, seq34413__$1);
  var seq34413__$2 = cljs.core.next.call(null, seq34413__$1);
  return tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(G__34414, G__34415, seq34413__$2);
};
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_formula = function tiltontec$cell$core$c_formula() {
  var args__5600__auto__ = [];
  var len__5593__auto___34425 = arguments.length;
  var i__5594__auto___34426 = 0;
  while (true) {
    if (i__5594__auto___34426 < len__5593__auto___34425) {
      args__5600__auto__.push(arguments[i__5594__auto___34426]);
      var G__34427 = i__5594__auto___34426 + 1;
      i__5594__auto___34426 = G__34427;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34423, body) {
  var vec__34424 = p__34423;
  var kvs = cljs.core.nthnext.call(null, vec__34424, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 
  729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))), cljs.core.keys)));
};
tiltontec.cell.core.c_formula.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_formula.cljs$lang$applyTo = function(seq34419) {
  var G__34420 = cljs.core.first.call(null, seq34419);
  var seq34419__$1 = cljs.core.next.call(null, seq34419);
  var G__34421 = cljs.core.first.call(null, seq34419__$1);
  var seq34419__$2 = cljs.core.next.call(null, seq34419__$1);
  var G__34422 = cljs.core.first.call(null, seq34419__$2);
  var seq34419__$3 = cljs.core.next.call(null, seq34419__$2);
  return tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic(G__34420, G__34421, G__34422, seq34419__$3);
};
tiltontec.cell.core.c_formula.cljs$lang$macro = true;
tiltontec.cell.core.c_in = function tiltontec$cell$core$c_in() {
  var args__5600__auto__ = [];
  var len__5593__auto___34430 = arguments.length;
  var i__5594__auto___34431 = 0;
  while (true) {
    if (i__5594__auto___34431 < len__5593__auto___34430) {
      args__5600__auto__.push(arguments[i__5594__auto___34431]);
      var G__34432 = i__5594__auto___34431 + 1;
      i__5594__auto___34431 = G__34432;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic = function(value, option_kvs) {
  return cljs.core.apply.call(null, tiltontec.cell.core.make_cell, cljs.core.list_STAR_.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "input?", "input?", -1792843173), true, option_kvs));
};
tiltontec.cell.core.c_in.cljs$lang$maxFixedArity = 1;
tiltontec.cell.core.c_in.cljs$lang$applyTo = function(seq34428) {
  var G__34429 = cljs.core.first.call(null, seq34428);
  var seq34428__$1 = cljs.core.next.call(null, seq34428);
  return tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic(G__34429, seq34428__$1);
};
tiltontec.cell.core.c_reset_BANG_ = function tiltontec$cell$core$c_reset_BANG_(c, new_value) {
  if (cljs.core.truth_(c)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "c", "c", -122660552, null)))].join(""));
  }
  if (cljs.core.truth_(tiltontec.cell.base._STAR_defer_changes_STAR_)) {
    throw new Error("c-reset!\x3e change to %s must be deferred by wrapping it in WITH-INTEGRITY", tiltontec.cell.base.c_slot.call(null, c));
  } else {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null)))) {
      return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
    } else {
      return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), tiltontec.cell.base.c_slot.call(null, c), function(opcode, defer_info) {
        return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
      });
    }
  }
};
tiltontec.cell.core.c_reset_next_BANG_ = function tiltontec$cell$core$c_reset_next_BANG_(_AMPERSAND_form, _AMPERSAND_env, f_c, f_new_value) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "cond", "cljs.core/cond", 2005388338, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "*within-integrity*", "tiltontec.cell.core/*within-integrity*", 1558832389, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "throw", "throw", 595905694, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, "c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision."), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "c-slot", "tiltontec.cell.base/c-slot", 1453031347, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_c))))))))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "else", "else", -1508377146)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "ufb-add", "tiltontec.cell.core/ufb-add", 
  1421793642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "change", "change", -1163046502)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, 
  "defer-info", "defer-info", -446799704, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  new cljs.core.Symbol(null, "c__34433__auto__", "c__34433__auto__", 1299129341, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_c), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new-value__34434__auto__", "new-value__34434__auto__", 2067253748, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_new_value)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "call-c-reset-next!", "tiltontec.cell.core/call-c-reset-next!", -970475516, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c__34433__auto__", "c__34433__auto__", 1299129341, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new-value__34434__auto__", "new-value__34434__auto__", 2067253748, null))))))))))))))))))))))))));
};
tiltontec.cell.core.c_reset_next_BANG_.cljs$lang$macro = true;
tiltontec.cell.core.call_c_reset_next_BANG_ = function tiltontec$cell$core$call_c_reset_next_BANG_(c, new_value) {
  if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null)))) {
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
  } else {
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
  }
};
goog.provide("tiltontec.model.macros");
goog.require("cljs.core");
goog.require("tiltontec.cell.base");
tiltontec.model.macros.pme = function tiltontec$model$macros$pme() {
  var args__5600__auto__ = [];
  var len__5593__auto___34046 = arguments.length;
  var i__5594__auto___34047 = 0;
  while (true) {
    if (i__5594__auto___34047 < len__5593__auto___34046) {
      args__5600__auto__.push(arguments[i__5594__auto___34047]);
      var G__34048 = i__5594__auto___34047 + 1;
      i__5594__auto___34047 = G__34048;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.model.macros.pme.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.model.macros.pme.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, mas) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "println", "cljs.core/println", -331834442, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, 
  null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)))))), mas)));
};
tiltontec.model.macros.pme.cljs$lang$maxFixedArity = 2;
tiltontec.model.macros.pme.cljs$lang$applyTo = function(seq34043) {
  var G__34044 = cljs.core.first.call(null, seq34043);
  var seq34043__$1 = cljs.core.next.call(null, seq34043);
  var G__34045 = cljs.core.first.call(null, seq34043__$1);
  var seq34043__$2 = cljs.core.next.call(null, seq34043__$1);
  return tiltontec.model.macros.pme.cljs$core$IFn$_invoke$arity$variadic(G__34044, G__34045, seq34043__$2);
};
tiltontec.model.macros.pme.cljs$lang$macro = true;
goog.provide("tiltontec.model.base");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.model.macros");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.base.md_name = function tiltontec$model$base$md_name(ref) {
  return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.model.base.md_state = function tiltontec$model$base$md_state(ref) {
  return (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, ref));
};
tiltontec.model.base.md_cz = function tiltontec$model$base$md_cz(ref) {
  return (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, ref));
};
tiltontec.model.base.md_cell = function tiltontec$model$base$md_cell(me, slot) {
  return slot.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me)));
};
tiltontec.model.base.md_install_cell = function tiltontec$model$base$md_install_cell(me, slot, c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "slot", "slot", 240229571), slot, new cljs.core.Keyword(null, "me", "me", -139006693), me);
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), cljs.core.truth_(tiltontec.cell.base.c_input_QMARK_.call(null, c)) ? tiltontec.cell.base.c_value.call(null, c) : null);
    return true;
  } else {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), c);
    return false;
  }
};
if (typeof tiltontec.model.base.md_awaken_before !== "undefined") {
} else {
  tiltontec.model.base.md_awaken_before = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.model.base", "md-awaken-before"), tiltontec.cell.base.ia_type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.model.base.md_awaken_before, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return cljs.core.println.call(null, new cljs.core.Keyword(null, "awaken-before-default!!!!!!!!!!!!", "awaken-before-default!!!!!!!!!!!!", -712874669), tiltontec.cell.base.ia_type.call(null, me));
});
tiltontec.model.base.md_awaken = function tiltontec$model$base$md_awaken(me) {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "md-awaken!!!!!!!!", "md-awaken!!!!!!!!", 893416337), tiltontec.cell.base.ia_type.call(null, me));
  tiltontec.model.base.md_awaken_before.call(null, me);
  cljs.core.println.call(null, tiltontec.cell.base.ia_type.call(null, me), new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), tiltontec.model.base.md_state.call(null, me));
  tiltontec.cell.base.c_assert.call(null, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), tiltontec.model.base.md_state.call(null, me)));
  tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "awakening", "awakening", 838364227));
  cljs.core.doall.call(null, function() {
    var iter__5307__auto__ = function tiltontec$model$base$md_awaken_$_iter__34441(s__34442) {
      return new cljs.core.LazySeq(null, function() {
        var s__34442__$1 = s__34442;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__34442__$1);
          if (temp__4425__auto__) {
            var s__34442__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__34442__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__34442__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__34444 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__34443 = 0;
                while (true) {
                  if (i__34443 < size__5306__auto__) {
                    var slot = cljs.core._nth.call(null, c__5305__auto__, i__34443);
                    cljs.core.chunk_append.call(null, b__34444, function() {
                      var c = slot.call(null, tiltontec.model.base.md_cz.call(null, me));
                      if (cljs.core.truth_(c)) {
                        tiltontec.util.base.call_trc.call(null, ":md-awaken-awks-cell", slot, tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_md_name.call(null, c));
                        return tiltontec.cell.evaluate.c_awaken.call(null, c);
                      } else {
                        return tiltontec.cell.observer.observe.call(null, slot, me, slot.call(null, cljs.core.deref.call(null, me)), tiltontec.cell.base.unbound, null);
                      }
                    }());
                    var G__34445 = i__34443 + 1;
                    i__34443 = G__34445;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34444), tiltontec$model$base$md_awaken_$_iter__34441.call(null, cljs.core.chunk_rest.call(null, s__34442__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34444), null);
              }
            } else {
              var slot = cljs.core.first.call(null, s__34442__$2);
              return cljs.core.cons.call(null, function() {
                var c = slot.call(null, tiltontec.model.base.md_cz.call(null, me));
                if (cljs.core.truth_(c)) {
                  tiltontec.util.base.call_trc.call(null, ":md-awaken-awks-cell", slot, tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_md_name.call(null, c));
                  return tiltontec.cell.evaluate.c_awaken.call(null, c);
                } else {
                  return tiltontec.cell.observer.observe.call(null, slot, me, slot.call(null, cljs.core.deref.call(null, me)), tiltontec.cell.base.unbound, null);
                }
              }(), tiltontec$model$base$md_awaken_$_iter__34441.call(null, cljs.core.rest.call(null, s__34442__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, me)));
  }());
  tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
  return me;
};
tiltontec.model.base.md_getx = function tiltontec$model$base$md_getx(tag, me, slot) {
  return tiltontec.util.base.call_wtrx.call(null, function() {
    var temp__4423__auto__ = tiltontec.model.base.md_cell.call(null, me, slot);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var c = temp__4423__auto__;
      return tiltontec.cell.evaluate.c_get.call(null, c);
    } else {
      return slot.call(null, cljs.core.deref.call(null, me));
    }
  }, 0, 100, cljs.core._conj.call(null, cljs.core.List.EMPTY, [cljs.core.str("md-getx "), cljs.core.str(tag), cljs.core.str(slot), cljs.core.str(tiltontec.cell.base.ia_type.call(null, me))].join("")));
};
tiltontec.model.base.md_get = function tiltontec$model$base$md_get(me, slot) {
  var temp__4423__auto__ = tiltontec.model.base.md_cell.call(null, me, slot);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var c = temp__4423__auto__;
    return tiltontec.cell.evaluate.c_get.call(null, c);
  } else {
    return slot.call(null, cljs.core.deref.call(null, me));
  }
};
goog.provide("tiltontec.qxia.base");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.util.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.model.base");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
cljs.core.enable_console_print_BANG_.call(null);
tiltontec.qxia.base.app_routing = function tiltontec$qxia$base$app_routing() {
  var app = qx.core.Init.getApplication();
  cljs.core.println.call(null, new cljs.core.Keyword(null, "app!!!", "app!!!", -1265456556), app);
  return app.getRouting();
};
tiltontec.qxia.base.qxia_type_to_qx_class = function tiltontec$qxia$base$qxia_type_to_qx_class(type) {
  var G__34546 = type instanceof cljs.core.Keyword ? type.fqn : null;
  switch(G__34546) {
    case "tiltontec.qxia.types/m.Picker":
      return qx.ui.mobile.control.Picker;
      break;
    case "tiltontec.qxia.types/m.PasswordField":
      return qx.ui.mobile.form.PasswordField;
      break;
    case "tiltontec.qxia.types/Mobile":
      return qx.application.Mobile;
      break;
    case "tiltontec.qxia.types/m.Button":
      return qx.ui.mobile.form.Button;
      break;
    case "tiltontec.qxia.types/m.Atom":
      return qx.ui.mobile.basic.Atom;
      break;
    case "tiltontec.qxia.types/m.Carousel":
      return qx.ui.mobile.container.Carousel;
      break;
    case "tiltontec.qxia.types/m.Label":
      return qx.ui.mobile.basic.Label;
      break;
    case "tiltontec.qxia.types/m.TextField":
      return qx.ui.mobile.form.TextField;
      break;
    case "tiltontec.qxia.types/ml.VBox":
      return qx.ui.mobile.layout.VBox;
      break;
    case "tiltontec.qxia.types/m.NavigationPage":
      return identica.NaviBack;
      break;
    case "tiltontec.qxia.types/ml.HBox":
      return qx.ui.mobile.layout.HBox;
      break;
    case "tiltontec.qxia.types/m.Form":
      return qx.ui.mobile.form.Form;
      break;
    case "tiltontec.qxia.types/m.Composite":
      return qx.ui.mobile.container.Composite;
      break;
    case "tiltontec.qxia.types/m.Single":
      return qx.ui.mobile.form.renderer.Single;
      break;
    case "tiltontec.qxia.types/m.Image":
      return qx.ui.mobile.basic.Image;
      break;
    default:
      throw new Error([cljs.core.str("qxia-type-to-qx-class does not know about "), cljs.core.str(type)].join(""));;
  }
};
tiltontec.qxia.base.qx_class_new = function tiltontec$qxia$base$qx_class_new(type, iargs) {
  var G__34549 = type instanceof cljs.core.Keyword ? type.fqn : null;
  switch(G__34549) {
    case "tiltontec.qxia.types/Mobile":
      return null;
      break;
    case "tiltontec.qxia.types/m.Single":
      return null;
      break;
    default:
      var temp__4423__auto__ = function() {
        var or__4554__auto__ = cljs.core.contains_QMARK_.call(null, iargs, new cljs.core.Keyword(null, "class", "class", -2030961996)) ? function() {
          var qx_class = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(iargs);
          if (cljs.core.truth_(qx_class)) {
          } else {
            cljs.core.println.call(null, [cljs.core.str("ERROR! qx-class-new\x3e key class specified but nil "), cljs.core.str("Do we need a new qx class mention in Application.")].join(""));
            throw Error;
          }
          return qx_class;
        }() : null;
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return tiltontec.qxia.base.qxia_type_to_qx_class.call(null, type);
        }
      }();
      if (cljs.core.truth_(temp__4423__auto__)) {
        var qx_class = temp__4423__auto__;
        return cljs.core.apply.call(null, MyTerop.make, qx_class, (new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)).cljs$core$IFn$_invoke$arity$1(iargs));
      } else {
        throw new Error([cljs.core.str("qx-class-new does not know about "), cljs.core.str(type)].join(""));
      }
    ;
  }
};
cljs.core._add_method.call(null, tiltontec.model.base.md_awaken_before, new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520), function(me) {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "awk-before!!!", "awk-before!!!", -1278865992), tiltontec.cell.base.ia_type.call(null, me));
  if (cljs.core.truth_(tiltontec.qxia.base.qxia_type_to_qx_class.call(null, tiltontec.cell.base.ia_type.call(null, me)))) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "0-make-qx", "0-make-qx", 1229540278), me], null), function(opcode, defer_info) {
      cljs.core.println.call(null, new cljs.core.Keyword(null, "qxia-obj-gets-its:obj!!!", "qxia-obj-gets-its:obj!!!", -1573580086), tiltontec.cell.base.ia_type.call(null, me));
      return cljs.core.swap_BANG_.call(null, me, cljs.core.assoc, new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), tiltontec.qxia.base.qx_class_new.call(null, tiltontec.cell.base.ia_type.call(null, me), (new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me))));
    });
  } else {
    return null;
  }
});
tiltontec.qxia.base._PLUS_qxl_client_task_priority_PLUS_ = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "0-make-qx", "0-make-qx", 1229540278), new cljs.core.Keyword(null, "1-layout", "1-layout", 603251836), new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), new cljs.core.Keyword(null, "3-post-assembly", "3-post-assembly", -607469254)], null);
tiltontec.qxia.base.qxia_q_handler = function tiltontec$qxia$base$qxia_q_handler(user_q) {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "qxia-handler!!!!!!!!!!!!!!!!!!!!!!!", "qxia-handler!!!!!!!!!!!!!!!!!!!!!!!", 1093525573));
  var seq__34565_34579 = cljs.core.seq.call(null, tiltontec.util.core.fifo_data.call(null, user_q));
  var chunk__34566_34580 = null;
  var count__34567_34581 = 0;
  var i__34568_34582 = 0;
  while (true) {
    if (i__34568_34582 < count__34567_34581) {
      var vec__34569_34583 = cljs.core._nth.call(null, chunk__34566_34580, i__34568_34582);
      var vec__34570_34584 = cljs.core.nth.call(null, vec__34569_34583, 0, null);
      var qx_defer_code_34585 = cljs.core.nth.call(null, vec__34570_34584, 0, null);
      var me_34586 = cljs.core.nth.call(null, vec__34570_34584, 1, null);
      var task_34587 = cljs.core.nth.call(null, vec__34569_34583, 1, null);
      if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([qx_defer_code_34585], true), tiltontec.qxia.base._PLUS_qxl_client_task_priority_PLUS_))) {
      } else {
        throw Error;
      }
      var G__34588 = seq__34565_34579;
      var G__34589 = chunk__34566_34580;
      var G__34590 = count__34567_34581;
      var G__34591 = i__34568_34582 + 1;
      seq__34565_34579 = G__34588;
      chunk__34566_34580 = G__34589;
      count__34567_34581 = G__34590;
      i__34568_34582 = G__34591;
      continue;
    } else {
      var temp__4425__auto___34592 = cljs.core.seq.call(null, seq__34565_34579);
      if (temp__4425__auto___34592) {
        var seq__34565_34593__$1 = temp__4425__auto___34592;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__34565_34593__$1)) {
          var c__5338__auto___34594 = cljs.core.chunk_first.call(null, seq__34565_34593__$1);
          var G__34595 = cljs.core.chunk_rest.call(null, seq__34565_34593__$1);
          var G__34596 = c__5338__auto___34594;
          var G__34597 = cljs.core.count.call(null, c__5338__auto___34594);
          var G__34598 = 0;
          seq__34565_34579 = G__34595;
          chunk__34566_34580 = G__34596;
          count__34567_34581 = G__34597;
          i__34568_34582 = G__34598;
          continue;
        } else {
          var vec__34571_34599 = cljs.core.first.call(null, seq__34565_34593__$1);
          var vec__34572_34600 = cljs.core.nth.call(null, vec__34571_34599, 0, null);
          var qx_defer_code_34601 = cljs.core.nth.call(null, vec__34572_34600, 0, null);
          var me_34602 = cljs.core.nth.call(null, vec__34572_34600, 1, null);
          var task_34603 = cljs.core.nth.call(null, vec__34571_34599, 1, null);
          if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([qx_defer_code_34601], true), tiltontec.qxia.base._PLUS_qxl_client_task_priority_PLUS_))) {
          } else {
            throw Error;
          }
          var G__34604 = cljs.core.next.call(null, seq__34565_34593__$1);
          var G__34605 = null;
          var G__34606 = 0;
          var G__34607 = 0;
          seq__34565_34579 = G__34604;
          chunk__34566_34580 = G__34605;
          count__34567_34581 = G__34606;
          i__34568_34582 = G__34607;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__34573 = cljs.core.seq.call(null, tiltontec.util.base.prog1.call(null, cljs.core.sort_by.call(null, tiltontec.util.core.fifo_data.call(null, user_q), cljs.core.ffirst), tiltontec.util.core.fifo_clear.call(null, user_q)));
  var chunk__34574 = null;
  var count__34575 = 0;
  var i__34576 = 0;
  while (true) {
    if (i__34576 < count__34575) {
      var vec__34577 = cljs.core._nth.call(null, chunk__34574, i__34576);
      var defer_info = cljs.core.nth.call(null, vec__34577, 0, null);
      var task = cljs.core.nth.call(null, vec__34577, 1, null);
      task.call(null, new cljs.core.Keyword(null, "client-q", "client-q", -1752740110), defer_info);
      var G__34608 = seq__34573;
      var G__34609 = chunk__34574;
      var G__34610 = count__34575;
      var G__34611 = i__34576 + 1;
      seq__34573 = G__34608;
      chunk__34574 = G__34609;
      count__34575 = G__34610;
      i__34576 = G__34611;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__34573);
      if (temp__4425__auto__) {
        var seq__34573__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__34573__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__34573__$1);
          var G__34612 = cljs.core.chunk_rest.call(null, seq__34573__$1);
          var G__34613 = c__5338__auto__;
          var G__34614 = cljs.core.count.call(null, c__5338__auto__);
          var G__34615 = 0;
          seq__34573 = G__34612;
          chunk__34574 = G__34613;
          count__34575 = G__34614;
          i__34576 = G__34615;
          continue;
        } else {
          var vec__34578 = cljs.core.first.call(null, seq__34573__$1);
          var defer_info = cljs.core.nth.call(null, vec__34578, 0, null);
          var task = cljs.core.nth.call(null, vec__34578, 1, null);
          task.call(null, new cljs.core.Keyword(null, "client-q", "client-q", -1752740110), defer_info);
          var G__34616 = cljs.core.next.call(null, seq__34573__$1);
          var G__34617 = null;
          var G__34618 = 0;
          var G__34619 = 0;
          seq__34573 = G__34616;
          chunk__34574 = G__34617;
          count__34575 = G__34618;
          i__34576 = G__34619;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_, tiltontec.qxia.base.qxia_q_handler);
if (typeof tiltontec.qxia.base.qx_initialize !== "undefined") {
} else {
  tiltontec.qxia.base.qx_initialize = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.qxia.base", "qx-initialize"), tiltontec.cell.base.ia_type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return null;
});
tiltontec.qxia.base.qx_obj_properties = function tiltontec$qxia$base$qx_obj_properties(me) {
  return cljs.core.map.call(null, cljs.core.keyword, qx.Class.getProperties(function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return tiltontec.qxia.base.qxia_type_to_qx_class.call(null, tiltontec.cell.base.ia_type.call(null, me));
    }
  }()));
};
tiltontec.qxia.base.qxme = function tiltontec$qxia$base$qxme(me) {
  return (new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
};
tiltontec.qxia.base.qx_initialize_all = function tiltontec$qxia$base$qx_initialize_all(me) {
  var temp__4425__auto___34628 = function() {
    var iter__5307__auto__ = function tiltontec$qxia$base$qx_initialize_all_$_iter__34624(s__34625) {
      return new cljs.core.LazySeq(null, function() {
        var s__34625__$1 = s__34625;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__34625__$1);
          if (temp__4425__auto__) {
            var s__34625__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__34625__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__34625__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__34627 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__34626 = 0;
                while (true) {
                  if (i__34626 < size__5306__auto__) {
                    var k = cljs.core._nth.call(null, c__5305__auto__, i__34626);
                    var val = tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "init-all", "init-all", 482505234), me, k);
                    if (!(val == null)) {
                      cljs.core.chunk_append.call(null, b__34627, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, val], null));
                      var G__34629 = i__34626 + 1;
                      i__34626 = G__34629;
                      continue;
                    } else {
                      var G__34630 = i__34626 + 1;
                      i__34626 = G__34630;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34627), tiltontec$qxia$base$qx_initialize_all_$_iter__34624.call(null, cljs.core.chunk_rest.call(null, s__34625__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34627), null);
              }
            } else {
              var k = cljs.core.first.call(null, s__34625__$2);
              var val = tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "init-all", "init-all", 482505234), me, k);
              if (!(val == null)) {
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, val], null), tiltontec$qxia$base$qx_initialize_all_$_iter__34624.call(null, cljs.core.rest.call(null, s__34625__$2)));
              } else {
                var G__34631 = cljs.core.rest.call(null, s__34625__$2);
                s__34625__$1 = G__34631;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, tiltontec.qxia.base.qx_obj_properties.call(null, me));
  }();
  if (cljs.core.truth_(temp__4425__auto___34628)) {
    var inits_34632 = temp__4425__auto___34628;
    tiltontec.qxia.base.qxme.call(null, me).set(cljs.core.clj__GT_js.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, inits_34632)));
  } else {
  }
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "css-class", "css-class", -919455334)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var c = temp__4425__auto__;
    if (cljs.core.coll_QMARK_.call(null, c)) {
      var cs = cljs.core.vec.call(null, c);
      return tiltontec.qxia.base.qxme.call(null, me).addCssClasses(cljs.core.clj__GT_js.call(null, cs));
    } else {
      return tiltontec.qxia.base.qxme.call(null, me).addCssClass(c);
    }
  } else {
    return null;
  }
};
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.Keyword("tiltontec.qxia.base", "qx.Object", "tiltontec.qxia.base/qx.Object", 922436694)], null), function(_, me, new$, old, ___$1) {
  if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
    cljs.core.println.call(null, new cljs.core.Keyword(null, "time-to-hack-remove-listeners", "time-to-hack-remove-listeners", 678744890));
  } else {
  }
  var seq__34633 = cljs.core.seq.call(null, new$);
  var chunk__34634 = null;
  var count__34635 = 0;
  var i__34636 = 0;
  while (true) {
    if (i__34636 < count__34635) {
      var vec__34637 = cljs.core._nth.call(null, chunk__34634, i__34636);
      var name = cljs.core.nth.call(null, vec__34637, 0, null);
      var handler = cljs.core.nth.call(null, vec__34637, 1, null);
      var qxme_34639 = tiltontec.qxia.base.qxme.call(null, me);
      cljs.core.println.call(null, new cljs.core.Keyword(null, "bingo-listener!", "bingo-listener!", 2073722760), name, tiltontec.cell.base.ia_type.call(null, me));
      qxme_34639.addListener(name, function(seq__34633, chunk__34634, count__34635, i__34636, qxme_34639, vec__34637, name, handler) {
        return function(event) {
          return handler.call(null, event, me);
        };
      }(seq__34633, chunk__34634, count__34635, i__34636, qxme_34639, vec__34637, name, handler));
      var G__34640 = seq__34633;
      var G__34641 = chunk__34634;
      var G__34642 = count__34635;
      var G__34643 = i__34636 + 1;
      seq__34633 = G__34640;
      chunk__34634 = G__34641;
      count__34635 = G__34642;
      i__34636 = G__34643;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__34633);
      if (temp__4425__auto__) {
        var seq__34633__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__34633__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__34633__$1);
          var G__34644 = cljs.core.chunk_rest.call(null, seq__34633__$1);
          var G__34645 = c__5338__auto__;
          var G__34646 = cljs.core.count.call(null, c__5338__auto__);
          var G__34647 = 0;
          seq__34633 = G__34644;
          chunk__34634 = G__34645;
          count__34635 = G__34646;
          i__34636 = G__34647;
          continue;
        } else {
          var vec__34638 = cljs.core.first.call(null, seq__34633__$1);
          var name = cljs.core.nth.call(null, vec__34638, 0, null);
          var handler = cljs.core.nth.call(null, vec__34638, 1, null);
          var qxme_34648 = tiltontec.qxia.base.qxme.call(null, me);
          cljs.core.println.call(null, new cljs.core.Keyword(null, "bingo-listener!", "bingo-listener!", 2073722760), name, tiltontec.cell.base.ia_type.call(null, me));
          qxme_34648.addListener(name, function(seq__34633, chunk__34634, count__34635, i__34636, qxme_34648, vec__34638, name, handler, seq__34633__$1, temp__4425__auto__) {
            return function(event) {
              return handler.call(null, event, me);
            };
          }(seq__34633, chunk__34634, count__34635, i__34636, qxme_34648, vec__34638, name, handler, seq__34633__$1, temp__4425__auto__));
          var G__34649 = cljs.core.next.call(null, seq__34633__$1);
          var G__34650 = null;
          var G__34651 = 0;
          var G__34652 = 0;
          seq__34633 = G__34649;
          chunk__34634 = G__34650;
          count__34635 = G__34651;
          i__34636 = G__34652;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
tiltontec.qxia.base.qx_add_kid = function tiltontec$qxia$base$qx_add_kid(me, kid) {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "add-kid", "add-kid", 160314367), tiltontec.cell.base.ia_type.call(null, me), tiltontec.cell.base.ia_type.call(null, kid));
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "flex", "flex", -1425124628)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, kid));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var flex = temp__4423__auto__;
    return tiltontec.qxia.base.qxme.call(null, me).add(tiltontec.qxia.base.qxme.call(null, kid), {"flex":flex});
  } else {
    return tiltontec.qxia.base.qxme.call(null, me).add(tiltontec.qxia.base.qxme.call(null, kid));
  }
};
goog.provide("tiltontec.qxia.widget");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.model.base");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.qxia.base");
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810)], null), function(_, me, new$, old, c) {
  var app = (new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
  var shower = (new cljs.core.Keyword(null, "shower", "shower", -1731894586)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
  var pager = (new cljs.core.Keyword(null, "pager", "pager", 1850229940)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
  var routing = app.getRouting();
  if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
    var seq__34655_34663 = cljs.core.seq.call(null, old);
    var chunk__34656_34664 = null;
    var count__34657_34665 = 0;
    var i__34658_34666 = 0;
    while (true) {
      if (i__34658_34666 < count__34657_34665) {
        var page_34667 = cljs.core._nth.call(null, chunk__34656_34664, i__34658_34666);
        var temp__4425__auto___34668 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page_34667));
        if (cljs.core.truth_(temp__4425__auto___34668)) {
          var ept_34669 = temp__4425__auto___34668;
          routing.remove(ept_34669);
        } else {
        }
        pager.removeDetail(tiltontec.qxia.base.qxme.call(null, page_34667));
        var G__34670 = seq__34655_34663;
        var G__34671 = chunk__34656_34664;
        var G__34672 = count__34657_34665;
        var G__34673 = i__34658_34666 + 1;
        seq__34655_34663 = G__34670;
        chunk__34656_34664 = G__34671;
        count__34657_34665 = G__34672;
        i__34658_34666 = G__34673;
        continue;
      } else {
        var temp__4425__auto___34674 = cljs.core.seq.call(null, seq__34655_34663);
        if (temp__4425__auto___34674) {
          var seq__34655_34675__$1 = temp__4425__auto___34674;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__34655_34675__$1)) {
            var c__5338__auto___34676 = cljs.core.chunk_first.call(null, seq__34655_34675__$1);
            var G__34677 = cljs.core.chunk_rest.call(null, seq__34655_34675__$1);
            var G__34678 = c__5338__auto___34676;
            var G__34679 = cljs.core.count.call(null, c__5338__auto___34676);
            var G__34680 = 0;
            seq__34655_34663 = G__34677;
            chunk__34656_34664 = G__34678;
            count__34657_34665 = G__34679;
            i__34658_34666 = G__34680;
            continue;
          } else {
            var page_34681 = cljs.core.first.call(null, seq__34655_34675__$1);
            var temp__4425__auto___34682__$1 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page_34681));
            if (cljs.core.truth_(temp__4425__auto___34682__$1)) {
              var ept_34683 = temp__4425__auto___34682__$1;
              routing.remove(ept_34683);
            } else {
            }
            pager.removeDetail(tiltontec.qxia.base.qxme.call(null, page_34681));
            var G__34684 = cljs.core.next.call(null, seq__34655_34675__$1);
            var G__34685 = null;
            var G__34686 = 0;
            var G__34687 = 0;
            seq__34655_34663 = G__34684;
            chunk__34656_34664 = G__34685;
            count__34657_34665 = G__34686;
            i__34658_34666 = G__34687;
            continue;
          }
        } else {
        }
      }
      break;
    }
  } else {
  }
  var seq__34659 = cljs.core.seq.call(null, new$);
  var chunk__34660 = null;
  var count__34661 = 0;
  var i__34662 = 0;
  while (true) {
    if (i__34662 < count__34661) {
      var page = cljs.core._nth.call(null, chunk__34660, i__34662);
      var qx_page_34688 = tiltontec.qxia.base.qxme.call(null, page);
      pager.addDetail(qx_page_34688);
      var temp__4425__auto___34689 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page));
      if (cljs.core.truth_(temp__4425__auto___34689)) {
        var ept_34690 = temp__4425__auto___34689;
        routing.onGet(ept_34690, shower, qx_page_34688);
      } else {
      }
      var G__34691 = seq__34659;
      var G__34692 = chunk__34660;
      var G__34693 = count__34661;
      var G__34694 = i__34662 + 1;
      seq__34659 = G__34691;
      chunk__34660 = G__34692;
      count__34661 = G__34693;
      i__34662 = G__34694;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__34659);
      if (temp__4425__auto__) {
        var seq__34659__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__34659__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__34659__$1);
          var G__34695 = cljs.core.chunk_rest.call(null, seq__34659__$1);
          var G__34696 = c__5338__auto__;
          var G__34697 = cljs.core.count.call(null, c__5338__auto__);
          var G__34698 = 0;
          seq__34659 = G__34695;
          chunk__34660 = G__34696;
          count__34661 = G__34697;
          i__34662 = G__34698;
          continue;
        } else {
          var page = cljs.core.first.call(null, seq__34659__$1);
          var qx_page_34699 = tiltontec.qxia.base.qxme.call(null, page);
          pager.addDetail(qx_page_34699);
          var temp__4425__auto___34700__$1 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page));
          if (cljs.core.truth_(temp__4425__auto___34700__$1)) {
            var ept_34701 = temp__4425__auto___34700__$1;
            routing.onGet(ept_34701, shower, qx_page_34699);
          } else {
          }
          var G__34702 = cljs.core.next.call(null, seq__34659__$1);
          var G__34703 = null;
          var G__34704 = 0;
          var G__34705 = 0;
          seq__34659 = G__34702;
          chunk__34660 = G__34703;
          count__34661 = G__34704;
          i__34662 = G__34705;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), function(me) {
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "layout", "layout", -2120940921)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var lyo = temp__4425__auto__;
    return tiltontec.qxia.base.qxme.call(null, me).setLayout(lyo);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225)], null), function(_, me, new$, old, ___$1) {
  var qx_form = tiltontec.qxia.base.qxme.call(null, me);
  if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
    var seq__34706_34714 = cljs.core.seq.call(null, old);
    var chunk__34707_34715 = null;
    var count__34708_34716 = 0;
    var i__34709_34717 = 0;
    while (true) {
      if (i__34709_34717 < count__34708_34716) {
        var k_34718 = cljs.core._nth.call(null, chunk__34707_34715, i__34709_34717);
        var qxk_34719 = tiltontec.qxia.base.qxme.call(null, k_34718);
        var label_34720 = tiltontec.model.base.md_get.call(null, k_34718, new cljs.core.Keyword(null, "label", "label", 1718410804));
        qx_form.remove(qxk_34719);
        var G__34721 = seq__34706_34714;
        var G__34722 = chunk__34707_34715;
        var G__34723 = count__34708_34716;
        var G__34724 = i__34709_34717 + 1;
        seq__34706_34714 = G__34721;
        chunk__34707_34715 = G__34722;
        count__34708_34716 = G__34723;
        i__34709_34717 = G__34724;
        continue;
      } else {
        var temp__4425__auto___34725 = cljs.core.seq.call(null, seq__34706_34714);
        if (temp__4425__auto___34725) {
          var seq__34706_34726__$1 = temp__4425__auto___34725;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__34706_34726__$1)) {
            var c__5338__auto___34727 = cljs.core.chunk_first.call(null, seq__34706_34726__$1);
            var G__34728 = cljs.core.chunk_rest.call(null, seq__34706_34726__$1);
            var G__34729 = c__5338__auto___34727;
            var G__34730 = cljs.core.count.call(null, c__5338__auto___34727);
            var G__34731 = 0;
            seq__34706_34714 = G__34728;
            chunk__34707_34715 = G__34729;
            count__34708_34716 = G__34730;
            i__34709_34717 = G__34731;
            continue;
          } else {
            var k_34732 = cljs.core.first.call(null, seq__34706_34726__$1);
            var qxk_34733 = tiltontec.qxia.base.qxme.call(null, k_34732);
            var label_34734 = tiltontec.model.base.md_get.call(null, k_34732, new cljs.core.Keyword(null, "label", "label", 1718410804));
            qx_form.remove(qxk_34733);
            var G__34735 = cljs.core.next.call(null, seq__34706_34726__$1);
            var G__34736 = null;
            var G__34737 = 0;
            var G__34738 = 0;
            seq__34706_34714 = G__34735;
            chunk__34707_34715 = G__34736;
            count__34708_34716 = G__34737;
            i__34709_34717 = G__34738;
            continue;
          }
        } else {
        }
      }
      break;
    }
  } else {
  }
  var temp__4425__auto__ = new$;
  if (cljs.core.truth_(temp__4425__auto__)) {
    var kids = temp__4425__auto__;
    var seq__34710 = cljs.core.seq.call(null, kids);
    var chunk__34711 = null;
    var count__34712 = 0;
    var i__34713 = 0;
    while (true) {
      if (i__34713 < count__34712) {
        var k = cljs.core._nth.call(null, chunk__34711, i__34713);
        var qxk_34739 = tiltontec.qxia.base.qxme.call(null, k);
        var label_34740 = tiltontec.model.base.md_get.call(null, k, new cljs.core.Keyword(null, "label", "label", 1718410804));
        qx_form.add(qxk_34739, label_34740);
        var G__34741 = seq__34710;
        var G__34742 = chunk__34711;
        var G__34743 = count__34712;
        var G__34744 = i__34713 + 1;
        seq__34710 = G__34741;
        chunk__34711 = G__34742;
        count__34712 = G__34743;
        i__34713 = G__34744;
        continue;
      } else {
        var temp__4425__auto____$1 = cljs.core.seq.call(null, seq__34710);
        if (temp__4425__auto____$1) {
          var seq__34710__$1 = temp__4425__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__34710__$1)) {
            var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__34710__$1);
            var G__34745 = cljs.core.chunk_rest.call(null, seq__34710__$1);
            var G__34746 = c__5338__auto__;
            var G__34747 = cljs.core.count.call(null, c__5338__auto__);
            var G__34748 = 0;
            seq__34710 = G__34745;
            chunk__34711 = G__34746;
            count__34712 = G__34747;
            i__34713 = G__34748;
            continue;
          } else {
            var k = cljs.core.first.call(null, seq__34710__$1);
            var qxk_34749 = tiltontec.qxia.base.qxme.call(null, k);
            var label_34750 = tiltontec.model.base.md_get.call(null, k, new cljs.core.Keyword(null, "label", "label", 1718410804));
            qx_form.add(qxk_34749, label_34750);
            var G__34751 = cljs.core.next.call(null, seq__34710__$1);
            var G__34752 = null;
            var G__34753 = 0;
            var G__34754 = 0;
            seq__34710 = G__34751;
            chunk__34711 = G__34752;
            count__34712 = G__34753;
            i__34713 = G__34754;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724)], null), function(_, me, new$, old, ___$1) {
  if (cljs.core._EQ_.call(null, old, tiltontec.cell.base.unbound)) {
    if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, new$))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "new", "new", -444906321, null)))))].join(""));
    }
    var form = cljs.core.first.call(null, new$);
    var qx_form = tiltontec.qxia.base.qxme.call(null, form);
    if (cljs.core.truth_(qx_form)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "qx-form", "qx-form", 231243115, null)))].join(""));
    }
    return cljs.core.swap_BANG_.call(null, me, cljs.core.assoc, new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), new qx.ui.mobile.form.renderer.Single(qx_form));
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), function(page) {
  var qx_page = tiltontec.qxia.base.qxme.call(null, page);
  return qx_page.addListener("initialize", function(qx_page) {
    return function() {
      var temp__4425__auto___34759 = tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "ini-nav", "ini-nav", 1436917737), page, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
      if (cljs.core.truth_(temp__4425__auto___34759)) {
        var kids_34760 = temp__4425__auto___34759;
        var content_34761 = qx_page.getContent();
        var seq__34755_34762 = cljs.core.seq.call(null, kids_34760);
        var chunk__34756_34763 = null;
        var count__34757_34764 = 0;
        var i__34758_34765 = 0;
        while (true) {
          if (i__34758_34765 < count__34757_34764) {
            var k_34766 = cljs.core._nth.call(null, chunk__34756_34763, i__34758_34765);
            var qxk_34767 = tiltontec.qxia.base.qxme.call(null, k_34766);
            content_34761.add(qxk_34767);
            var G__34768 = seq__34755_34762;
            var G__34769 = chunk__34756_34763;
            var G__34770 = count__34757_34764;
            var G__34771 = i__34758_34765 + 1;
            seq__34755_34762 = G__34768;
            chunk__34756_34763 = G__34769;
            count__34757_34764 = G__34770;
            i__34758_34765 = G__34771;
            continue;
          } else {
            var temp__4425__auto___34772__$1 = cljs.core.seq.call(null, seq__34755_34762);
            if (temp__4425__auto___34772__$1) {
              var seq__34755_34773__$1 = temp__4425__auto___34772__$1;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__34755_34773__$1)) {
                var c__5338__auto___34774 = cljs.core.chunk_first.call(null, seq__34755_34773__$1);
                var G__34775 = cljs.core.chunk_rest.call(null, seq__34755_34773__$1);
                var G__34776 = c__5338__auto___34774;
                var G__34777 = cljs.core.count.call(null, c__5338__auto___34774);
                var G__34778 = 0;
                seq__34755_34762 = G__34775;
                chunk__34756_34763 = G__34776;
                count__34757_34764 = G__34777;
                i__34758_34765 = G__34778;
                continue;
              } else {
                var k_34779 = cljs.core.first.call(null, seq__34755_34773__$1);
                var qxk_34780 = tiltontec.qxia.base.qxme.call(null, k_34779);
                content_34761.add(qxk_34780);
                var G__34781 = cljs.core.next.call(null, seq__34755_34773__$1);
                var G__34782 = null;
                var G__34783 = 0;
                var G__34784 = 0;
                seq__34755_34762 = G__34781;
                chunk__34756_34763 = G__34782;
                count__34757_34764 = G__34783;
                i__34758_34765 = G__34784;
                continue;
              }
            } else {
            }
          }
          break;
        }
      } else {
      }
      return qx_page;
    };
  }(qx_page));
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995)], null), function(_, me, newk, oldk, ___$1) {
  return cljs.core.println.call(null, new cljs.core.Keyword(null, "navi-page-kids-obs-blocks-compo!!!!!", "navi-page-kids-obs-blocks-compo!!!!!", -986088219));
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword("tiltontec.qxia.types", "m.TextField", "tiltontec.qxia.types/m.TextField", 1587442644), function(me) {
  return tiltontec.qxia.base.qxme.call(null, me).setValue((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me)));
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)], null), function(_, me, newk, oldk, ___$1) {
  if (cljs.core._EQ_.call(null, oldk, tiltontec.cell.base.unbound)) {
  } else {
    var lostks_34793 = clojure.set.difference.call(null, cljs.core.set.call(null, oldk), cljs.core.set.call(null, newk));
    if (cljs.core.empty_QMARK_.call(null, lostks_34793)) {
    } else {
      var seq__34785_34794 = cljs.core.seq.call(null, lostks_34793);
      var chunk__34786_34795 = null;
      var count__34787_34796 = 0;
      var i__34788_34797 = 0;
      while (true) {
        if (i__34788_34797 < count__34787_34796) {
          var kid_34798 = cljs.core._nth.call(null, chunk__34786_34795, i__34788_34797);
          var qxk_34799 = tiltontec.qxia.base.qxme.call(null, kid_34798);
          if (cljs.core.truth_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.ia_type_QMARK_, kid_34798, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)], null))) {
          } else {
            tiltontec.qxia.base.qxme.call(null, me).drop(qxk_34799);
          }
          qxk_34799.destroy();
          tiltontec.cell.evaluate.not_to_be.call(null, kid_34798);
          var G__34800 = seq__34785_34794;
          var G__34801 = chunk__34786_34795;
          var G__34802 = count__34787_34796;
          var G__34803 = i__34788_34797 + 1;
          seq__34785_34794 = G__34800;
          chunk__34786_34795 = G__34801;
          count__34787_34796 = G__34802;
          i__34788_34797 = G__34803;
          continue;
        } else {
          var temp__4425__auto___34804 = cljs.core.seq.call(null, seq__34785_34794);
          if (temp__4425__auto___34804) {
            var seq__34785_34805__$1 = temp__4425__auto___34804;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__34785_34805__$1)) {
              var c__5338__auto___34806 = cljs.core.chunk_first.call(null, seq__34785_34805__$1);
              var G__34807 = cljs.core.chunk_rest.call(null, seq__34785_34805__$1);
              var G__34808 = c__5338__auto___34806;
              var G__34809 = cljs.core.count.call(null, c__5338__auto___34806);
              var G__34810 = 0;
              seq__34785_34794 = G__34807;
              chunk__34786_34795 = G__34808;
              count__34787_34796 = G__34809;
              i__34788_34797 = G__34810;
              continue;
            } else {
              var kid_34811 = cljs.core.first.call(null, seq__34785_34805__$1);
              var qxk_34812 = tiltontec.qxia.base.qxme.call(null, kid_34811);
              if (cljs.core.truth_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.ia_type_QMARK_, kid_34811, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)], null))) {
              } else {
                tiltontec.qxia.base.qxme.call(null, me).drop(qxk_34812);
              }
              qxk_34812.destroy();
              tiltontec.cell.evaluate.not_to_be.call(null, kid_34811);
              var G__34813 = cljs.core.next.call(null, seq__34785_34805__$1);
              var G__34814 = null;
              var G__34815 = 0;
              var G__34816 = 0;
              seq__34785_34794 = G__34813;
              chunk__34786_34795 = G__34814;
              count__34787_34796 = G__34815;
              i__34788_34797 = G__34816;
              continue;
            }
          } else {
          }
        }
        break;
      }
    }
  }
  var new_ks = clojure.set.difference.call(null, cljs.core.set.call(null, newk), cljs.core.set.call(null, oldk));
  if (cljs.core.empty_QMARK_.call(null, new_ks)) {
    return null;
  } else {
    var seq__34789 = cljs.core.seq.call(null, new_ks);
    var chunk__34790 = null;
    var count__34791 = 0;
    var i__34792 = 0;
    while (true) {
      if (i__34792 < count__34791) {
        var k = cljs.core._nth.call(null, chunk__34790, i__34792);
        if (cljs.core.truth_(tiltontec.cell.base.ia_type_QMARK_.call(null, k, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)))) {
        } else {
          tiltontec.qxia.base.qx_add_kid.call(null, me, k);
        }
        var G__34817 = seq__34789;
        var G__34818 = chunk__34790;
        var G__34819 = count__34791;
        var G__34820 = i__34792 + 1;
        seq__34789 = G__34817;
        chunk__34790 = G__34818;
        count__34791 = G__34819;
        i__34792 = G__34820;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq.call(null, seq__34789);
        if (temp__4425__auto__) {
          var seq__34789__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__34789__$1)) {
            var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__34789__$1);
            var G__34821 = cljs.core.chunk_rest.call(null, seq__34789__$1);
            var G__34822 = c__5338__auto__;
            var G__34823 = cljs.core.count.call(null, c__5338__auto__);
            var G__34824 = 0;
            seq__34789 = G__34821;
            chunk__34790 = G__34822;
            count__34791 = G__34823;
            i__34792 = G__34824;
            continue;
          } else {
            var k = cljs.core.first.call(null, seq__34789__$1);
            if (cljs.core.truth_(tiltontec.cell.base.ia_type_QMARK_.call(null, k, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)))) {
            } else {
              tiltontec.qxia.base.qx_add_kid.call(null, me, k);
            }
            var G__34825 = cljs.core.next.call(null, seq__34789__$1);
            var G__34826 = null;
            var G__34827 = 0;
            var G__34828 = 0;
            seq__34789 = G__34825;
            chunk__34790 = G__34826;
            count__34791 = G__34827;
            i__34792 = G__34828;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot-data", "slot-data", 1146367809), new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926)], null), function(_, me, new$, old, c) {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "obs-sd", "obs-sd", 1176273322), tiltontec.cell.base.ia_type.call(null, me), new$, old);
  var p = tiltontec.qxia.base.qxme.call(null, me);
  if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
    var seq__34829_34837 = cljs.core.seq.call(null, cljs.core.range.call(null, cljs.core.count.call(null, old)));
    var chunk__34830_34838 = null;
    var count__34831_34839 = 0;
    var i__34832_34840 = 0;
    while (true) {
      if (i__34832_34840 < count__34831_34839) {
        var n_34841 = cljs.core._nth.call(null, chunk__34830_34838, i__34832_34840);
        p.removeSlot(n_34841);
        var G__34842 = seq__34829_34837;
        var G__34843 = chunk__34830_34838;
        var G__34844 = count__34831_34839;
        var G__34845 = i__34832_34840 + 1;
        seq__34829_34837 = G__34842;
        chunk__34830_34838 = G__34843;
        count__34831_34839 = G__34844;
        i__34832_34840 = G__34845;
        continue;
      } else {
        var temp__4425__auto___34846 = cljs.core.seq.call(null, seq__34829_34837);
        if (temp__4425__auto___34846) {
          var seq__34829_34847__$1 = temp__4425__auto___34846;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__34829_34847__$1)) {
            var c__5338__auto___34848 = cljs.core.chunk_first.call(null, seq__34829_34847__$1);
            var G__34849 = cljs.core.chunk_rest.call(null, seq__34829_34847__$1);
            var G__34850 = c__5338__auto___34848;
            var G__34851 = cljs.core.count.call(null, c__5338__auto___34848);
            var G__34852 = 0;
            seq__34829_34837 = G__34849;
            chunk__34830_34838 = G__34850;
            count__34831_34839 = G__34851;
            i__34832_34840 = G__34852;
            continue;
          } else {
            var n_34853 = cljs.core.first.call(null, seq__34829_34847__$1);
            p.removeSlot(n_34853);
            var G__34854 = cljs.core.next.call(null, seq__34829_34847__$1);
            var G__34855 = null;
            var G__34856 = 0;
            var G__34857 = 0;
            seq__34829_34837 = G__34854;
            chunk__34830_34838 = G__34855;
            count__34831_34839 = G__34856;
            i__34832_34840 = G__34857;
            continue;
          }
        } else {
        }
      }
      break;
    }
  } else {
  }
  var seq__34833 = cljs.core.seq.call(null, new$);
  var chunk__34834 = null;
  var count__34835 = 0;
  var i__34836 = 0;
  while (true) {
    if (i__34836 < count__34835) {
      var sd = cljs.core._nth.call(null, chunk__34834, i__34836);
      cljs.core.println.call(null, new cljs.core.Keyword(null, "pickslot!!", "pickslot!!", -645901635), sd);
      var da_34858 = new qx.data.Array(cljs.core.clj__GT_js.call(null, sd));
      p.addSlot(da_34858);
      var G__34859 = seq__34833;
      var G__34860 = chunk__34834;
      var G__34861 = count__34835;
      var G__34862 = i__34836 + 1;
      seq__34833 = G__34859;
      chunk__34834 = G__34860;
      count__34835 = G__34861;
      i__34836 = G__34862;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__34833);
      if (temp__4425__auto__) {
        var seq__34833__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__34833__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__34833__$1);
          var G__34863 = cljs.core.chunk_rest.call(null, seq__34833__$1);
          var G__34864 = c__5338__auto__;
          var G__34865 = cljs.core.count.call(null, c__5338__auto__);
          var G__34866 = 0;
          seq__34833 = G__34863;
          chunk__34834 = G__34864;
          count__34835 = G__34865;
          i__34836 = G__34866;
          continue;
        } else {
          var sd = cljs.core.first.call(null, seq__34833__$1);
          cljs.core.println.call(null, new cljs.core.Keyword(null, "pickslot!!", "pickslot!!", -645901635), sd);
          var da_34867 = new qx.data.Array(cljs.core.clj__GT_js.call(null, sd));
          p.addSlot(da_34867);
          var G__34868 = cljs.core.next.call(null, seq__34833__$1);
          var G__34869 = null;
          var G__34870 = 0;
          var G__34871 = 0;
          seq__34833 = G__34868;
          chunk__34834 = G__34869;
          count__34835 = G__34870;
          i__34836 = G__34871;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
goog.provide("tiltontec.cell.observer_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.observer_test.t_formula = function tiltontec$cell$observer_test$t_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$t_formula.cljs$lang$var);
};
tiltontec.cell.observer_test.t_formula.cljs$lang$test = function() {
  var bingo = cljs.core.atom.call(null, false);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bingo) {
    return function(slot, me, new$, old, c) {
      return cljs.core.reset_BANG_.call(null, bingo, true);
    };
  }(bingo), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bingo) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 40 + 2;
    };
  }(bingo));
  try {
    var values__8873__auto___35538 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8874__auto___35539 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35538);
    if (cljs.core.truth_(result__8874__auto___35539)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35538), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto___35538)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35527) {
    var t__8911__auto___35540 = e35527;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35540, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35541 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), c);
    var result__8874__auto___35542 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35541);
    if (cljs.core.truth_(result__8874__auto___35542)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35541), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto___35541)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35528) {
    var t__8911__auto___35543 = e35528;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35543, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35544 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8874__auto___35545 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35544);
    if (cljs.core.truth_(result__8874__auto___35545)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35544), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35544)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35529) {
    var t__8911__auto___35546 = e35529;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35546, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35547 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35548 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35547);
    if (cljs.core.truth_(result__8874__auto___35548)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35547), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35547)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35530) {
    var t__8911__auto___35549 = e35530;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35549, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35550 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35551 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35550);
    if (cljs.core.truth_(result__8874__auto___35551)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35550), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35550)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35531) {
    var t__8911__auto___35552 = e35531;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35552, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35553 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__8874__auto___35554 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35553);
    if (cljs.core.truth_(result__8874__auto___35554)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35553), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35553)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35532) {
    var t__8911__auto___35555 = e35532;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35555, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35556 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_valid_QMARK_.call(null, c));
    var result__8874__auto___35557 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35556);
    if (cljs.core.truth_(result__8874__auto___35557)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35556), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35556)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35533) {
    var t__8911__auto___35558 = e35533;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35558, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35559 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8874__auto___35560 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35559);
    if (cljs.core.truth_(result__8874__auto___35560)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35559), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35559)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35534) {
    var t__8911__auto___35561 = e35534;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35561, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35562 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto___35563 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35562);
    if (cljs.core.truth_(result__8874__auto___35563)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35562), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35562)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35535) {
    var t__8911__auto___35564 = e35535;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35564, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35565 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, c)), 42);
    var result__8874__auto___35566 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35565);
    if (cljs.core.truth_(result__8874__auto___35566)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35565), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35565)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35536) {
    var t__8911__auto___35567 = e35536;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35567, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__8876__auto__ = cljs.core.deref.call(null, bingo);
    if (cljs.core.truth_(value__8876__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return value__8876__auto__;
  } catch (e35537) {
    var t__8911__auto__ = e35537;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.t_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.t_formula;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-formula", "tiltontec.cell.observer-test/t-formula", 453750507, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/observer_test.cljc", 19, 1, 43, 43, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_formula) ? tiltontec.cell.observer_test.t_formula.cljs$lang$test : null]));
tiltontec.cell.observer_test.bingo2 = cljs.core.atom.call(null, false);
tiltontec.cell.observer_test.test_input = function tiltontec$cell$observer_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$test_input.cljs$lang$var);
};
tiltontec.cell.observer_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(slot, me, new$, old, c) {
    return cljs.core.reset_BANG_.call(null, tiltontec.cell.observer_test.bingo2, true);
  });
  try {
    var values__8873__auto___35577 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8874__auto___35578 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35577);
    if (cljs.core.truth_(result__8874__auto___35578)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35577), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto___35577)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35568) {
    var t__8911__auto___35579 = e35568;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35579, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35580 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8874__auto___35581 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35580);
    if (cljs.core.truth_(result__8874__auto___35581)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35580), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35580)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35569) {
    var t__8911__auto___35582 = e35569;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35582, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35583 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35584 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35583);
    if (cljs.core.truth_(result__8874__auto___35584)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35583), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35583)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35570) {
    var t__8911__auto___35585 = e35570;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35585, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35586 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8874__auto___35587 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__8873__auto___35586);
    if (cljs.core.truth_(result__8874__auto___35587)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__8873__auto___35586), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__8873__auto___35586)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35571) {
    var t__8911__auto___35588 = e35571;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35588, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35589 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8874__auto___35590 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__8873__auto___35589);
    if (cljs.core.truth_(result__8874__auto___35590)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__8873__auto___35589), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__8873__auto___35589)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35572) {
    var t__8911__auto___35591 = e35572;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35591, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35592 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8874__auto___35593 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35592);
    if (cljs.core.truth_(result__8874__auto___35593)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35592), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35592)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35573) {
    var t__8911__auto___35594 = e35573;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35594, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35595 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551));
    var result__8874__auto___35596 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35595);
    if (cljs.core.truth_(result__8874__auto___35596)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35595), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35595)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35574) {
    var t__8911__auto___35597 = e35574;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35597, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35598 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto___35599 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35598);
    if (cljs.core.truth_(result__8874__auto___35599)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35598), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35598)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35575) {
    var t__8911__auto___35600 = e35575;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35600, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__8876__auto__ = cljs.core.deref.call(null, tiltontec.cell.observer_test.bingo2);
    if (cljs.core.truth_(value__8876__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return value__8876__auto__;
  } catch (e35576) {
    var t__8911__auto__ = e35576;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "test-input", "tiltontec.cell.observer-test/test-input", -1111092170, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/observer_test.cljc", 20, 1, 64, 64, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.test_input) ? tiltontec.cell.observer_test.test_input.cljs$lang$test : null]));
tiltontec.cell.observer_test.t_custom_obs = function tiltontec$cell$observer_test$t_custom_obs() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$t_custom_obs.cljs$lang$var);
};
tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test = function() {
  var bobs = cljs.core.atom.call(null, null);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bobs) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, null, slot, me, new$, old);
      return cljs.core.reset_BANG_.call(null, bobs, new$);
    };
  }(bobs));
  var cobs = cljs.core.atom.call(null, null);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bobs, b, cobs) {
    return function(slot, me, new$, old, c) {
      new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me, new$, old, c], null);
      tiltontec.util.base.call_trc.call(null, "slot", me, new$, old);
      return cljs.core.reset_BANG_.call(null, cobs, new$);
    };
  }(bobs, b, cobs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 10, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bobs, b, cobs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 10 * tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(bobs, b, cobs));
  try {
    var values__8873__auto___35604 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8874__auto___35605 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35604);
    if (cljs.core.truth_(result__8874__auto___35605)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35604), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35604)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35601) {
    var t__8911__auto___35606 = e35601;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35606, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35607 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), cljs.core.deref.call(null, bobs));
    var result__8874__auto___35608 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35607);
    if (cljs.core.truth_(result__8874__auto___35608)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
      2), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35607), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
      2), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35607)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35602) {
    var t__8911__auto___35609 = e35602;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
    2), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35609, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 20), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35603) {
    var t__8911__auto__ = e35603;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.t_custom_obs.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.t_custom_obs;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-custom-obs", "tiltontec.cell.observer-test/t-custom-obs", 662258146, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-custom-obs", "t-custom-obs", -1659782311, null), "test/tiltontec/cell/observer_test.cljc", 22, 1, 79, 
79, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_custom_obs) ? tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env35610 = cljs.test.empty_env.call(null);
  var summary35611 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35610, summary35611) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35610);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8978__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35610, summary35611) {
          return function() {
            if (env__8978__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8978__auto__, env35610, summary35611)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.t_formula;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-formula", "tiltontec.cell.observer-test/t-formula", 453750507, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/observer_test.cljc", 
        19, 1, 43, 43, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_formula) ? tiltontec.cell.observer_test.t_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "test-input", "tiltontec.cell.observer-test/test-input", -1111092170, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/observer_test.cljc", 
        20, 1, 64, 64, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.test_input) ? tiltontec.cell.observer_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.t_custom_obs;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-custom-obs", "tiltontec.cell.observer-test/t-custom-obs", 662258146, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-custom-obs", "t-custom-obs", -1659782311, null), "test/tiltontec/cell/observer_test.cljc", 
        22, 1, 79, 79, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_custom_obs) ? tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35610, summary35611) {
          return function() {
            if (env__8978__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8978__auto__, env35610, summary35611)], null));
      }());
    };
  }(env35610, summary35611), function(env35610, summary35611) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env35610, summary35611)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35610, summary35611) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary35611, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary35611), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env35610, summary35611)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35610, summary35611) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35610);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary35611));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary35611), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env35610, summary35611)], null));
}());
goog.provide("tiltontec.model.family");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
cljs.core.derive.call(null, tiltontec.cell.base.ia_types, new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545), new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830));
tiltontec.model.family._STAR_par_STAR_ = null;
tiltontec.model.family.fget_EQ_ = function tiltontec$model$family$fget_EQ_(seek, poss) {
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, poss))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "poss", "poss", -265534520, null))))].join(""));
  }
  if (cljs.core.fn_QMARK_.call(null, seek)) {
    return seek.call(null, poss);
  } else {
    if (seek instanceof cljs.core.Keyword) {
      return cljs.core._EQ_.call(null, seek, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, poss)));
    } else {
      return cljs.core._EQ_.call(null, seek, poss);
    }
  }
};
tiltontec.model.family.fget = function tiltontec$model$family$fget() {
  var args__5600__auto__ = [];
  var len__5593__auto___34453 = arguments.length;
  var i__5594__auto___34454 = 0;
  while (true) {
    if (i__5594__auto___34454 < len__5593__auto___34453) {
      args__5600__auto__.push(arguments[i__5594__auto___34454]);
      var G__34455 = i__5594__auto___34454 + 1;
      i__5594__auto___34454 = G__34455;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.model.family.fget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.model.family.fget.cljs$core$IFn$_invoke$arity$variadic = function(what, where, options) {
  tiltontec.util.base.call_trc.call(null, ":fget-entry", what, where);
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = where;
    if (cljs.core.truth_(and__4542__auto__)) {
      return what;
    } else {
      return and__4542__auto__;
    }
  }())) {
    var options__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516), true], null), cljs.core.apply.call(null, cljs.core.hash_map, options));
    var _STAR_depender_STAR_34452 = tiltontec.cell.base._STAR_depender_STAR_;
    tiltontec.cell.base._STAR_depender_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516)).cljs$core$IFn$_invoke$arity$1(options__$1)) ? null : tiltontec.cell.base._STAR_depender_STAR_;
    try {
      var or__4554__auto__ = function() {
        var and__4542__auto__ = (new cljs.core.Keyword(null, "me?", "me?", -625404259)).cljs$core$IFn$_invoke$arity$1(options__$1);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = tiltontec.model.family.fget_EQ_.call(null, what, where);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return where;
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }();
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = function() {
          var and__4542__auto__ = (new cljs.core.Keyword(null, "inside?", "inside?", 639243696)).cljs$core$IFn$_invoke$arity$1(options__$1);
          if (cljs.core.truth_(and__4542__auto__)) {
            var temp__4423__auto__ = tiltontec.model.base.md_get.call(null, where, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
            if (cljs.core.truth_(temp__4423__auto__)) {
              var kids = temp__4423__auto__;
              var temp__4423__auto____$1 = cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([(new cljs.core.Keyword(null, "skip", "skip", 602715391)).cljs$core$IFn$_invoke$arity$1(options__$1)], true), kids);
              if (cljs.core.truth_(temp__4423__auto____$1)) {
                var netkids = temp__4423__auto____$1;
                return cljs.core.some.call(null, function(netkids, temp__4423__auto____$1, kids, temp__4423__auto__, and__4542__auto__, or__4554__auto__, _STAR_depender_STAR_34452, options__$1) {
                  return function(p1__34448_SHARP_) {
                    return tiltontec.model.family.fget.call(null, what, p1__34448_SHARP_, new cljs.core.Keyword(null, "me?", "me?", -625404259), true, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), false);
                  };
                }(netkids, temp__4423__auto____$1, kids, temp__4423__auto__, and__4542__auto__, or__4554__auto__, _STAR_depender_STAR_34452, options__$1), netkids);
              } else {
                return tiltontec.util.base.call_trc.call(null, ":no-net-kids");
              }
            } else {
              return tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "inside-no-kids", "inside-no-kids", -1437068961), cljs.core.deref.call(null, where));
            }
          } else {
            return and__4542__auto__;
          }
        }();
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = function() {
            var and__4542__auto__ = (new cljs.core.Keyword(null, "up?", "up?", 77854972)).cljs$core$IFn$_invoke$arity$1(options__$1);
            if (cljs.core.truth_(and__4542__auto__)) {
              var temp__4425__auto__ = (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, where));
              if (cljs.core.truth_(temp__4425__auto__)) {
                var par = temp__4425__auto__;
                return tiltontec.model.family.fget.call(null, what, par, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "me?", "me?", -625404259), true, new cljs.core.Keyword(null, "skip", "skip", 602715391), where, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true);
              } else {
                return null;
              }
            } else {
              return and__4542__auto__;
            }
          }();
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            if (cljs.core.truth_((new cljs.core.Keyword(null, "must?", "must?", 1639898554)).cljs$core$IFn$_invoke$arity$1(options__$1))) {
              return tiltontec.util.core.err.call(null, new cljs.core.Keyword(null, "fget-must-failed", "fget-must-failed", 237242954), what, where, options__$1);
            } else {
              return null;
            }
          }
        }
      }
    } finally {
      tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_34452;
    }
  } else {
    return null;
  }
};
tiltontec.model.family.fget.cljs$lang$maxFixedArity = 2;
tiltontec.model.family.fget.cljs$lang$applyTo = function(seq34449) {
  var G__34450 = cljs.core.first.call(null, seq34449);
  var seq34449__$1 = cljs.core.next.call(null, seq34449);
  var G__34451 = cljs.core.first.call(null, seq34449__$1);
  var seq34449__$2 = cljs.core.next.call(null, seq34449__$1);
  return tiltontec.model.family.fget.cljs$core$IFn$_invoke$arity$variadic(G__34450, G__34451, seq34449__$2);
};
tiltontec.model.family.fm_BANG_ = function tiltontec$model$family$fm_BANG_(what, where) {
  return tiltontec.model.family.fget.call(null, what, where, new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "must?", "must?", 1639898554), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true);
};
tiltontec.model.family.mdv_BANG_ = function tiltontec$model$family$mdv_BANG_() {
  var args__5600__auto__ = [];
  var len__5593__auto___34463 = arguments.length;
  var i__5594__auto___34464 = 0;
  while (true) {
    if (i__5594__auto___34464 < len__5593__auto___34463) {
      args__5600__auto__.push(arguments[i__5594__auto___34464]);
      var G__34465 = i__5594__auto___34464 + 1;
      i__5594__auto___34464 = G__34465;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.model.family.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.model.family.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, what, slot, p__34461) {
  var vec__34462 = p__34461;
  var me = cljs.core.nth.call(null, vec__34462, 0, null);
  var me__$1 = function() {
    var or__4554__auto__ = me;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return new cljs.core.Symbol(null, "me", "me", 1501524834, null);
    }
  }();
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.base", "md-getx", "tiltontec.model.base/md-getx", -1634715265, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "fm!", "tiltontec.model.family/fm!", 204792444, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, what), cljs.core._conj.call(null, cljs.core.List.EMPTY, me__$1))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, slot))));
};
tiltontec.model.family.mdv_BANG_.cljs$lang$maxFixedArity = 4;
tiltontec.model.family.mdv_BANG_.cljs$lang$applyTo = function(seq34456) {
  var G__34457 = cljs.core.first.call(null, seq34456);
  var seq34456__$1 = cljs.core.next.call(null, seq34456);
  var G__34458 = cljs.core.first.call(null, seq34456__$1);
  var seq34456__$2 = cljs.core.next.call(null, seq34456__$1);
  var G__34459 = cljs.core.first.call(null, seq34456__$2);
  var seq34456__$3 = cljs.core.next.call(null, seq34456__$2);
  var G__34460 = cljs.core.first.call(null, seq34456__$3);
  var seq34456__$4 = cljs.core.next.call(null, seq34456__$3);
  return tiltontec.model.family.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__34457, G__34458, G__34459, G__34460, seq34456__$4);
};
tiltontec.model.family.mdv_BANG_.cljs$lang$macro = true;
tiltontec.model.family.the_kids = function tiltontec$model$family$the_kids() {
  var args__5600__auto__ = [];
  var len__5593__auto___34469 = arguments.length;
  var i__5594__auto___34470 = 0;
  while (true) {
    if (i__5594__auto___34470 < len__5593__auto___34469) {
      args__5600__auto__.push(arguments[i__5594__auto___34470]);
      var G__34471 = i__5594__auto___34470 + 1;
      i__5594__auto___34470 = G__34471;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.model.family.the_kids.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.model.family.the_kids.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, tree) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "*par*", "tiltontec.model.family/*par*", 
  -208021890, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "remove", "cljs.core/remove", 20102034, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 
  945071861, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "flatten", "cljs.core/flatten", -237795822, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", 
  "list", "cljs.core/list", -1331406371, null)), tree)))))))))))))));
};
tiltontec.model.family.the_kids.cljs$lang$maxFixedArity = 2;
tiltontec.model.family.the_kids.cljs$lang$applyTo = function(seq34466) {
  var G__34467 = cljs.core.first.call(null, seq34466);
  var seq34466__$1 = cljs.core.next.call(null, seq34466);
  var G__34468 = cljs.core.first.call(null, seq34466__$1);
  var seq34466__$2 = cljs.core.next.call(null, seq34466__$1);
  return tiltontec.model.family.the_kids.cljs$core$IFn$_invoke$arity$variadic(G__34467, G__34468, seq34466__$2);
};
tiltontec.model.family.the_kids.cljs$lang$macro = true;
tiltontec.model.family.c_QMARK_kids = function tiltontec$model$family$c_QMARK_kids() {
  var args__5600__auto__ = [];
  var len__5593__auto___34475 = arguments.length;
  var i__5594__auto___34476 = 0;
  while (true) {
    if (i__5594__auto___34476 < len__5593__auto___34475) {
      args__5600__auto__.push(arguments[i__5594__auto___34476]);
      var G__34477 = i__5594__auto___34476 + 1;
      i__5594__auto___34476 = G__34477;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.model.family.c_QMARK_kids.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.model.family.c_QMARK_kids.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, tree) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "c?", "tiltontec.model.family/c?", -423067848, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", 
  -869691941, null)), tree)))))));
};
tiltontec.model.family.c_QMARK_kids.cljs$lang$maxFixedArity = 2;
tiltontec.model.family.c_QMARK_kids.cljs$lang$applyTo = function(seq34472) {
  var G__34473 = cljs.core.first.call(null, seq34472);
  var seq34472__$1 = cljs.core.next.call(null, seq34472);
  var G__34474 = cljs.core.first.call(null, seq34472__$1);
  var seq34472__$2 = cljs.core.next.call(null, seq34472__$1);
  return tiltontec.model.family.c_QMARK_kids.cljs$core$IFn$_invoke$arity$variadic(G__34473, G__34474, seq34472__$2);
};
tiltontec.model.family.c_QMARK_kids.cljs$lang$macro = true;
tiltontec.model.family.mm_obj = Object;
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545)], null), function(_, ___$1, newk, oldk, ___$2) {
  if (cljs.core._EQ_.call(null, oldk, tiltontec.cell.base.unbound)) {
    return null;
  } else {
    var lostks = clojure.set.difference.call(null, cljs.core.set.call(null, oldk), cljs.core.set.call(null, newk));
    if (cljs.core.empty_QMARK_.call(null, lostks)) {
      return null;
    } else {
      var seq__34478 = cljs.core.seq.call(null, lostks);
      var chunk__34479 = null;
      var count__34480 = 0;
      var i__34481 = 0;
      while (true) {
        if (i__34481 < count__34480) {
          var k = cljs.core._nth.call(null, chunk__34479, i__34481);
          tiltontec.cell.evaluate.not_to_be.call(null, k);
          var G__34482 = seq__34478;
          var G__34483 = chunk__34479;
          var G__34484 = count__34480;
          var G__34485 = i__34481 + 1;
          seq__34478 = G__34482;
          chunk__34479 = G__34483;
          count__34480 = G__34484;
          i__34481 = G__34485;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__34478);
          if (temp__4425__auto__) {
            var seq__34478__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__34478__$1)) {
              var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__34478__$1);
              var G__34486 = cljs.core.chunk_rest.call(null, seq__34478__$1);
              var G__34487 = c__5338__auto__;
              var G__34488 = cljs.core.count.call(null, c__5338__auto__);
              var G__34489 = 0;
              seq__34478 = G__34486;
              chunk__34479 = G__34487;
              count__34480 = G__34488;
              i__34481 = G__34489;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__34478__$1);
              tiltontec.cell.evaluate.not_to_be.call(null, k);
              var G__34490 = cljs.core.next.call(null, seq__34478__$1);
              var G__34491 = null;
              var G__34492 = 0;
              var G__34493 = 0;
              seq__34478 = G__34490;
              chunk__34479 = G__34491;
              count__34480 = G__34492;
              i__34481 = G__34493;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    }
  }
});
goog.provide("tiltontec.model.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.family");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.core.md_reset_BANG_ = function tiltontec$model$core$md_reset_BANG_(me, slot, new_value) {
  var temp__4423__auto__ = tiltontec.model.base.md_cell.call(null, me, slot);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var c = temp__4423__auto__;
    return tiltontec.cell.core.c_reset_BANG_.call(null, c, new_value);
  } else {
    tiltontec.util.core.err.call(null, cljs.core.str, "change to slot %s not mediated by cell", slot);
    return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), new_value);
  }
};
tiltontec.model.core.make = function tiltontec$model$core$make() {
  var args__5600__auto__ = [];
  var len__5593__auto___34883 = arguments.length;
  var i__5594__auto___34884 = 0;
  while (true) {
    if (i__5594__auto___34884 < len__5593__auto___34883) {
      args__5600__auto__.push(arguments[i__5594__auto___34884]);
      var G__34885 = i__5594__auto___34884 + 1;
      i__5594__auto___34884 = G__34885;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic = function(iargs) {
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, iargs))) {
    return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), iargs);
  } else {
    var me = cljs.core.atom.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "par", "par", -61778778), tiltontec.model.family._STAR_par_STAR_], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__34875) {
      var vec__34876 = p__34875;
      var k = cljs.core.nth.call(null, vec__34876, 0, null);
      var v = cljs.core.nth.call(null, vec__34876, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, v)) ? tiltontec.cell.base.unbound : v], null);
    }, cljs.core.filter.call(null, function(p__34877) {
      var vec__34878 = p__34877;
      var slot = cljs.core.nth.call(null, vec__34878, 0, null);
      var v = cljs.core.nth.call(null, vec__34878, 1, null);
      return !cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), slot);
    }, cljs.core.partition.call(null, 2, iargs))))), new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "nascent", "nascent", 443401807)], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.vec, cljs.core.filter.call(null, function(p__34879) {
      var vec__34880 = p__34879;
      var slot = cljs.core.nth.call(null, vec__34880, 0, null);
      var v = cljs.core.nth.call(null, vec__34880, 1, null);
      return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), slot);
    }, cljs.core.partition.call(null, 2, iargs))))));
    if (cljs.core.truth_(cljs.core.meta.call(null, me))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
    }
    tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cz", "cz", 1670864932), me], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.vec, cljs.core.filter.call(null, function(me) {
      return function(p__34881) {
        var vec__34882 = p__34881;
        var slot = cljs.core.nth.call(null, vec__34882, 0, null);
        var v = cljs.core.nth.call(null, vec__34882, 1, null);
        return tiltontec.model.base.md_install_cell.call(null, me, slot, v);
      };
    }(me), cljs.core.partition.call(null, 2, iargs)))));
    tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), me, function(me) {
      return function(opcode, defer_info) {
        cljs.core.println.call(null, new cljs.core.Keyword(null, "awakening", "awakening", 838364227), tiltontec.cell.base.ia_type.call(null, me));
        return tiltontec.model.base.md_awaken.call(null, me);
      };
    }(me));
    return me;
  }
};
tiltontec.model.core.make.cljs$lang$maxFixedArity = 0;
tiltontec.model.core.make.cljs$lang$applyTo = function(seq34874) {
  return tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq34874));
};
goog.provide("tiltontec.model.kids_test");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.family");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.kids_test.k_notq2be = function tiltontec$model$kids_test$k_notq2be() {
  return cljs.test.test_var.call(null, tiltontec$model$kids_test$k_notq2be.cljs$lang$var);
};
tiltontec.model.kids_test.k_notq2be.cljs$lang$test = function() {
  var f = tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545), new cljs.core.Keyword(null, "ee", "ee", 643317400), tiltontec.cell.core.c_in.call(null, 2), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), 
  cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "odd?", "odd?", -1458588199, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, 
  "yep", "yep", 1342783469), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "par", "par", 1578752749, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", 
  -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
  "par", "par", 1578752749, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))], null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 14, new cljs.core.Symbol(null, "ee", "ee", -2011118369, null)))))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35260 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.odd_QMARK_.call(null, tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "ee", "ee", 643317400))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.make_c_formula.call(null, 
      new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "par", "par", 1578752749, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "par", "par", 1578752749, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))], 
      null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 14, new cljs.core.Symbol(null, "ee", "ee", -2011118369, null)))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35260, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var par = (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$1));
          var ee = tiltontec.model.base.md_get.call(null, par, new cljs.core.Keyword(null, "ee", "ee", 643317400));
          return 14 * ee;
        };
      }(_STAR_par_STAR_35260, me, cache))) : null)));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35260;
    }
  }));
  try {
    var values__8873__auto___35268 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545)), f);
    var result__8874__auto___35269 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35268);
    if (cljs.core.truth_(result__8874__auto___35269)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35268), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto___35268)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35261) {
    var t__8911__auto___35270 = e35261;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35270, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35271 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
    var result__8874__auto___35272 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8873__auto___35271);
    if (cljs.core.truth_(result__8874__auto___35272)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8873__auto___35271), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8873__auto___35271)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35262) {
    var t__8911__auto___35273 = e35262;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
    "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35273, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, f, new cljs.core.Keyword(null, "ee", "ee", 643317400), 3);
  try {
    var values__8873__auto___35274 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.empty_QMARK_.call(null, tiltontec.model.base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771))));
    var result__8874__auto___35275 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35274);
    if (cljs.core.truth_(result__8874__auto___35275)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35274), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35274)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35263) {
    var t__8911__auto___35276 = e35263;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
    "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35276, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35277 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "yep", "yep", 1342783469), f), new cljs.core.Keyword(null, "value", "value", 305978217))), 42);
    var result__8874__auto___35278 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35277);
    if (cljs.core.truth_(result__8874__auto___35278)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35277), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35277)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35264) {
    var t__8911__auto___35279 = e35264;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
    "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35279, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var dmw = cljs.core.first.call(null, tiltontec.model.base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
  if (cljs.core.truth_(tiltontec.cell.base.md_ref_QMARK_.call(null, dmw))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))))].join(""));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, f, new cljs.core.Keyword(null, "ee", "ee", 643317400), 0);
  try {
    var values__8873__auto___35280 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
    var result__8874__auto___35281 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8873__auto___35280);
    if (cljs.core.truth_(result__8874__auto___35281)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8873__auto___35280), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8873__auto___35280)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35265) {
    var t__8911__auto___35282 = e35265;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
    "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35282, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35283 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dmw));
    var result__8874__auto___35284 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35283);
    if (cljs.core.truth_(result__8874__auto___35284)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35283), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35283)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35266) {
    var t__8911__auto___35285 = e35266;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35285, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, dmw))), new cljs.core.Keyword(null, "dead", "dead", -1946604091));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
      "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
      "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35267) {
    var t__8911__auto__ = e35267;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
    "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.kids_test.k_notq2be.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.kids_test.k_notq2be;
}, new cljs.core.Symbol("tiltontec.model.kids-test", "k-notq2be", "tiltontec.model.kids-test/k-notq2be", 1863973409, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Symbol(null, "k-notq2be", "k-notq2be", -2113236140, null), "test/tiltontec/model/kids_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.kids_test.k_notq2be) ? tiltontec.model.kids_test.k_notq2be.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env35286 = cljs.test.empty_env.call(null);
  var summary35287 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35286, summary35287) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35286);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8978__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35286, summary35287) {
          return function() {
            if (env__8978__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8978__auto__, env35286, summary35287)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.model.kids_test.k_notq2be;
        }, new cljs.core.Symbol("tiltontec.model.kids-test", "k-notq2be", "tiltontec.model.kids-test/k-notq2be", 1863973409, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Symbol(null, "k-notq2be", "k-notq2be", -2113236140, null), "test/tiltontec/model/kids_test.cljc", 19, 1, 49, 49, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.kids_test.k_notq2be) ? tiltontec.model.kids_test.k_notq2be.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35286, summary35287) {
          return function() {
            if (env__8978__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8978__auto__, env35286, summary35287)], null));
      }());
    };
  }(env35286, summary35287), function(env35286, summary35287) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env35286, summary35287)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35286, summary35287) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary35287, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary35287), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env35286, summary35287)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35286, summary35287) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35286);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary35287));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary35287), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env35286, summary35287)], null));
}());
goog.provide("tiltontec.cell.evaluate_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.cell.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.evaluate_test.test_input = function tiltontec$cell$evaluate_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$test_input.cljs$lang$var);
};
tiltontec.cell.evaluate_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
  try {
    var values__8873__auto___36128 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8874__auto___36129 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___36128);
    if (cljs.core.truth_(result__8874__auto___36129)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___36128), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto___36128)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36120) {
    var t__8911__auto___36130 = e36120;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36130, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36131 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8874__auto___36132 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36131);
    if (cljs.core.truth_(result__8874__auto___36132)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36131), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36131)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36121) {
    var t__8911__auto___36133 = e36121;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36133, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36134 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___36135 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36134);
    if (cljs.core.truth_(result__8874__auto___36135)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36134), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36134)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36122) {
    var t__8911__auto___36136 = e36122;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36136, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36137 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8874__auto___36138 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__8873__auto___36137);
    if (cljs.core.truth_(result__8874__auto___36138)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__8873__auto___36137), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__8873__auto___36137)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36123) {
    var t__8911__auto___36139 = e36123;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36139, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36140 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8874__auto___36141 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__8873__auto___36140);
    if (cljs.core.truth_(result__8874__auto___36141)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__8873__auto___36140), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__8873__auto___36140)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36124) {
    var t__8911__auto___36142 = e36124;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36142, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36143 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8874__auto___36144 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___36143);
    if (cljs.core.truth_(result__8874__auto___36144)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___36143), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___36143)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36125) {
    var t__8911__auto___36145 = e36125;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36145, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36146 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
    var result__8874__auto___36147 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36146);
    if (cljs.core.truth_(result__8874__auto___36147)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36146), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36146)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36126) {
    var t__8911__auto___36148 = e36126;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36148, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e36127) {
    var t__8911__auto__ = e36127;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "test-input", "tiltontec.cell.evaluate-test/test-input", -1028428775, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/evaluate_test.cljc", 20, 1, 45, 45, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.test_input) ? tiltontec.cell.evaluate_test.test_input.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula = function tiltontec$cell$evaluate_test$t_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 40 + 2;
  });
  try {
    var values__8873__auto___36159 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), tiltontec.cell.base.ia_types);
    var result__8874__auto___36160 = cljs.core.apply.call(null, cljs.core.isa_QMARK_, values__8873__auto___36159);
    if (cljs.core.truth_(result__8874__auto___36160)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
      new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.isa_QMARK_, values__8873__auto___36159), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
      new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), values__8873__auto___36159)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36149) {
    var t__8911__auto___36161 = e36149;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
    new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36161, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36162 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8874__auto___36163 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___36162);
    if (cljs.core.truth_(result__8874__auto___36163)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___36162), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto___36162)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36150) {
    var t__8911__auto___36164 = e36150;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36164, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36165 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), c);
    var result__8874__auto___36166 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___36165);
    if (cljs.core.truth_(result__8874__auto___36166)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___36165), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto___36165)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36151) {
    var t__8911__auto___36167 = e36151;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36167, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36168 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8874__auto___36169 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36168);
    if (cljs.core.truth_(result__8874__auto___36169)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36168), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36168)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36152) {
    var t__8911__auto___36170 = e36152;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36170, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36171 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___36172 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36171);
    if (cljs.core.truth_(result__8874__auto___36172)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36171), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36171)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36153) {
    var t__8911__auto___36173 = e36153;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36173, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36174 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___36175 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36174);
    if (cljs.core.truth_(result__8874__auto___36175)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36174), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36174)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36154) {
    var t__8911__auto___36176 = e36154;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36176, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36177 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__8874__auto___36178 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___36177);
    if (cljs.core.truth_(result__8874__auto___36178)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___36177), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___36177)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36155) {
    var t__8911__auto___36179 = e36155;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36179, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36180 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_valid_QMARK_.call(null, c));
    var result__8874__auto___36181 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___36180);
    if (cljs.core.truth_(result__8874__auto___36181)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___36180), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___36180)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36156) {
    var t__8911__auto___36182 = e36156;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36182, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36183 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8874__auto___36184 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___36183);
    if (cljs.core.truth_(result__8874__auto___36184)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___36183), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___36183)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36157) {
    var t__8911__auto___36185 = e36157;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36185, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "readddd", "readddd", 455623157), tiltontec.cell.evaluate.c_get.call(null, c));
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e36158) {
    var t__8911__auto__ = e36158;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula", "tiltontec.cell.evaluate-test/t-formula", 1151821320, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/evaluate_test.cljc", 19, 1, 57, 57, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula) ? tiltontec.cell.evaluate_test.t_formula.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula_2 = function tiltontec$cell$evaluate_test$t_formula_2() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula_2.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test = function() {
  var b = tiltontec.cell.core.c_in.call(null, 2);
  var cct = cljs.core.atom.call(null, 0);
  var dct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
  "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct));
  var d = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
  "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct, c) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, dct, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, c) + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct, c));
  try {
    var values__8873__auto___36197 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 44), tiltontec.cell.evaluate.c_get.call(null, d));
    var result__8874__auto___36198 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36197);
    if (cljs.core.truth_(result__8874__auto___36198)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36197), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36197)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36186) {
    var t__8911__auto___36199 = e36186;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36199, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36200 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto___36201 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36200);
    if (cljs.core.truth_(result__8874__auto___36201)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36200), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36200)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36187) {
    var t__8911__auto___36202 = e36187;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36202, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36203 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8874__auto___36204 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36203);
    if (cljs.core.truth_(result__8874__auto___36204)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36203), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36203)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36188) {
    var t__8911__auto___36205 = e36188;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36205, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36206 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 1);
    var result__8874__auto___36207 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36206);
    if (cljs.core.truth_(result__8874__auto___36207)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36206), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36206)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36189) {
    var t__8911__auto___36208 = e36189;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36208, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36209 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__8874__auto___36210 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36209);
    if (cljs.core.truth_(result__8874__auto___36210)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36209), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36209)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36190) {
    var t__8911__auto___36211 = e36190;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36211, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36212 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, b))), 0);
    var result__8874__auto___36213 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36212);
    if (cljs.core.truth_(result__8874__auto___36213)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36212), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36212)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36191) {
    var t__8911__auto___36214 = e36191;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36214, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36215 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, b))), 2);
    var result__8874__auto___36216 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36215);
    if (cljs.core.truth_(result__8874__auto___36216)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36215), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36215)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36192) {
    var t__8911__auto___36217 = e36192;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
    new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36217, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36218 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, c))), 1);
    var result__8874__auto___36219 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36218);
    if (cljs.core.truth_(result__8874__auto___36219)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36218), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36218)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36193) {
    var t__8911__auto___36220 = e36193;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36220, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36221 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, c))), 1);
    var result__8874__auto___36222 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36221);
    if (cljs.core.truth_(result__8874__auto___36222)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36221), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36221)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36194) {
    var t__8911__auto___36223 = e36194;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
    new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36223, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36224 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, d))), 2);
    var result__8874__auto___36225 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36224);
    if (cljs.core.truth_(result__8874__auto___36225)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36224), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36224)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36195) {
    var t__8911__auto___36226 = e36195;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36226, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, d))), 0);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e36196) {
    var t__8911__auto__ = e36196;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, 
    null), new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula_2;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-2", "tiltontec.cell.evaluate-test/t-formula-2", 1653829372, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-2", "t-formula-2", 844540770, null), "test/tiltontec/cell/evaluate_test.cljc", 21, 1, 74, 
74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_2) ? tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.yowza = cljs.core.atom.call(null, 0);
tiltontec.cell.evaluate_test.t_in_reset = function tiltontec$cell$evaluate_test$t_in_reset() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_in_reset.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test = function() {
  cljs.core.reset_BANG_.call(null, tiltontec.cell.evaluate_test.yowza, 0);
  try {
    var values__8873__auto___36232 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 0), cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza));
    var result__8874__auto___36233 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36232);
    if (cljs.core.truth_(result__8874__auto___36233)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
      0), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36232), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
      0), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36232)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36227) {
    var t__8911__auto___36234 = e36227;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
    0), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36234, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "yowza", "yowza", 561311574), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(slot, me, new$, old, c) {
    return cljs.core.reset_BANG_.call(null, tiltontec.cell.evaluate_test.yowza, new$);
  });
  try {
    var values__8873__auto___36235 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 2);
    var result__8874__auto___36236 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36235);
    if (cljs.core.truth_(result__8874__auto___36236)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36235), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36235)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36228) {
    var t__8911__auto___36237 = e36228;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36237, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36238 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza)), 2);
    var result__8874__auto___36239 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36238);
    if (cljs.core.truth_(result__8874__auto___36239)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36238), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36238)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36229) {
    var t__8911__auto___36240 = e36229;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36240, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 42);
  try {
    var values__8873__auto___36241 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 42);
    var result__8874__auto___36242 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36241);
    if (cljs.core.truth_(result__8874__auto___36242)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36241), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36241)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36230) {
    var t__8911__auto___36243 = e36230;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36243, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza)), 42);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e36231) {
    var t__8911__auto__ = e36231;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_in_reset;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-in-reset", "tiltontec.cell.evaluate-test/t-in-reset", -1060627208, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-in-reset", "t-in-reset", 285694538, null), "test/tiltontec/cell/evaluate_test.cljc", 20, 1, 100, 100, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_in_reset) ? tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula_22 = function tiltontec$cell$evaluate_test$t_formula_22() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula_22.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837));
  var cct = cljs.core.atom.call(null, 0);
  var dct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct));
  var d = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, 
  null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct, c) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, dct, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, c) + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct, c));
  try {
    var values__8873__auto___36254 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 44), tiltontec.cell.evaluate.c_get.call(null, d));
    var result__8874__auto___36255 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36254);
    if (cljs.core.truth_(result__8874__auto___36255)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36254), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36254)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36244) {
    var t__8911__auto___36256 = e36244;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36256, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36257 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto___36258 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36257);
    if (cljs.core.truth_(result__8874__auto___36258)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36257), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36257)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36245) {
    var t__8911__auto___36259 = e36245;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36259, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36260 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8874__auto___36261 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36260);
    if (cljs.core.truth_(result__8874__auto___36261)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36260), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36260)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36246) {
    var t__8911__auto___36262 = e36246;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36262, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36263 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 1);
    var result__8874__auto___36264 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36263);
    if (cljs.core.truth_(result__8874__auto___36264)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36263), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36263)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36247) {
    var t__8911__auto___36265 = e36247;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36265, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36266 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__8874__auto___36267 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36266);
    if (cljs.core.truth_(result__8874__auto___36267)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36266), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36266)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36248) {
    var t__8911__auto___36268 = e36248;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36268, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 3);
  try {
    var values__8873__auto___36269 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 46), tiltontec.cell.evaluate.c_get.call(null, d));
    var result__8874__auto___36270 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36269);
    if (cljs.core.truth_(result__8874__auto___36270)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36269), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36269)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36249) {
    var t__8911__auto___36271 = e36249;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36271, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36272 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 43), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto___36273 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36272);
    if (cljs.core.truth_(result__8874__auto___36273)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36272), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36272)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36250) {
    var t__8911__auto___36274 = e36250;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36274, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36275 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8874__auto___36276 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36275);
    if (cljs.core.truth_(result__8874__auto___36276)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36275), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36275)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36251) {
    var t__8911__auto___36277 = e36251;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36277, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36278 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 2);
    var result__8874__auto___36279 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36278);
    if (cljs.core.truth_(result__8874__auto___36279)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36278), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36278)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36252) {
    var t__8911__auto___36280 = e36252;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36280, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 2);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e36253) {
    var t__8911__auto__ = e36253;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula_22;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-22", "tiltontec.cell.evaluate-test/t-formula-22", 626462137, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-22", "t-formula-22", -194457801, null), "test/tiltontec/cell/evaluate_test.cljc", 22, 1, 111, 
111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_22) ? tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.pentagram_of_death = function tiltontec$cell$evaluate_test$pentagram_of_death() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$pentagram_of_death.cljs$lang$var);
};
tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var run = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var obs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var rset = function(run, obs) {
    return function() {
      cljs.core.swap_BANG_.call(null, run, cljs.core.empty);
      return cljs.core.swap_BANG_.call(null, obs, cljs.core.empty);
    };
  }(run, obs);
  var logit = function(run, obs, rset) {
    return function(log, key) {
      return cljs.core.swap_BANG_.call(null, run, cljs.core.assoc, key, key.call(null, cljs.core.deref.call(null, run), 0) + 1);
    };
  }(run, obs, rset);
  var logrun = function(run, obs, rset, logit) {
    return function(p1__36281_SHARP_) {
      return logit.call(null, run, p1__36281_SHARP_);
    };
  }(run, obs, rset, logit);
  var cr = function(run, obs, rset, logit, logrun) {
    return function(c) {
      return tiltontec.cell.evaluate.c_get.call(null, c);
    };
  }(run, obs, rset, logit, logrun);
  var podobs = function(run, obs, rset, logit, logrun, cr) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, obs, cljs.core.assoc, slot, slot.call(null, cljs.core.deref.call(null, obs), 0) + 1);
    };
  }(run, obs, rset, logit, logrun, cr);
  var aa = tiltontec.cell.core.c_in.call(null, 1, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs);
  var a7 = tiltontec.cell.core.c_in.call(null, 7, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "a7", "a7", 1513050971), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs);
  var a70 = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "a70", "a70", 798099193), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "a70", "a70", 798099193)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, 
  null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "a7", "a7", -1141384798, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "a70", "a70", 798099193));
      return 10 * cr.call(null, a7);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7));
  var bb = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "bb", "bb", 75940837)), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), 
  new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837));
      return cr.call(null, aa);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70));
  var cc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "cc", "cc", 301258124)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
  10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "cc", "cc", 301258124));
      return 10 * cr.call(null, aa);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb));
  var dd = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629)), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, 
  null), cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), 42)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "dd", "dd", -1340437629));
      if (cljs.core.even_QMARK_.call(null, cr.call(null, bb))) {
        return 10 * cr.call(null, cc);
      } else {
        return 42;
      }
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc));
  var ee = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "ee", "ee", 643317400), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "ee", "ee", 643317400)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "a70", "a70", -1856336576, null)), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 1E4, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "ee", "ee", 643317400));
      return cr.call(null, a70) + cr.call(null, bb) + 1E4 * cr.call(null, dd);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd));
  var verify_p_current = function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd, ee) {
    return function() {
      try {
        var values__8873__auto___36330 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, aa)), 2);
        var result__8874__auto___36331 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36330);
        if (cljs.core.truth_(result__8874__auto___36331)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36330), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36330)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e36282) {
        var t__8911__auto___36332 = e36282;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8911__auto___36332, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8873__auto___36333 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, bb)), 2);
        var result__8874__auto___36334 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36333);
        if (cljs.core.truth_(result__8874__auto___36334)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36333), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36333)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e36283) {
        var t__8911__auto___36335 = e36283;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8911__auto___36335, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8873__auto___36336 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, cc)), 20);
        var result__8874__auto___36337 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36336);
        if (cljs.core.truth_(result__8874__auto___36337)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36336), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36336)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e36284) {
        var t__8911__auto___36338 = e36284;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8911__auto___36338, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8873__auto___36339 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 200);
        var result__8874__auto___36340 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36339);
        if (cljs.core.truth_(result__8874__auto___36340)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36339), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36339)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e36285) {
        var t__8911__auto___36341 = e36285;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8911__auto___36341, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, ee)), 2000072);
        var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
        if (cljs.core.truth_(result__8874__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__8874__auto__;
      } catch (e36286) {
        var t__8911__auto__ = e36286;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd, ee);
  try {
    var values__8873__auto___36342 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, aa)), 1);
    var result__8874__auto___36343 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36342);
    if (cljs.core.truth_(result__8874__auto___36343)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36342), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36342)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36287) {
    var t__8911__auto___36344 = e36287;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8911__auto___36344, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36345 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, bb)), 1);
    var result__8874__auto___36346 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36345);
    if (cljs.core.truth_(result__8874__auto___36346)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36345), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36345)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36288) {
    var t__8911__auto___36347 = e36288;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8911__auto___36347, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36348 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, cc)), 10);
    var result__8874__auto___36349 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36348);
    if (cljs.core.truth_(result__8874__auto___36349)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36348), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36348)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36289) {
    var t__8911__auto___36350 = e36289;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36350, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36351 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 42);
    var result__8874__auto___36352 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36351);
    if (cljs.core.truth_(result__8874__auto___36352)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36351), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36351)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36290) {
    var t__8911__auto___36353 = e36290;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8911__auto___36353, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36354 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, ee)), 420071);
    var result__8874__auto___36355 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36354);
    if (cljs.core.truth_(result__8874__auto___36355)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36354), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36354)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36291) {
    var t__8911__auto___36356 = e36291;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36356, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36357 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, aa)), null);
    var result__8874__auto___36358 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36357);
    if (cljs.core.truth_(result__8874__auto___36358)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36357), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36357)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36292) {
    var t__8911__auto___36359 = e36292;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36359, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36360 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, aa, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null], null), null));
    var result__8874__auto___36361 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36360);
    if (cljs.core.truth_(result__8874__auto___36361)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36360), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36360)), 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36293) {
    var t__8911__auto___36362 = e36293;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
    "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36362, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36363 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, bb, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null));
    var result__8874__auto___36364 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36363);
    if (cljs.core.truth_(result__8874__auto___36364)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36363), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36363)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e36294) {
    var t__8911__auto___36365 = e36294;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36365, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36366 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, bb, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null));
    var result__8874__auto___36367 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36366);
    if (cljs.core.truth_(result__8874__auto___36367)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36366), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36366)), 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36295) {
    var t__8911__auto___36368 = e36295;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
    "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36368, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36369 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, cc, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null));
    var result__8874__auto___36370 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36369);
    if (cljs.core.truth_(result__8874__auto___36370)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36369), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36369)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e36296) {
    var t__8911__auto___36371 = e36296;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36371, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36372 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, cc, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___36373 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36372);
    if (cljs.core.truth_(result__8874__auto___36373)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36372), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36372)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36297) {
    var t__8911__auto___36374 = e36297;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
    null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36374, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36375 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null));
    var result__8874__auto___36376 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36375);
    if (cljs.core.truth_(result__8874__auto___36376)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36375), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36375)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e36298) {
    var t__8911__auto___36377 = e36298;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36377, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36378 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null));
    var result__8874__auto___36379 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36378);
    if (cljs.core.truth_(result__8874__auto___36379)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36378), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36378)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e36299) {
    var t__8911__auto___36380 = e36299;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36380, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36381 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, ee, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null));
    var result__8874__auto___36382 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36381);
    if (cljs.core.truth_(result__8874__auto___36382)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36381), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
      "\x3d", "\x3d", -1501502141, null), values__8873__auto___36381)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36300) {
    var t__8911__auto___36383 = e36300;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
    "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36383, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36384 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, ee, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___36385 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36384);
    if (cljs.core.truth_(result__8874__auto___36385)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36384), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36384)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36301) {
    var t__8911__auto___36386 = e36301;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
    null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36386, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var _STAR_trx_QMARK__STAR_36302 = tiltontec.util.base._STAR_trx_QMARK__STAR_;
  tiltontec.util.base._STAR_trx_QMARK__STAR_ = true;
  try {
    rset.call(null);
    var seq__36303_36387 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, obs)));
    var chunk__36304_36388 = null;
    var count__36305_36389 = 0;
    var i__36306_36390 = 0;
    while (true) {
      if (i__36306_36390 < count__36305_36389) {
        var vec__36307_36391 = cljs.core._nth.call(null, chunk__36304_36388, i__36306_36390);
        var k_36392 = cljs.core.nth.call(null, vec__36307_36391, 0, null);
        var v_36393 = cljs.core.nth.call(null, vec__36307_36391, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_36392, v_36393);
        try {
          var value__8876__auto___36394 = k_36392 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 0, v_36393);
          if (value__8876__auto___36394) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36394, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36394, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e36308) {
          var t__8911__auto___36395 = e36308;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36395, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__36396 = seq__36303_36387;
        var G__36397 = chunk__36304_36388;
        var G__36398 = count__36305_36389;
        var G__36399 = i__36306_36390 + 1;
        seq__36303_36387 = G__36396;
        chunk__36304_36388 = G__36397;
        count__36305_36389 = G__36398;
        i__36306_36390 = G__36399;
        continue;
      } else {
        var temp__4425__auto___36400 = cljs.core.seq.call(null, seq__36303_36387);
        if (temp__4425__auto___36400) {
          var seq__36303_36401__$1 = temp__4425__auto___36400;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__36303_36401__$1)) {
            var c__5338__auto___36402 = cljs.core.chunk_first.call(null, seq__36303_36401__$1);
            var G__36403 = cljs.core.chunk_rest.call(null, seq__36303_36401__$1);
            var G__36404 = c__5338__auto___36402;
            var G__36405 = cljs.core.count.call(null, c__5338__auto___36402);
            var G__36406 = 0;
            seq__36303_36387 = G__36403;
            chunk__36304_36388 = G__36404;
            count__36305_36389 = G__36405;
            i__36306_36390 = G__36406;
            continue;
          } else {
            var vec__36309_36407 = cljs.core.first.call(null, seq__36303_36401__$1);
            var k_36408 = cljs.core.nth.call(null, vec__36309_36407, 0, null);
            var v_36409 = cljs.core.nth.call(null, vec__36309_36407, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_36408, v_36409);
            try {
              var value__8876__auto___36410 = k_36408 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 0, v_36409);
              if (value__8876__auto___36410) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36410, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36410, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e36310) {
              var t__8911__auto___36411 = e36310;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36411, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__36412 = cljs.core.next.call(null, seq__36303_36401__$1);
            var G__36413 = null;
            var G__36414 = 0;
            var G__36415 = 0;
            seq__36303_36387 = G__36412;
            chunk__36304_36388 = G__36413;
            count__36305_36389 = G__36414;
            i__36306_36390 = G__36415;
            continue;
          }
        } else {
        }
      }
      break;
    }
    tiltontec.cell.core.c_reset_BANG_.call(null, aa, cr.call(null, aa) + 1);
    cljs.core._EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, run))));
    var seq__36311_36416 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, run)));
    var chunk__36312_36417 = null;
    var count__36313_36418 = 0;
    var i__36314_36419 = 0;
    while (true) {
      if (i__36314_36419 < count__36313_36418) {
        var vec__36315_36420 = cljs.core._nth.call(null, chunk__36312_36417, i__36314_36419);
        var k_36421 = cljs.core.nth.call(null, vec__36315_36420, 0, null);
        var v_36422 = cljs.core.nth.call(null, vec__36315_36420, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "runchk", "runchk", -886583070), k_36421, v_36422);
        try {
          var value__8876__auto___36423 = k_36421 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_36422);
          if (value__8876__auto___36423) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36423, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36423, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e36316) {
          var t__8911__auto___36424 = e36316;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36424, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__36425 = seq__36311_36416;
        var G__36426 = chunk__36312_36417;
        var G__36427 = count__36313_36418;
        var G__36428 = i__36314_36419 + 1;
        seq__36311_36416 = G__36425;
        chunk__36312_36417 = G__36426;
        count__36313_36418 = G__36427;
        i__36314_36419 = G__36428;
        continue;
      } else {
        var temp__4425__auto___36429 = cljs.core.seq.call(null, seq__36311_36416);
        if (temp__4425__auto___36429) {
          var seq__36311_36430__$1 = temp__4425__auto___36429;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__36311_36430__$1)) {
            var c__5338__auto___36431 = cljs.core.chunk_first.call(null, seq__36311_36430__$1);
            var G__36432 = cljs.core.chunk_rest.call(null, seq__36311_36430__$1);
            var G__36433 = c__5338__auto___36431;
            var G__36434 = cljs.core.count.call(null, c__5338__auto___36431);
            var G__36435 = 0;
            seq__36311_36416 = G__36432;
            chunk__36312_36417 = G__36433;
            count__36313_36418 = G__36434;
            i__36314_36419 = G__36435;
            continue;
          } else {
            var vec__36317_36436 = cljs.core.first.call(null, seq__36311_36430__$1);
            var k_36437 = cljs.core.nth.call(null, vec__36317_36436, 0, null);
            var v_36438 = cljs.core.nth.call(null, vec__36317_36436, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "runchk", "runchk", -886583070), k_36437, v_36438);
            try {
              var value__8876__auto___36439 = k_36437 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_36438);
              if (value__8876__auto___36439) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36439, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36439, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e36318) {
              var t__8911__auto___36440 = e36318;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36440, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__36441 = cljs.core.next.call(null, seq__36311_36430__$1);
            var G__36442 = null;
            var G__36443 = 0;
            var G__36444 = 0;
            seq__36311_36416 = G__36441;
            chunk__36312_36417 = G__36442;
            count__36313_36418 = G__36443;
            i__36314_36419 = G__36444;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core._EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null, new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, obs))));
    var seq__36319_36445 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, obs)));
    var chunk__36320_36446 = null;
    var count__36321_36447 = 0;
    var i__36322_36448 = 0;
    while (true) {
      if (i__36322_36448 < count__36321_36447) {
        var vec__36323_36449 = cljs.core._nth.call(null, chunk__36320_36446, i__36322_36448);
        var k_36450 = cljs.core.nth.call(null, vec__36323_36449, 0, null);
        var v_36451 = cljs.core.nth.call(null, vec__36323_36449, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_36450, v_36451);
        try {
          var value__8876__auto___36452 = k_36450 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_36451);
          if (value__8876__auto___36452) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36452, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36452, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e36324) {
          var t__8911__auto___36453 = e36324;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36453, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__36454 = seq__36319_36445;
        var G__36455 = chunk__36320_36446;
        var G__36456 = count__36321_36447;
        var G__36457 = i__36322_36448 + 1;
        seq__36319_36445 = G__36454;
        chunk__36320_36446 = G__36455;
        count__36321_36447 = G__36456;
        i__36322_36448 = G__36457;
        continue;
      } else {
        var temp__4425__auto___36458 = cljs.core.seq.call(null, seq__36319_36445);
        if (temp__4425__auto___36458) {
          var seq__36319_36459__$1 = temp__4425__auto___36458;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__36319_36459__$1)) {
            var c__5338__auto___36460 = cljs.core.chunk_first.call(null, seq__36319_36459__$1);
            var G__36461 = cljs.core.chunk_rest.call(null, seq__36319_36459__$1);
            var G__36462 = c__5338__auto___36460;
            var G__36463 = cljs.core.count.call(null, c__5338__auto___36460);
            var G__36464 = 0;
            seq__36319_36445 = G__36461;
            chunk__36320_36446 = G__36462;
            count__36321_36447 = G__36463;
            i__36322_36448 = G__36464;
            continue;
          } else {
            var vec__36325_36465 = cljs.core.first.call(null, seq__36319_36459__$1);
            var k_36466 = cljs.core.nth.call(null, vec__36325_36465, 0, null);
            var v_36467 = cljs.core.nth.call(null, vec__36325_36465, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_36466, v_36467);
            try {
              var value__8876__auto___36468 = k_36466 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_36467);
              if (value__8876__auto___36468) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36468, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___36468, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e36326) {
              var t__8911__auto___36469 = e36326;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36469, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__36470 = cljs.core.next.call(null, seq__36319_36459__$1);
            var G__36471 = null;
            var G__36472 = 0;
            var G__36473 = 0;
            seq__36319_36445 = G__36470;
            chunk__36320_36446 = G__36471;
            count__36321_36447 = G__36472;
            i__36322_36448 = G__36473;
            continue;
          }
        } else {
        }
      }
      break;
    }
    try {
      var values__8873__auto___36474 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null], null), null));
      var result__8874__auto___36475 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36474);
      if (cljs.core.truth_(result__8874__auto___36475)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
        "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36474), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
        "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36474)), 
        new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e36327) {
      var t__8911__auto___36476 = e36327;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36476, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    verify_p_current.call(null);
    tiltontec.cell.core.c_reset_BANG_.call(null, aa, cr.call(null, aa) + 1);
    try {
      var values__8873__auto___36477 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 42);
      var result__8874__auto___36478 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36477);
      if (cljs.core.truth_(result__8874__auto___36478)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36477), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36477)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e36328) {
      var t__8911__auto___36479 = e36328;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), t__8911__auto___36479, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null));
      var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
      if (cljs.core.truth_(result__8874__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
        "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
        "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
        "message", "message", -406056002), null], null));
      }
      return result__8874__auto__;
    } catch (e36329) {
      var t__8911__auto__ = e36329;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    tiltontec.util.base._STAR_trx_QMARK__STAR_ = _STAR_trx_QMARK__STAR_36302;
  }
};
tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.pentagram_of_death;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "pentagram-of-death", "tiltontec.cell.evaluate-test/pentagram-of-death", -438613751, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "pentagram-of-death", "pentagram-of-death", 874385051, null), "test/tiltontec/cell/evaluate_test.cljc", 
28, 1, 147, 147, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.pentagram_of_death) ? tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_cell_unchanged_test = function tiltontec$cell$evaluate_test$t_cell_unchanged_test() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_cell_unchanged_test.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var ob = cljs.core.atom.call(null, 0);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(ob) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obs-bb!!", "obs-bb!!", -1369030842), new$, old);
      return cljs.core.swap_BANG_.call(null, ob, cljs.core.inc);
    };
  }(ob), new cljs.core.Keyword(null, "unchanged-if", "unchanged-if", -923210106), function(ob) {
    return function(n, p) {
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "ucif-sees", "ucif-sees", -1878078109), n, p);
      return typeof n === "number" && typeof p === "number" && (cljs.core.even_QMARK_.call(null, n) && cljs.core.even_QMARK_.call(null, p) || cljs.core.odd_QMARK_.call(null, n) && cljs.core.odd_QMARK_.call(null, p));
    };
  }(ob));
  var cct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(ob, b, cct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(ob, b, cct));
  try {
    var values__8873__auto___36492 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto___36493 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36492);
    if (cljs.core.truth_(result__8874__auto___36493)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36492), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36492)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36480) {
    var t__8911__auto___36494 = e36480;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36494, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36495 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8874__auto___36496 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36495);
    if (cljs.core.truth_(result__8874__auto___36496)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36495), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36495)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36481) {
    var t__8911__auto___36497 = e36481;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36497, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36498 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 1);
    var result__8874__auto___36499 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36498);
    if (cljs.core.truth_(result__8874__auto___36499)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36498), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36498)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36482) {
    var t__8911__auto___36500 = e36482;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36500, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36501 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__8874__auto___36502 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36501);
    if (cljs.core.truth_(result__8874__auto___36502)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36501), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36501)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36483) {
    var t__8911__auto___36503 = e36483;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36503, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 4);
  try {
    var values__8873__auto___36504 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto___36505 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36504);
    if (cljs.core.truth_(result__8874__auto___36505)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36504), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36504)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36484) {
    var t__8911__auto___36506 = e36484;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36506, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36507 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 4), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8874__auto___36508 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36507);
    if (cljs.core.truth_(result__8874__auto___36508)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36507), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36507)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36485) {
    var t__8911__auto___36509 = e36485;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36509, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36510 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 1);
    var result__8874__auto___36511 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36510);
    if (cljs.core.truth_(result__8874__auto___36511)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36510), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36510)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36486) {
    var t__8911__auto___36512 = e36486;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36512, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36513 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__8874__auto___36514 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36513);
    if (cljs.core.truth_(result__8874__auto___36514)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36513), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36513)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36487) {
    var t__8911__auto___36515 = e36487;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36515, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 5);
  try {
    var values__8873__auto___36516 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 45), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8874__auto___36517 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36516);
    if (cljs.core.truth_(result__8874__auto___36517)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36516), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36516)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36488) {
    var t__8911__auto___36518 = e36488;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36518, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36519 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 5), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8874__auto___36520 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36519);
    if (cljs.core.truth_(result__8874__auto___36520)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36519), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36519)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36489) {
    var t__8911__auto___36521 = e36489;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36521, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36522 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 2);
    var result__8874__auto___36523 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36522);
    if (cljs.core.truth_(result__8874__auto___36523)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36522), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36522)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36490) {
    var t__8911__auto___36524 = e36490;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36524, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 2);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e36491) {
    var t__8911__auto__ = e36491;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_cell_unchanged_test;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-cell-unchanged-test", "tiltontec.cell.evaluate-test/t-cell-unchanged-test", -1587253216, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-cell-unchanged-test", "t-cell-unchanged-test", -257732942, null), "test/tiltontec/cell/evaluate_test.cljc", 
31, 1, 294, 294, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_cell_unchanged_test) ? tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.opti_away = function tiltontec$cell$evaluate_test$opti_away() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$opti_away.cljs$lang$var);
};
tiltontec.cell.evaluate_test.opti_away.cljs$lang$test = function() {
  var aa = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(42), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 42;
  });
  try {
    var values__8873__auto___36528 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, aa)), 42);
    var result__8874__auto___36529 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36528);
    if (cljs.core.truth_(result__8874__auto___36529)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36528), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36528)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36525) {
    var t__8911__auto___36530 = e36525;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36530, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), cljs.core.deref.call(null, aa));
  try {
    var values__8873__auto___36531 = cljs.core._conj.call(null, cljs.core.List.EMPTY, aa);
    var result__8874__auto___36532 = cljs.core.apply.call(null, tiltontec.cell.base.c_optimized_away_QMARK_, values__8873__auto___36531);
    if (cljs.core.truth_(result__8874__auto___36532)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      tiltontec.cell.base.c_optimized_away_QMARK_, values__8873__auto___36531), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), values__8873__auto___36531)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36526) {
    var t__8911__auto___36533 = e36526;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36533, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, aa)), 42);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e36527) {
    var t__8911__auto__ = e36527;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.opti_away.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.opti_away;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "opti-away", "tiltontec.cell.evaluate-test/opti-away", 1608981072, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "opti-away", "opti-away", -1363650270, null), "test/tiltontec/cell/evaluate_test.cljc", 19, 1, 329, 329, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.opti_away) ? tiltontec.cell.evaluate_test.opti_away.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env36534 = cljs.test.empty_env.call(null);
  var summary36535 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env36534, summary36535) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env36534);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8978__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env36534, summary36535) {
          return function() {
            if (env__8978__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8978__auto__, env36534, summary36535)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "test-input", "tiltontec.cell.evaluate-test/test-input", -1028428775, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/evaluate_test.cljc", 
        20, 1, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.test_input) ? tiltontec.cell.evaluate_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula", "tiltontec.cell.evaluate-test/t-formula", 1151821320, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/evaluate_test.cljc", 
        19, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula) ? tiltontec.cell.evaluate_test.t_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula_2;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-2", "tiltontec.cell.evaluate-test/t-formula-2", 1653829372, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-2", "t-formula-2", 844540770, null), "test/tiltontec/cell/evaluate_test.cljc", 
        21, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_2) ? tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_in_reset;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-in-reset", "tiltontec.cell.evaluate-test/t-in-reset", -1060627208, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-in-reset", "t-in-reset", 285694538, null), "test/tiltontec/cell/evaluate_test.cljc", 
        20, 1, 100, 100, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_in_reset) ? tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula_22;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-22", "tiltontec.cell.evaluate-test/t-formula-22", 626462137, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-22", "t-formula-22", -194457801, null), "test/tiltontec/cell/evaluate_test.cljc", 
        22, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_22) ? tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.pentagram_of_death;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "pentagram-of-death", "tiltontec.cell.evaluate-test/pentagram-of-death", -438613751, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "pentagram-of-death", "pentagram-of-death", 874385051, null), "test/tiltontec/cell/evaluate_test.cljc", 
        28, 1, 147, 147, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.pentagram_of_death) ? tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_cell_unchanged_test;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-cell-unchanged-test", "tiltontec.cell.evaluate-test/t-cell-unchanged-test", -1587253216, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-cell-unchanged-test", "t-cell-unchanged-test", -257732942, null), "test/tiltontec/cell/evaluate_test.cljc", 
        31, 1, 294, 294, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_cell_unchanged_test) ? tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.opti_away;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "opti-away", "tiltontec.cell.evaluate-test/opti-away", 1608981072, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "opti-away", "opti-away", -1363650270, null), "test/tiltontec/cell/evaluate_test.cljc", 
        19, 1, 329, 329, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.opti_away) ? tiltontec.cell.evaluate_test.opti_away.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env36534, summary36535) {
          return function() {
            if (env__8978__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8978__auto__, env36534, summary36535)], null));
      }());
    };
  }(env36534, summary36535), function(env36534, summary36535) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env36534, summary36535)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env36534, summary36535) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary36535, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary36535), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env36534, summary36535)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env36534, summary36535) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env36534);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary36535));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary36535), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env36534, summary36535)], null));
}());
goog.provide("tiltontec.cell.hello_cells_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.cell.evaluate");
tiltontec.cell.hello_cells_test.hw_01 = function tiltontec$cell$hello_cells_test$hw_01() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_01.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test = function() {
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.make_cell.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), "knocks", new cljs.core.Keyword(null, "input?", "input?", -1792843173), true)], null);
  cljs.core.println.call(null, tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
  try {
    var values__8873__auto___35828 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "World"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8874__auto___35829 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35828);
    if (cljs.core.truth_(result__8874__auto___35829)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35828), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35828)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35826) {
    var t__8911__auto___35830 = e35826;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35830, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knocks"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35827) {
    var t__8911__auto__ = e35827;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_01.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_01;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-01", "tiltontec.cell.hello-cells-test/hw-01", -1914102464, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-01", "hw-01", -198427897, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 42, 42, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_01) ? tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_02 = function tiltontec$cell$hello_cells_test$hw_02() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_02.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test = function() {
  var obs_action = cljs.core.atom.call(null, null);
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, "knocks", new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action) {
    return function(slot, me, new$, old, c) {
      cljs.core.reset_BANG_.call(null, obs_action, new$);
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "observing", "observing", 1065333653), slot, new$, old);
    };
  }(obs_action))], null);
  try {
    var values__8873__auto___35834 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "World"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8874__auto___35835 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35834);
    if (cljs.core.truth_(result__8874__auto___35835)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35834), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35834)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35831) {
    var t__8911__auto___35836 = e35831;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35836, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35837 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knocks"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8874__auto___35838 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35837);
    if (cljs.core.truth_(result__8874__auto___35838)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35837), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35837)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35832) {
    var t__8911__auto___35839 = e35832;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35839, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, obs_action)), "knocks");
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
      223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
      223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35833) {
    var t__8911__auto__ = e35833;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
    223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_02.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_02;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-02", "tiltontec.cell.hello-cells-test/hw-02", -1923842247, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-02", "hw-02", -1769431692, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 54, 
54, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_02) ? tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_03 = function tiltontec$cell$hello_cells_test$hw_03() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_03.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test = function() {
  var action = cljs.core.atom.call(null, null);
  var obs_action = function(action) {
    return function(slot, me, new$, old, c) {
      cljs.core.reset_BANG_.call(null, action, new$);
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "observing", "observing", 1065333653), slot, new$, old);
    };
  }(action);
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  try {
    var values__8873__auto___35844 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8874__auto___35845 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35844);
    if (cljs.core.truth_(result__8874__auto___35845)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35844), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35844)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35840) {
    var t__8911__auto___35846 = e35840;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35846, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35847 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, action));
    var result__8874__auto___35848 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35847);
    if (cljs.core.truth_(result__8874__auto___35848)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35847), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35847)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35841) {
    var t__8911__auto___35849 = e35841;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35849, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), "knock-knock");
  try {
    var values__8873__auto___35850 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, action)), "knock-knock");
    var result__8874__auto___35851 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35850);
    if (cljs.core.truth_(result__8874__auto___35851)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35850), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35850)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35842) {
    var t__8911__auto___35852 = e35842;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35852, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knock-knock"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35843) {
    var t__8911__auto__ = e35843;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_03.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_03;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-03", "tiltontec.cell.hello-cells-test/hw-03", -166136141, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-03", "hw-03", -237693708, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 68, 68, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_03) ? tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.gobs = function tiltontec$cell$hello_cells_test$gobs(slot, me, new$, old, c) {
  return cljs.core.println.call(null, new cljs.core.Keyword(null, "gobs\x3e", "gobs\x3e", 972099754), slot, new$, old);
};
tiltontec.cell.hello_cells_test.hw_04 = function tiltontec$cell$hello_cells_test$hw_04() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_04.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test = function() {
  var r_action = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "r-action", "r-action", -113870725), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.hello_cells_test.gobs);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "r-loc", "r-loc", 1040711343), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.hello_cells_test.gobs, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(r_action) {
    return function(c) {
      var G__35853 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__35853) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "at-home", "at-home", 1687350383);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(r_action));
  tiltontec.cell.evaluate.c_awaken.call(null, r_loc);
  try {
    var values__8873__auto___35857 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, r_loc))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__8874__auto___35858 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35857);
    if (cljs.core.truth_(result__8874__auto___35858)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35857), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35857)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    }
  } catch (e35854) {
    var t__8911__auto___35859 = e35854;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35859, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "---about-to-leave------------------", "---about-to-leave------------------", 511366567));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "---left------------------", "---left------------------", -1129059094));
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "away", "away", 1142420954));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35855) {
    var t__8911__auto__ = e35855;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
    "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_04.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_04;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-04", "tiltontec.cell.hello-cells-test/hw-04", -1022076846, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-04", "hw-04", -86409835, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 88, 88, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_04) ? tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_5 = function tiltontec$cell$hello_cells_test$hw_5() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_5.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    return cljs.core.println.call(null, slot, new$, old);
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__35860 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__35860) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":r-resp", new$);
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, 
  "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__35861 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__35861) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  try {
    var values__8873__auto___35866 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_response));
    var result__8874__auto___35867 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35866);
    if (cljs.core.truth_(result__8874__auto___35867)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35866), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35866)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35862) {
    var t__8911__auto___35868 = e35862;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35868, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35863) {
    var t__8911__auto__ = e35863;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
    "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_5.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_5;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-5", "tiltontec.cell.hello-cells-test/hw-5", -1695099335, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-5", "hw-5", -2093878022, null), "test/tiltontec/cell/hello_cells_test.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_5) ? tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hello_world = function tiltontec$cell$hello_cells_test$hello_world() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hello_world.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    return cljs.core.println.call(null, slot, new$, old);
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__35869 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__35869) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
  "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__35870 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__35870) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  try {
    var values__8873__auto___35875 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_response));
    var result__8874__auto___35876 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35875);
    if (cljs.core.truth_(result__8874__auto___35876)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35875), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35875)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35871) {
    var t__8911__auto___35877 = e35871;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35877, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__8873__auto___35878 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__8874__auto___35879 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35878);
    if (cljs.core.truth_(result__8874__auto___35879)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35878), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35878)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35872) {
    var t__8911__auto___35880 = e35872;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
    "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35880, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.cell.hello_cells_test.hello_world.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hello_world;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world", "tiltontec.cell.hello-cells-test/hello-world", -896604635, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world", "hello-world", 852100064, null), "test/tiltontec/cell/hello_cells_test.cljc", 
21, 1, 130, 130, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world) ? tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hello_world_2 = function tiltontec$cell$hello_cells_test$hello_world_2() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hello_world_2.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    if (cljs.core.truth_(new$)) {
      return tiltontec.util.base.call_trc.call(null, "visitor-did", new$);
    } else {
      return null;
    }
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__35881 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__35881) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
  "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__35882 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__35882) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  var alarm = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc, r_response) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":telling-alarm-api", new$);
    };
  }(obs_action, v, r_action, r_loc, r_response), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, 
  "off", "off", 606440789), new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc, r_response) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        return new cljs.core.Keyword(null, "off", "off", 606440789);
      } else {
        return new cljs.core.Keyword(null, "on", "on", 173873944);
      }
    };
  }(obs_action, v, r_action, r_loc, r_response));
  var alarm_do = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc, r_response, alarm) {
    return function(slot, me, new$, old, c) {
      var G__35883 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
      switch(G__35883) {
        case "call-police":
          return tiltontec.util.base.call_trc.call(null, ":auto-dialing-911");
          break;
        default:
          return null;
      }
    };
  }(obs_action, v, r_action, r_loc, r_response, alarm), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null))), cljs.core.list(new cljs.core.Symbol(null, 
  "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc, r_response, alarm) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "on", "on", 173873944), tiltontec.cell.evaluate.c_get.call(null, alarm))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var action = temp__4425__auto__;
          var G__35884 = action instanceof cljs.core.Keyword ? action.fqn : null;
          switch(G__35884) {
            case "smashing-window":
              return new cljs.core.Keyword(null, "call-police", "call-police", -2114689981);
              break;
            default:
              return null;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc, r_response, alarm));
  tiltontec.cell.evaluate.c_awaken.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [alarm_do, r_response, r_loc, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)], null));
  try {
    var values__8873__auto___35891 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, r_loc))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__8874__auto___35892 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35891);
    if (cljs.core.truth_(result__8874__auto___35892)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35891), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35891)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    }
  } catch (e35885) {
    var t__8911__auto___35893 = e35885;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35893, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__8873__auto___35894 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__8874__auto___35895 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35894);
    if (cljs.core.truth_(result__8874__auto___35895)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35894), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35894)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35886) {
    var t__8911__auto___35896 = e35886;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
    "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35896, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hello_world_2;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world-2", "tiltontec.cell.hello-cells-test/hello-world-2", 1570168257, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world-2", "hello-world-2", 1439841158, null), "test/tiltontec/cell/hello_cells_test.cljc", 
23, 1, 157, 157, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world_2) ? tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env35897 = cljs.test.empty_env.call(null);
  var summary35898 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35897, summary35898) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35897);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8978__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35897, summary35898) {
          return function() {
            if (env__8978__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8978__auto__, env35897, summary35898)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_01;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-01", "tiltontec.cell.hello-cells-test/hw-01", -1914102464, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-01", "hw-01", -198427897, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 42, 42, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_01) ? tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_02;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-02", "tiltontec.cell.hello-cells-test/hw-02", -1923842247, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-02", "hw-02", -1769431692, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 54, 54, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_02) ? tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_03;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-03", "tiltontec.cell.hello-cells-test/hw-03", -166136141, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-03", "hw-03", -237693708, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 68, 68, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_03) ? tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_04;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-04", "tiltontec.cell.hello-cells-test/hw-04", -1022076846, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-04", "hw-04", -86409835, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 88, 88, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_04) ? tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_5;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-5", "tiltontec.cell.hello-cells-test/hw-5", -1695099335, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-5", "hw-5", -2093878022, null), "test/tiltontec/cell/hello_cells_test.cljc", 14, 1, 
        107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_5) ? tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hello_world;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world", "tiltontec.cell.hello-cells-test/hello-world", -896604635, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world", "hello-world", 852100064, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        21, 1, 130, 130, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world) ? tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hello_world_2;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world-2", "tiltontec.cell.hello-cells-test/hello-world-2", 1570168257, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world-2", "hello-world-2", 1439841158, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        23, 1, 157, 157, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world_2) ? tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35897, summary35898) {
          return function() {
            if (env__8978__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8978__auto__, env35897, summary35898)], null));
      }());
    };
  }(env35897, summary35898), function(env35897, summary35898) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env35897, summary35898)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35897, summary35898) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary35898, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary35898), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env35897, summary35898)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35897, summary35898) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35897);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary35898));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary35898), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env35897, summary35898)], null));
}());
goog.provide("tiltontec.util.core_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
tiltontec.util.core_test.fake_cl = function tiltontec$util$core_test$fake_cl() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fake_cl.cljs$lang$var);
};
tiltontec.util.core_test.fake_cl.cljs$lang$test = function() {
  try {
    var values__8873__auto___35909 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var result__31774__auto__ = 42;
      return result__31774__auto__;
    }()), 42);
    var result__8874__auto___35910 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35909);
    if (cljs.core.truth_(result__8874__auto___35910)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__8873__auto___35909), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35909)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35901) {
    var t__8911__auto___35911 = e35901;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35911, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35912 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var temp__4425__auto__ = 21 + 21;
      if (cljs.core.truth_(temp__4425__auto__)) {
        var x = temp__4425__auto__;
        return x;
      } else {
        return null;
      }
    }()), 42);
    var result__8874__auto___35913 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35912);
    if (cljs.core.truth_(result__8874__auto___35913)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
      "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35912), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
      "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35912)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35902) {
    var t__8911__auto___35914 = e35902;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
    "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35914, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35915 = cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var temp__4425__auto__ = false;
      if (temp__4425__auto__) {
        var x = temp__4425__auto__;
        return 42;
      } else {
        return null;
      }
    }());
    var result__8874__auto___35916 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35915);
    if (cljs.core.truth_(result__8874__auto___35916)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35915), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35915)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35903) {
    var t__8911__auto___35917 = e35903;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35917, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35918 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(41, 42, 43))), 42);
    var result__8874__auto___35919 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35918);
    if (cljs.core.truth_(result__8874__auto___35919)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35918), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35918)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35904) {
    var t__8911__auto___35920 = e35904;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35920, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35921 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(42, 43, 44))), 42);
    var result__8874__auto___35922 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35921);
    if (cljs.core.truth_(result__8874__auto___35922)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35921), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35921)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35905) {
    var t__8911__auto___35923 = e35905;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35923, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35924 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(40, 41, 42))), 42);
    var result__8874__auto___35925 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35924);
    if (cljs.core.truth_(result__8874__auto___35925)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35924), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35924)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35906) {
    var t__8911__auto___35926 = e35906;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35926, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35927 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._EQ_.call(null, 2, 3) ? null : function() {
      return 42;
    }()), 42);
    var result__8874__auto___35928 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35927);
    if (cljs.core.truth_(result__8874__auto___35928)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
      2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35927), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
      2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35927)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35907) {
    var t__8911__auto___35929 = e35907;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
    2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35929, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._EQ_.call(null, 2, 2) ? null : function() {
      return 42;
    }());
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 
      2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 
      2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35908) {
    var t__8911__auto__ = e35908;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
    2, 2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fake_cl.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fake_cl;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fake-cl", "tiltontec.util.core-test/fake-cl", -187163971, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fake-cl", "fake-cl", -506046351, null), "test/tiltontec/util/core_test.cljc", 17, 1, 22, 22, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fake_cl) ? 
tiltontec.util.core_test.fake_cl.cljs$lang$test : null]));
tiltontec.util.core_test.setify = function tiltontec$util$core_test$setify() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$setify.cljs$lang$var);
};
tiltontec.util.core_test.setify.cljs$lang$test = function() {
  try {
    var values__8873__auto___35937 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null));
    var result__8874__auto___35938 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35937);
    if (cljs.core.truth_(result__8874__auto___35938)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35937), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35937)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e35930) {
    var t__8911__auto___35939 = e35930;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35939, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35940 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 3), 2), 2), 1), 1))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null));
    var result__8874__auto___35941 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35940);
    if (cljs.core.truth_(result__8874__auto___35941)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35940), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35940)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", 
      -406056002), null], null));
    }
  } catch (e35931) {
    var t__8911__auto___35942 = e35931;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35942, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35943 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, null)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35944 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35943);
    if (cljs.core.truth_(result__8874__auto___35944)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35943), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35943)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35932) {
    var t__8911__auto___35945 = e35932;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__8911__auto___35945, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35946 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, 42)), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null));
    var result__8874__auto___35947 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35946);
    if (cljs.core.truth_(result__8874__auto___35947)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35946), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35946)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35933) {
    var t__8911__auto___35948 = e35933;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
    174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35948, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35949 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, "bob")), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null));
    var result__8874__auto___35950 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35949);
    if (cljs.core.truth_(result__8874__auto___35950)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35949), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35949)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35934) {
    var t__8911__auto___35951 = e35934;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
    174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35951, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35952 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true));
    var result__8874__auto___35953 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35952);
    if (cljs.core.truth_(result__8874__auto___35953)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35952), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35952)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", 
      "message", -406056002), null], null));
    }
  } catch (e35935) {
    var t__8911__auto___35954 = e35935;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35954, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, clojure.set.difference.call(null, tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), tiltontec.util.core.set_ify.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), 1)))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), 
    null));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
      "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
      "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35936) {
    var t__8911__auto__ = e35936;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
    "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.setify.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.setify;
}, new cljs.core.Symbol("tiltontec.util.core-test", "setify", "tiltontec.util.core-test/setify", -128931653, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "setify", "setify", 86404727, null), "test/tiltontec/util/core_test.cljc", 16, 1, 36, 36, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.setify) ? 
tiltontec.util.core_test.setify.cljs$lang$test : null]));
tiltontec.util.core_test.jj_boom = function tiltontec$util$core_test$jj_boom(ref) {
  return (new cljs.core.Keyword(null, "boom", "boom", 984913816)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.util.core_test.test_rmap = function tiltontec$util$core_test$test_rmap() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$test_rmap.cljs$lang$var);
};
tiltontec.util.core_test.test_rmap.cljs$lang$test = function() {
  var x = tiltontec.util.core.ia_ref.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), 0, new cljs.core.Keyword(null, "boom", "boom", 984913816), 42], null));
  try {
    var values__8873__auto___35960 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core_test.jj_boom.call(null, x)), 42);
    var result__8874__auto___35961 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35960);
    if (cljs.core.truth_(result__8874__auto___35961)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35960), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35960)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35955) {
    var t__8911__auto___35962 = e35955;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35962, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35963 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 0);
    var result__8874__auto___35964 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35963);
    if (cljs.core.truth_(result__8874__auto___35964)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35963), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35963)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35956) {
    var t__8911__auto___35965 = e35956;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35965, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 42);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "xxx", "xxx", -1019301908), x, cljs.core.deref.call(null, x), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x)));
  try {
    var values__8873__auto___35966 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 42);
    var result__8874__auto___35967 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35966);
    if (cljs.core.truth_(result__8874__auto___35967)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35966), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35966)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35957) {
    var t__8911__auto___35968 = e35957;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35968, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__8876__auto___35969 = function() {
      var j = tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 43);
      return cljs.core._EQ_.call(null, 43, j);
    }();
    if (value__8876__auto___35969) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
      "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8876__auto___35969, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
      "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8876__auto___35969, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35958) {
    var t__8911__auto___35970 = e35958;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
    "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35970, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 44)), 44);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35959) {
    var t__8911__auto__ = e35959;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.test_rmap.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.test_rmap;
}, new cljs.core.Symbol("tiltontec.util.core-test", "test-rmap", "tiltontec.util.core-test/test-rmap", 589953074, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "test-rmap", "test-rmap", 786413294, null), "test/tiltontec/util/core_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.test_rmap) ? tiltontec.util.core_test.test_rmap.cljs$lang$test : null]));
tiltontec.util.core_test.err_handling = function tiltontec$util$core_test$err_handling() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$err_handling.cljs$lang$var);
};
tiltontec.util.core_test.err_handling.cljs$lang$test = function() {
  try {
    try {
      tiltontec.util.core.err.call(null, "boom");
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e35972) {
      if (e35972 instanceof Error) {
        var e__8900__auto___35987 = e35972;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), e__8900__auto___35987, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        throw e35972;
      }
    }
  } catch (e35971) {
    var t__8911__auto___35988 = e35971;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35988, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    try {
      tiltontec.util.core.err.call(null, "boom");
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
      null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e35974) {
      if (e35974 instanceof Error) {
        var e__8905__auto___35989 = e35974;
        var m__8906__auto___35990 = e__8905__auto___35989.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /oom/, m__8906__auto___35990))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8905__auto___35989, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8905__auto___35989, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } else {
        throw e35974;
      }
    }
  } catch (e35973) {
    var t__8911__auto___35991 = e35973;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
    null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35991, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    try {
      tiltontec.util.core.err.call(null, cljs.core.str, "Hi ", new cljs.core.Symbol(null, "mom", "mom", 320137679, null));
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
      null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e35976) {
      if (e35976 instanceof Error) {
        var e__8905__auto___35992 = e35976;
        var m__8906__auto___35993 = e__8905__auto___35992.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Hi mom/, m__8906__auto___35993))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8905__auto___35992, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8905__auto___35992, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } else {
        throw e35976;
      }
    }
  } catch (e35975) {
    var t__8911__auto___35994 = e35975;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
    null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35994, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35995 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.any_ref_QMARK_.call(null, null));
    var result__8874__auto___35996 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35995);
    if (cljs.core.truth_(result__8874__auto___35996)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core.not, values__8873__auto___35995), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35995)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35977) {
    var t__8911__auto___35997 = e35977;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35997, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35998 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.any_ref_QMARK_.call(null, 42));
    var result__8874__auto___35999 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35998);
    if (cljs.core.truth_(result__8874__auto___35999)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core.not, values__8873__auto___35998), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35998)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35978) {
    var t__8911__auto___36000 = e35978;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36000, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36001 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.any_ref_QMARK_.call(null, cljs.core.PersistentVector.EMPTY));
    var result__8874__auto___36002 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___36001);
    if (cljs.core.truth_(result__8874__auto___36002)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___36001), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___36001)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35979) {
    var t__8911__auto___36003 = e35979;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__8911__auto___36003, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36004 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var sb__5509__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR_35981_36006 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR_35982_36007 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = true;
      cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_35981_36006, _STAR_print_fn_STAR_35982_36007, sb__5509__auto__) {
        return function(x__5510__auto__) {
          return sb__5509__auto__.append(x__5510__auto__);
        };
      }(_STAR_print_newline_STAR_35981_36006, _STAR_print_fn_STAR_35982_36007, sb__5509__auto__);
      try {
        var _STAR_trxdepth_STAR_35983_36008 = tiltontec.util.base._STAR_trxdepth_STAR_;
        tiltontec.util.base._STAR_trxdepth_STAR_ = 5;
        try {
          tiltontec.util.base.call_wtrx.call(null, function(_STAR_trxdepth_STAR_35983_36008, _STAR_print_newline_STAR_35981_36006, _STAR_print_fn_STAR_35982_36007, sb__5509__auto__) {
            return function() {
              return cljs.core.println.call(null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
            };
          }(_STAR_trxdepth_STAR_35983_36008, _STAR_print_newline_STAR_35981_36006, _STAR_print_fn_STAR_35982_36007, sb__5509__auto__), 0, 100, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 2), 1), "cool"));
        } finally {
          tiltontec.util.base._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_35983_36008;
        }
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_35982_36007;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_35981_36006;
      }
      return [cljs.core.str(sb__5509__auto__)].join("");
    }()), "...... cool: 1, 2, 3\n:bingo\n");
    var result__8874__auto___36005 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36004);
    if (cljs.core.truth_(result__8874__auto___36005)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36004), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36004)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35980) {
    var t__8911__auto___36009 = e35980;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
    "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36009, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var sb__5509__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR_35985_36010 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR_35986_36011 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = true;
      cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_35985_36010, _STAR_print_fn_STAR_35986_36011, sb__5509__auto__) {
        return function(x__5510__auto__) {
          return sb__5509__auto__.append(x__5510__auto__);
        };
      }(_STAR_print_newline_STAR_35985_36010, _STAR_print_fn_STAR_35986_36011, sb__5509__auto__);
      try {
        tiltontec.util.core.wtrx_test.call(null, 3);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_35986_36011;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_35985_36010;
      }
      return [cljs.core.str(sb__5509__auto__)].join("");
    }()), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n");
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35984) {
    var t__8911__auto__ = e35984;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
    "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.err_handling.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.err_handling;
}, new cljs.core.Symbol("tiltontec.util.core-test", "err-handling", "tiltontec.util.core-test/err-handling", 432282689, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "err-handling", "err-handling", 751948053, null), "test/tiltontec/util/core_test.cljc", 22, 1, 64, 64, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.err_handling) ? tiltontec.util.core_test.err_handling.cljs$lang$test : null]));
tiltontec.util.core_test.fifo_build = function tiltontec$util$core_test$fifo_build() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fifo_build.cljs$lang$var);
};
tiltontec.util.core_test.fifo_build.cljs$lang$test = function() {
  var q = tiltontec.util.core.make_fifo_queue.call(null);
  try {
    var values__8873__auto___36025 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8874__auto___36026 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8873__auto___36025);
    if (cljs.core.truth_(result__8874__auto___36026)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8873__auto___36025), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8873__auto___36025)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36012) {
    var t__8911__auto___36027 = e36012;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36027, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36028 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q));
    var result__8874__auto___36029 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___36028);
    if (cljs.core.truth_(result__8874__auto___36029)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___36028), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___36028)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36013) {
    var t__8911__auto___36030 = e36013;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36030, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36031 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q));
    var result__8874__auto___36032 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___36031);
    if (cljs.core.truth_(result__8874__auto___36032)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___36031), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___36031)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36014) {
    var t__8911__auto___36033 = e36014;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36033, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36034 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_data.call(null, q));
    var result__8874__auto___36035 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8873__auto___36034);
    if (cljs.core.truth_(result__8874__auto___36035)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8873__auto___36034), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8873__auto___36034)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36015) {
    var t__8911__auto___36036 = e36015;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36036, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  try {
    var values__8873__auto___36037 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__8874__auto___36038 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___36037);
    if (cljs.core.truth_(result__8874__auto___36038)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___36037), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___36037)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36016) {
    var t__8911__auto___36039 = e36016;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36039, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36040 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__8874__auto___36041 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36040);
    if (cljs.core.truth_(result__8874__auto___36041)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36040), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36040)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36017) {
    var t__8911__auto___36042 = e36017;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36042, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36043 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__8874__auto___36044 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36043);
    if (cljs.core.truth_(result__8874__auto___36044)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36043), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36043)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36018) {
    var t__8911__auto___36045 = e36018;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36045, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36046 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8874__auto___36047 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8873__auto___36046);
    if (cljs.core.truth_(result__8874__auto___36047)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8873__auto___36046), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8873__auto___36046)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36019) {
    var t__8911__auto___36048 = e36019;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36048, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  tiltontec.util.core.fifo_add.call(null, q, 2);
  try {
    var values__8873__auto___36049 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__8874__auto___36050 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___36049);
    if (cljs.core.truth_(result__8874__auto___36050)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___36049), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___36049)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36020) {
    var t__8911__auto___36051 = e36020;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36051, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36052 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__8874__auto___36053 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36052);
    if (cljs.core.truth_(result__8874__auto___36053)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36052), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36052)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36021) {
    var t__8911__auto___36054 = e36021;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36054, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36055 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__8874__auto___36056 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36055);
    if (cljs.core.truth_(result__8874__auto___36056)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36055), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36055)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36022) {
    var t__8911__auto___36057 = e36022;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36057, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36058 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 2);
    var result__8874__auto___36059 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36058);
    if (cljs.core.truth_(result__8874__auto___36059)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36058), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36058)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36023) {
    var t__8911__auto___36060 = e36023;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36060, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8874__auto__ = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e36024) {
    var t__8911__auto__ = e36024;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fifo_build.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fifo_build;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build", "tiltontec.util.core-test/fifo-build", 1265681264, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build", "fifo-build", 1577255980, null), "test/tiltontec/util/core_test.cljc", 20, 1, 89, 89, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.fifo_build) ? tiltontec.util.core_test.fifo_build.cljs$lang$test : null]));
tiltontec.util.core_test.fifo_build_test = function tiltontec$util$core_test$fifo_build_test() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fifo_build_test.cljs$lang$var);
};
tiltontec.util.core_test.fifo_build_test.cljs$lang$test = function() {
  var q = tiltontec.util.core.make_fifo_queue.call(null);
  try {
    var values__8873__auto___36074 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8874__auto___36075 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8873__auto___36074);
    if (cljs.core.truth_(result__8874__auto___36075)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8873__auto___36074), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8873__auto___36074)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36061) {
    var t__8911__auto___36076 = e36061;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36076, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36077 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q));
    var result__8874__auto___36078 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___36077);
    if (cljs.core.truth_(result__8874__auto___36078)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___36077), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___36077)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36062) {
    var t__8911__auto___36079 = e36062;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36079, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36080 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q));
    var result__8874__auto___36081 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___36080);
    if (cljs.core.truth_(result__8874__auto___36081)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___36080), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___36080)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36063) {
    var t__8911__auto___36082 = e36063;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36082, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36083 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_data.call(null, q));
    var result__8874__auto___36084 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8873__auto___36083);
    if (cljs.core.truth_(result__8874__auto___36084)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8873__auto___36083), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8873__auto___36083)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36064) {
    var t__8911__auto___36085 = e36064;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36085, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  try {
    var values__8873__auto___36086 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__8874__auto___36087 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___36086);
    if (cljs.core.truth_(result__8874__auto___36087)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___36086), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___36086)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36065) {
    var t__8911__auto___36088 = e36065;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36088, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36089 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__8874__auto___36090 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36089);
    if (cljs.core.truth_(result__8874__auto___36090)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36089), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36089)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36066) {
    var t__8911__auto___36091 = e36066;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36091, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36092 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__8874__auto___36093 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36092);
    if (cljs.core.truth_(result__8874__auto___36093)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36092), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36092)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36067) {
    var t__8911__auto___36094 = e36067;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36094, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36095 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8874__auto___36096 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8873__auto___36095);
    if (cljs.core.truth_(result__8874__auto___36096)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8873__auto___36095), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8873__auto___36095)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36068) {
    var t__8911__auto___36097 = e36068;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___36097, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  tiltontec.util.core.fifo_add.call(null, q, 2);
  try {
    var values__8873__auto___36098 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__8874__auto___36099 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___36098);
    if (cljs.core.truth_(result__8874__auto___36099)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___36098), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___36098)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36069) {
    var t__8911__auto___36100 = e36069;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36100, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36101 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__8874__auto___36102 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36101);
    if (cljs.core.truth_(result__8874__auto___36102)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36101), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36101)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36070) {
    var t__8911__auto___36103 = e36070;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36103, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36104 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__8874__auto___36105 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36104);
    if (cljs.core.truth_(result__8874__auto___36105)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36104), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36104)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36071) {
    var t__8911__auto___36106 = e36071;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36106, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___36107 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 2);
    var result__8874__auto___36108 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___36107);
    if (cljs.core.truth_(result__8874__auto___36108)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___36107), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___36107)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e36072) {
    var t__8911__auto___36109 = e36072;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___36109, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8874__auto__ = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e36073) {
    var t__8911__auto__ = e36073;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fifo_build_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fifo_build_test;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build-test", "tiltontec.util.core-test/fifo-build-test", 1967563513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build-test", "fifo-build-test", 1616174349, null), "test/tiltontec/util/core_test.cljc", 25, 1, 111, 111, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build_test) ? tiltontec.util.core_test.fifo_build_test.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env36110 = cljs.test.empty_env.call(null);
  var summary36111 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env36110, summary36111) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env36110);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8978__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env36110, summary36111) {
          return function() {
            if (env__8978__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8978__auto__, env36110, summary36111)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.util.core_test.fake_cl;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fake-cl", "tiltontec.util.core-test/fake-cl", -187163971, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fake-cl", "fake-cl", -506046351, null), "test/tiltontec/util/core_test.cljc", 17, 1, 22, 22, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.fake_cl) ? tiltontec.util.core_test.fake_cl.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.setify;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "setify", "tiltontec.util.core-test/setify", -128931653, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "setify", "setify", 86404727, null), "test/tiltontec/util/core_test.cljc", 16, 1, 36, 36, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.setify) ? tiltontec.util.core_test.setify.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.test_rmap;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "test-rmap", "tiltontec.util.core-test/test-rmap", 589953074, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "test-rmap", "test-rmap", 786413294, null), "test/tiltontec/util/core_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.test_rmap) ? tiltontec.util.core_test.test_rmap.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.err_handling;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "err-handling", "tiltontec.util.core-test/err-handling", 432282689, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "err-handling", "err-handling", 751948053, null), "test/tiltontec/util/core_test.cljc", 22, 1, 64, 64, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.err_handling) ? tiltontec.util.core_test.err_handling.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.fifo_build;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build", "tiltontec.util.core-test/fifo-build", 1265681264, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build", "fifo-build", 1577255980, null), "test/tiltontec/util/core_test.cljc", 20, 1, 89, 89, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build) ? tiltontec.util.core_test.fifo_build.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.fifo_build_test;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build-test", "tiltontec.util.core-test/fifo-build-test", 1967563513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build-test", "fifo-build-test", 1616174349, null), "test/tiltontec/util/core_test.cljc", 
        25, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build_test) ? tiltontec.util.core_test.fifo_build_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env36110, summary36111) {
          return function() {
            if (env__8978__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8978__auto__, env36110, summary36111)], null));
      }());
    };
  }(env36110, summary36111), function(env36110, summary36111) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env36110, summary36111)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env36110, summary36111) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary36111, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary36111), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env36110, summary36111)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env36110, summary36111) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env36110);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary36111));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary36111), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env36110, summary36111)], null));
}());
goog.provide("tiltontec.qxia.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.core");
goog.require("tiltontec.qxia.widget");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.qxia.base");
tiltontec.qxia.core.routing_get = function tiltontec$qxia$core$routing_get(end_point) {
  return tiltontec.qxia.base.app_routing.call(null).executeGet(end_point);
};
tiltontec.qxia.core.image = function tiltontec$qxia$core$image() {
  var args__5600__auto__ = [];
  var len__5593__auto___34926 = arguments.length;
  var i__5594__auto___34927 = 0;
  while (true) {
    if (i__5594__auto___34927 < len__5593__auto___34926) {
      args__5600__auto__.push(arguments[i__5594__auto___34927]);
      var G__34928 = i__5594__auto___34927 + 1;
      i__5594__auto___34927 = G__34928;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.qxia.core.image.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.qxia.core.image.cljs$core$IFn$_invoke$arity$variadic = function(source, iargs) {
  return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Image", "tiltontec.qxia.types/m.Image", 336928926), new cljs.core.Keyword(null, "source", "source", -433931539), source, iargs);
};
tiltontec.qxia.core.image.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.image.cljs$lang$applyTo = function(seq34924) {
  var G__34925 = cljs.core.first.call(null, seq34924);
  var seq34924__$1 = cljs.core.next.call(null, seq34924);
  return tiltontec.qxia.core.image.cljs$core$IFn$_invoke$arity$variadic(G__34925, seq34924__$1);
};
tiltontec.qxia.core.button = function tiltontec$qxia$core$button() {
  var args__5600__auto__ = [];
  var len__5593__auto___34931 = arguments.length;
  var i__5594__auto___34932 = 0;
  while (true) {
    if (i__5594__auto___34932 < len__5593__auto___34931) {
      args__5600__auto__.push(arguments[i__5594__auto___34932]);
      var G__34933 = i__5594__auto___34932 + 1;
      i__5594__auto___34932 = G__34933;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.qxia.core.button.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.qxia.core.button.cljs$core$IFn$_invoke$arity$variadic = function(label_icon, iargs) {
  return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Button", "tiltontec.qxia.types/m.Button", -668586230), new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), cljs.core.coll_QMARK_.call(null, label_icon) ? label_icon : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [label_icon], null), iargs);
};
tiltontec.qxia.core.button.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.button.cljs$lang$applyTo = function(seq34929) {
  var G__34930 = cljs.core.first.call(null, seq34929);
  var seq34929__$1 = cljs.core.next.call(null, seq34929);
  return tiltontec.qxia.core.button.cljs$core$IFn$_invoke$arity$variadic(G__34930, seq34929__$1);
};
tiltontec.qxia.core.text_field = function tiltontec$qxia$core$text_field() {
  var args__5600__auto__ = [];
  var len__5593__auto___34936 = arguments.length;
  var i__5594__auto___34937 = 0;
  while (true) {
    if (i__5594__auto___34937 < len__5593__auto___34936) {
      args__5600__auto__.push(arguments[i__5594__auto___34937]);
      var G__34938 = i__5594__auto___34937 + 1;
      i__5594__auto___34937 = G__34938;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.qxia.core.text_field.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.qxia.core.text_field.cljs$core$IFn$_invoke$arity$variadic = function(label, iargs) {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.TextField", "tiltontec.qxia.types/m.TextField", 1587442644), new cljs.core.Keyword(null, "label", "label", 1718410804), label);
};
tiltontec.qxia.core.text_field.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.text_field.cljs$lang$applyTo = function(seq34934) {
  var G__34935 = cljs.core.first.call(null, seq34934);
  var seq34934__$1 = cljs.core.next.call(null, seq34934);
  return tiltontec.qxia.core.text_field.cljs$core$IFn$_invoke$arity$variadic(G__34935, seq34934__$1);
};
goog.provide("tiltontec.qxia.macros");
goog.require("cljs.core");
tiltontec.qxia.macros.hbox = function tiltontec$qxia$macros$hbox() {
  var args__5600__auto__ = [];
  var len__5593__auto___34947 = arguments.length;
  var i__5594__auto___34948 = 0;
  while (true) {
    if (i__5594__auto___34948 < len__5593__auto___34947) {
      args__5600__auto__.push(arguments[i__5594__auto___34948]);
      var G__34949 = i__5594__auto___34948 + 1;
      i__5594__auto___34948 = G__34949;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.qxia.macros.hbox.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.qxia.macros.hbox.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34945, kids) {
  var vec__34946 = p__34945;
  var hbox_args = cljs.core.nthnext.call(null, vec__34946, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "layout", "layout", -2120940921)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.layout.HBox", "js/qx.ui.mobile.layout.HBox", 499740199, 
  null)))))), hbox_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "c?kids", "tiltontec.model.family/c?kids", 417211367, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "println", "cljs.core/println", -331834442, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "kids-make", "kids-make", 898757129)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)))))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, null))))), 
  kids)))))));
};
tiltontec.qxia.macros.hbox.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.hbox.cljs$lang$applyTo = function(seq34941) {
  var G__34942 = cljs.core.first.call(null, seq34941);
  var seq34941__$1 = cljs.core.next.call(null, seq34941);
  var G__34943 = cljs.core.first.call(null, seq34941__$1);
  var seq34941__$2 = cljs.core.next.call(null, seq34941__$1);
  var G__34944 = cljs.core.first.call(null, seq34941__$2);
  var seq34941__$3 = cljs.core.next.call(null, seq34941__$2);
  return tiltontec.qxia.macros.hbox.cljs$core$IFn$_invoke$arity$variadic(G__34942, G__34943, G__34944, seq34941__$3);
};
tiltontec.qxia.macros.hbox.cljs$lang$macro = true;
tiltontec.qxia.macros.vbox = function tiltontec$qxia$macros$vbox() {
  var args__5600__auto__ = [];
  var len__5593__auto___34956 = arguments.length;
  var i__5594__auto___34957 = 0;
  while (true) {
    if (i__5594__auto___34957 < len__5593__auto___34956) {
      args__5600__auto__.push(arguments[i__5594__auto___34957]);
      var G__34958 = i__5594__auto___34957 + 1;
      i__5594__auto___34957 = G__34958;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.qxia.macros.vbox.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.qxia.macros.vbox.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34954, kids) {
  var vec__34955 = p__34954;
  var hbox_args = cljs.core.nthnext.call(null, vec__34955, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "layout", "layout", -2120940921)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.layout.VBox", "js/qx.ui.mobile.layout.VBox", -1527506437, 
  null)))))), hbox_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "c?kids", "tiltontec.model.family/c?kids", 417211367, null)), kids)))))));
};
tiltontec.qxia.macros.vbox.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.vbox.cljs$lang$applyTo = function(seq34950) {
  var G__34951 = cljs.core.first.call(null, seq34950);
  var seq34950__$1 = cljs.core.next.call(null, seq34950);
  var G__34952 = cljs.core.first.call(null, seq34950__$1);
  var seq34950__$2 = cljs.core.next.call(null, seq34950__$1);
  var G__34953 = cljs.core.first.call(null, seq34950__$2);
  var seq34950__$3 = cljs.core.next.call(null, seq34950__$2);
  return tiltontec.qxia.macros.vbox.cljs$core$IFn$_invoke$arity$variadic(G__34951, G__34952, G__34953, seq34950__$3);
};
tiltontec.qxia.macros.vbox.cljs$lang$macro = true;
tiltontec.qxia.macros.navigation_page = function tiltontec$qxia$macros$navigation_page() {
  var args__5600__auto__ = [];
  var len__5593__auto___34968 = arguments.length;
  var i__5594__auto___34969 = 0;
  while (true) {
    if (i__5594__auto___34969 < len__5593__auto___34968) {
      args__5600__auto__.push(arguments[i__5594__auto___34969]);
      var G__34970 = i__5594__auto___34969 + 1;
      i__5594__auto___34969 = G__34970;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.qxia.macros.navigation_page.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.qxia.macros.navigation_page.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34964, p__34965, kids) {
  var vec__34966 = p__34964;
  var title = cljs.core.nth.call(null, vec__34966, 0, null);
  var end_point = cljs.core.nth.call(null, vec__34966, 1, null);
  var vec__34967 = p__34965;
  var top_args = cljs.core.nthnext.call(null, vec__34967, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", 
  -2091669995)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)), cljs.core._conj.call(null, cljs.core.List.EMPTY, end_point), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "title", "title", 636505583)), cljs.core._conj.call(null, cljs.core.List.EMPTY, title), top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "c?kids", "tiltontec.model.family/c?kids", 417211367, null)), kids)))))));
};
tiltontec.qxia.macros.navigation_page.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.navigation_page.cljs$lang$applyTo = function(seq34959) {
  var G__34960 = cljs.core.first.call(null, seq34959);
  var seq34959__$1 = cljs.core.next.call(null, seq34959);
  var G__34961 = cljs.core.first.call(null, seq34959__$1);
  var seq34959__$2 = cljs.core.next.call(null, seq34959__$1);
  var G__34962 = cljs.core.first.call(null, seq34959__$2);
  var seq34959__$3 = cljs.core.next.call(null, seq34959__$2);
  var G__34963 = cljs.core.first.call(null, seq34959__$3);
  var seq34959__$4 = cljs.core.next.call(null, seq34959__$3);
  return tiltontec.qxia.macros.navigation_page.cljs$core$IFn$_invoke$arity$variadic(G__34960, G__34961, G__34962, G__34963, seq34959__$4);
};
tiltontec.qxia.macros.navigation_page.cljs$lang$macro = true;
tiltontec.qxia.macros.form = function tiltontec$qxia$macros$form() {
  var args__5600__auto__ = [];
  var len__5593__auto___34980 = arguments.length;
  var i__5594__auto___34981 = 0;
  while (true) {
    if (i__5594__auto___34981 < len__5593__auto___34980) {
      args__5600__auto__.push(arguments[i__5594__auto___34981]);
      var G__34982 = i__5594__auto___34981 + 1;
      i__5594__auto___34981 = G__34982;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.qxia.macros.form.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.qxia.macros.form.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34976, p__34977, kids) {
  var vec__34978 = p__34976;
  var top_args = cljs.core.nthnext.call(null, vec__34978, 0);
  var vec__34979 = p__34977;
  var form_args = cljs.core.nthnext.call(null, vec__34979, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724)), 
  top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "c?kids", "tiltontec.model.family/c?kids", 417211367, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225)), form_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "c?kids", "tiltontec.model.family/c?kids", 417211367, null)), kids)))))))))))))));
};
tiltontec.qxia.macros.form.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.form.cljs$lang$applyTo = function(seq34971) {
  var G__34972 = cljs.core.first.call(null, seq34971);
  var seq34971__$1 = cljs.core.next.call(null, seq34971);
  var G__34973 = cljs.core.first.call(null, seq34971__$1);
  var seq34971__$2 = cljs.core.next.call(null, seq34971__$1);
  var G__34974 = cljs.core.first.call(null, seq34971__$2);
  var seq34971__$3 = cljs.core.next.call(null, seq34971__$2);
  var G__34975 = cljs.core.first.call(null, seq34971__$3);
  var seq34971__$4 = cljs.core.next.call(null, seq34971__$3);
  return tiltontec.qxia.macros.form.cljs$core$IFn$_invoke$arity$variadic(G__34972, G__34973, G__34974, G__34975, seq34971__$4);
};
tiltontec.qxia.macros.form.cljs$lang$macro = true;
tiltontec.qxia.macros.carousel = function tiltontec$qxia$macros$carousel() {
  var args__5600__auto__ = [];
  var len__5593__auto___34989 = arguments.length;
  var i__5594__auto___34990 = 0;
  while (true) {
    if (i__5594__auto___34990 < len__5593__auto___34989) {
      args__5600__auto__.push(arguments[i__5594__auto___34990]);
      var G__34991 = i__5594__auto___34990 + 1;
      i__5594__auto___34990 = G__34991;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.qxia.macros.carousel.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.qxia.macros.carousel.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__34987, kids) {
  var vec__34988 = p__34987;
  var top_args = cljs.core.nthnext.call(null, vec__34988, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516)), 
  top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "c?kids", "tiltontec.model.family/c?kids", 417211367, null)), kids)))))));
};
tiltontec.qxia.macros.carousel.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.carousel.cljs$lang$applyTo = function(seq34983) {
  var G__34984 = cljs.core.first.call(null, seq34983);
  var seq34983__$1 = cljs.core.next.call(null, seq34983);
  var G__34985 = cljs.core.first.call(null, seq34983__$1);
  var seq34983__$2 = cljs.core.next.call(null, seq34983__$1);
  var G__34986 = cljs.core.first.call(null, seq34983__$2);
  var seq34983__$3 = cljs.core.next.call(null, seq34983__$2);
  return tiltontec.qxia.macros.carousel.cljs$core$IFn$_invoke$arity$variadic(G__34984, G__34985, G__34986, seq34983__$3);
};
tiltontec.qxia.macros.carousel.cljs$lang$macro = true;
tiltontec.qxia.macros.drawer = function tiltontec$qxia$macros$drawer() {
  var args__5600__auto__ = [];
  var len__5593__auto___34999 = arguments.length;
  var i__5594__auto___35000 = 0;
  while (true) {
    if (i__5594__auto___35000 < len__5593__auto___34999) {
      args__5600__auto__.push(arguments[i__5594__auto___35000]);
      var G__35001 = i__5594__auto___35000 + 1;
      i__5594__auto___35000 = G__35001;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.qxia.macros.drawer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.qxia.macros.drawer.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, orientation, p__34997, kids) {
  var vec__34998 = p__34997;
  var top_args = cljs.core.nthnext.call(null, vec__34998, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "class", "class", -2030961996)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.container.Drawer", "js/qx.ui.mobile.container.Drawer", -1115926667, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "*par*", "tiltontec.model.family/*par*", -208021890, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "orientation", "orientation", 623557579)), cljs.core._conj.call(null, cljs.core.List.EMPTY, orientation), top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 
  1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "c?kids", "tiltontec.model.family/c?kids", 417211367, null)), kids)))))));
};
tiltontec.qxia.macros.drawer.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.drawer.cljs$lang$applyTo = function(seq34992) {
  var G__34993 = cljs.core.first.call(null, seq34992);
  var seq34992__$1 = cljs.core.next.call(null, seq34992);
  var G__34994 = cljs.core.first.call(null, seq34992__$1);
  var seq34992__$2 = cljs.core.next.call(null, seq34992__$1);
  var G__34995 = cljs.core.first.call(null, seq34992__$2);
  var seq34992__$3 = cljs.core.next.call(null, seq34992__$2);
  var G__34996 = cljs.core.first.call(null, seq34992__$3);
  var seq34992__$4 = cljs.core.next.call(null, seq34992__$3);
  return tiltontec.qxia.macros.drawer.cljs$core$IFn$_invoke$arity$variadic(G__34993, G__34994, G__34995, G__34996, seq34992__$4);
};
tiltontec.qxia.macros.drawer.cljs$lang$macro = true;
tiltontec.qxia.macros.collapsible = function tiltontec$qxia$macros$collapsible() {
  var args__5600__auto__ = [];
  var len__5593__auto___35009 = arguments.length;
  var i__5594__auto___35010 = 0;
  while (true) {
    if (i__5594__auto___35010 < len__5593__auto___35009) {
      args__5600__auto__.push(arguments[i__5594__auto___35010]);
      var G__35011 = i__5594__auto___35010 + 1;
      i__5594__auto___35010 = G__35011;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.qxia.macros.collapsible.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.qxia.macros.collapsible.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, title, p__35007, kids) {
  var vec__35008 = p__35007;
  var top_args = cljs.core.nthnext.call(null, vec__35008, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "class", "class", -2030961996)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.container.Collapsible", "js/qx.ui.mobile.container.Collapsible", 1030659332, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, title)))))), top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "c?kids", "tiltontec.model.family/c?kids", 
  417211367, null)), kids)))))));
};
tiltontec.qxia.macros.collapsible.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.collapsible.cljs$lang$applyTo = function(seq35002) {
  var G__35003 = cljs.core.first.call(null, seq35002);
  var seq35002__$1 = cljs.core.next.call(null, seq35002);
  var G__35004 = cljs.core.first.call(null, seq35002__$1);
  var seq35002__$2 = cljs.core.next.call(null, seq35002__$1);
  var G__35005 = cljs.core.first.call(null, seq35002__$2);
  var seq35002__$3 = cljs.core.next.call(null, seq35002__$2);
  var G__35006 = cljs.core.first.call(null, seq35002__$3);
  var seq35002__$4 = cljs.core.next.call(null, seq35002__$3);
  return tiltontec.qxia.macros.collapsible.cljs$core$IFn$_invoke$arity$variadic(G__35003, G__35004, G__35005, G__35006, seq35002__$4);
};
tiltontec.qxia.macros.collapsible.cljs$lang$macro = true;
tiltontec.qxia.macros.label = function tiltontec$qxia$macros$label() {
  var args__5600__auto__ = [];
  var len__5593__auto___35016 = arguments.length;
  var i__5594__auto___35017 = 0;
  while (true) {
    if (i__5594__auto___35017 < len__5593__auto___35016) {
      args__5600__auto__.push(arguments[i__5594__auto___35017]);
      var G__35018 = i__5594__auto___35017 + 1;
      i__5594__auto___35017 = G__35018;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.qxia.macros.label.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.qxia.macros.label.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, value, iargs) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, value), iargs)));
};
tiltontec.qxia.macros.label.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.label.cljs$lang$applyTo = function(seq35012) {
  var G__35013 = cljs.core.first.call(null, seq35012);
  var seq35012__$1 = cljs.core.next.call(null, seq35012);
  var G__35014 = cljs.core.first.call(null, seq35012__$1);
  var seq35012__$2 = cljs.core.next.call(null, seq35012__$1);
  var G__35015 = cljs.core.first.call(null, seq35012__$2);
  var seq35012__$3 = cljs.core.next.call(null, seq35012__$2);
  return tiltontec.qxia.macros.label.cljs$core$IFn$_invoke$arity$variadic(G__35013, G__35014, G__35015, seq35012__$3);
};
tiltontec.qxia.macros.label.cljs$lang$macro = true;
goog.provide("hello_mobile.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.family");
goog.require("tiltontec.model.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.qxia.core");
goog.require("tiltontec.qxia.macros");
hello_mobile.core.this_app = cljs.core.atom.call(null, null);
hello_mobile.core.make_family_test = function hello_mobile$core$make_family_test() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "hello-make-family!!!!!!!!!!!!", "hello-make-family!!!!!!!!!!!!", -1913099184));
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), new cljs.core.Keyword(null, "end-point", "end-point", -1147460885), "/", new cljs.core.Keyword(null, "title", "title", 636505583), "Login!", new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", 
  "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello world"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35022 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "Hello world"))));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35022;
    }
  }));
};
hello_mobile.core.appinit = function hello_mobile$core$appinit(this$, pager, shower) {
  if (cljs.core.isa_QMARK_.call(null, tiltontec.cell.base.ia_types, new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810), new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol("cty", "ia-types", "cty/ia-types", 322946878, null), new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810), new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520))))].join(""));
  }
  return cljs.core.reset_BANG_.call(null, hello_mobile.core.this_app, tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810), new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), this$, new cljs.core.Keyword(null, "pager", "pager", 1850229940), pager, new cljs.core.Keyword(null, "shower", "shower", -1731894586), shower, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, 
  new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "make-family-test", "make-family-test", 258700351, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35024 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, hello_mobile.core.make_family_test.call(null))));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35024;
    }
  })));
};
goog.exportSymbol("hello_mobile.core.appinit", hello_mobile.core.appinit);
hello_mobile.core.make_css_test = function hello_mobile$core$make_css_test() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", 
  "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "println", "clojure.core/println", -434465672, null), new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, 
  "label", "label", -936024965, null), "Hello cool222", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 0, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool"), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 2!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", 
  -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 3!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null))))), new cljs.core.Keyword(null, "value", "value", 
  305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35027 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 2!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 3!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
      new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35027, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_35028 = tiltontec.model.family._STAR_par_STAR_;
          tiltontec.model.family._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "world 3!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, 
            "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "world 2!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, 
            "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)))));
          } finally {
            tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35028;
          }
        };
      }(_STAR_par_STAR_35027, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "Hello cool222", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 0, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool")), function() {
        cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me));
        return null;
      }())));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35027;
    }
  }));
};
hello_mobile.core.make_login_form = function hello_mobile$core$make_login_form() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, 
  null), cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "login", "login", 55217519), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", 
  "c?kids", "tiltontec.model.family/c?kids", 417211367, null), cljs.core.list(new cljs.core.Symbol(null, "text-field", "text-field", -699013324, null), "Username", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "u-name", "u-name", 1737043515), new cljs.core.Keyword(null, "value", "value", 305978217), "KennY", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Username or e-mail", new cljs.core.Keyword(null, "required", "required", 1807647006), 
  true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Please share your user name"), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", "tiltontec.qxia.types/m.PasswordField", -1705460348), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "p-word", "p-word", 1531766703), new cljs.core.Keyword(null, "label", "label", 1718410804), 
  "Password", new cljs.core.Keyword(null, "value", "value", 305978217), "Zoommmmm", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Your password", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Password is required"))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
  function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35031 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "login", "login", 55217519), new cljs.core.Keyword(null, "kids", "kids", 1156670771), 
      tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "text-field", "text-field", -699013324, null), "Username", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "u-name", "u-name", 1737043515), new cljs.core.Keyword(null, "value", 
      "value", 305978217), "KennY", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Username or e-mail", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Please share your user name"), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", "tiltontec.qxia.types/m.PasswordField", 
      -1705460348), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "p-word", "p-word", 1531766703), new cljs.core.Keyword(null, "label", "label", 1718410804), "Password", new cljs.core.Keyword(null, "value", "value", 305978217), "Zoommmmm", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Your password", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 
      893496025), "Password is required"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35031, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_35032 = tiltontec.model.family._STAR_par_STAR_;
          tiltontec.model.family._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", "tiltontec.qxia.types/m.PasswordField", -1705460348), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "p-word", "p-word", 1531766703), new cljs.core.Keyword(null, "label", "label", 1718410804), 
            "Password", new cljs.core.Keyword(null, "value", "value", 305978217), "Zoommmmm", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Your password", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Password is required")), tiltontec.qxia.core.text_field.call(null, "Username", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, 
            "u-name", "u-name", 1737043515), new cljs.core.Keyword(null, "value", "value", 305978217), "KennY", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Username or e-mail", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Please share your user name"))));
          } finally {
            tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35032;
          }
        };
      }(_STAR_par_STAR_35031, me, cache))))));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35031;
    }
  }));
};
hello_mobile.core.make_picker_test = function hello_mobile$core$make_picker_test() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picker-vbox", "picker-vbox", 1597167133), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, 
  new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "myp", "myp", -299765765, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, 
  "wocd?", "wocd?", -195637516), true], null))], null), "xxx"))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), new cljs.core.Keyword(null, "height", "height", 1025178622), 100, new cljs.core.Keyword(null, "width", "width", -384071477), 200, new cljs.core.Keyword(null, 
  "visibleItems", "visibleItems", 1968268852), 3, new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeSelection", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "evt", "evt", 388964660, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "data", "data", 1407862150, null), cljs.core.list(new cljs.core.Symbol(null, ".getData", ".getData", 661342228, null), new cljs.core.Symbol(null, "evt", "evt", 388964660, null))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "println", "println", -733595439, null), "picked!!!! ", cljs.core.list(new cljs.core.Symbol(null, "js-\x3eclj", "js-\x3eclj", 1544462432, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null))), cljs.core.list(new cljs.core.Symbol(null, "md-reset!", "md-reset!", 1664918226, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "js-\x3eclj", "js-\x3eclj", 1544462432, null), 
  new cljs.core.Symbol(null, "data", "data", 1407862150, null)))))], null), new cljs.core.Keyword(null, "slot-data", "slot-data", 1146367809), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Windows Phone", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "R.I.P.", new cljs.core.Keyword(null, 
  "image", "image", -58725096), "identica/mmedia/games.png"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "iOS", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "Version 7.1"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Android"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Tablet"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Smartphone"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Phablet"], null)], null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35034 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), new cljs.core.Keyword(null, "height", "height", 1025178622), 100, new cljs.core.Keyword(null, 
      "width", "width", -384071477), 200, new cljs.core.Keyword(null, "visibleItems", "visibleItems", 1968268852), 3, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.c_in.call(null, null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeSelection", function(_STAR_par_STAR_35034, me, cache) {
        return function(evt, me__$1) {
          var data = evt.getData();
          cljs.core.println.call(null, "picked!!!! ", cljs.core.js__GT_clj.call(null, data));
          return tiltontec.model.core.md_reset_BANG_.call(null, me__$1, new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.js__GT_clj.call(null, data));
        };
      }(_STAR_par_STAR_35034, me, cache)], null), new cljs.core.Keyword(null, "slot-data", "slot-data", 1146367809), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Tablet"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Smartphone"], 
      null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Phablet"], null)], null)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Windows Phone", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "R.I.P.", new cljs.core.Keyword(null, "image", "image", -58725096), "identica/mmedia/games.png"], 
      null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "iOS", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "Version 7.1"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Android"], null)], null)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 
      908319540), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "myp", "myp", -299765765, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, 
      "my-pick", "my-pick", 1133502620), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516), true], null))], null), "xxx")), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
      new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35034, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var myp = tiltontec.model.family.fget.call(null, new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), me__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516), true], null));
          return "xxx";
        };
      }(_STAR_par_STAR_35034, me, cache))))));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35034;
    }
  }));
};
hello_mobile.core.make_login = function hello_mobile$core$make_login() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), new cljs.core.Keyword(null, "end-point", "end-point", -1147460885), "/", new cljs.core.Keyword(null, "title", "title", 636505583), "Login!", new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", 
  "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "make-picker-test", "make-picker-test", 929225279, null)), cljs.core.list(new cljs.core.Symbol(null, "make-login-form", "make-login-form", 1069109923, null)), cljs.core.list(new cljs.core.Symbol(null, "button", "button", -1197855826, null), "Login", new cljs.core.Keyword(null, "listeners", "listeners", 
  394544445), new cljs.core.PersistentArrayMap(null, 1, ["tap", cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "login", "login", 1695749046, null), cljs.core.list(new cljs.core.Symbol(null, "fm!", "fm!", -1177678085, null), new cljs.core.Keyword(null, "login", 
  "login", 55217519), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, ".validate", ".validate", 1492446340, null), cljs.core.list(new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "login", "login", 1695749046, null)))), cljs.core.list(new cljs.core.Symbol(null, 
  "routing-get", "routing-get", 877560304, null), "/overview"))))], null)), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "picker!"), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), cljs.core.list(new cljs.core.Symbol(null, 
  "make-picker-test", "make-picker-test", 929225279, null))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Symbol(null, "p", "p", 1791580836, null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Post!")), cljs.core.list(new cljs.core.Symbol(null, "carousel", "carousel", 1521582614, null), 
  new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "carousel", "carousel", -118948913), new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool"], null), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "one?")), cljs.core.list(new cljs.core.Symbol(null, 
  "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "two")), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "three"))), cljs.core.list(new cljs.core.Symbol(null, "collapsible", "collapsible", -36525456, null), "Click for a surprise", cljs.core.PersistentVector.EMPTY, 
  cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Surprise.")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35042 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, 
      "class", "class", -2030961996), qx.ui.mobile.container.Collapsible, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Click for a surprise"], null), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", 
      "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Surprise."))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35042, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_35043 = tiltontec.model.family._STAR_par_STAR_;
          tiltontec.model.family._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "Surprise."))));
          } finally {
            tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35043;
          }
        };
      }(_STAR_par_STAR_35042, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "carousel", "carousel", -118948913), new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool", new cljs.core.Keyword(null, "kids", "kids", 1156670771), 
      tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "one?")), cljs.core.list(new cljs.core.Symbol(null, "hbox", 
      "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "two")), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "three")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
      function(_STAR_par_STAR_35042, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_35044 = tiltontec.model.family._STAR_par_STAR_;
          tiltontec.model.family._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, 
            "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "println", "clojure.core/println", -434465672, null), new cljs.core.Keyword(null, "kids-make", 
            "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "three"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35044, me__$1, cache__$1, 
            _STAR_par_STAR_35042, me, cache) {
              return function(slot_c_SHARP___$2) {
                var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                var _STAR_par_STAR_35045 = tiltontec.model.family._STAR_par_STAR_;
                tiltontec.model.family._STAR_par_STAR_ = me__$2;
                try {
                  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "three")), function() {
                    cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me__$2));
                    return null;
                  }())));
                } finally {
                  tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35045;
                }
              };
            }(_STAR_par_STAR_35044, me__$1, cache__$1, _STAR_par_STAR_35042, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
            "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "println", "clojure.core/println", -434465672, null), new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 
            699012589, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "two"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35044, me__$1, cache__$1, _STAR_par_STAR_35042, me, cache) {
              return function(slot_c_SHARP___$2) {
                var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                var _STAR_par_STAR_35046 = tiltontec.model.family._STAR_par_STAR_;
                tiltontec.model.family._STAR_par_STAR_ = me__$2;
                try {
                  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "two")), function() {
                    cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me__$2));
                    return null;
                  }())));
                } finally {
                  tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35046;
                }
              };
            }(_STAR_par_STAR_35044, me__$1, cache__$1, _STAR_par_STAR_35042, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
            "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "println", "clojure.core/println", -434465672, null), new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 
            699012589, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "one?"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35044, me__$1, cache__$1, _STAR_par_STAR_35042, me, cache) {
              return function(slot_c_SHARP___$2) {
                var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                var _STAR_par_STAR_35047 = tiltontec.model.family._STAR_par_STAR_;
                tiltontec.model.family._STAR_par_STAR_ = me__$2;
                try {
                  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "one?")), function() {
                    cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me__$2));
                    return null;
                  }())));
                } finally {
                  tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35047;
                }
              };
            }(_STAR_par_STAR_35044, me__$1, cache__$1, _STAR_par_STAR_35042, me, cache))))));
          } finally {
            tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35044;
          }
        };
      }(_STAR_par_STAR_35042, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), 
      cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "println", "clojure.core/println", -434465672, null), new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, 
      null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "picker!"), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), cljs.core.list(new cljs.core.Symbol(null, "make-picker-test", "make-picker-test", 929225279, null))], null), cljs.core.list(new cljs.core.Symbol(null, 
      "println", "println", -733595439, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Symbol(null, "p", "p", 1791580836, null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Post!"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35042, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_35048 = tiltontec.model.family._STAR_par_STAR_;
          tiltontec.model.family._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "Post!")), function() {
              var p = hello_mobile.core.make_picker_test.call(null);
              cljs.core.println.call(null, new cljs.core.Keyword(null, "picker", "picker", -659389603), p);
              return p;
            }()), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "picker!")), function() {
              cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me__$1));
              return null;
            }())));
          } finally {
            tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35048;
          }
        };
      }(_STAR_par_STAR_35042, me, cache)))), tiltontec.qxia.core.button.call(null, "Login", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["tap", function(_STAR_par_STAR_35042, me, cache) {
        return function() {
          var login = tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "login", "login", 55217519), me);
          if (cljs.core.truth_((new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, login)).validate())) {
            return tiltontec.qxia.core.routing_get.call(null, "/overview");
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_35042, me, cache)], null))), hello_mobile.core.make_login_form.call(null)), hello_mobile.core.make_picker_test.call(null))));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35042;
    }
  }));
};
hello_mobile.core.make_overview = function hello_mobile$core$make_overview() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), new cljs.core.Keyword(null, "end-point", "end-point", -1147460885), "/overview", new cljs.core.Keyword(null, "title", "title", 636505583), "Overview", new cljs.core.Keyword(null, "showButton", "showButton", -1745795920), true, new cljs.core.Keyword(null, "buttonText", "buttonText", 
  282861744), "Knock-Knock", new cljs.core.Keyword(null, "buttonIcon", "buttonIcon", 1253122060), "identica/mmedia/games.png", new cljs.core.Keyword(null, "showBackButton", "showBackButton", 632746224), true, new cljs.core.Keyword(null, "backButtonText", "backButtonText", 2126160537), "Back Up (click broken but back key OK)", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["action", function(event, me) {
    return tiltontec.model.core.md_reset_BANG_.call(null, me, new cljs.core.Keyword(null, "greet?", "greet?", 1363328291), cljs.core.not.call(null, tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "greet?", "greet?", 1363328291))));
  }], null), new cljs.core.Keyword(null, "greet?", "greet?", 1363328291), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, 
  "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "greet?", "greet?", 1363328291)), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool"], 
  null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello"), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "World")), cljs.core.list(new cljs.core.Symbol(null, "image", "image", 1581806431, null), "identica/mmedia/earth-from-moon.jpg", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "warning"))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35052 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.truth_(tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "greet?", "greet?", 1363328291))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", 
      "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "println", "clojure.core/println", 
      -434465672, null), new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "css-class", "css-class", -919455334), 
      "cool"], null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello"), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "World")), cljs.core.list(new cljs.core.Symbol(null, "image", "image", 1581806431, null), "identica/mmedia/earth-from-moon.jpg", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "warning"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, 
      "rule", "rule", 729973257), function(_STAR_par_STAR_35052, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_35053 = tiltontec.model.family._STAR_par_STAR_;
          tiltontec.model.family._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.qxia.core.image.call(null, "identica/mmedia/earth-from-moon.jpg", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "warning")), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", 
            "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool", new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.family", "the-kids", "tiltontec.model.family/the-kids", 
            -869691941, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello"), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "World"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35053, me__$1, cache__$1, _STAR_par_STAR_35052, me, cache) {
              return function(slot_c_SHARP___$2) {
                var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                var _STAR_par_STAR_35054 = tiltontec.model.family._STAR_par_STAR_;
                tiltontec.model.family._STAR_par_STAR_ = me__$2;
                try {
                  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "World")), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, 
                  "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "Hello"))));
                } finally {
                  tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35054;
                }
              };
            }(_STAR_par_STAR_35053, me__$1, cache__$1, _STAR_par_STAR_35052, me, cache)))), function() {
              cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me__$1));
              return null;
            }())));
          } finally {
            tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35053;
          }
        };
      }(_STAR_par_STAR_35052, me, cache))) : null)));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35052;
    }
  }));
};
goog.provide("tiltontec.cell.integrity_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
tiltontec.cell.integrity_test.obsdbg = function tiltontec$cell$integrity_test$obsdbg() {
  return null;
};
tiltontec.cell.integrity_test.obs_setf = function tiltontec$cell$integrity_test$obs_setf() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$obs_setf.cljs$lang$var);
};
tiltontec.cell.integrity_test.obs_setf.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  try {
    var values__8873__auto___35728 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
    var result__8874__auto___35729 = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__8873__auto___35728);
    if (cljs.core.truth_(result__8874__auto___35729)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.zero_QMARK_, values__8873__auto___35728), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__8873__auto___35728)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35717) {
    var t__8911__auto___35730 = e35717;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35730, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var alarm = tiltontec.cell.core.c_in.call(null, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var act = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act) {
    return function(slot, me, new$, old, c) {
      if (cljs.core._EQ_.call(null, new$, new cljs.core.Keyword(null, "missing", "missing", 362507769))) {
        return null;
      } else {
        if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), 2)) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null)), 2)))].join(""));
        }
        if (cljs.core.not.call(null, tiltontec.cell.base._STAR_within_integrity_STAR_)) {
          throw new java.lang.Exception("c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision.", tiltontec.cell.base.c_slot.call(null, alarm));
        } else {
          return tiltontec.cell.integrity.ufb_add.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308), function(alarm, act) {
            return function(opcode, defer_info) {
              var c__31619__auto__ = alarm;
              var new_value__31620__auto__ = function() {
                var G__35718 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__35718) {
                  case "home":
                    return new cljs.core.Keyword(null, "off", "off", 606440789);
                    break;
                  case "away":
                    return new cljs.core.Keyword(null, "on", "on", 173873944);
                    break;
                  default:
                    return tiltontec.util.core.err.call(null, cljs.core.str, "unexpected loc %s", new$);
                }
              }();
              return tiltontec.cell.core.call_c_reset_next_BANG_.call(null, c__31619__auto__, new_value__31620__auto__);
            };
          }(alarm, act)], null));
        }
      }
    };
  }(alarm, act), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, 
  "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__35719 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
      switch(G__35719) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(alarm, act));
  var alarm_speak = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act, loc) {
    return function(slot, me, new$, old, c) {
      try {
        var values__8873__auto___35733 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
          var G__35721 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
          switch(G__35721) {
            case "return":
              return new cljs.core.Keyword(null, "off", "off", 606440789);
              break;
            case "leave":
              return new cljs.core.Keyword(null, "on", "on", 173873944);
              break;
            default:
              return new cljs.core.Keyword(null, "undefined", "undefined", -1970511116);
          }
        }()), tiltontec.cell.evaluate.c_get.call(null, alarm));
        var result__8874__auto___35734 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35733);
        if (cljs.core.truth_(result__8874__auto___35734)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35733), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35733)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e35720) {
        var t__8911__auto___35736 = e35720;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
        "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8911__auto___35736, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_pulse.call(null, c)), tiltontec.cell.base.c_pulse.call(null, loc)), tiltontec.cell.base.c_pulse.call(null, act)), tiltontec.cell.base._PLUS_pulse_PLUS_);
        var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
        if (cljs.core.truth_(result__8874__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", 
          -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__8874__auto__;
      } catch (e35722) {
        var t__8911__auto__ = e35722;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
        "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(alarm, act, loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "alarm-speak sees act ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act, loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return [cljs.core.str("alarm-speak sees act "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, act))].join("");
    };
  }(alarm, act, loc));
  try {
    var values__8873__auto___35737 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116)), tiltontec.cell.evaluate.c_get.call(null, alarm));
    var result__8874__auto___35738 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35737);
    if (cljs.core.truth_(result__8874__auto___35738)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35737), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35737)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35723) {
    var t__8911__auto___35739 = e35723;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
    "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35739, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35740 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__8874__auto___35741 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35740);
    if (cljs.core.truth_(result__8874__auto___35741)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35740), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35740)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35724) {
    var t__8911__auto___35742 = e35724;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35742, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35743 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "missing", "missing", 362507769)), tiltontec.cell.evaluate.c_get.call(null, loc));
    var result__8874__auto___35744 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35743);
    if (cljs.core.truth_(result__8874__auto___35744)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35743), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35743)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35725) {
    var t__8911__auto___35745 = e35725;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
    "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35745, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35746 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__8874__auto___35747 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35746);
    if (cljs.core.truth_(result__8874__auto___35747)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35746), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35746)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35726) {
    var t__8911__auto___35748 = e35726;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35748, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, act, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 3);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35727) {
    var t__8911__auto__ = e35727;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.obs_setf.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.obs_setf;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf", "tiltontec.cell.integrity-test/obs-setf", -1903746607, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf", "obs-setf", -941176517, null), "test/tiltontec/cell/integrity_test.cljc", 18, 1, 45, 45, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf) ? tiltontec.cell.integrity_test.obs_setf.cljs$lang$test : null]));
tiltontec.cell.integrity_test.obs_setf_bad_caught = function tiltontec$cell$integrity_test$obs_setf_bad_caught() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$obs_setf_bad_caught.cljs$lang$var);
};
tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var alarm = tiltontec.cell.core.c_in.call(null, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var act = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act) {
    return function(slot, me, new$, old, c) {
      try {
        try {
          tiltontec.cell.core.c_reset_BANG_.call(null, act, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
          "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } catch (e35750) {
          if (e35750 instanceof Error) {
            var e__8905__auto___35760 = e35750;
            var m__8906__auto___35761 = e__8905__auto___35760.message;
            if (cljs.core.truth_(cljs.core.re_find.call(null, /c-reset!> change/, m__8906__auto___35761))) {
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
              "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8905__auto___35760, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
              "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8905__auto___35760, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
          } else {
            throw e35750;
          }
        }
      } catch (e35749) {
        var t__8911__auto___35762 = e35749;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
        "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35762, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      if (cljs.core._EQ_.call(null, new$, new cljs.core.Keyword(null, "missing", "missing", 362507769))) {
        return null;
      } else {
        if (cljs.core.not.call(null, tiltontec.cell.base._STAR_within_integrity_STAR_)) {
          throw new java.lang.Exception("c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision.", tiltontec.cell.base.c_slot.call(null, alarm));
        } else {
          return tiltontec.cell.integrity.ufb_add.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308), function(alarm, act) {
            return function(opcode, defer_info) {
              var c__31619__auto__ = alarm;
              var new_value__31620__auto__ = function() {
                var G__35751 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__35751) {
                  case "home":
                    return new cljs.core.Keyword(null, "off", "off", 606440789);
                    break;
                  case "away":
                    return new cljs.core.Keyword(null, "on", "on", 173873944);
                    break;
                  default:
                    return tiltontec.util.core.err.call(null, cljs.core.str, "unexpected loc %s", new$);
                }
              }();
              return tiltontec.cell.core.call_c_reset_next_BANG_.call(null, c__31619__auto__, new_value__31620__auto__);
            };
          }(alarm, act)], null));
        }
      }
    };
  }(alarm, act), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, 
  "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__35752 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
      switch(G__35752) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(alarm, act));
  var alarm_speak = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act, loc) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, ":alarm-speak", tiltontec.cell.evaluate.c_get.call(null, act), new cljs.core.Keyword(null, "sees", "sees", -135494032), tiltontec.cell.evaluate.c_get.call(null, alarm), tiltontec.cell.evaluate.c_get.call(null, loc));
      try {
        var values__8873__auto___35765 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
          var G__35754 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
          switch(G__35754) {
            case "return":
              return new cljs.core.Keyword(null, "off", "off", 606440789);
              break;
            case "leave":
              return new cljs.core.Keyword(null, "on", "on", 173873944);
              break;
            default:
              return new cljs.core.Keyword(null, "undefined", "undefined", -1970511116);
          }
        }()), tiltontec.cell.evaluate.c_get.call(null, alarm));
        var result__8874__auto___35766 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35765);
        if (cljs.core.truth_(result__8874__auto___35766)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35765), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35765)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e35753) {
        var t__8911__auto___35768 = e35753;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
        "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8911__auto___35768, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_pulse.call(null, c)), tiltontec.cell.base.c_pulse.call(null, loc)), tiltontec.cell.base.c_pulse.call(null, act)), tiltontec.cell.base._PLUS_pulse_PLUS_);
        var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
        if (cljs.core.truth_(result__8874__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", 
          -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__8874__auto__;
      } catch (e35755) {
        var t__8911__auto__ = e35755;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
        "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(alarm, act, loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "alarm-speak sees act ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act, loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return [cljs.core.str("alarm-speak sees act "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, act))].join("");
    };
  }(alarm, act, loc));
  try {
    var values__8873__auto___35769 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116)), tiltontec.cell.evaluate.c_get.call(null, alarm));
    var result__8874__auto___35770 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35769);
    if (cljs.core.truth_(result__8874__auto___35770)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35769), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35769)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35756) {
    var t__8911__auto___35771 = e35756;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
    "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35771, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35772 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__8874__auto___35773 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35772);
    if (cljs.core.truth_(result__8874__auto___35773)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35772), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35772)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35757) {
    var t__8911__auto___35774 = e35757;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35774, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35775 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "missing", "missing", 362507769)), tiltontec.cell.evaluate.c_get.call(null, loc));
    var result__8874__auto___35776 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35775);
    if (cljs.core.truth_(result__8874__auto___35776)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35775), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35775)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35758) {
    var t__8911__auto___35777 = e35758;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
    "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35777, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35759) {
    var t__8911__auto__ = e35759;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.obs_setf_bad_caught;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf-bad-caught", "tiltontec.cell.integrity-test/obs-setf-bad-caught", -1085043785, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf-bad-caught", "obs-setf-bad-caught", -936124387, null), "test/tiltontec/cell/integrity_test.cljc", 
29, 1, 85, 85, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf_bad_caught) ? tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test : null]));
tiltontec.cell.integrity_test.see_into_fn = function tiltontec$cell$integrity_test$see_into_fn() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$see_into_fn.cljs$lang$var);
};
tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test = function() {
  var sia = tiltontec.cell.core.c_in.call(null, 0);
  var rsic = cljs.core.atom.call(null, false);
  var sic = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "reset!", "reset!", 527275632, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null), true), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sia", "sia", 737031502, null)))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, rsic) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.reset_BANG_.call(null, rsic, true);
      return 42 + tiltontec.cell.evaluate.c_get.call(null, sia);
    };
  }(sia, rsic));
  var fsia = function(sia, rsic, sic) {
    return function() {
      return tiltontec.cell.evaluate.c_get.call(null, sia);
    };
  }(sia, rsic, sic);
  var sib = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fsia", "fsia", -1523177093, null))), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, rsic, sic, fsia) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var or__4554__auto__ = 1 + fsia.call(null);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return tiltontec.cell.evaluate.c_get.call(null, sic);
      }
    };
  }(sia, rsic, sic, fsia));
  try {
    var values__8873__auto___35783 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 1), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__8874__auto___35784 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35783);
    if (cljs.core.truth_(result__8874__auto___35784)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35783), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35783)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35778) {
    var t__8911__auto___35785 = e35778;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35785, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35786 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.PersistentHashSet.fromArray([sia], true)), (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, sib)));
    var result__8874__auto___35787 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35786);
    if (cljs.core.truth_(result__8874__auto___35787)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35786), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35786)), new cljs.core.Symbol(null, 
      "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35779) {
    var t__8911__auto___35788 = e35779;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35788, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35789 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, rsic));
    var result__8874__auto___35790 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35789);
    if (cljs.core.truth_(result__8874__auto___35790)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35789), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35789)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35780) {
    var t__8911__auto___35791 = e35780;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35791, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, sia, 1);
  try {
    var values__8873__auto___35792 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, sib))), 2);
    var result__8874__auto___35793 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35792);
    if (cljs.core.truth_(result__8874__auto___35793)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35792), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35792)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35781) {
    var t__8911__auto___35794 = e35781;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35794, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35782) {
    var t__8911__auto__ = e35782;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.see_into_fn.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.see_into_fn;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "see-into-fn", "tiltontec.cell.integrity-test/see-into-fn", 794556004, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "see-into-fn", "see-into-fn", 1996218062, null), "test/tiltontec/cell/integrity_test.cljc", 21, 1, 
125, 125, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.see_into_fn) ? tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test : null]));
tiltontec.cell.integrity_test.no_prop_no_obs = function tiltontec$cell$integrity_test$no_prop_no_obs() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$no_prop_no_obs.cljs$lang$var);
};
tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test = function() {
  var sia = tiltontec.cell.core.c_in.call(null, 0);
  var obs = cljs.core.atom.call(null, false);
  var sib = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(sia, obs) {
    return function(slot, me, new$, old, c) {
      return cljs.core.reset_BANG_.call(null, obs, true);
    };
  }(sia, obs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sia", "sia", 737031502, null))), 42, 10)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257), function(sia, obs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core.even_QMARK_.call(null, tiltontec.cell.evaluate.c_get.call(null, sia))) {
        return 42;
      } else {
        return 10;
      }
    };
  }(sia, obs));
  var run = cljs.core.atom.call(null, false);
  var sic = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "reset!", "reset!", 527275632, null), new cljs.core.Symbol(null, "run", "run", -180635126, null), true), cljs.core.list(new cljs.core.Symbol(null, "/", "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2)), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, obs, sib, run) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.reset_BANG_.call(null, run, true);
      return tiltontec.cell.evaluate.c_get.call(null, sib) / 2;
    };
  }(sia, obs, sib, run));
  try {
    var values__8873__auto___35803 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__8874__auto___35804 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35803);
    if (cljs.core.truth_(result__8874__auto___35804)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35803), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35803)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35795) {
    var t__8911__auto___35805 = e35795;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35805, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35806 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), tiltontec.cell.evaluate.c_get.call(null, sic));
    var result__8874__auto___35807 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35806);
    if (cljs.core.truth_(result__8874__auto___35807)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35806), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35806)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35796) {
    var t__8911__auto___35808 = e35796;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35808, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__8876__auto___35809 = cljs.core.deref.call(null, obs);
    if (cljs.core.truth_(value__8876__auto___35809)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___35809, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___35809, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35797) {
    var t__8911__auto___35810 = e35797;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35810, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__8876__auto___35811 = cljs.core.deref.call(null, run);
    if (cljs.core.truth_(value__8876__auto___35811)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___35811, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___35811, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35798) {
    var t__8911__auto___35812 = e35798;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35812, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.reset_BANG_.call(null, obs, false);
  cljs.core.reset_BANG_.call(null, run, false);
  tiltontec.cell.core.c_reset_BANG_.call(null, sia, 2);
  try {
    var values__8873__auto___35813 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__8874__auto___35814 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35813);
    if (cljs.core.truth_(result__8874__auto___35814)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35813), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35813)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35799) {
    var t__8911__auto___35815 = e35799;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35815, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35816 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), tiltontec.cell.evaluate.c_get.call(null, sic));
    var result__8874__auto___35817 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35816);
    if (cljs.core.truth_(result__8874__auto___35817)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35816), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35816)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35800) {
    var t__8911__auto___35818 = e35800;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35818, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35819 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, obs));
    var result__8874__auto___35820 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35819);
    if (cljs.core.truth_(result__8874__auto___35820)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35819), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35819)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35801) {
    var t__8911__auto___35821 = e35801;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35821, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, run));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core.not, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35802) {
    var t__8911__auto__ = e35802;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.no_prop_no_obs;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "no-prop-no-obs", "tiltontec.cell.integrity-test/no-prop-no-obs", 182636463, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "no-prop-no-obs", "no-prop-no-obs", -771561679, null), "test/tiltontec/cell/integrity_test.cljc", 
24, 1, 141, 141, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.no_prop_no_obs) ? tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env35822 = cljs.test.empty_env.call(null);
  var summary35823 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35822, summary35823) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35822);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8978__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35822, summary35823) {
          return function() {
            if (env__8978__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8978__auto__, env35822, summary35823)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.obs_setf;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf", "tiltontec.cell.integrity-test/obs-setf", -1903746607, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf", "obs-setf", -941176517, null), "test/tiltontec/cell/integrity_test.cljc", 
        18, 1, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf) ? tiltontec.cell.integrity_test.obs_setf.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.obs_setf_bad_caught;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf-bad-caught", "tiltontec.cell.integrity-test/obs-setf-bad-caught", -1085043785, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf-bad-caught", "obs-setf-bad-caught", -936124387, null), "test/tiltontec/cell/integrity_test.cljc", 
        29, 1, 85, 85, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf_bad_caught) ? tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.see_into_fn;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "see-into-fn", "tiltontec.cell.integrity-test/see-into-fn", 794556004, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "see-into-fn", "see-into-fn", 1996218062, null), "test/tiltontec/cell/integrity_test.cljc", 
        21, 1, 125, 125, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.see_into_fn) ? tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.no_prop_no_obs;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "no-prop-no-obs", "tiltontec.cell.integrity-test/no-prop-no-obs", 182636463, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "no-prop-no-obs", "no-prop-no-obs", -771561679, null), "test/tiltontec/cell/integrity_test.cljc", 
        24, 1, 141, 141, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.no_prop_no_obs) ? tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35822, summary35823) {
          return function() {
            if (env__8978__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8978__auto__, env35822, summary35823)], null));
      }());
    };
  }(env35822, summary35823), function(env35822, summary35823) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env35822, summary35823)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35822, summary35823) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary35823, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary35823), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env35822, summary35823)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35822, summary35823) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35822);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary35823));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary35823), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env35822, summary35823)], null));
}());
goog.provide("tiltontec.model.family_test");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.family");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.family_test.fm_0 = function tiltontec$model$family_test$fm_0() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_0.cljs$lang$var);
};
tiltontec.model.family_test.fm_0.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), 
  cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", 
  "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    if (cljs.core.truth_(tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854)))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 3))], null);
    } else {
      return null;
    }
  }));
  try {
    var values__8873__auto___35172 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)));
    var result__8874__auto___35173 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35172);
    if (cljs.core.truth_(result__8874__auto___35173)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35172), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35172)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35169) {
    var t__8911__auto___35174 = e35169;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35174, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var kc = tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
  var kon = tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854));
  tiltontec.cell.core.c_reset_BANG_.call(null, kon, true);
  try {
    var values__8873__auto___35175 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 1);
    var result__8874__auto___35176 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35175);
    if (cljs.core.truth_(result__8874__auto___35176)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35175), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35175)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e35170) {
    var t__8911__auto___35177 = e35170;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35177, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__8874__auto__ = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35171) {
    var t__8911__auto__ = e35171;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_0.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_0;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-0", "tiltontec.model.family-test/fm-0", -779736890, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-0", "fm-0", -1904222876, null), "test/tiltontec/model/family_test.cljc", 14, 1, 49, 49, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.family_test.fm_0) ? 
tiltontec.model.family_test.fm_0.cljs$lang$test : null]));
tiltontec.model.family_test.fm_1 = function tiltontec$model$family_test$fm_1() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_1.cljs$lang$var);
};
tiltontec.model.family_test.fm_1.cljs$lang$test = function() {
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2 + 2), 4);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35178) {
    var t__8911__auto__ = e35178;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_1;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-1", "tiltontec.model.family-test/fm-1", 813665500, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-1", "fm-1", -329834626, null), "test/tiltontec/model/family_test.cljc", 14, 1, 69, 69, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.family_test.fm_1) ? 
tiltontec.model.family_test.fm_1.cljs$lang$test : null]));
tiltontec.model.family_test.fm_2 = function tiltontec$model$family_test$fm_2() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_2.cljs$lang$var);
};
tiltontec.model.family_test.fm_2.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, 
  "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, 
  "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bba", "bba", -1624545451)), cljs.core.list(new cljs.core.Symbol("md", 
  "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152)), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), 
    new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), 
    new cljs.core.Keyword(null, "bba", "bba", -1624545451)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
    function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me__$1, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bba", "bba", -1624545451)), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me__$1, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", 
        "bbb", -1323051640))], null);
      };
    }(me, cache)))], null);
  }));
  var bba = tiltontec.model.family.fget.call(null, new cljs.core.Keyword(null, "bba", "bba", -1624545451), u, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "must?", "must?", 1639898554), true);
  try {
    var value__8876__auto___35184 = bba;
    if (cljs.core.truth_(value__8876__auto___35184)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___35184, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8876__auto___35184, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35179) {
    var t__8911__auto___35185 = e35179;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35185, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35186 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "uni", "uni", -1194876440));
    var result__8874__auto___35187 = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8873__auto___35186);
    if (cljs.core.truth_(result__8874__auto___35187)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8873__auto___35186), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), values__8873__auto___35186)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35180) {
    var t__8911__auto___35188 = e35180;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35188, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35189 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), false), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
    var result__8874__auto___35190 = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8873__auto___35189);
    if (cljs.core.truth_(result__8874__auto___35190)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8873__auto___35189), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8873__auto___35189)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35181) {
    var t__8911__auto___35191 = e35181;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
    false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35191, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35192 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "bb", "bb", 75940837));
    var result__8874__auto___35193 = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8873__auto___35192);
    if (cljs.core.truth_(result__8874__auto___35193)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8873__auto___35192), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8873__auto___35192)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35182) {
    var t__8911__auto___35194 = e35182;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
    true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35194, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), false), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640));
    var result__8874__auto__ = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35183) {
    var t__8911__auto__ = e35183;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_2;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-2", "tiltontec.model.family-test/fm-2", 547699739, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-2", "fm-2", -589475911, null), "test/tiltontec/model/family_test.cljc", 14, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.family_test.fm_2) ? 
tiltontec.model.family_test.fm_2.cljs$lang$test : null]));
tiltontec.model.family_test.fm_3 = function tiltontec$model$family_test$fm_3() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_3.cljs$lang$var);
};
tiltontec.model.family_test.fm_3.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "u63", "u63", 1660619135), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)), cljs.core.list(new cljs.core.Symbol(null, 
  "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)) + tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me), new cljs.core.Keyword(null, "bb21", "bb21", 
    848021780));
  }), new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "remove", "remove", 1509103113, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), 
  cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
  2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 
  517820292, null), 3))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", 
  "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return cljs.core.remove.call(null, cljs.core.nil_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), 
    cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return 2 * tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me__$1), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
      };
    }(me, cache)), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), tiltontec.cell.core.c_in.call(null, 3)), cljs.core.truth_(tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 
    3)) : null, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, 
    "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return 7 * tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me__$1), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912));
      };
    }(me, cache)))], null));
  }));
  try {
    var values__8873__auto___35203 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, u, new cljs.core.Keyword(null, "u63", "u63", 1660619135))), 63);
    var result__8874__auto___35204 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35203);
    if (cljs.core.truth_(result__8874__auto___35204)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35203), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35203)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35195) {
    var t__8911__auto___35205 = e35195;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
    "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35205, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35206 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), u), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130))), 42);
    var result__8874__auto___35207 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35206);
    if (cljs.core.truth_(result__8874__auto___35207)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35206), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35206)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35196) {
    var t__8911__auto___35208 = e35196;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
    "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35208, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35209 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), u), new cljs.core.Keyword(null, "bb21", "bb21", 848021780))), 21);
    var result__8874__auto___35210 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35209);
    if (cljs.core.truth_(result__8874__auto___35210)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35209), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35209)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35197) {
    var t__8911__auto___35211 = e35197;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
    "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35211, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35212 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.family.fget.call(null, new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), u, new cljs.core.Keyword(null, "must?", "must?", 1639898554), false));
    var result__8874__auto___35213 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35212);
    if (cljs.core.truth_(result__8874__auto___35213)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35212), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35212)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35198) {
    var t__8911__auto___35214 = e35198;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
    "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35214, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854)), true);
  try {
    var value__8876__auto___35215 = (new cljs.core.Keyword(null, "kon", "kon", 437684854)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
    if (cljs.core.truth_(value__8876__auto___35215)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8876__auto___35215, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8876__auto___35215, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35199) {
    var t__8911__auto___35216 = e35199;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35216, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35217 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kon", "kon", 437684854)), u);
    var result__8874__auto___35218 = cljs.core.apply.call(null, tiltontec.model.base.md_cell, values__8873__auto___35217);
    if (cljs.core.truth_(result__8874__auto___35218)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, tiltontec.model.base.md_cell, values__8873__auto___35217), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), values__8873__auto___35217)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35200) {
    var t__8911__auto___35219 = e35200;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__8911__auto___35219, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35220 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 3);
    var result__8874__auto___35221 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35220);
    if (cljs.core.truth_(result__8874__auto___35221)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35220), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35220)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e35201) {
    var t__8911__auto___35222 = e35201;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35222, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__8874__auto__ = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35202) {
    var t__8911__auto__ = e35202;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_3.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_3;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-3", "tiltontec.model.family-test/fm-3", -55610013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-3", "fm-3", -1601771135, null), "test/tiltontec/model/family_test.cljc", 14, 1, 106, 106, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.family_test.fm_3) ? 
tiltontec.model.family_test.fm_3.cljs$lang$test : null]));
tiltontec.model.family_test.fm_3x = function tiltontec$model$family_test$fm_3x() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_3x.cljs$lang$var);
};
tiltontec.model.family_test.fm_3x.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "u63", "u63", 1660619135), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)), cljs.core.list(new cljs.core.Symbol(null, 
  "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)) + tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me), new cljs.core.Keyword(null, "bb21", "bb21", 
    848021780));
  }), new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, 
  "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), cljs.core.list(new cljs.core.Symbol(null, 
  "c-in", "c-in", 517820292, null), 3)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), 
  new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 
  345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35223 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
      "*", "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35223, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          return 7 * tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me__$1), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912));
        };
      }(_STAR_par_STAR_35223, me, cache)))), cljs.core.truth_(tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 3)) : null), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), 
      new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, 
      "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35223, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          return 2 * tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me__$1), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
        };
      }(_STAR_par_STAR_35223, me, cache)), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), tiltontec.cell.core.c_in.call(null, 3)))));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35223;
    }
  }));
  try {
    var values__8873__auto___35232 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, u, new cljs.core.Keyword(null, "u63", "u63", 1660619135))), 63);
    var result__8874__auto___35233 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35232);
    if (cljs.core.truth_(result__8874__auto___35233)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35232), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35232)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35224) {
    var t__8911__auto___35234 = e35224;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
    "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35234, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35235 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), u), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130))), 42);
    var result__8874__auto___35236 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35235);
    if (cljs.core.truth_(result__8874__auto___35236)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35235), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35235)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35225) {
    var t__8911__auto___35237 = e35225;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
    "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35237, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35238 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), u), new cljs.core.Keyword(null, "bb21", "bb21", 848021780))), 21);
    var result__8874__auto___35239 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35238);
    if (cljs.core.truth_(result__8874__auto___35239)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35238), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35238)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35226) {
    var t__8911__auto___35240 = e35226;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
    "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35240, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35241 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.family.fget.call(null, new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), u, new cljs.core.Keyword(null, "must?", "must?", 1639898554), false));
    var result__8874__auto___35242 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35241);
    if (cljs.core.truth_(result__8874__auto___35242)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35241), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35241)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35227) {
    var t__8911__auto___35243 = e35227;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
    "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35243, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854)), true);
  try {
    var value__8876__auto___35244 = (new cljs.core.Keyword(null, "kon", "kon", 437684854)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
    if (cljs.core.truth_(value__8876__auto___35244)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8876__auto___35244, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8876__auto___35244, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35228) {
    var t__8911__auto___35245 = e35228;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35245, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35246 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kon", "kon", 437684854)), u);
    var result__8874__auto___35247 = cljs.core.apply.call(null, tiltontec.model.base.md_cell, values__8873__auto___35246);
    if (cljs.core.truth_(result__8874__auto___35247)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, tiltontec.model.base.md_cell, values__8873__auto___35246), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), values__8873__auto___35246)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35229) {
    var t__8911__auto___35248 = e35229;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__8911__auto___35248, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35249 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 4);
    var result__8874__auto___35250 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35249);
    if (cljs.core.truth_(result__8874__auto___35250)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35249), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35249)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e35230) {
    var t__8911__auto___35251 = e35230;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35251, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__8874__auto__ = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35231) {
    var t__8911__auto__ = e35231;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_3x.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_3x;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-3x", "tiltontec.model.family-test/fm-3x", -2013001013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-3x", "fm-3x", 875338153, null), "test/tiltontec/model/family_test.cljc", 15, 1, 138, 138, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.family_test.fm_3x) ? tiltontec.model.family_test.fm_3x.cljs$lang$test : null]));
tiltontec.model.family_test.fm_picker = function tiltontec$model$family_test$fm_picker() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_picker.cljs$lang$var);
};
tiltontec.model.family_test.fm_picker.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picker", "picker", -659389603), 
  new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 42), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aax", "aax", -1960235086)), cljs.core.list(new cljs.core.Symbol("md", 
  "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbx", "bbx", 2103477618)))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, 
  "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 
  719685022), new cljs.core.Symbol(null, "p", "p", 1791580836, null)), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Keyword(null, "value", "value", 305978217))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35252 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
      "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", 
      "bingo", 719685022), new cljs.core.Symbol(null, "p", "p", 1791580836, null)), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Keyword(null, "value", "value", 305978217)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35252, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var p = tiltontec.model.family.fget.call(null, new cljs.core.Keyword(null, "picker", "picker", -659389603), me__$1);
          cljs.core.println.call(null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022), p);
          return tiltontec.model.base.md_get.call(null, p, new cljs.core.Keyword(null, "value", "value", 305978217));
        };
      }(_STAR_par_STAR_35252, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.c_in.call(null, 42), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("md", 
      "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aax", "aax", -1960235086)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbx", "bbx", 2103477618))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35252, 
      me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aax", "aax", -1960235086));
          return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbx", "bbx", 2103477618));
        };
      }(_STAR_par_STAR_35252, me, cache))))));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35252;
    }
  }));
  try {
    var values__8873__auto___35255 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "picker", "picker", -659389603), u), new cljs.core.Keyword(null, "value", "value", 305978217))), 42);
    var result__8874__auto___35256 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35255);
    if (cljs.core.truth_(result__8874__auto___35256)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35255), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35255)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35253) {
    var t__8911__auto___35257 = e35253;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, 
    "value", "value", 305978217), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35257, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "dd", "dd", -1340437629), u), new cljs.core.Keyword(null, "kzo", "kzo", 29004960))), 43);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", 
      "kzo", 29004960), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", 
      "kzo", 29004960), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35254) {
    var t__8911__auto__ = e35254;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, 
    "kzo", "kzo", 29004960), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_picker.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_picker;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-picker", "tiltontec.model.family-test/fm-picker", -1330150589, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-picker", "fm-picker", 2001727201, null), "test/tiltontec/model/family_test.cljc", 19, 1, 167, 167, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.family_test.fm_picker) ? tiltontec.model.family_test.fm_picker.cljs$lang$test : null]));
goog.provide("tiltontec.model.core_test");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.family");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
cljs.core.derive.call(null, tiltontec.cell.base.ia_types, new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644), new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830));
tiltontec.model.core_test.mm_typed = function tiltontec$model$core_test$mm_typed() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_typed.cljs$lang$var);
};
tiltontec.model.core_test.mm_typed.cljs$lang$test = function() {
  var me = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644), new cljs.core.Keyword(null, "x2", "x2", -1362513475), tiltontec.cell.core.c_in.call(null, 2), new cljs.core.Keyword(null, "age", "age", -604307804), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
  "*", "*", 345799209, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "x2", "x2", -1362513475)), 21)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475)) * 21;
  }));
  try {
    var values__8873__auto___35059 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804))), 42);
    var result__8874__auto___35060 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35059);
    if (cljs.core.truth_(result__8874__auto___35060)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35059), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35059)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35057) {
    var t__8911__auto___35061 = e35057;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35061, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644)), me);
    var result__8874__auto__ = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
      -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
      -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35058) {
    var t__8911__auto__ = e35058;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
    -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_typed.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_typed;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-typed", "tiltontec.model.core-test/mm-typed", 160483804, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-typed", "mm-typed", 1121916947, null), "test/tiltontec/model/core_test.cljc", 18, 1, 50, 50, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.mm_typed) ? tiltontec.model.core_test.mm_typed.cljs$lang$test : null]));
tiltontec.model.core_test.mm_opti_1 = function tiltontec$model$core_test$mm_opti_1() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_opti_1.cljs$lang$var);
};
tiltontec.model.core_test.mm_opti_1.cljs$lang$test = function() {
  var me = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "x2", "x2", -1362513475), 2, new cljs.core.Keyword(null, "age", "age", -604307804), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 21, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
  "x2", "x2", -1362513475)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 21 * tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475));
  }));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.meta.call(null, me));
  try {
    var values__8873__auto___35065 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475))), 2);
    var result__8874__auto___35066 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35065);
    if (cljs.core.truth_(result__8874__auto___35066)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35065), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35065)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35062) {
    var t__8911__auto___35067 = e35062;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35067, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35068 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804))), 42);
    var result__8874__auto___35069 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35068);
    if (cljs.core.truth_(result__8874__auto___35069)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35068), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35068)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35063) {
    var t__8911__auto___35070 = e35063;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35070, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cell.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804)));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35064) {
    var t__8911__auto__ = e35064;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_opti_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_opti_1;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-opti-1", "tiltontec.model.core-test/mm-opti-1", -1273683452, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-opti-1", "mm-opti-1", -1060539455, null), "test/tiltontec/model/core_test.cljc", 19, 1, 59, 59, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.mm_opti_1) ? tiltontec.model.core_test.mm_opti_1.cljs$lang$test : null]));
tiltontec.model.core_test.mm_install_alive = function tiltontec$model$core_test$mm_install_alive() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_install_alive.cljs$lang$var);
};
tiltontec.model.core_test.mm_install_alive.cljs$lang$test = function() {
  var bct = cljs.core.atom.call(null, 0);
  var res = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), "Bob", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "bogus", "bogus", 637345996), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
  "if-let", "if-let", 1803593690, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "be", "be", -1545923187, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242))], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, 
  "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "bingo-e!!!!!!!!", "bingo-e!!!!!!!!", -1781230244), new cljs.core.Symbol(null, "be", "be", -1545923187, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null), new cljs.core.Symbol(null, 
  "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, new cljs.core.Symbol(null, "be", "be", -1545923187, null))), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "bogus-no-e", "bogus-no-e", 2095562930), cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null)))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var temp__4423__auto__ = tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242));
      if (cljs.core.truth_(temp__4423__auto__)) {
        var be = temp__4423__auto__;
        tiltontec.util.base.call_trc.call(null, ":bingo-e!!!!!!!!", be, cljs.core.deref.call(null, bct));
        cljs.core.swap_BANG_.call(null, bct, cljs.core.inc);
        return 2 * be;
      } else {
        return tiltontec.util.base.call_trc.call(null, ":bogus-no-e", (new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me)));
      }
    };
  }(bct)), new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), tiltontec.cell.core.c_in.call(null, 21, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "loc", "loc", -584284901), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", 
  -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__35073 = tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "action", "action", -811238024)) instanceof cljs.core.Keyword ? tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "action", "action", -811238024)).fqn : null;
      switch(G__35073) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(bct)));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.meta.call(null, res));
  try {
    var values__8873__auto___35090 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cz.call(null, res)), (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, res)));
    var result__8874__auto___35091 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35090);
    if (cljs.core.truth_(result__8874__auto___35091)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35090), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35090)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e35074) {
    var t__8911__auto___35092 = e35074;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
    "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35092, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35093 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.model.base.md_cz.call(null, res))), 4);
    var result__8874__auto___35094 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35093);
    if (cljs.core.truth_(result__8874__auto___35094)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35093), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35093)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35075) {
    var t__8911__auto___35095 = e35075;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
    "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35095, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35096 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res))), tiltontec.cell.base.c_ref_QMARK_);
    var result__8874__auto___35097 = cljs.core.apply.call(null, cljs.core.every_QMARK_, values__8873__auto___35096);
    if (cljs.core.truth_(result__8874__auto___35097)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
      "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.every_QMARK_, values__8873__auto___35096), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
      "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), values__8873__auto___35096)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35076) {
    var t__8911__auto___35098 = e35076;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
    "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35098, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35099 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.set.call(null, cljs.core.keys.call(null, tiltontec.model.base.md_cz.call(null, res)))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, 
    "bogus-e", "bogus-e", -1082314242), null], null), null));
    var result__8874__auto___35100 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35099);
    if (cljs.core.truth_(result__8874__auto___35100)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35099), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35099)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35077) {
    var t__8911__auto___35101 = e35077;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
    "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35101, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35102 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res))), function(bct, res) {
      return function(p1__35071_SHARP_) {
        return cljs.core._EQ_.call(null, res, tiltontec.cell.base.c_me.call(null, p1__35071_SHARP_));
      };
    }(bct, res));
    var result__8874__auto___35103 = cljs.core.apply.call(null, cljs.core.every_QMARK_, values__8873__auto___35102);
    if (cljs.core.truth_(result__8874__auto___35103)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__35071#", "p1__35071#", 347035836, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__35071#", "p1__35071#", 347035836, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
      new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.every_QMARK_, values__8873__auto___35102), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__35071#", "p1__35071#", 347035836, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__35071#", "p1__35071#", 347035836, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
      new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), values__8873__auto___35102)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35078) {
    var t__8911__auto___35104 = e35078;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
    "p1__35071#", "p1__35071#", 347035836, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__35071#", "p1__35071#", 347035836, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
    new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35104, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35105 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.set.call(null, cljs.core.map.call(null, function(bct, res) {
      return function(p1__35072_SHARP_) {
        return tiltontec.cell.base.c_slot.call(null, p1__35072_SHARP_);
      };
    }(bct, res), cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res))))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null));
    var result__8874__auto___35106 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35105);
    if (cljs.core.truth_(result__8874__auto___35106)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__35072#", "p1__35072#", 172509213, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__35072#", "p1__35072#", 172509213, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__8873__auto___35105), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__35072#", "p1__35072#", 172509213, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__35072#", "p1__35072#", 172509213, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35105)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35079) {
    var t__8911__auto___35107 = e35079;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
    "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
    "p1__35072#", "p1__35072#", 172509213, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__35072#", "p1__35072#", 172509213, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35107, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35108 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), "Bob");
    var result__8874__auto___35109 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35108);
    if (cljs.core.truth_(result__8874__auto___35109)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35108), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35108)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35080) {
    var t__8911__auto___35110 = e35080;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35110, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35111 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_name.call(null, res)), "Bob");
    var result__8874__auto___35112 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35111);
    if (cljs.core.truth_(result__8874__auto___35112)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35111), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35111)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35081) {
    var t__8911__auto___35113 = e35081;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35113, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "res", "res", -1395007879), cljs.core.deref.call(null, res));
  try {
    var values__8873__auto___35114 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "bogus", "bogus", 637345996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), 42);
    var result__8874__auto___35115 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35114);
    if (cljs.core.truth_(result__8874__auto___35115)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35114), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35114)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35082) {
    var t__8911__auto___35116 = e35082;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35116, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35117 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), null);
    var result__8874__auto___35118 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35117);
    if (cljs.core.truth_(result__8874__auto___35118)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35117), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35117)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35083) {
    var t__8911__auto___35119 = e35083;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
    188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35119, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35120 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), null);
    var result__8874__auto___35121 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35120);
    if (cljs.core.truth_(result__8874__auto___35121)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35120), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35120)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35084) {
    var t__8911__auto___35122 = e35084;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
    188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35122, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "loc", "loc", -584284901), (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res)));
  try {
    var values__8873__auto___35123 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__8874__auto___35124 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35123);
    if (cljs.core.truth_(result__8874__auto___35124)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35123), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35123)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e35085) {
    var t__8911__auto___35125 = e35085;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35125, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35126 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, bct)), 1);
    var result__8874__auto___35127 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35126);
    if (cljs.core.truth_(result__8874__auto___35127)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35126), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35126)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35086) {
    var t__8911__auto___35128 = e35086;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35128, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.reset_BANG_.call(null, bct, 0);
  tiltontec.model.core.md_reset_BANG_.call(null, res, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__8873__auto___35129 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__8874__auto___35130 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35129);
    if (cljs.core.truth_(result__8874__auto___35130)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35129), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35129)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e35087) {
    var t__8911__auto___35131 = e35087;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35131, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, bct));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.zero_QMARK_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35088) {
    var t__8911__auto__ = e35088;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_install_alive.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_install_alive;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-install-alive", "tiltontec.model.core-test/mm-install-alive", -206095115, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-install-alive", "mm-install-alive", 1190325296, null), "test/tiltontec/model/core_test.cljc", 
26, 1, 70, 70, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_install_alive) ? tiltontec.model.core_test.mm_install_alive.cljs$lang$test : null]));
tiltontec.model.core_test.hello_model = function tiltontec$model$core_test$hello_model() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$hello_model.cljs$lang$var);
};
tiltontec.model.core_test.hello_model.cljs$lang$test = function() {
  var uni = tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, 
  "name", "name", 1843675177), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "moniker", "moniker", -1330203766), "World", new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, 
  null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "slot", "slot", 1880761098, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), new cljs.core.Symbol(null, "old", "old", -184691163, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", 
  "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Symbol(null, "visitor-did", "visitor-did", 1352408685, null), new cljs.core.Symbol(null, "new", "new", -444906321, null)))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "action", "action", -811238024), 
  cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "location", "location", 1815599388), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, 
  null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "honey-im", "honey-im", 546332184), new cljs.core.Symbol(null, "new", "new", -444906321, null))))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, 
  null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "response", "response", -1068424192), cljs.core.list(new cljs.core.Symbol(null, 
  "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "r-response", 
  "r-response", 1211417459), new cljs.core.Symbol(null, "new", "new", -444906321, null)))), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", 
  "me", 1501524834, null), new cljs.core.Keyword(null, "location", "location", 1815599388))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", 
  "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world"))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "alarm", "alarm", 2066206946), new cljs.core.Keyword(null, "on-off", "on-off", 
  420433376), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "telling-alarm-api", "telling-alarm-api", -905807036), new cljs.core.Symbol(null, "new", "new", 
  -444906321, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "off", "off", 606440789), 
  new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "activity", "activity", -1179221455), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "new", "new", -444906321, null), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "auto-dialing-911", "auto-dialing-911", -1790610355)), null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, 
  "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "on-off", "on-off", 420433376))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
  "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_35132 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "alarm", "alarm", 2066206946), new cljs.core.Keyword(null, "on-off", "on-off", 420433376), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), 
      function(_STAR_par_STAR_35132, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          return tiltontec.util.base.call_trc.call(null, ":telling-alarm-api", new$);
        };
      }(_STAR_par_STAR_35132, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", 
      "location", 1815599388))), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35132, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), me__$1), new cljs.core.Keyword(null, "location", "location", 1815599388)))) {
            return new cljs.core.Keyword(null, "off", "off", 606440789);
          } else {
            return new cljs.core.Keyword(null, "on", "on", 173873944);
          }
        };
      }(_STAR_par_STAR_35132, me, cache)), new cljs.core.Keyword(null, "activity", "activity", -1179221455), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(_STAR_par_STAR_35132, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          var G__35133 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
          switch(G__35133) {
            case "call-police":
              return tiltontec.util.base.call_trc.call(null, ":auto-dialing-911");
              break;
            default:
              return null;
          }
        };
      }(_STAR_par_STAR_35132, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "on-off", "on-off", 
      420433376))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, 
      "case", "case", -1510733573, null), new cljs.core.Symbol(null, "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35132, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "on", "on", 173873944), tiltontec.model.base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "on-off", "on-off", 420433376)))) {
            var temp__4425__auto__ = tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), me__$1), new cljs.core.Keyword(null, "action", "action", -811238024));
            if (cljs.core.truth_(temp__4425__auto__)) {
              var action = temp__4425__auto__;
              var G__35134 = action instanceof cljs.core.Keyword ? action.fqn : null;
              switch(G__35134) {
                case "smashing-window":
                  return new cljs.core.Keyword(null, "call-police", "call-police", -2114689981);
                  break;
                default:
                  return null;
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_35132, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "location", "location", 1815599388), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
      "obs", "obs", -664011444), function(_STAR_par_STAR_35132, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_35132, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), 
      new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35132, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var G__35135 = tiltontec.model.base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "action", "action", -811238024)) instanceof cljs.core.Keyword ? tiltontec.model.base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "action", "action", -811238024)).fqn : null;
          switch(G__35135) {
            case "leave":
              return new cljs.core.Keyword(null, "away", "away", 1142420954);
              break;
            case "return":
              return new cljs.core.Keyword(null, "home", "home", -74557309);
              break;
            default:
              return new cljs.core.Keyword(null, "missing", "missing", 362507769);
          }
        };
      }(_STAR_par_STAR_35132, me, cache)), new cljs.core.Keyword(null, "response", "response", -1068424192), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(_STAR_par_STAR_35132, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_35132, me, cache), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "me", "me", 1501524834, null), new cljs.core.Keyword(null, "location", "location", 1815599388))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, 
      "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_35132, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.model.base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "location", "location", 1815599388)))) {
            var temp__4425__auto__ = tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), me__$1), new cljs.core.Keyword(null, "action", "action", -811238024));
            if (cljs.core.truth_(temp__4425__auto__)) {
              var act = temp__4425__auto__;
              var G__35136 = act instanceof cljs.core.Keyword ? act.fqn : null;
              switch(G__35136) {
                case "knock-knock":
                  return "hello, world";
                  break;
                default:
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_35132, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "moniker", "moniker", -1330203766), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), 
      function(_STAR_par_STAR_35132, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.util.base.call_trc.call(null, "visitor-did", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_35132, me, cache))))));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_35132;
    }
  }));
  var viz = tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), uni);
  var rez = tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni);
  try {
    var values__8873__auto___35147 = cljs.core._conj.call(null, cljs.core.List.EMPTY, viz == null);
    var result__8874__auto___35148 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35147);
    if (cljs.core.truth_(result__8874__auto___35148)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35147), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35147)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35137) {
    var t__8911__auto___35149 = e35137;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35149, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35150 = cljs.core._conj.call(null, cljs.core.List.EMPTY, rez == null);
    var result__8874__auto___35151 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35150);
    if (cljs.core.truth_(result__8874__auto___35151)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35150), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35150)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35138) {
    var t__8911__auto___35152 = e35138;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8911__auto___35152, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35153 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cell.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024)) == null);
    var result__8874__auto___35154 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35153);
    if (cljs.core.truth_(result__8874__auto___35154)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35153), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35153)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35139) {
    var t__8911__auto___35155 = e35139;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
    "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35155, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35156 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__8874__auto___35157 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35156);
    if (cljs.core.truth_(result__8874__auto___35157)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
      "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35156), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
      "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35156)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e35140) {
    var t__8911__auto___35158 = e35140;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
    "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35158, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646));
  try {
    var values__8873__auto___35159 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cell.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024)) == null);
    var result__8874__auto___35160 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35159);
    if (cljs.core.truth_(result__8874__auto___35160)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35159), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35159)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35141) {
    var t__8911__auto___35161 = e35141;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
    "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35161, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__8873__auto___35162 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_getx.call(null, new cljs.core.Keyword(null, "mdv!", "mdv!", 1930934197), tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__8874__auto___35163 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35162);
    if (cljs.core.truth_(result__8874__auto___35163)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
      "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35162), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
      "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35162)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e35142) {
    var t__8911__auto___35164 = e35142;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
    "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35164, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.model.core_test.hello_model.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.hello_model;
}, new cljs.core.Symbol("tiltontec.model.core-test", "hello-model", "tiltontec.model.core-test/hello-model", 1793459768, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "hello-model", "hello-model", 287487483, null), "test/tiltontec/model/core_test.cljc", 21, 1, 115, 115, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.hello_model) ? tiltontec.model.core_test.hello_model.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env35165 = cljs.test.empty_env.call(null);
  var summary35166 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35165, summary35166) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35165);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8978__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35165, summary35166) {
          return function() {
            if (env__8978__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8978__auto__, env35165, summary35166)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_typed;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-typed", "tiltontec.model.core-test/mm-typed", 160483804, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-typed", "mm-typed", 1121916947, null), "test/tiltontec/model/core_test.cljc", 18, 1, 50, 50, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.model.core_test.mm_typed) ? tiltontec.model.core_test.mm_typed.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_opti_1;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-opti-1", "tiltontec.model.core-test/mm-opti-1", -1273683452, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-opti-1", "mm-opti-1", -1060539455, null), "test/tiltontec/model/core_test.cljc", 19, 1, 59, 59, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_opti_1) ? tiltontec.model.core_test.mm_opti_1.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_install_alive;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-install-alive", "tiltontec.model.core-test/mm-install-alive", -206095115, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-install-alive", "mm-install-alive", 1190325296, null), "test/tiltontec/model/core_test.cljc", 
        26, 1, 70, 70, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_install_alive) ? tiltontec.model.core_test.mm_install_alive.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.hello_model;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "hello-model", "tiltontec.model.core-test/hello-model", 1793459768, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "hello-model", "hello-model", 287487483, null), "test/tiltontec/model/core_test.cljc", 21, 
        1, 115, 115, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.hello_model) ? tiltontec.model.core_test.hello_model.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35165, summary35166) {
          return function() {
            if (env__8978__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8978__auto__, env35165, summary35166)], null));
      }());
    };
  }(env35165, summary35166), function(env35165, summary35166) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env35165, summary35166)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35165, summary35166) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary35166, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary35166), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env35165, summary35166)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35165, summary35166) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35165);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary35166));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary35166), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env35165, summary35166)], null));
}());
goog.provide("testrun");
goog.require("cljs.core");
goog.require("cljs.test");
cljs.core.enable_console_print_BANG_.call(null);
testrun.run = function testrun$run() {
  return cljs.test.run_block.call(null, function() {
    var env36116 = /tiltontec.util.*-test/;
    var summary36117 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env36116, summary36117) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env36116);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "testrun", "testrun", 252374431, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__8978__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env36116, summary36117) {
            return function() {
              if (env__8978__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__8978__auto__, env36116, summary36117)], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env36116, summary36117) {
            return function() {
              if (env__8978__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__8978__auto__, env36116, summary36117)], null));
        }());
      };
    }(env36116, summary36117), function(env36116, summary36117) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "testrun", "testrun", 252374431, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env36116, summary36117)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env36116, summary36117) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary36117, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary36117), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env36116, summary36117)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env36116, summary36117) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env36116);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary36117));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary36117), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env36116, summary36117)], null));
  }());
};
goog.exportSymbol("testrun.run", testrun.run);
goog.provide("tiltontec.cell.lazy_cells_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
tiltontec.cell.lazy_cells_test.solid_lazy = function tiltontec$cell$lazy_cells_test$solid_lazy() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$solid_lazy.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0);
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, a), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 40)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "lazy", "lazy", -424547181), true, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
  function(xo, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return tiltontec.cell.evaluate.c_get.call(null, a) + 40;
    };
  }(xo, a));
  try {
    var values__8873__auto___35622 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), tiltontec.cell.base.unbound);
    var result__8874__auto___35623 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35622);
    if (cljs.core.truth_(result__8874__auto___35623)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35622), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35622)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e35614) {
    var t__8911__auto___35624 = e35614;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35624, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35625 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 0);
    var result__8874__auto___35626 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35625);
    if (cljs.core.truth_(result__8874__auto___35626)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35625), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35625)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35615) {
    var t__8911__auto___35627 = e35615;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35627, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35628 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 40);
    var result__8874__auto___35629 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35628);
    if (cljs.core.truth_(result__8874__auto___35629)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35628), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35628)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35616) {
    var t__8911__auto___35630 = e35616;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35630, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35631 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__8874__auto___35632 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35631);
    if (cljs.core.truth_(result__8874__auto___35632)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35631), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35631)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35617) {
    var t__8911__auto___35633 = e35617;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35633, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 100);
  try {
    var values__8873__auto___35634 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__8874__auto___35635 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35634);
    if (cljs.core.truth_(result__8874__auto___35635)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35634), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35634)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35618) {
    var t__8911__auto___35636 = e35618;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35636, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35637 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 40);
    var result__8874__auto___35638 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35637);
    if (cljs.core.truth_(result__8874__auto___35638)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35637), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35637)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35619) {
    var t__8911__auto___35639 = e35619;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35639, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35640 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 140);
    var result__8874__auto___35641 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35640);
    if (cljs.core.truth_(result__8874__auto___35641)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35640), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35640)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35620) {
    var t__8911__auto___35642 = e35620;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35642, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35621) {
    var t__8911__auto__ = e35621;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.solid_lazy;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "solid-lazy", "tiltontec.cell.lazy-cells-test/solid-lazy", -621454351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "solid-lazy", "solid-lazy", -1673817790, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
20, 1, 40, 40, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.solid_lazy) ? tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test : null]));
tiltontec.cell.lazy_cells_test.lazy_until_asked = function tiltontec$cell$lazy_cells_test$lazy_until_asked() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$lazy_until_asked.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var xr = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0);
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, xr, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, xr, a), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 40)), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768), new cljs.core.Keyword(null, "rule", "rule", 729973257), function(xo, xr, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, xr, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, a) + 40;
    };
  }(xo, xr, a));
  try {
    var values__8873__auto___35655 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), tiltontec.cell.base.unbound);
    var result__8874__auto___35656 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35655);
    if (cljs.core.truth_(result__8874__auto___35656)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35655), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35655)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e35643) {
    var t__8911__auto___35657 = e35643;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35657, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35658 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 0);
    var result__8874__auto___35659 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35658);
    if (cljs.core.truth_(result__8874__auto___35659)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35658), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35658)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35644) {
    var t__8911__auto___35660 = e35644;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35660, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35661 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 0);
    var result__8874__auto___35662 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35661);
    if (cljs.core.truth_(result__8874__auto___35662)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35661), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35661)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35645) {
    var t__8911__auto___35663 = e35645;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35663, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35664 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 40);
    var result__8874__auto___35665 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35664);
    if (cljs.core.truth_(result__8874__auto___35665)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35664), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35664)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35646) {
    var t__8911__auto___35666 = e35646;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35666, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35667 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__8874__auto___35668 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35667);
    if (cljs.core.truth_(result__8874__auto___35668)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35667), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35667)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35647) {
    var t__8911__auto___35669 = e35647;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35669, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35670 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 1);
    var result__8874__auto___35671 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35670);
    if (cljs.core.truth_(result__8874__auto___35671)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35670), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35670)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35648) {
    var t__8911__auto___35672 = e35648;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35672, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 100);
  try {
    var values__8873__auto___35673 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__8874__auto___35674 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35673);
    if (cljs.core.truth_(result__8874__auto___35674)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35673), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35673)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35649) {
    var t__8911__auto___35675 = e35649;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35675, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35676 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 2);
    var result__8874__auto___35677 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35676);
    if (cljs.core.truth_(result__8874__auto___35677)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35676), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35676)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35650) {
    var t__8911__auto___35678 = e35650;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35678, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35679 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 140);
    var result__8874__auto___35680 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35679);
    if (cljs.core.truth_(result__8874__auto___35680)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35679), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35679)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35651) {
    var t__8911__auto___35681 = e35651;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35681, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35682 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 140);
    var result__8874__auto___35683 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35682);
    if (cljs.core.truth_(result__8874__auto___35683)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35682), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35682)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35652) {
    var t__8911__auto___35684 = e35652;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35684, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35685 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__8874__auto___35686 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35685);
    if (cljs.core.truth_(result__8874__auto___35686)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35685), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35685)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35653) {
    var t__8911__auto___35687 = e35653;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35687, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 2);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35654) {
    var t__8911__auto__ = e35654;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.lazy_until_asked;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "lazy-until-asked", "tiltontec.cell.lazy-cells-test/lazy-until-asked", -1250993920, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "lazy-until-asked", "lazy-until-asked", -63631277, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
26, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.lazy_until_asked) ? tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test : null]));
tiltontec.cell.lazy_cells_test.optimize_when_value_t = function tiltontec$cell$lazy_cells_test$optimize_when_value_t() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$optimize_when_value_t.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var xr = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aaa", "aaa", 392664825));
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "xxx", "xxx", -1019301908), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, xr, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, xr, a), new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, 
  new cljs.core.Keyword(null, "reading-a!!!", "reading-a!!!", -391404819)), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "av", "av", 1883447185, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 
  1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "av", "av", 1883447185, null), 1), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), new cljs.core.Symbol(null, "av", "av", 1883447185, null), 40)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(xo, xr, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, xr, cljs.core.inc);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reading-a!!!", "reading-a!!!", -391404819));
      var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, a);
      if (cljs.core.truth_(temp__4425__auto__)) {
        var av = temp__4425__auto__;
        if (av > 1) {
          return av + 40;
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(xo, xr, a));
  try {
    var values__8873__auto___35695 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x));
    var result__8874__auto___35696 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35695);
    if (cljs.core.truth_(result__8874__auto___35696)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35695), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35695)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35688) {
    var t__8911__auto___35697 = e35688;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8911__auto___35697, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35698 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, x)), cljs.core.PersistentHashSet.fromArray([a], true));
    var result__8874__auto___35699 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35698);
    if (cljs.core.truth_(result__8874__auto___35699)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35698), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35698)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35689) {
    var t__8911__auto___35700 = e35689;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35700, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 1);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-finished!!!!!!!!!!", "reset-finished!!!!!!!!!!", -898693691));
  try {
    var values__8873__auto___35701 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x));
    var result__8874__auto___35702 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35701);
    if (cljs.core.truth_(result__8874__auto___35702)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35701), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35701)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35690) {
    var t__8911__auto___35703 = e35690;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8911__auto___35703, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35704 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, x)), cljs.core.PersistentHashSet.fromArray([a], true));
    var result__8874__auto___35705 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35704);
    if (cljs.core.truth_(result__8874__auto___35705)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35704), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35704)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35691) {
    var t__8911__auto___35706 = e35691;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35706, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-2-beginning!!!!!!!!!!!!", "reset-2-beginning!!!!!!!!!!!!", 206221749));
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 2);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-2-finished!!!!!!!!!!", "reset-2-finished!!!!!!!!!!", -1742930051));
  try {
    var values__8873__auto___35707 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 42);
    var result__8874__auto___35708 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35707);
    if (cljs.core.truth_(result__8874__auto___35708)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35707), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35707)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35692) {
    var t__8911__auto___35709 = e35692;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35709, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35710 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, x));
    var result__8874__auto___35711 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8873__auto___35710);
    if (cljs.core.truth_(result__8874__auto___35711)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8873__auto___35710), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8873__auto___35710)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35693) {
    var t__8911__auto___35712 = e35693;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35712, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "useds", "useds", 621350967), tiltontec.cell.base.c_useds.call(null, x));
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, x));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35694) {
    var t__8911__auto__ = e35694;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.optimize_when_value_t;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "optimize-when-value-t", "tiltontec.cell.lazy-cells-test/optimize-when-value-t", 919000791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "optimize-when-value-t", "optimize-when-value-t", 2131697560, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
31, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.optimize_when_value_t) ? tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env35713 = cljs.test.empty_env.call(null);
  var summary35714 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35713, summary35714) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35713);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8978__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35713, summary35714) {
          return function() {
            if (env__8978__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8978__auto__, env35713, summary35714)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.solid_lazy;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "solid-lazy", "tiltontec.cell.lazy-cells-test/solid-lazy", -621454351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "solid-lazy", "solid-lazy", -1673817790, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
        20, 1, 40, 40, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.solid_lazy) ? tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.lazy_until_asked;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "lazy-until-asked", "tiltontec.cell.lazy-cells-test/lazy-until-asked", -1250993920, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "lazy-until-asked", "lazy-until-asked", -63631277, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
        26, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.lazy_until_asked) ? tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.optimize_when_value_t;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "optimize-when-value-t", "tiltontec.cell.lazy-cells-test/optimize-when-value-t", 919000791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "optimize-when-value-t", "optimize-when-value-t", 2131697560, 
        null), "test/tiltontec/cell/lazy_cells_test.cljc", 31, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.optimize_when_value_t) ? tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35713, summary35714) {
          return function() {
            if (env__8978__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8978__auto__, env35713, summary35714)], null));
      }());
    };
  }(env35713, summary35714), function(env35713, summary35714) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env35713, summary35714)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35713, summary35714) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary35714, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary35714), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env35713, summary35714)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35713, summary35714) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35713);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary35714));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary35714), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env35713, summary35714)], null));
}());
goog.provide("tiltontec.cell.core_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.core");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.core_test.test_input = function tiltontec$cell$core_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_input.cljs$lang$var);
};
tiltontec.cell.core_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_cell.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "mol", "mol", -2087943467), new cljs.core.Keyword(null, "value", "value", 305978217), 42);
  try {
    var values__8873__auto___35297 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8874__auto___35298 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35297);
    if (cljs.core.truth_(result__8874__auto___35298)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35297), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto___35297)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35290) {
    var t__8911__auto___35299 = e35290;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35299, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35300 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.base.c_value.call(null, c));
    var result__8874__auto___35301 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35300);
    if (cljs.core.truth_(result__8874__auto___35301)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35300), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35300)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35291) {
    var t__8911__auto___35302 = e35291;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35302, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35303 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8874__auto___35304 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35303);
    if (cljs.core.truth_(result__8874__auto___35304)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35303), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35303)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35292) {
    var t__8911__auto___35305 = e35292;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35305, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35306 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35307 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35306);
    if (cljs.core.truth_(result__8874__auto___35307)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35306), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35306)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35293) {
    var t__8911__auto___35308 = e35293;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35308, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35309 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8874__auto___35310 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__8873__auto___35309);
    if (cljs.core.truth_(result__8874__auto___35310)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__8873__auto___35309), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__8873__auto___35309)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35294) {
    var t__8911__auto___35311 = e35294;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35311, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35312 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8874__auto___35313 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35312);
    if (cljs.core.truth_(result__8874__auto___35313)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35312), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35312)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35295) {
    var t__8911__auto___35314 = e35295;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35314, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "mol", "mol", -2087943467));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35296) {
    var t__8911__auto__ = e35296;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-input", "tiltontec.cell.core-test/test-input", 584139487, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 45, 45, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_input) ? tiltontec.cell.core_test.test_input.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_in = function tiltontec$cell$core_test$test_c_in() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_in.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_in.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42);
  try {
    var values__8873__auto___35322 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8874__auto___35323 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35322);
    if (cljs.core.truth_(result__8874__auto___35323)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35322), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto___35322)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35315) {
    var t__8911__auto___35324 = e35315;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35324, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35325 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.base.c_value.call(null, c));
    var result__8874__auto___35326 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35325);
    if (cljs.core.truth_(result__8874__auto___35326)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35325), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35325)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35316) {
    var t__8911__auto___35327 = e35316;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35327, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35328 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8874__auto___35329 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35328);
    if (cljs.core.truth_(result__8874__auto___35329)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35328), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35328)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35317) {
    var t__8911__auto___35330 = e35317;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35330, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35331 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35332 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35331);
    if (cljs.core.truth_(result__8874__auto___35332)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35331), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35331)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35318) {
    var t__8911__auto___35333 = e35318;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35333, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35334 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8874__auto___35335 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__8873__auto___35334);
    if (cljs.core.truth_(result__8874__auto___35335)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__8873__auto___35334), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__8873__auto___35334)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35319) {
    var t__8911__auto___35336 = e35319;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35336, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35337 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8874__auto___35338 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__8873__auto___35337);
    if (cljs.core.truth_(result__8874__auto___35338)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__8873__auto___35337), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__8873__auto___35337)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35320) {
    var t__8911__auto___35339 = e35320;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35339, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35321) {
    var t__8911__auto__ = e35321;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_in.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_in;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in", "tiltontec.cell.core-test/test-c-in", -99212066, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in", "test-c-in", -885735134, null), "test/tiltontec/cell/core_test.cljc", 19, 1, 58, 58, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in) ? tiltontec.cell.core_test.test_c_in.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_in_PLUS_ = function tiltontec$cell$core_test$test_c_in_PLUS_() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_in_PLUS_.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cool", "cool", -10453819));
  try {
    var values__8873__auto___35347 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8874__auto___35348 = cljs.core.apply.call(null, tiltontec.cell.base.c_ref_QMARK_, values__8873__auto___35347);
    if (cljs.core.truth_(result__8874__auto___35348)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_ref_QMARK_, 
      values__8873__auto___35347), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), values__8873__auto___35347)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35340) {
    var t__8911__auto___35349 = e35340;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35349, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35350 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.base.c_value.call(null, c));
    var result__8874__auto___35351 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35350);
    if (cljs.core.truth_(result__8874__auto___35351)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35350), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35350)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35341) {
    var t__8911__auto___35352 = e35341;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35352, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35353 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8874__auto___35354 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35353);
    if (cljs.core.truth_(result__8874__auto___35354)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35353), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35353)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35342) {
    var t__8911__auto___35355 = e35342;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35355, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35356 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35357 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35356);
    if (cljs.core.truth_(result__8874__auto___35357)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35356), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35356)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35343) {
    var t__8911__auto___35358 = e35343;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35358, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35359 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8874__auto___35360 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__8873__auto___35359);
    if (cljs.core.truth_(result__8874__auto___35360)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__8873__auto___35359), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__8873__auto___35359)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35344) {
    var t__8911__auto___35361 = e35344;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35361, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35362 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8874__auto___35363 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35362);
    if (cljs.core.truth_(result__8874__auto___35363)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35362), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35362)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35345) {
    var t__8911__auto___35364 = e35345;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35364, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "cool", "cool", -10453819));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35346) {
    var t__8911__auto__ = e35346;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_in_PLUS_;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in+", "tiltontec.cell.core-test/test-c-in+", 856803589, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in+", "test-c-in+", -1036603951, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 69, 69, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in_PLUS_) ? tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_formula = function tiltontec$cell$core_test$test_c_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_formula.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_formula.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 40 + 2;
  });
  try {
    var values__8873__auto___35373 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), c);
    var result__8874__auto___35374 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35373);
    if (cljs.core.truth_(result__8874__auto___35374)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8873__auto___35373), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8873__auto___35373)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35365) {
    var t__8911__auto___35375 = e35365;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35375, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35376 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_rule.call(null, c));
    var result__8874__auto___35377 = cljs.core.apply.call(null, cljs.core.fn_QMARK_, values__8873__auto___35376);
    if (cljs.core.truth_(result__8874__auto___35377)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.fn_QMARK_, values__8873__auto___35376), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), values__8873__auto___35376)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35366) {
    var t__8911__auto___35378 = e35366;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35378, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35379 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.unbound), tiltontec.cell.base.c_value.call(null, c));
    var result__8874__auto___35380 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35379);
    if (cljs.core.truth_(result__8874__auto___35380)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35379), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35379)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35367) {
    var t__8911__auto___35381 = e35367;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
    "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35381, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35382 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8874__auto___35383 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35382);
    if (cljs.core.truth_(result__8874__auto___35383)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35382), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35382)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35368) {
    var t__8911__auto___35384 = e35368;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35384, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35385 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35386 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35385);
    if (cljs.core.truth_(result__8874__auto___35386)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35385), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35385)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35369) {
    var t__8911__auto___35387 = e35369;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35387, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35388 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35389 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35388);
    if (cljs.core.truth_(result__8874__auto___35389)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35388), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35388)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35370) {
    var t__8911__auto___35390 = e35370;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35390, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35391 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__8874__auto___35392 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35391);
    if (cljs.core.truth_(result__8874__auto___35392)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35391), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35391)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35371) {
    var t__8911__auto___35393 = e35371;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35393, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35372) {
    var t__8911__auto__ = e35372;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_formula;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-formula", "tiltontec.cell.core-test/test-c-formula", -143714513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-formula", "test-c-formula", -2076148965, null), "test/tiltontec/cell/core_test.cljc", 24, 1, 80, 80, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_formula) ? tiltontec.cell.core_test.test_c_formula.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK__PLUS_ = function tiltontec$cell$core_test$t_c_QMARK__PLUS_() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK__PLUS_.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), false, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "cool", "cool", -10453819)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", 
  -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "cool", "cool", -10453819));
    return 40 + 2;
  });
  try {
    var values__8873__auto___35404 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8874__auto___35405 = cljs.core.apply.call(null, tiltontec.cell.base.c_ref_QMARK_, values__8873__auto___35404);
    if (cljs.core.truth_(result__8874__auto___35405)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_ref_QMARK_, 
      values__8873__auto___35404), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), values__8873__auto___35404)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35394) {
    var t__8911__auto___35406 = e35394;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35406, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35407 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_rule.call(null, c));
    var result__8874__auto___35408 = cljs.core.apply.call(null, cljs.core.fn_QMARK_, values__8873__auto___35407);
    if (cljs.core.truth_(result__8874__auto___35408)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.fn_QMARK_, values__8873__auto___35407), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), values__8873__auto___35407)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35395) {
    var t__8911__auto___35409 = e35395;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35409, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35410 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.unbound), tiltontec.cell.base.c_value.call(null, c));
    var result__8874__auto___35411 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35410);
    if (cljs.core.truth_(result__8874__auto___35411)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35410), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35410)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35396) {
    var t__8911__auto___35412 = e35396;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
    "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35412, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35413 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8874__auto___35414 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35413);
    if (cljs.core.truth_(result__8874__auto___35414)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35413), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35413)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35397) {
    var t__8911__auto___35415 = e35397;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35415, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35416 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35417 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35416);
    if (cljs.core.truth_(result__8874__auto___35417)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35416), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35416)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35398) {
    var t__8911__auto___35418 = e35398;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35418, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35419 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8874__auto___35420 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35419);
    if (cljs.core.truth_(result__8874__auto___35420)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35419), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35419)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35399) {
    var t__8911__auto___35421 = e35399;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35421, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35422 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__8874__auto___35423 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35422);
    if (cljs.core.truth_(result__8874__auto___35423)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35422), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35422)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35400) {
    var t__8911__auto___35424 = e35400;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35424, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35425 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8874__auto___35426 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35425);
    if (cljs.core.truth_(result__8874__auto___35426)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35425), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35425)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35401) {
    var t__8911__auto___35427 = e35401;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35427, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35428 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_optimize.call(null, c));
    var result__8874__auto___35429 = cljs.core.apply.call(null, cljs.core.not, values__8873__auto___35428);
    if (cljs.core.truth_(result__8874__auto___35429)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8873__auto___35428), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8873__auto___35428)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35402) {
    var t__8911__auto___35430 = e35402;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35430, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35403) {
    var t__8911__auto__ = e35403;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK__PLUS_;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?+", "tiltontec.cell.core-test/t-c?+", -1190817413, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?+", "t-c?+", 1747367215, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 92, 92, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK__PLUS_) ? 
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test : null]));
tiltontec.cell.core_test.t_eph_1 = function tiltontec$cell$core_test$t_eph_1() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_eph_1.cljs$lang$var);
};
tiltontec.cell.core_test.t_eph_1.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var boct = cljs.core.atom.call(null, 0);
  var b = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "b", "b", 1482224470), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(boct) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, boct, cljs.core.inc);
    };
  }(boct), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true);
  var crun = cljs.core.atom.call(null, 0);
  var cobs = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "c", "c", -1763192079), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(boct, b, crun, cobs) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, cobs, cljs.core.inc);
    };
  }(boct, b, crun, cobs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022)), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "prog1", "prog1", -359901378, 
  null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "cellread!!", "cellread!!", -2142314459), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
  "b", "b", -1172211299, null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(boct, b, crun, cobs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
      cljs.core.swap_BANG_.call(null, crun, cljs.core.inc);
      var result__31774__auto__ = [cljs.core.str("Hi "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, b))].join("");
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "cellread!!", "cellread!!", -2142314459), cljs.core.deref.call(null, b));
      return result__31774__auto__;
    };
  }(boct, b, crun, cobs));
  if (cljs.core.truth_(tiltontec.cell.base.c_rule.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Early no rule"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  try {
    var values__8873__auto___35450 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value.call(null, b));
    var result__8874__auto___35451 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35450);
    if (cljs.core.truth_(result__8874__auto___35451)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35450), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35450)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35431) {
    var t__8911__auto___35452 = e35431;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35452, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "valstate", "valstate", 283440834), tiltontec.cell.base.c_value_state.call(null, b));
  try {
    var values__8873__auto___35453 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value_state.call(null, b)), new cljs.core.Keyword(null, "valid", "valid", 155614240));
    var result__8874__auto___35454 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35453);
    if (cljs.core.truth_(result__8874__auto___35454)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
      "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35453), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
      "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35453)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35432) {
    var t__8911__auto___35455 = e35432;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
    "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35455, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35456 = cljs.core._conj.call(null, cljs.core.List.EMPTY, b);
    var result__8874__auto___35457 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__8873__auto___35456);
    if (cljs.core.truth_(result__8874__auto___35457)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__8873__auto___35456), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__8873__auto___35456)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35433) {
    var t__8911__auto___35458 = e35433;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35458, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, b);
  tiltontec.util.base.call_trc.call(null, null, cljs.core.deref.call(null, b));
  try {
    var values__8873__auto___35459 = cljs.core._conj.call(null, cljs.core.List.EMPTY, b);
    var result__8874__auto___35460 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__8873__auto___35459);
    if (cljs.core.truth_(result__8874__auto___35460)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__8873__auto___35459), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__8873__auto___35459)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35434) {
    var t__8911__auto___35461 = e35434;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35461, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35462 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), "Hi ");
    var result__8874__auto___35463 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35462);
    if (cljs.core.truth_(result__8874__auto___35463)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35462), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35462)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35435) {
    var t__8911__auto___35464 = e35435;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35464, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35465 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 1);
    var result__8874__auto___35466 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35465);
    if (cljs.core.truth_(result__8874__auto___35466)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35465), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35465)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35436) {
    var t__8911__auto___35467 = e35436;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35467, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35468 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), cljs.core.deref.call(null, crun)), 1);
    var result__8874__auto___35469 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35468);
    if (cljs.core.truth_(result__8874__auto___35469)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35468), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35468)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e35437) {
    var t__8911__auto___35470 = e35437;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
    cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35470, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35471 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__8874__auto___35472 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35471);
    if (cljs.core.truth_(result__8874__auto___35472)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35471), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35471)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35438) {
    var t__8911__auto___35473 = e35438;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35473, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, "Mom");
  try {
    var values__8873__auto___35474 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), "Hi Mom");
    var result__8874__auto___35475 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35474);
    if (cljs.core.truth_(result__8874__auto___35475)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35474), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35474)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35439) {
    var t__8911__auto___35476 = e35439;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35476, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35477 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 2);
    var result__8874__auto___35478 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35477);
    if (cljs.core.truth_(result__8874__auto___35478)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35477), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35477)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35440) {
    var t__8911__auto___35479 = e35440;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35479, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35480 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), cljs.core.deref.call(null, crun)), 2);
    var result__8874__auto___35481 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35480);
    if (cljs.core.truth_(result__8874__auto___35481)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35480), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35480)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e35441) {
    var t__8911__auto___35482 = e35441;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
    cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35482, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35483 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value.call(null, b));
    var result__8874__auto___35484 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35483);
    if (cljs.core.truth_(result__8874__auto___35484)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35483), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35483)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35442) {
    var t__8911__auto___35485 = e35442;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35485, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35486 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__8874__auto___35487 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35486);
    if (cljs.core.truth_(result__8874__auto___35487)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35486), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35486)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35443) {
    var t__8911__auto___35488 = e35443;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35488, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, "Mom");
  try {
    var values__8873__auto___35489 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), "Hi Mom");
    var result__8874__auto___35490 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35489);
    if (cljs.core.truth_(result__8874__auto___35490)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35489), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35489)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35444) {
    var t__8911__auto___35491 = e35444;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35491, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35492 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 3);
    var result__8874__auto___35493 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35492);
    if (cljs.core.truth_(result__8874__auto___35493)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35492), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35492)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35445) {
    var t__8911__auto___35494 = e35445;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35494, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35495 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, crun)), 3);
    var result__8874__auto___35496 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35495);
    if (cljs.core.truth_(result__8874__auto___35496)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35495), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35495)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35446) {
    var t__8911__auto___35497 = e35446;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35497, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35498 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), 2);
    var result__8874__auto___35499 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35498);
    if (cljs.core.truth_(result__8874__auto___35499)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35498), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35498)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35447) {
    var t__8911__auto___35500 = e35447;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto___35500, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35501 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value.call(null, b));
    var result__8874__auto___35502 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto___35501);
    if (cljs.core.truth_(result__8874__auto___35502)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto___35501), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto___35501)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35448) {
    var t__8911__auto___35503 = e35448;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35503, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35449) {
    var t__8911__auto__ = e35449;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_eph_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_eph_1;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-eph-1", "tiltontec.cell.core-test/t-eph-1", 1953166092, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-eph-1", "t-eph-1", 655169488, null), "test/tiltontec/cell/core_test.cljc", 17, 1, 108, 108, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_eph_1) ? 
tiltontec.cell.core_test.t_eph_1.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK_n = function tiltontec$cell$core_test$t_c_QMARK_n() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK_n.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test = function() {
  var a = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
  var b = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "without-c-dependency", "tiltontec.cell.base/without-c-dependency", -1335265675, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null), cljs.core.list(new cljs.core.Symbol(null, "/", 
  "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 2)), new cljs.core.Keyword(null, "input?", "input?", -1792843173), true, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var _STAR_depender_STAR_35504 = tiltontec.cell.base._STAR_depender_STAR_;
      tiltontec.cell.base._STAR_depender_STAR_ = null;
      try {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null);
        return tiltontec.cell.evaluate.c_get.call(null, a) / 2;
      } finally {
        tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_35504;
      }
    };
  }(a));
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 1, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a, b) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 1 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(a, b));
  try {
    var values__8873__auto___35509 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 21);
    var result__8874__auto___35510 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35509);
    if (cljs.core.truth_(result__8874__auto___35510)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35509), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35509)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35505) {
    var t__8911__auto___35511 = e35505;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35511, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto___35512 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), 22);
    var result__8874__auto___35513 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35512);
    if (cljs.core.truth_(result__8874__auto___35513)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35512), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35512)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35506) {
    var t__8911__auto___35514 = e35506;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35514, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 42);
  try {
    var values__8873__auto___35515 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 42);
    var result__8874__auto___35516 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35515);
    if (cljs.core.truth_(result__8874__auto___35516)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35515), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35515)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35507) {
    var t__8911__auto___35517 = e35507;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35517, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8873__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), 43);
    var result__8874__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto__);
    if (cljs.core.truth_(result__8874__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8874__auto__;
  } catch (e35508) {
    var t__8911__auto__ = e35508;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK_n;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?n", "tiltontec.cell.core-test/t-c?n", 149604314, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?n", "t-c?n", 1065739150, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 156, 156, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_n) ? 
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK_once = function tiltontec$cell$core_test$t_c_QMARK_once() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK_once.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test = function() {
  var a = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
  var b = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "without-c-dependency", "tiltontec.cell.base/without-c-dependency", -1335265675, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null), cljs.core.list(new cljs.core.Symbol(null, "/", 
  "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 2)), new cljs.core.Keyword(null, "input?", "input?", -1792843173), null, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var _STAR_depender_STAR_35518 = tiltontec.cell.base._STAR_depender_STAR_;
      tiltontec.cell.base._STAR_depender_STAR_ = null;
      try {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null);
        return tiltontec.cell.evaluate.c_get.call(null, a) / 2;
      } finally {
        tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_35518;
      }
    };
  }(a));
  try {
    var values__8873__auto___35520 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 21);
    var result__8874__auto___35521 = cljs.core.apply.call(null, cljs.core._EQ_, values__8873__auto___35520);
    if (cljs.core.truth_(result__8874__auto___35521)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8873__auto___35520), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8873__auto___35520)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e35519) {
    var t__8911__auto___35522 = e35519;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8911__auto___35522, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return null;
};
tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK_once;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?once", "tiltontec.cell.core-test/t-c?once", 1148131532, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?once", "t-c?once", 1934477112, null), "test/tiltontec/cell/core_test.cljc", 18, 1, 167, 167, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_once) ? tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env35523 = cljs.test.empty_env.call(null);
  var summary35524 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35523, summary35524) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35523);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8978__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35523, summary35524) {
          return function() {
            if (env__8978__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8978__auto__, env35523, summary35524)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-input", "tiltontec.cell.core-test/test-input", 584139487, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 45, 45, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_input) ? tiltontec.cell.core_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_in;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in", "tiltontec.cell.core-test/test-c-in", -99212066, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in", "test-c-in", -885735134, null), "test/tiltontec/cell/core_test.cljc", 19, 1, 58, 58, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in) ? tiltontec.cell.core_test.test_c_in.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_in_PLUS_;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in+", "tiltontec.cell.core-test/test-c-in+", 856803589, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in+", "test-c-in+", -1036603951, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 69, 69, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in_PLUS_) ? tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_formula;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-formula", "tiltontec.cell.core-test/test-c-formula", -143714513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-formula", "test-c-formula", -2076148965, null), "test/tiltontec/cell/core_test.cljc", 
        24, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.test_c_formula) ? tiltontec.cell.core_test.test_c_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK__PLUS_;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?+", "tiltontec.cell.core-test/t-c?+", -1190817413, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?+", "t-c?+", 1747367215, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 92, 92, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK__PLUS_) ? tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_eph_1;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-eph-1", "tiltontec.cell.core-test/t-eph-1", 1953166092, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-eph-1", "t-eph-1", 655169488, null), "test/tiltontec/cell/core_test.cljc", 17, 1, 108, 108, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_eph_1) ? tiltontec.cell.core_test.t_eph_1.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK_n;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?n", "tiltontec.cell.core-test/t-c?n", 149604314, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?n", "t-c?n", 1065739150, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 156, 156, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_n) ? tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK_once;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?once", "tiltontec.cell.core-test/t-c?once", 1148131532, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?once", "t-c?once", 1934477112, null), "test/tiltontec/cell/core_test.cljc", 18, 1, 167, 167, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_once) ? tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8978__auto__, env35523, summary35524) {
          return function() {
            if (env__8978__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8978__auto__, env35523, summary35524)], null));
      }());
    };
  }(env35523, summary35524), function(env35523, summary35524) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env35523, summary35524)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35523, summary35524) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary35524, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary35524), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env35523, summary35524)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env35523, summary35524) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env35523);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary35524));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary35524), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env35523, summary35524)], null));
}());
