if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.48";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__14428__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__14428 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__14429__i = 0, G__14429__a = new Array(arguments.length - 0);
        while (G__14429__i < G__14429__a.length) {
          G__14429__a[G__14429__i] = arguments[G__14429__i + 0];
          ++G__14429__i;
        }
        args = new cljs.core.IndexedSeq(G__14429__a, 0);
      }
      return G__14428__delegate.call(this, args);
    };
    G__14428.cljs$lang$maxFixedArity = 0;
    G__14428.cljs$lang$applyTo = function(arglist__14430) {
      var args = cljs.core.seq(arglist__14430);
      return G__14428__delegate(args);
    };
    G__14428.cljs$core$IFn$_invoke$arity$variadic = G__14428__delegate;
    return G__14428;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__14431__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__14431 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__14432__i = 0, G__14432__a = new Array(arguments.length - 0);
        while (G__14432__i < G__14432__a.length) {
          G__14432__a[G__14432__i] = arguments[G__14432__i + 0];
          ++G__14432__i;
        }
        args = new cljs.core.IndexedSeq(G__14432__a, 0);
      }
      return G__14431__delegate.call(this, args);
    };
    G__14431.cljs$lang$maxFixedArity = 0;
    G__14431.cljs$lang$applyTo = function(arglist__14433) {
      var args = cljs.core.seq(arglist__14433);
      return G__14431__delegate(args);
    };
    G__14431.cljs$core$IFn$_invoke$arity$variadic = G__14431__delegate;
    return G__14431;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4542__auto__ = ty;
    if (cljs.core.truth_(and__4542__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4542__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.make_array = function cljs$core$make_array() {
  var args14434 = [];
  var len__5593__auto___14437 = arguments.length;
  var i__5594__auto___14438 = 0;
  while (true) {
    if (i__5594__auto___14438 < len__5593__auto___14437) {
      args14434.push(arguments[i__5594__auto___14438]);
      var G__14439 = i__5594__auto___14438 + 1;
      i__5594__auto___14438 = G__14439;
      continue;
    } else {
    }
    break;
  }
  var G__14436 = args14434.length;
  switch(G__14436) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14434.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5438__auto___14441 = len;
  var i_14442 = 0;
  while (true) {
    if (i_14442 < n__5438__auto___14441) {
      new_arr[i_14442] = arr[i_14442];
      var G__14443 = i_14442 + 1;
      i_14442 = G__14443;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__14444 = i + 1;
      i = G__14444;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var args14445 = [];
  var len__5593__auto___14454 = arguments.length;
  var i__5594__auto___14455 = 0;
  while (true) {
    if (i__5594__auto___14455 < len__5593__auto___14454) {
      args14445.push(arguments[i__5594__auto___14455]);
      var G__14456 = i__5594__auto___14455 + 1;
      i__5594__auto___14455 = G__14456;
      continue;
    } else {
    }
    break;
  }
  var G__14450 = args14445.length;
  switch(G__14450) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14445.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__14451 = cljs.core.aget;
  var G__14452 = array[i];
  var G__14453 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__14451, G__14452, G__14453) : cljs.core.apply.call(null, G__14451, G__14452, G__14453);
};
cljs.core.aget.cljs$lang$applyTo = function(seq14446) {
  var G__14447 = cljs.core.first(seq14446);
  var seq14446__$1 = cljs.core.next(seq14446);
  var G__14448 = cljs.core.first(seq14446__$1);
  var seq14446__$2 = cljs.core.next(seq14446__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__14447, G__14448, seq14446__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var args14458 = [];
  var len__5593__auto___14469 = arguments.length;
  var i__5594__auto___14470 = 0;
  while (true) {
    if (i__5594__auto___14470 < len__5593__auto___14469) {
      args14458.push(arguments[i__5594__auto___14470]);
      var G__14471 = i__5594__auto___14470 + 1;
      i__5594__auto___14470 = G__14471;
      continue;
    } else {
    }
    break;
  }
  var G__14464 = args14458.length;
  switch(G__14464) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14458.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__14465 = cljs.core.aset;
  var G__14466 = array[idx];
  var G__14467 = idx2;
  var G__14468 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__14465, G__14466, G__14467, G__14468) : cljs.core.apply.call(null, G__14465, G__14466, G__14467, G__14468);
};
cljs.core.aset.cljs$lang$applyTo = function(seq14459) {
  var G__14460 = cljs.core.first(seq14459);
  var seq14459__$1 = cljs.core.next(seq14459);
  var G__14461 = cljs.core.first(seq14459__$1);
  var seq14459__$2 = cljs.core.next(seq14459__$1);
  var G__14462 = cljs.core.first(seq14459__$2);
  var seq14459__$3 = cljs.core.next(seq14459__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__14460, G__14461, G__14462, seq14459__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var args14473 = [];
  var len__5593__auto___14479 = arguments.length;
  var i__5594__auto___14480 = 0;
  while (true) {
    if (i__5594__auto___14480 < len__5593__auto___14479) {
      args14473.push(arguments[i__5594__auto___14480]);
      var G__14481 = i__5594__auto___14480 + 1;
      i__5594__auto___14480 = G__14481;
      continue;
    } else {
    }
    break;
  }
  var G__14475 = args14473.length;
  switch(G__14475) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14473.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__14476 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__14477 = [];
  var G__14478 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__14476, G__14477, G__14478) : cljs.core.reduce.call(null, G__14476, G__14477, G__14478);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var args__5600__auto__ = [];
  var len__5593__auto___14486 = arguments.length;
  var i__5594__auto___14487 = 0;
  while (true) {
    if (i__5594__auto___14487 < len__5593__auto___14486) {
      args__5600__auto__.push(arguments[i__5594__auto___14487]);
      var G__14488 = i__5594__auto___14487 + 1;
      i__5594__auto___14487 = G__14488;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq14483) {
  var G__14484 = cljs.core.first(seq14483);
  var seq14483__$1 = cljs.core.next(seq14483);
  var G__14485 = cljs.core.first(seq14483__$1);
  var seq14483__$2 = cljs.core.next(seq14483__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__14484, G__14485, seq14483__$2);
};
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function cljs$core$_invoke() {
  var args14493 = [];
  var len__5593__auto___14496 = arguments.length;
  var i__5594__auto___14497 = 0;
  while (true) {
    if (i__5594__auto___14497 < len__5593__auto___14496) {
      args14493.push(arguments[i__5594__auto___14497]);
      var G__14498 = i__5594__auto___14497 + 1;
      i__5594__auto___14497 = G__14498;
      continue;
    } else {
    }
    break;
  }
  var G__14495 = args14493.length;
  switch(G__14495) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14493.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5191__auto__.call(null, this$);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__5191__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5191__auto__.call(null, this$, a);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5191__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5191__auto__.call(null, this$, a, b);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5191__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5191__auto__.call(null, this$, a, b, c);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5191__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5191__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5191__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$6 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5191__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5191__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$7 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5191__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$8 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$9 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$10 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$11 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$12 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$13 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$14 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$15 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$16 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$17 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$18 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$19 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$20 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$21 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._invoke[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$22 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5191__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__5191__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5191__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = {};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__5190__auto__ = value == null ? null : value;
    var m__5191__auto__ = cljs.core._clone[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5191__auto__.call(null, value);
    } else {
      var m__5191__auto____$1 = cljs.core._clone["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__5191__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = {};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._count[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._count["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._empty[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._empty["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._conj[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5191__auto__.call(null, coll, o);
    } else {
      var m__5191__auto____$1 = cljs.core._conj["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5191__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function cljs$core$_nth() {
  var args14510 = [];
  var len__5593__auto___14513 = arguments.length;
  var i__5594__auto___14514 = 0;
  while (true) {
    if (i__5594__auto___14514 < len__5593__auto___14513) {
      args14510.push(arguments[i__5594__auto___14514]);
      var G__14515 = i__5594__auto___14514 + 1;
      i__5594__auto___14514 = G__14515;
      continue;
    } else {
    }
    break;
  }
  var G__14512 = args14510.length;
  switch(G__14512) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14510.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._nth[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5191__auto__.call(null, coll, n);
    } else {
      var m__5191__auto____$1 = cljs.core._nth["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5191__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._nth[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5191__auto__.call(null, coll, n, not_found);
    } else {
      var m__5191__auto____$1 = cljs.core._nth["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5191__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._first[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._first["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._rest[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._rest["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = {};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._next[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._next["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function cljs$core$_lookup() {
  var args14525 = [];
  var len__5593__auto___14528 = arguments.length;
  var i__5594__auto___14529 = 0;
  while (true) {
    if (i__5594__auto___14529 < len__5593__auto___14528) {
      args14525.push(arguments[i__5594__auto___14529]);
      var G__14530 = i__5594__auto___14529 + 1;
      i__5594__auto___14529 = G__14530;
      continue;
    } else {
    }
    break;
  }
  var G__14527 = args14525.length;
  switch(G__14527) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14525.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._lookup[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__5191__auto__.call(null, o, k);
    } else {
      var m__5191__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__5191__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._lookup[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5191__auto__.call(null, o, k, not_found);
    } else {
      var m__5191__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5191__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5191__auto__.call(null, coll, k);
    } else {
      var m__5191__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5191__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._assoc[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5191__auto__.call(null, coll, k, v);
    } else {
      var m__5191__auto____$1 = cljs.core._assoc["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5191__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._dissoc[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5191__auto__.call(null, coll, k);
    } else {
      var m__5191__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5191__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._key[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._key["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._val[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._val["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._disjoin[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5191__auto__.call(null, coll, v);
    } else {
      var m__5191__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5191__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = {};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._peek[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._peek["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._pop[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._pop["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._assoc_n[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5191__auto__.call(null, coll, n, val);
    } else {
      var m__5191__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5191__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._deref[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto__.call(null, o);
    } else {
      var m__5191__auto____$1 = cljs.core._deref["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5191__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__5191__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5191__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._meta[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto__.call(null, o);
    } else {
      var m__5191__auto____$1 = cljs.core._meta["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._with_meta[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5191__auto__.call(null, o, meta);
    } else {
      var m__5191__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5191__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function cljs$core$_reduce() {
  var args14554 = [];
  var len__5593__auto___14557 = arguments.length;
  var i__5594__auto___14558 = 0;
  while (true) {
    if (i__5594__auto___14558 < len__5593__auto___14557) {
      args14554.push(arguments[i__5594__auto___14558]);
      var G__14559 = i__5594__auto___14558 + 1;
      i__5594__auto___14558 = G__14559;
      continue;
    } else {
    }
    break;
  }
  var G__14556 = args14554.length;
  switch(G__14556) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14554.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._reduce[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5191__auto__.call(null, coll, f);
    } else {
      var m__5191__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5191__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._reduce[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5191__auto__.call(null, coll, f, start);
    } else {
      var m__5191__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5191__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._kv_reduce[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5191__auto__.call(null, coll, f, init);
    } else {
      var m__5191__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5191__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._equiv[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__5191__auto__.call(null, o, other);
    } else {
      var m__5191__auto____$1 = cljs.core._equiv["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__5191__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = {};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._hash[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto__.call(null, o);
    } else {
      var m__5191__auto____$1 = cljs.core._hash["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._seq[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto__.call(null, o);
    } else {
      var m__5191__auto____$1 = cljs.core._seq["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5191__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._rseq[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._rseq["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._sorted_seq[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5191__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__5191__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5191__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5191__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__5191__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5191__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._entry_key[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5191__auto__.call(null, coll, entry);
    } else {
      var m__5191__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5191__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._comparator[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._comparator["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = {};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__5190__auto__ = writer == null ? null : writer;
    var m__5191__auto__ = cljs.core._write[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5191__auto__.call(null, writer, s);
    } else {
      var m__5191__auto____$1 = cljs.core._write["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5191__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__5190__auto__ = writer == null ? null : writer;
    var m__5191__auto__ = cljs.core._flush[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__5191__auto__.call(null, writer);
    } else {
      var m__5191__auto____$1 = cljs.core._flush["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__5191__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._pr_writer[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5191__auto__.call(null, o, writer, opts);
    } else {
      var m__5191__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5191__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__5190__auto__ = d == null ? null : d;
    var m__5191__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__5191__auto__.call(null, d);
    } else {
      var m__5191__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__5191__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._notify_watches[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5191__auto__.call(null, this$, oldval, newval);
    } else {
      var m__5191__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5191__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._add_watch[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5191__auto__.call(null, this$, key, f);
    } else {
      var m__5191__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5191__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__5190__auto__ = this$ == null ? null : this$;
    var m__5191__auto__ = cljs.core._remove_watch[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5191__auto__.call(null, this$, key);
    } else {
      var m__5191__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5191__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._as_transient[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5191__auto__.call(null, tcoll, val);
    } else {
      var m__5191__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5191__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5191__auto__.call(null, tcoll);
    } else {
      var m__5191__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5191__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5191__auto__.call(null, tcoll, key, val);
    } else {
      var m__5191__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5191__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5191__auto__.call(null, tcoll, key);
    } else {
      var m__5191__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5191__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5191__auto__.call(null, tcoll, n, val);
    } else {
      var m__5191__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5191__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5191__auto__.call(null, tcoll);
    } else {
      var m__5191__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5191__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__5190__auto__ = tcoll == null ? null : tcoll;
    var m__5191__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5191__auto__.call(null, tcoll, v);
    } else {
      var m__5191__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5191__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._compare[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__5191__auto__.call(null, x, y);
    } else {
      var m__5191__auto____$1 = cljs.core._compare["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__5191__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._drop_first[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._chunked_first[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._chunked_rest[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._chunked_next[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = {};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._name[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto__.call(null, x);
    } else {
      var m__5191__auto____$1 = cljs.core._name["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._namespace[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto__.call(null, x);
    } else {
      var m__5191__auto____$1 = cljs.core._namespace["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = {};
cljs.core.IReset = {};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5191__auto__.call(null, o, new_value);
    } else {
      var m__5191__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5191__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = {};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var args14615 = [];
  var len__5593__auto___14618 = arguments.length;
  var i__5594__auto___14619 = 0;
  while (true) {
    if (i__5594__auto___14619 < len__5593__auto___14618) {
      args14615.push(arguments[i__5594__auto___14619]);
      var G__14620 = i__5594__auto___14619 + 1;
      i__5594__auto___14619 = G__14620;
      continue;
    } else {
    }
    break;
  }
  var G__14617 = args14615.length;
  switch(G__14617) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14615.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__5191__auto__.call(null, o, f);
    } else {
      var m__5191__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__5191__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5191__auto__.call(null, o, f, a);
    } else {
      var m__5191__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5191__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5191__auto__.call(null, o, f, a, b);
    } else {
      var m__5191__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5191__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5191__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__5191__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5191__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = {};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__5190__auto__ = o == null ? null : o;
    var m__5191__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5191__auto__.call(null, o, new_value);
    } else {
      var m__5191__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5191__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = {};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__5190__auto__ = coll == null ? null : coll;
    var m__5191__auto__ = cljs.core._iterator[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto__.call(null, coll);
    } else {
      var m__5191__auto____$1 = cljs.core._iterator["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5191__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__14626 = i + 2;
        var G__14627 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__14626;
        h1 = G__14627;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__14630 = i + 1;
          var G__14631 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__14630;
          hash = G__14631;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = cljs.core.not(a.ns);
      if (and__4542__auto__) {
        return b.ns;
      } else {
        return and__4542__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__14644 = a.ns;
            var G__14645 = b.ns;
            return goog.array.defaultCompare(G__14644, G__14645);
          }();
          if (0 === nsc) {
            var G__14646 = a.name;
            var G__14647 = b.name;
            return goog.array.defaultCompare(G__14646, G__14647);
          } else {
            return nsc;
          }
        }
      } else {
        var G__14648 = a.name;
        var G__14649 = b.name;
        return goog.array.defaultCompare(G__14648, G__14649);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__14651 = null;
  var G__14651__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__14651__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__14651 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14651__2.call(this, self__, coll);
      case 3:
        return G__14651__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14651.cljs$core$IFn$_invoke$arity$2 = G__14651__2;
  G__14651.cljs$core$IFn$_invoke$arity$3 = G__14651__3;
  return G__14651;
}();
cljs.core.Symbol.prototype.apply = function(self__, args14650) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14650)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4970__auto__ = self__._hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var args14652 = [];
  var len__5593__auto___14655 = arguments.length;
  var i__5594__auto___14656 = 0;
  while (true) {
    if (i__5594__auto___14656 < len__5593__auto___14655) {
      args14652.push(arguments[i__5594__auto___14656]);
      var G__14657 = i__5594__auto___14656 + 1;
      i__5594__auto___14656 = G__14657;
      continue;
    } else {
    }
    break;
  }
  var G__14654 = args14652.length;
  switch(G__14654) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14652.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__14660 = this$__$1.sym;
    var G__14661 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__14660, G__14661) : cljs.core._EQ_.call(null, G__14660, G__14661);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__14706 = null;
  var G__14706__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__14706__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__14706__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__14706__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__14706__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__14706__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__14706__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__14706__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__14706__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__14706__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__14706__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__14706__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__14706__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__14706__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__14706__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__14706__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__14706__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__14706__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__14706__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__14706__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__14706__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__14706__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14662 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__14663 = a;
    var G__14664 = b;
    var G__14665 = c;
    var G__14666 = d;
    var G__14667 = e;
    var G__14668 = f;
    var G__14669 = g;
    var G__14670 = h;
    var G__14671 = i;
    var G__14672 = j;
    var G__14673 = k;
    var G__14674 = l;
    var G__14675 = m;
    var G__14676 = n;
    var G__14677 = o;
    var G__14678 = p;
    var G__14679 = q;
    var G__14680 = r;
    var G__14681 = s;
    var G__14682 = t;
    var G__14683 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__14662, G__14663, G__14664, G__14665, G__14666, G__14667, G__14668, G__14669, G__14670, G__14671, G__14672, G__14673, G__14674, G__14675, G__14676, G__14677, G__14678, G__14679, G__14680, G__14681, G__14682, G__14683) : cljs.core.apply.call(null, G__14662, G__14663, G__14664, G__14665, G__14666, G__14667, G__14668, G__14669, G__14670, G__14671, G__14672, G__14673, G__14674, G__14675, G__14676, 
    G__14677, G__14678, G__14679, G__14680, G__14681, G__14682, G__14683);
  };
  G__14706 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__14706__1.call(this, self__);
      case 2:
        return G__14706__2.call(this, self__, a);
      case 3:
        return G__14706__3.call(this, self__, a, b);
      case 4:
        return G__14706__4.call(this, self__, a, b, c);
      case 5:
        return G__14706__5.call(this, self__, a, b, c, d);
      case 6:
        return G__14706__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__14706__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__14706__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__14706__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__14706__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__14706__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__14706__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__14706__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__14706__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__14706__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__14706__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__14706__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__14706__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__14706__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__14706__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__14706__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__14706__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14706.cljs$core$IFn$_invoke$arity$1 = G__14706__1;
  G__14706.cljs$core$IFn$_invoke$arity$2 = G__14706__2;
  G__14706.cljs$core$IFn$_invoke$arity$3 = G__14706__3;
  G__14706.cljs$core$IFn$_invoke$arity$4 = G__14706__4;
  G__14706.cljs$core$IFn$_invoke$arity$5 = G__14706__5;
  G__14706.cljs$core$IFn$_invoke$arity$6 = G__14706__6;
  G__14706.cljs$core$IFn$_invoke$arity$7 = G__14706__7;
  G__14706.cljs$core$IFn$_invoke$arity$8 = G__14706__8;
  G__14706.cljs$core$IFn$_invoke$arity$9 = G__14706__9;
  G__14706.cljs$core$IFn$_invoke$arity$10 = G__14706__10;
  G__14706.cljs$core$IFn$_invoke$arity$11 = G__14706__11;
  G__14706.cljs$core$IFn$_invoke$arity$12 = G__14706__12;
  G__14706.cljs$core$IFn$_invoke$arity$13 = G__14706__13;
  G__14706.cljs$core$IFn$_invoke$arity$14 = G__14706__14;
  G__14706.cljs$core$IFn$_invoke$arity$15 = G__14706__15;
  G__14706.cljs$core$IFn$_invoke$arity$16 = G__14706__16;
  G__14706.cljs$core$IFn$_invoke$arity$17 = G__14706__17;
  G__14706.cljs$core$IFn$_invoke$arity$18 = G__14706__18;
  G__14706.cljs$core$IFn$_invoke$arity$19 = G__14706__19;
  G__14706.cljs$core$IFn$_invoke$arity$20 = G__14706__20;
  G__14706.cljs$core$IFn$_invoke$arity$21 = G__14706__21;
  G__14706.cljs$core$IFn$_invoke$arity$22 = G__14706__22;
  return G__14706;
}();
cljs.core.Var.prototype.apply = function(self__, args14659) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14659)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__14684 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__14685 = a;
  var G__14686 = b;
  var G__14687 = c;
  var G__14688 = d;
  var G__14689 = e;
  var G__14690 = f;
  var G__14691 = g;
  var G__14692 = h;
  var G__14693 = i;
  var G__14694 = j;
  var G__14695 = k;
  var G__14696 = l;
  var G__14697 = m;
  var G__14698 = n;
  var G__14699 = o;
  var G__14700 = p;
  var G__14701 = q;
  var G__14702 = r;
  var G__14703 = s;
  var G__14704 = t;
  var G__14705 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__14684, G__14685, G__14686, G__14687, G__14688, G__14689, G__14690, G__14691, G__14692, G__14693, G__14694, G__14695, G__14696, G__14697, G__14698, G__14699, G__14700, G__14701, G__14702, G__14703, G__14704, G__14705) : cljs.core.apply.call(null, G__14684, G__14685, G__14686, G__14687, G__14688, G__14689, G__14690, G__14691, G__14692, G__14693, G__14694, G__14695, G__14696, G__14697, G__14698, 
  G__14699, G__14700, G__14701, G__14702, G__14703, G__14704, G__14705);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var args14719 = [];
  var len__5593__auto___14725 = arguments.length;
  var i__5594__auto___14726 = 0;
  while (true) {
    if (i__5594__auto___14726 < len__5593__auto___14725) {
      args14719.push(arguments[i__5594__auto___14726]);
      var G__14727 = i__5594__auto___14726 + 1;
      i__5594__auto___14726 = G__14727;
      continue;
    } else {
    }
    break;
  }
  var G__14724 = args14719.length;
  switch(G__14724) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14719.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__14729 = y;
        var G__14730 = cljs.core.first(more);
        var G__14731 = cljs.core.next(more);
        x = G__14729;
        y = G__14730;
        more = G__14731;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq14720) {
  var G__14721 = cljs.core.first(seq14720);
  var seq14720__$1 = cljs.core.next(seq14720);
  var G__14722 = cljs.core.first(seq14720__$1);
  var seq14720__$2 = cljs.core.next(seq14720__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__14721, G__14722, seq14720__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__14732 = n + 1;
      var G__14733 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__14734 = cljs.core.next(coll__$1);
      n = G__14732;
      hash_code = G__14733;
      coll__$1 = G__14734;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__14735 = n + 1;
      var G__14736 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__14737 = cljs.core.next(coll__$1);
      n = G__14735;
      hash_code = G__14736;
      coll__$1 = G__14737;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__14738 = this$__$1.valueOf();
    var G__14739 = other.valueOf();
    return goog.array.defaultCompare(G__14738, G__14739);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var args14740 = [];
  var len__5593__auto___14749 = arguments.length;
  var i__5594__auto___14750 = 0;
  while (true) {
    if (i__5594__auto___14750 < len__5593__auto___14749) {
      args14740.push(arguments[i__5594__auto___14750]);
      var G__14751 = i__5594__auto___14750 + 1;
      i__5594__auto___14750 = G__14751;
      continue;
    } else {
    }
    break;
  }
  var G__14742 = args14740.length;
  switch(G__14742) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14740.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__14743 = val;
          var G__14744 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14743, G__14744) : f.call(null, G__14743, G__14744);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__14753 = nval;
          var G__14754 = n + 1;
          val = G__14753;
          n = G__14754;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__14745 = val__$1;
        var G__14746 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14745, G__14746) : f.call(null, G__14745, G__14746);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__14755 = nval;
        var G__14756 = n + 1;
        val__$1 = G__14755;
        n = G__14756;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__14747 = val__$1;
        var G__14748 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14747, G__14748) : f.call(null, G__14747, G__14748);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__14757 = nval;
        var G__14758 = n + 1;
        val__$1 = G__14757;
        n = G__14758;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var args14759 = [];
  var len__5593__auto___14768 = arguments.length;
  var i__5594__auto___14769 = 0;
  while (true) {
    if (i__5594__auto___14769 < len__5593__auto___14768) {
      args14759.push(arguments[i__5594__auto___14769]);
      var G__14770 = i__5594__auto___14769 + 1;
      i__5594__auto___14769 = G__14770;
      continue;
    } else {
    }
    break;
  }
  var G__14761 = args14759.length;
  switch(G__14761) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14759.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__14762 = val;
          var G__14763 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14762, G__14763) : f.call(null, G__14762, G__14763);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__14772 = nval;
          var G__14773 = n + 1;
          val = G__14772;
          n = G__14773;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__14764 = val__$1;
        var G__14765 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14764, G__14765) : f.call(null, G__14764, G__14765);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__14774 = nval;
        var G__14775 = n + 1;
        val__$1 = G__14774;
        n = G__14775;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__14766 = val__$1;
        var G__14767 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14766, G__14767) : f.call(null, G__14766, G__14767);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__14776 = nval;
        var G__14777 = n + 1;
        val__$1 = G__14776;
        n = G__14777;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4866__auto__ = 0;
  var y__4867__auto__ = self__.arr.length - self__.i;
  return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var args14782 = [];
  var len__5593__auto___14785 = arguments.length;
  var i__5594__auto___14786 = 0;
  while (true) {
    if (i__5594__auto___14786 < len__5593__auto___14785) {
      args14782.push(arguments[i__5594__auto___14786]);
      var G__14787 = i__5594__auto___14786 + 1;
      i__5594__auto___14786 = G__14787;
      continue;
    } else {
    }
    break;
  }
  var G__14784 = args14782.length;
  switch(G__14784) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14782.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var args14789 = [];
  var len__5593__auto___14792 = arguments.length;
  var i__5594__auto___14793 = 0;
  while (true) {
    if (i__5594__auto___14793 < len__5593__auto___14792) {
      args14789.push(arguments[i__5594__auto___14793]);
      var G__14794 = i__5594__auto___14793 + 1;
      i__5594__auto___14793 = G__14794;
      continue;
    } else {
    }
    break;
  }
  var G__14791 = args14789.length;
  switch(G__14791) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14789.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__14796 = cljs.core.List.EMPTY;
  var G__14797 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__14796, G__14797) : cljs.core.with_meta.call(null, G__14796, G__14797);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__14798 = sn;
      s = G__14798;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var args14799 = [];
  var len__5593__auto___14805 = arguments.length;
  var i__5594__auto___14806 = 0;
  while (true) {
    if (i__5594__auto___14806 < len__5593__auto___14805) {
      args14799.push(arguments[i__5594__auto___14806]);
      var G__14807 = i__5594__auto___14806 + 1;
      i__5594__auto___14806 = G__14807;
      continue;
    } else {
    }
    break;
  }
  var G__14804 = args14799.length;
  switch(G__14804) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14799.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__14809 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__14810 = cljs.core.first(xs);
      var G__14811 = cljs.core.next(xs);
      coll = G__14809;
      x = G__14810;
      xs = G__14811;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq14800) {
  var G__14801 = cljs.core.first(seq14800);
  var seq14800__$1 = cljs.core.next(seq14800);
  var G__14802 = cljs.core.first(seq14800__$1);
  var seq14800__$2 = cljs.core.next(seq14800__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__14801, G__14802, seq14800__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__14812 = cljs.core.next(s);
      var G__14813 = acc + 1;
      s = G__14812;
      acc = G__14813;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var args14818 = [];
  var len__5593__auto___14821 = arguments.length;
  var i__5594__auto___14822 = 0;
  while (true) {
    if (i__5594__auto___14822 < len__5593__auto___14821) {
      args14818.push(arguments[i__5594__auto___14822]);
      var G__14823 = i__5594__auto___14822 + 1;
      i__5594__auto___14822 = G__14823;
      continue;
    } else {
    }
    break;
  }
  var G__14820 = args14818.length;
  switch(G__14820) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14818.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__14825 = cljs.core.next(coll);
            var G__14826 = n - 1;
            coll = G__14825;
            n = G__14826;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__14827 = cljs.core.next(coll);
            var G__14828 = n - 1;
            var G__14829 = not_found;
            coll = G__14827;
            n = G__14828;
            not_found = G__14829;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var args14830 = [];
  var len__5593__auto___14837 = arguments.length;
  var i__5594__auto___14838 = 0;
  while (true) {
    if (i__5594__auto___14838 < len__5593__auto___14837) {
      args14830.push(arguments[i__5594__auto___14838]);
      var G__14839 = i__5594__auto___14838 + 1;
      i__5594__auto___14838 = G__14839;
      continue;
    } else {
    }
    break;
  }
  var G__14832 = args14830.length;
  switch(G__14832) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14830.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__14841 = n__$1 - 1;
      var G__14842 = cljs.core.rest(xs);
      n__$1 = G__14841;
      xs = G__14842;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var args14843 = [];
  var len__5593__auto___14848 = arguments.length;
  var i__5594__auto___14849 = 0;
  while (true) {
    if (i__5594__auto___14849 < len__5593__auto___14848) {
      args14843.push(arguments[i__5594__auto___14849]);
      var G__14850 = i__5594__auto___14849 + 1;
      i__5594__auto___14849 = G__14850;
      continue;
    } else {
    }
    break;
  }
  var G__14845 = args14843.length;
  switch(G__14845) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14843.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var args14852 = [];
  var len__5593__auto___14859 = arguments.length;
  var i__5594__auto___14860 = 0;
  while (true) {
    if (i__5594__auto___14860 < len__5593__auto___14859) {
      args14852.push(arguments[i__5594__auto___14860]);
      var G__14861 = i__5594__auto___14860 + 1;
      i__5594__auto___14860 = G__14861;
      continue;
    } else {
    }
    break;
  }
  var G__14858 = args14852.length;
  switch(G__14858) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14852.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__14863 = ret;
      var G__14864 = cljs.core.first(kvs);
      var G__14865 = cljs.core.second(kvs);
      var G__14866 = cljs.core.nnext(kvs);
      coll = G__14863;
      k = G__14864;
      v = G__14865;
      kvs = G__14866;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq14853) {
  var G__14854 = cljs.core.first(seq14853);
  var seq14853__$1 = cljs.core.next(seq14853);
  var G__14855 = cljs.core.first(seq14853__$1);
  var seq14853__$2 = cljs.core.next(seq14853__$1);
  var G__14856 = cljs.core.first(seq14853__$2);
  var seq14853__$3 = cljs.core.next(seq14853__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__14854, G__14855, G__14856, seq14853__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var args14867 = [];
  var len__5593__auto___14873 = arguments.length;
  var i__5594__auto___14874 = 0;
  while (true) {
    if (i__5594__auto___14874 < len__5593__auto___14873) {
      args14867.push(arguments[i__5594__auto___14874]);
      var G__14875 = i__5594__auto___14874 + 1;
      i__5594__auto___14874 = G__14875;
      continue;
    } else {
    }
    break;
  }
  var G__14872 = args14867.length;
  switch(G__14872) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14867.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__14877 = ret;
        var G__14878 = cljs.core.first(ks);
        var G__14879 = cljs.core.next(ks);
        coll = G__14877;
        k = G__14878;
        ks = G__14879;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq14868) {
  var G__14869 = cljs.core.first(seq14868);
  var seq14868__$1 = cljs.core.next(seq14868);
  var G__14870 = cljs.core.first(seq14868__$1);
  var seq14868__$2 = cljs.core.next(seq14868__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__14869, G__14870, seq14868__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4554__auto__ = goog.isFunction(f);
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__14885 = null;
  var G__14885__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__14885__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__14885__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__14885__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__14885__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__14885__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__14885__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__14885__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__14885__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__14885__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__14885__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__14885__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__14885__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__14885__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__14885__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__14885__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__14885__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__14885__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__14885__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__14885__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__14885__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__14885__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__14885 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__14885__1.call(this, self__);
      case 2:
        return G__14885__2.call(this, self__, a);
      case 3:
        return G__14885__3.call(this, self__, a, b);
      case 4:
        return G__14885__4.call(this, self__, a, b, c);
      case 5:
        return G__14885__5.call(this, self__, a, b, c, d);
      case 6:
        return G__14885__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__14885__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__14885__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__14885__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__14885__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__14885__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__14885__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__14885__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__14885__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__14885__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__14885__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__14885__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__14885__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__14885__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__14885__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__14885__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__14885__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14885.cljs$core$IFn$_invoke$arity$1 = G__14885__1;
  G__14885.cljs$core$IFn$_invoke$arity$2 = G__14885__2;
  G__14885.cljs$core$IFn$_invoke$arity$3 = G__14885__3;
  G__14885.cljs$core$IFn$_invoke$arity$4 = G__14885__4;
  G__14885.cljs$core$IFn$_invoke$arity$5 = G__14885__5;
  G__14885.cljs$core$IFn$_invoke$arity$6 = G__14885__6;
  G__14885.cljs$core$IFn$_invoke$arity$7 = G__14885__7;
  G__14885.cljs$core$IFn$_invoke$arity$8 = G__14885__8;
  G__14885.cljs$core$IFn$_invoke$arity$9 = G__14885__9;
  G__14885.cljs$core$IFn$_invoke$arity$10 = G__14885__10;
  G__14885.cljs$core$IFn$_invoke$arity$11 = G__14885__11;
  G__14885.cljs$core$IFn$_invoke$arity$12 = G__14885__12;
  G__14885.cljs$core$IFn$_invoke$arity$13 = G__14885__13;
  G__14885.cljs$core$IFn$_invoke$arity$14 = G__14885__14;
  G__14885.cljs$core$IFn$_invoke$arity$15 = G__14885__15;
  G__14885.cljs$core$IFn$_invoke$arity$16 = G__14885__16;
  G__14885.cljs$core$IFn$_invoke$arity$17 = G__14885__17;
  G__14885.cljs$core$IFn$_invoke$arity$18 = G__14885__18;
  G__14885.cljs$core$IFn$_invoke$arity$19 = G__14885__19;
  G__14885.cljs$core$IFn$_invoke$arity$20 = G__14885__20;
  G__14885.cljs$core$IFn$_invoke$arity$21 = G__14885__21;
  G__14885.cljs$core$IFn$_invoke$arity$22 = G__14885__22;
  return G__14885;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args14884) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14884)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4542__auto__ = !(o == null);
    if (and__4542__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4542__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var args14890 = [];
  var len__5593__auto___14896 = arguments.length;
  var i__5594__auto___14897 = 0;
  while (true) {
    if (i__5594__auto___14897 < len__5593__auto___14896) {
      args14890.push(arguments[i__5594__auto___14897]);
      var G__14898 = i__5594__auto___14897 + 1;
      i__5594__auto___14897 = G__14898;
      continue;
    } else {
    }
    break;
  }
  var G__14895 = args14890.length;
  switch(G__14895) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14890.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__14900 = ret;
        var G__14901 = cljs.core.first(ks);
        var G__14902 = cljs.core.next(ks);
        coll = G__14900;
        k = G__14901;
        ks = G__14902;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq14891) {
  var G__14892 = cljs.core.first(seq14891);
  var seq14891__$1 = cljs.core.next(seq14891);
  var G__14893 = cljs.core.first(seq14891__$1);
  var seq14891__$2 = cljs.core.next(seq14891__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__14892, G__14893, seq14891__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var args14923 = [];
  var len__5593__auto___14929 = arguments.length;
  var i__5594__auto___14930 = 0;
  while (true) {
    if (i__5594__auto___14930 < len__5593__auto___14929) {
      args14923.push(arguments[i__5594__auto___14930]);
      var G__14931 = i__5594__auto___14930 + 1;
      i__5594__auto___14930 = G__14931;
      continue;
    } else {
    }
    break;
  }
  var G__14926 = args14923.length;
  switch(G__14926) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14923.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5612__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq14924) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14924));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__14935_14937 = obj;
  var G__14936_14938 = function(G__14935_14937, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__14935_14937, keys);
  goog.object.forEach(G__14935_14937, G__14936_14938);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__14939 = i__$1 + 1;
      var G__14940 = j__$1 + 1;
      var G__14941 = len__$1 - 1;
      i__$1 = G__14939;
      j__$1 = G__14940;
      len__$1 = G__14941;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__14942 = i__$1 - 1;
      var G__14943 = j__$1 - 1;
      var G__14944 = len__$1 - 1;
      i__$1 = G__14942;
      j__$1 = G__14943;
      len__$1 = G__14944;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4554__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var args14955 = [];
  var len__5593__auto___14961 = arguments.length;
  var i__5594__auto___14962 = 0;
  while (true) {
    if (i__5594__auto___14962 < len__5593__auto___14961) {
      args14955.push(arguments[i__5594__auto___14962]);
      var G__14963 = i__5594__auto___14962 + 1;
      i__5594__auto___14962 = G__14963;
      continue;
    } else {
    }
    break;
  }
  var G__14960 = args14955.length;
  switch(G__14960) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14955.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__14965 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__14966 = etc;
          s = G__14965;
          xs = G__14966;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq14956) {
  var G__14957 = cljs.core.first(seq14956);
  var seq14956__$1 = cljs.core.next(seq14956);
  var G__14958 = cljs.core.first(seq14956__$1);
  var seq14956__$2 = cljs.core.next(seq14956__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__14957, G__14958, seq14956__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var args14969 = [];
  var len__5593__auto___14972 = arguments.length;
  var i__5594__auto___14973 = 0;
  while (true) {
    if (i__5594__auto___14973 < len__5593__auto___14972) {
      args14969.push(arguments[i__5594__auto___14973]);
      var G__14974 = i__5594__auto___14973 + 1;
      i__5594__auto___14973 = G__14974;
      continue;
    } else {
    }
    break;
  }
  var G__14971 = args14969.length;
  switch(G__14971) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14969.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__14976 = xs;
      var G__14977 = ys;
      var G__14978 = len;
      var G__14979 = n + 1;
      xs = G__14976;
      ys = G__14977;
      len = G__14978;
      n = G__14979;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var args14980 = [];
  var len__5593__auto___14985 = arguments.length;
  var i__5594__auto___14986 = 0;
  while (true) {
    if (i__5594__auto___14986 < len__5593__auto___14985) {
      args14980.push(arguments[i__5594__auto___14986]);
      var G__14987 = i__5594__auto___14986 + 1;
      i__5594__auto___14986 = G__14987;
      continue;
    } else {
    }
    break;
  }
  var G__14982 = args14980.length;
  switch(G__14982) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14980.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__14983_14989 = a;
    var G__14984_14990 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__14983_14989, G__14984_14990);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var args14991 = [];
  var len__5593__auto___14994 = arguments.length;
  var i__5594__auto___14995 = 0;
  while (true) {
    if (i__5594__auto___14995 < len__5593__auto___14994) {
      args14991.push(arguments[i__5594__auto___14995]);
      var G__14996 = i__5594__auto___14995 + 1;
      i__5594__auto___14995 = G__14996;
      continue;
    } else {
    }
    break;
  }
  var G__14993 = args14991.length;
  switch(G__14993) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14991.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var args14998 = [];
  var len__5593__auto___15006 = arguments.length;
  var i__5594__auto___15007 = 0;
  while (true) {
    if (i__5594__auto___15007 < len__5593__auto___15006) {
      args14998.push(arguments[i__5594__auto___15007]);
      var G__15008 = i__5594__auto___15007 + 1;
      i__5594__auto___15007 = G__15008;
      continue;
    } else {
    }
    break;
  }
  var G__15000 = args14998.length;
  switch(G__15000) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14998.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__15001 = f;
    var G__15002 = cljs.core.first(s);
    var G__15003 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__15001, G__15002, G__15003) : cljs.core.reduce.call(null, G__15001, G__15002, G__15003);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__15004 = val__$1;
        var G__15005 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15004, G__15005) : f.call(null, G__15004, G__15005);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__15010 = nval;
        var G__15011 = cljs.core.next(coll__$1);
        val__$1 = G__15010;
        coll__$1 = G__15011;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce() {
  var args15012 = [];
  var len__5593__auto___15017 = arguments.length;
  var i__5594__auto___15018 = 0;
  while (true) {
    if (i__5594__auto___15018 < len__5593__auto___15017) {
      args15012.push(arguments[i__5594__auto___15018]);
      var G__15019 = i__5594__auto___15018 + 1;
      i__5594__auto___15018 = G__15019;
      continue;
    } else {
    }
    break;
  }
  var G__15014 = args15012.length;
  switch(G__15014) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15012.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var args15021 = [];
  var len__5593__auto___15024 = arguments.length;
  var i__5594__auto___15025 = 0;
  while (true) {
    if (i__5594__auto___15025 < len__5593__auto___15024) {
      args15021.push(arguments[i__5594__auto___15025]);
      var G__15026 = i__5594__auto___15025 + 1;
      i__5594__auto___15025 = G__15026;
      continue;
    } else {
    }
    break;
  }
  var G__15023 = args15021.length;
  switch(G__15023) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15021.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__15028 = null;
    var G__15028__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__15028__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__15028__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__15028 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__15028__0.call(this);
        case 1:
          return G__15028__1.call(this, x);
        case 2:
          return G__15028__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15028.cljs$core$IFn$_invoke$arity$0 = G__15028__0;
    G__15028.cljs$core$IFn$_invoke$arity$1 = G__15028__1;
    G__15028.cljs$core$IFn$_invoke$arity$2 = G__15028__2;
    return G__15028;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var args15029 = [];
  var len__5593__auto___15032 = arguments.length;
  var i__5594__auto___15033 = 0;
  while (true) {
    if (i__5594__auto___15033 < len__5593__auto___15032) {
      args15029.push(arguments[i__5594__auto___15033]);
      var G__15034 = i__5594__auto___15033 + 1;
      i__5594__auto___15033 = G__15034;
      continue;
    } else {
    }
    break;
  }
  var G__15031 = args15029.length;
  switch(G__15031) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15029.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var args15036 = [];
  var len__5593__auto___15042 = arguments.length;
  var i__5594__auto___15043 = 0;
  while (true) {
    if (i__5594__auto___15043 < len__5593__auto___15042) {
      args15036.push(arguments[i__5594__auto___15043]);
      var G__15044 = i__5594__auto___15043 + 1;
      i__5594__auto___15043 = G__15044;
      continue;
    } else {
    }
    break;
  }
  var G__15041 = args15036.length;
  switch(G__15041) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15036.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq15037) {
  var G__15038 = cljs.core.first(seq15037);
  var seq15037__$1 = cljs.core.next(seq15037);
  var G__15039 = cljs.core.first(seq15037__$1);
  var seq15037__$2 = cljs.core.next(seq15037__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__15038, G__15039, seq15037__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var args15046 = [];
  var len__5593__auto___15052 = arguments.length;
  var i__5594__auto___15053 = 0;
  while (true) {
    if (i__5594__auto___15053 < len__5593__auto___15052) {
      args15046.push(arguments[i__5594__auto___15053]);
      var G__15054 = i__5594__auto___15053 + 1;
      i__5594__auto___15053 = G__15054;
      continue;
    } else {
    }
    break;
  }
  var G__15051 = args15046.length;
  switch(G__15051) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15046.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq15047) {
  var G__15048 = cljs.core.first(seq15047);
  var seq15047__$1 = cljs.core.next(seq15047);
  var G__15049 = cljs.core.first(seq15047__$1);
  var seq15047__$2 = cljs.core.next(seq15047__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__15048, G__15049, seq15047__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var args15056 = [];
  var len__5593__auto___15062 = arguments.length;
  var i__5594__auto___15063 = 0;
  while (true) {
    if (i__5594__auto___15063 < len__5593__auto___15062) {
      args15056.push(arguments[i__5594__auto___15063]);
      var G__15064 = i__5594__auto___15063 + 1;
      i__5594__auto___15063 = G__15064;
      continue;
    } else {
    }
    break;
  }
  var G__15061 = args15056.length;
  switch(G__15061) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15056.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq15057) {
  var G__15058 = cljs.core.first(seq15057);
  var seq15057__$1 = cljs.core.next(seq15057);
  var G__15059 = cljs.core.first(seq15057__$1);
  var seq15057__$2 = cljs.core.next(seq15057__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__15058, G__15059, seq15057__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var args15066 = [];
  var len__5593__auto___15072 = arguments.length;
  var i__5594__auto___15073 = 0;
  while (true) {
    if (i__5594__auto___15073 < len__5593__auto___15072) {
      args15066.push(arguments[i__5594__auto___15073]);
      var G__15074 = i__5594__auto___15073 + 1;
      i__5594__auto___15073 = G__15074;
      continue;
    } else {
    }
    break;
  }
  var G__15071 = args15066.length;
  switch(G__15071) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15066.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq15067) {
  var G__15068 = cljs.core.first(seq15067);
  var seq15067__$1 = cljs.core.next(seq15067);
  var G__15069 = cljs.core.first(seq15067__$1);
  var seq15067__$2 = cljs.core.next(seq15067__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__15068, G__15069, seq15067__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var args15076 = [];
  var len__5593__auto___15082 = arguments.length;
  var i__5594__auto___15083 = 0;
  while (true) {
    if (i__5594__auto___15083 < len__5593__auto___15082) {
      args15076.push(arguments[i__5594__auto___15083]);
      var G__15084 = i__5594__auto___15083 + 1;
      i__5594__auto___15083 = G__15084;
      continue;
    } else {
    }
    break;
  }
  var G__15081 = args15076.length;
  switch(G__15081) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15076.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__15086 = y;
        var G__15087 = cljs.core.first(more);
        var G__15088 = cljs.core.next(more);
        x = G__15086;
        y = G__15087;
        more = G__15088;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq15077) {
  var G__15078 = cljs.core.first(seq15077);
  var seq15077__$1 = cljs.core.next(seq15077);
  var G__15079 = cljs.core.first(seq15077__$1);
  var seq15077__$2 = cljs.core.next(seq15077__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__15078, G__15079, seq15077__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var args15089 = [];
  var len__5593__auto___15095 = arguments.length;
  var i__5594__auto___15096 = 0;
  while (true) {
    if (i__5594__auto___15096 < len__5593__auto___15095) {
      args15089.push(arguments[i__5594__auto___15096]);
      var G__15097 = i__5594__auto___15096 + 1;
      i__5594__auto___15096 = G__15097;
      continue;
    } else {
    }
    break;
  }
  var G__15094 = args15089.length;
  switch(G__15094) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15089.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__15099 = y;
        var G__15100 = cljs.core.first(more);
        var G__15101 = cljs.core.next(more);
        x = G__15099;
        y = G__15100;
        more = G__15101;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq15090) {
  var G__15091 = cljs.core.first(seq15090);
  var seq15090__$1 = cljs.core.next(seq15090);
  var G__15092 = cljs.core.first(seq15090__$1);
  var seq15090__$2 = cljs.core.next(seq15090__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__15091, G__15092, seq15090__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var args15102 = [];
  var len__5593__auto___15108 = arguments.length;
  var i__5594__auto___15109 = 0;
  while (true) {
    if (i__5594__auto___15109 < len__5593__auto___15108) {
      args15102.push(arguments[i__5594__auto___15109]);
      var G__15110 = i__5594__auto___15109 + 1;
      i__5594__auto___15109 = G__15110;
      continue;
    } else {
    }
    break;
  }
  var G__15107 = args15102.length;
  switch(G__15107) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15102.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__15112 = y;
        var G__15113 = cljs.core.first(more);
        var G__15114 = cljs.core.next(more);
        x = G__15112;
        y = G__15113;
        more = G__15114;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq15103) {
  var G__15104 = cljs.core.first(seq15103);
  var seq15103__$1 = cljs.core.next(seq15103);
  var G__15105 = cljs.core.first(seq15103__$1);
  var seq15103__$2 = cljs.core.next(seq15103__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__15104, G__15105, seq15103__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var args15115 = [];
  var len__5593__auto___15121 = arguments.length;
  var i__5594__auto___15122 = 0;
  while (true) {
    if (i__5594__auto___15122 < len__5593__auto___15121) {
      args15115.push(arguments[i__5594__auto___15122]);
      var G__15123 = i__5594__auto___15122 + 1;
      i__5594__auto___15122 = G__15123;
      continue;
    } else {
    }
    break;
  }
  var G__15120 = args15115.length;
  switch(G__15120) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15115.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__15125 = y;
        var G__15126 = cljs.core.first(more);
        var G__15127 = cljs.core.next(more);
        x = G__15125;
        y = G__15126;
        more = G__15127;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq15116) {
  var G__15117 = cljs.core.first(seq15116);
  var seq15116__$1 = cljs.core.next(seq15116);
  var G__15118 = cljs.core.first(seq15116__$1);
  var seq15116__$2 = cljs.core.next(seq15116__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__15117, G__15118, seq15116__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var args15128 = [];
  var len__5593__auto___15134 = arguments.length;
  var i__5594__auto___15135 = 0;
  while (true) {
    if (i__5594__auto___15135 < len__5593__auto___15134) {
      args15128.push(arguments[i__5594__auto___15135]);
      var G__15136 = i__5594__auto___15135 + 1;
      i__5594__auto___15135 = G__15136;
      continue;
    } else {
    }
    break;
  }
  var G__15133 = args15128.length;
  switch(G__15133) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15128.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4866__auto__ = x;
  var y__4867__auto__ = y;
  return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4866__auto__ = x;
    var y__4867__auto__ = y;
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq15129) {
  var G__15130 = cljs.core.first(seq15129);
  var seq15129__$1 = cljs.core.next(seq15129);
  var G__15131 = cljs.core.first(seq15129__$1);
  var seq15129__$2 = cljs.core.next(seq15129__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__15130, G__15131, seq15129__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var args15138 = [];
  var len__5593__auto___15144 = arguments.length;
  var i__5594__auto___15145 = 0;
  while (true) {
    if (i__5594__auto___15145 < len__5593__auto___15144) {
      args15138.push(arguments[i__5594__auto___15145]);
      var G__15146 = i__5594__auto___15145 + 1;
      i__5594__auto___15145 = G__15146;
      continue;
    } else {
    }
    break;
  }
  var G__15143 = args15138.length;
  switch(G__15143) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15138.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4873__auto__ = x;
  var y__4874__auto__ = y;
  return x__4873__auto__ < y__4874__auto__ ? x__4873__auto__ : y__4874__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4873__auto__ = x;
    var y__4874__auto__ = y;
    return x__4873__auto__ < y__4874__auto__ ? x__4873__auto__ : y__4874__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq15139) {
  var G__15140 = cljs.core.first(seq15139);
  var seq15139__$1 = cljs.core.next(seq15139);
  var G__15141 = cljs.core.first(seq15139__$1);
  var seq15139__$2 = cljs.core.next(seq15139__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__15140, G__15141, seq15139__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var args15148 = [];
  var len__5593__auto___15154 = arguments.length;
  var i__5594__auto___15155 = 0;
  while (true) {
    if (i__5594__auto___15155 < len__5593__auto___15154) {
      args15148.push(arguments[i__5594__auto___15155]);
      var G__15156 = i__5594__auto___15155 + 1;
      i__5594__auto___15155 = G__15156;
      continue;
    } else {
    }
    break;
  }
  var G__15153 = args15148.length;
  switch(G__15153) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15148.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq15149) {
  var G__15150 = cljs.core.first(seq15149);
  var seq15149__$1 = cljs.core.next(seq15149);
  var G__15151 = cljs.core.first(seq15149__$1);
  var seq15149__$2 = cljs.core.next(seq15149__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__15150, G__15151, seq15149__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var args15158 = [];
  var len__5593__auto___15164 = arguments.length;
  var i__5594__auto___15165 = 0;
  while (true) {
    if (i__5594__auto___15165 < len__5593__auto___15164) {
      args15158.push(arguments[i__5594__auto___15165]);
      var G__15166 = i__5594__auto___15165 + 1;
      i__5594__auto___15165 = G__15166;
      continue;
    } else {
    }
    break;
  }
  var G__15163 = args15158.length;
  switch(G__15163) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15158.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq15159) {
  var G__15160 = cljs.core.first(seq15159);
  var seq15159__$1 = cljs.core.next(seq15159);
  var G__15161 = cljs.core.first(seq15159__$1);
  var seq15159__$2 = cljs.core.next(seq15159__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__15160, G__15161, seq15159__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var args15168 = [];
  var len__5593__auto___15174 = arguments.length;
  var i__5594__auto___15175 = 0;
  while (true) {
    if (i__5594__auto___15175 < len__5593__auto___15174) {
      args15168.push(arguments[i__5594__auto___15175]);
      var G__15176 = i__5594__auto___15175 + 1;
      i__5594__auto___15175 = G__15176;
      continue;
    } else {
    }
    break;
  }
  var G__15173 = args15168.length;
  switch(G__15173) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15168.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq15169) {
  var G__15170 = cljs.core.first(seq15169);
  var seq15169__$1 = cljs.core.next(seq15169);
  var G__15171 = cljs.core.first(seq15169__$1);
  var seq15169__$2 = cljs.core.next(seq15169__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__15170, G__15171, seq15169__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var args15178 = [];
  var len__5593__auto___15184 = arguments.length;
  var i__5594__auto___15185 = 0;
  while (true) {
    if (i__5594__auto___15185 < len__5593__auto___15184) {
      args15178.push(arguments[i__5594__auto___15185]);
      var G__15186 = i__5594__auto___15185 + 1;
      i__5594__auto___15185 = G__15186;
      continue;
    } else {
    }
    break;
  }
  var G__15183 = args15178.length;
  switch(G__15183) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15178.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq15179) {
  var G__15180 = cljs.core.first(seq15179);
  var seq15179__$1 = cljs.core.next(seq15179);
  var G__15181 = cljs.core.first(seq15179__$1);
  var seq15179__$2 = cljs.core.next(seq15179__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__15180, G__15181, seq15179__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var args15188 = [];
  var len__5593__auto___15194 = arguments.length;
  var i__5594__auto___15195 = 0;
  while (true) {
    if (i__5594__auto___15195 < len__5593__auto___15194) {
      args15188.push(arguments[i__5594__auto___15195]);
      var G__15196 = i__5594__auto___15195 + 1;
      i__5594__auto___15195 = G__15196;
      continue;
    } else {
    }
    break;
  }
  var G__15193 = args15188.length;
  switch(G__15193) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15188.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq15189) {
  var G__15190 = cljs.core.first(seq15189);
  var seq15189__$1 = cljs.core.next(seq15189);
  var G__15191 = cljs.core.first(seq15189__$1);
  var seq15189__$2 = cljs.core.next(seq15189__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__15190, G__15191, seq15189__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var args15198 = [];
  var len__5593__auto___15204 = arguments.length;
  var i__5594__auto___15205 = 0;
  while (true) {
    if (i__5594__auto___15205 < len__5593__auto___15204) {
      args15198.push(arguments[i__5594__auto___15205]);
      var G__15206 = i__5594__auto___15205 + 1;
      i__5594__auto___15205 = G__15206;
      continue;
    } else {
    }
    break;
  }
  var G__15203 = args15198.length;
  switch(G__15203) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15198.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq15199) {
  var G__15200 = cljs.core.first(seq15199);
  var seq15199__$1 = cljs.core.next(seq15199);
  var G__15201 = cljs.core.first(seq15199__$1);
  var seq15199__$2 = cljs.core.next(seq15199__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__15200, G__15201, seq15199__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var args15208 = [];
  var len__5593__auto___15214 = arguments.length;
  var i__5594__auto___15215 = 0;
  while (true) {
    if (i__5594__auto___15215 < len__5593__auto___15214) {
      args15208.push(arguments[i__5594__auto___15215]);
      var G__15216 = i__5594__auto___15215 + 1;
      i__5594__auto___15215 = G__15216;
      continue;
    } else {
    }
    break;
  }
  var G__15213 = args15208.length;
  switch(G__15213) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15208.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq15209) {
  var G__15210 = cljs.core.first(seq15209);
  var seq15209__$1 = cljs.core.next(seq15209);
  var G__15211 = cljs.core.first(seq15209__$1);
  var seq15209__$2 = cljs.core.next(seq15209__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__15210, G__15211, seq15209__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var args15218 = [];
  var len__5593__auto___15224 = arguments.length;
  var i__5594__auto___15225 = 0;
  while (true) {
    if (i__5594__auto___15225 < len__5593__auto___15224) {
      args15218.push(arguments[i__5594__auto___15225]);
      var G__15226 = i__5594__auto___15225 + 1;
      i__5594__auto___15225 = G__15226;
      continue;
    } else {
    }
    break;
  }
  var G__15223 = args15218.length;
  switch(G__15223) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15218.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq15219) {
  var G__15220 = cljs.core.first(seq15219);
  var seq15219__$1 = cljs.core.next(seq15219);
  var G__15221 = cljs.core.first(seq15219__$1);
  var seq15219__$2 = cljs.core.next(seq15219__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__15220, G__15221, seq15219__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var args15228 = [];
  var len__5593__auto___15234 = arguments.length;
  var i__5594__auto___15235 = 0;
  while (true) {
    if (i__5594__auto___15235 < len__5593__auto___15234) {
      args15228.push(arguments[i__5594__auto___15235]);
      var G__15236 = i__5594__auto___15235 + 1;
      i__5594__auto___15235 = G__15236;
      continue;
    } else {
    }
    break;
  }
  var G__15233 = args15228.length;
  switch(G__15233) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15228.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq15229) {
  var G__15230 = cljs.core.first(seq15229);
  var seq15229__$1 = cljs.core.next(seq15229);
  var G__15231 = cljs.core.first(seq15229__$1);
  var seq15229__$2 = cljs.core.next(seq15229__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__15230, G__15231, seq15229__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var args15238 = [];
  var len__5593__auto___15244 = arguments.length;
  var i__5594__auto___15245 = 0;
  while (true) {
    if (i__5594__auto___15245 < len__5593__auto___15244) {
      args15238.push(arguments[i__5594__auto___15245]);
      var G__15246 = i__5594__auto___15245 + 1;
      i__5594__auto___15245 = G__15246;
      continue;
    } else {
    }
    break;
  }
  var G__15243 = args15238.length;
  switch(G__15243) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15238.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq15239) {
  var G__15240 = cljs.core.first(seq15239);
  var seq15239__$1 = cljs.core.next(seq15239);
  var G__15241 = cljs.core.first(seq15239__$1);
  var seq15239__$2 = cljs.core.next(seq15239__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__15240, G__15241, seq15239__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var args15248 = [];
  var len__5593__auto___15254 = arguments.length;
  var i__5594__auto___15255 = 0;
  while (true) {
    if (i__5594__auto___15255 < len__5593__auto___15254) {
      args15248.push(arguments[i__5594__auto___15255]);
      var G__15256 = i__5594__auto___15255 + 1;
      i__5594__auto___15255 = G__15256;
      continue;
    } else {
    }
    break;
  }
  var G__15253 = args15248.length;
  switch(G__15253) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15248.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq15249) {
  var G__15250 = cljs.core.first(seq15249);
  var seq15249__$1 = cljs.core.next(seq15249);
  var G__15251 = cljs.core.first(seq15249__$1);
  var seq15249__$2 = cljs.core.next(seq15249__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__15250, G__15251, seq15249__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var args15258 = [];
  var len__5593__auto___15264 = arguments.length;
  var i__5594__auto___15265 = 0;
  while (true) {
    if (i__5594__auto___15265 < len__5593__auto___15264) {
      args15258.push(arguments[i__5594__auto___15265]);
      var G__15266 = i__5594__auto___15265 + 1;
      i__5594__auto___15265 = G__15266;
      continue;
    } else {
    }
    break;
  }
  var G__15263 = args15258.length;
  switch(G__15263) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15258.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__15268 = y;
        var G__15269 = cljs.core.first(more);
        var G__15270 = cljs.core.next(more);
        x = G__15268;
        y = G__15269;
        more = G__15270;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq15259) {
  var G__15260 = cljs.core.first(seq15259);
  var seq15259__$1 = cljs.core.next(seq15259);
  var G__15261 = cljs.core.first(seq15259__$1);
  var seq15259__$2 = cljs.core.next(seq15259__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__15260, G__15261, seq15259__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__15271 = n__$1 - 1;
      var G__15272 = cljs.core.next(xs);
      n__$1 = G__15271;
      xs = G__15272;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var args15273 = [];
  var len__5593__auto___15278 = arguments.length;
  var i__5594__auto___15279 = 0;
  while (true) {
    if (i__5594__auto___15279 < len__5593__auto___15278) {
      args15273.push(arguments[i__5594__auto___15279]);
      var G__15280 = i__5594__auto___15279 + 1;
      i__5594__auto___15279 = G__15280;
      continue;
    } else {
    }
    break;
  }
  var G__15277 = args15273.length;
  switch(G__15277) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15273.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5612__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__15282 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__15283 = cljs.core.next(more);
      sb = G__15282;
      more = G__15283;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq15274) {
  var G__15275 = cljs.core.first(seq15274);
  var seq15274__$1 = cljs.core.next(seq15274);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__15275, seq15274__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var args15284 = [];
  var len__5593__auto___15287 = arguments.length;
  var i__5594__auto___15288 = 0;
  while (true) {
    if (i__5594__auto___15288 < len__5593__auto___15287) {
      args15284.push(arguments[i__5594__auto___15288]);
      var G__15289 = i__5594__auto___15288 + 1;
      i__5594__auto___15288 = G__15289;
      continue;
    } else {
    }
    break;
  }
  var G__15286 = args15284.length;
  switch(G__15286) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15284.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__15291 = cljs.core.next(xs);
            var G__15292 = cljs.core.next(ys);
            xs = G__15291;
            ys = G__15292;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__15293 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__15294 = cljs.core.next(s);
        res = G__15293;
        s = G__15294;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__15295 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__15296 = cljs.core.next(s);
      h = G__15295;
      s = G__15296;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__15297 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__15298 = cljs.core.next(s__$1);
      h = G__15297;
      s__$1 = G__15298;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__15305_15311 = cljs.core.seq(fn_map);
  var chunk__15306_15312 = null;
  var count__15307_15313 = 0;
  var i__15308_15314 = 0;
  while (true) {
    if (i__15308_15314 < count__15307_15313) {
      var vec__15309_15315 = chunk__15306_15312.cljs$core$IIndexed$_nth$arity$2(null, i__15308_15314);
      var key_name_15316 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15309_15315, 0, null);
      var f_15317 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15309_15315, 1, null);
      var str_name_15318 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_15316) : cljs.core.name.call(null, key_name_15316);
      obj[str_name_15318] = f_15317;
      var G__15319 = seq__15305_15311;
      var G__15320 = chunk__15306_15312;
      var G__15321 = count__15307_15313;
      var G__15322 = i__15308_15314 + 1;
      seq__15305_15311 = G__15319;
      chunk__15306_15312 = G__15320;
      count__15307_15313 = G__15321;
      i__15308_15314 = G__15322;
      continue;
    } else {
      var temp__4425__auto___15323 = cljs.core.seq(seq__15305_15311);
      if (temp__4425__auto___15323) {
        var seq__15305_15324__$1 = temp__4425__auto___15323;
        if (cljs.core.chunked_seq_QMARK_(seq__15305_15324__$1)) {
          var c__5338__auto___15325 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__15305_15324__$1) : cljs.core.chunk_first.call(null, seq__15305_15324__$1);
          var G__15326 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__15305_15324__$1) : cljs.core.chunk_rest.call(null, seq__15305_15324__$1);
          var G__15327 = c__5338__auto___15325;
          var G__15328 = cljs.core.count(c__5338__auto___15325);
          var G__15329 = 0;
          seq__15305_15311 = G__15326;
          chunk__15306_15312 = G__15327;
          count__15307_15313 = G__15328;
          i__15308_15314 = G__15329;
          continue;
        } else {
          var vec__15310_15330 = cljs.core.first(seq__15305_15324__$1);
          var key_name_15331 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15310_15330, 0, null);
          var f_15332 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15310_15330, 1, null);
          var str_name_15333 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_15331) : cljs.core.name.call(null, key_name_15331);
          obj[str_name_15333] = f_15332;
          var G__15334 = cljs.core.next(seq__15305_15324__$1);
          var G__15335 = null;
          var G__15336 = 0;
          var G__15337 = 0;
          seq__15305_15311 = G__15334;
          chunk__15306_15312 = G__15335;
          count__15307_15313 = G__15336;
          i__15308_15314 = G__15337;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var args__5600__auto__ = [];
  var len__5593__auto___15343 = arguments.length;
  var i__5594__auto___15344 = 0;
  while (true) {
    if (i__5594__auto___15344 < len__5593__auto___15343) {
      args__5600__auto__.push(arguments[i__5594__auto___15344]);
      var G__15345 = i__5594__auto___15344 + 1;
      i__5594__auto___15344 = G__15345;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__15346 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__15346;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__15347 = i - 1;
      var G__15348 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__15347;
      r = G__15348;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq15342) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15342));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4554__auto__ = coll == null;
    if (or__4554__auto__) {
      return or__4554__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = cljs.core.not(a.ns);
      if (and__4542__auto__) {
        return b.ns;
      } else {
        return and__4542__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__15359 = a.ns;
            var G__15360 = b.ns;
            return goog.array.defaultCompare(G__15359, G__15360);
          }();
          if (0 === nsc) {
            var G__15361 = a.name;
            var G__15362 = b.name;
            return goog.array.defaultCompare(G__15361, G__15362);
          } else {
            return nsc;
          }
        }
      } else {
        var G__15363 = a.name;
        var G__15364 = b.name;
        return goog.array.defaultCompare(G__15363, G__15364);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__15366 = null;
  var G__15366__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__15366__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__15366 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15366__2.call(this, self__, coll);
      case 3:
        return G__15366__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15366.cljs$core$IFn$_invoke$arity$2 = G__15366__2;
  G__15366.cljs$core$IFn$_invoke$arity$3 = G__15366__3;
  return G__15366;
}();
cljs.core.Keyword.prototype.apply = function(self__, args15365) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15365)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4970__auto__ = self__._hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var args15369 = [];
  var len__5593__auto___15372 = arguments.length;
  var i__5594__auto___15373 = 0;
  while (true) {
    if (i__5594__auto___15373 < len__5593__auto___15372) {
      args15369.push(arguments[i__5594__auto___15373]);
      var G__15374 = i__5594__auto___15373 + 1;
      i__5594__auto___15373 = G__15374;
      continue;
    } else {
    }
    break;
  }
  var G__15371 = args15369.length;
  switch(G__15371) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15369.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__15376 = ls.sval();
        ls = G__15376;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var args15377 = [];
  var len__5593__auto___15380 = arguments.length;
  var i__5594__auto___15381 = 0;
  while (true) {
    if (i__5594__auto___15381 < len__5593__auto___15380) {
      args15377.push(arguments[i__5594__auto___15381]);
      var G__15382 = i__5594__auto___15381 + 1;
      i__5594__auto___15381 = G__15382;
      continue;
    } else {
    }
    break;
  }
  var G__15379 = args15377.length;
  switch(G__15379) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15377.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__15386 = cljs.core.next(s__$1);
      s__$1 = G__15386;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_15387 = 0;
  var xs_15388 = cljs.core.seq(coll);
  while (true) {
    if (xs_15388) {
      ret[i_15387] = cljs.core.to_array(cljs.core.first(xs_15388));
      var G__15389 = i_15387 + 1;
      var G__15390 = cljs.core.next(xs_15388);
      i_15387 = G__15389;
      xs_15388 = G__15390;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var args15391 = [];
  var len__5593__auto___15394 = arguments.length;
  var i__5594__auto___15395 = 0;
  while (true) {
    if (i__5594__auto___15395 < len__5593__auto___15394) {
      args15391.push(arguments[i__5594__auto___15395]);
      var G__15396 = i__5594__auto___15395 + 1;
      i__5594__auto___15395 = G__15396;
      continue;
    } else {
    }
    break;
  }
  var G__15393 = args15391.length;
  switch(G__15393) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15391.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__15398 = i + 1;
        var G__15399 = cljs.core.next(s__$1);
        i = G__15398;
        s__$1 = G__15399;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5438__auto___15400 = size;
    var i_15401 = 0;
    while (true) {
      if (i_15401 < n__5438__auto___15400) {
        a[i_15401] = init_val_or_seq;
        var G__15402 = i_15401 + 1;
        i_15401 = G__15402;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var args15403 = [];
  var len__5593__auto___15406 = arguments.length;
  var i__5594__auto___15407 = 0;
  while (true) {
    if (i__5594__auto___15407 < len__5593__auto___15406) {
      args15403.push(arguments[i__5594__auto___15407]);
      var G__15408 = i__5594__auto___15407 + 1;
      i__5594__auto___15407 = G__15408;
      continue;
    } else {
    }
    break;
  }
  var G__15405 = args15403.length;
  switch(G__15405) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15403.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__15410 = i + 1;
        var G__15411 = cljs.core.next(s__$1);
        i = G__15410;
        s__$1 = G__15411;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5438__auto___15412 = size;
    var i_15413 = 0;
    while (true) {
      if (i_15413 < n__5438__auto___15412) {
        a[i_15413] = init_val_or_seq;
        var G__15414 = i_15413 + 1;
        i_15413 = G__15414;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var args15415 = [];
  var len__5593__auto___15418 = arguments.length;
  var i__5594__auto___15419 = 0;
  while (true) {
    if (i__5594__auto___15419 < len__5593__auto___15418) {
      args15415.push(arguments[i__5594__auto___15419]);
      var G__15420 = i__5594__auto___15419 + 1;
      i__5594__auto___15419 = G__15420;
      continue;
    } else {
    }
    break;
  }
  var G__15417 = args15415.length;
  switch(G__15417) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15415.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__15422 = i + 1;
        var G__15423 = cljs.core.next(s__$1);
        i = G__15422;
        s__$1 = G__15423;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5438__auto___15424 = size;
    var i_15425 = 0;
    while (true) {
      if (i_15425 < n__5438__auto___15424) {
        a[i_15425] = init_val_or_seq;
        var G__15426 = i_15425 + 1;
        i_15425 = G__15426;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var args15427 = [];
  var len__5593__auto___15430 = arguments.length;
  var i__5594__auto___15431 = 0;
  while (true) {
    if (i__5594__auto___15431 < len__5593__auto___15430) {
      args15427.push(arguments[i__5594__auto___15431]);
      var G__15432 = i__5594__auto___15431 + 1;
      i__5594__auto___15431 = G__15432;
      continue;
    } else {
    }
    break;
  }
  var G__15429 = args15427.length;
  switch(G__15429) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15427.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__15434 = i + 1;
        var G__15435 = cljs.core.next(s__$1);
        i = G__15434;
        s__$1 = G__15435;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5438__auto___15436 = size;
    var i_15437 = 0;
    while (true) {
      if (i_15437 < n__5438__auto___15436) {
        a[i_15437] = init_val_or_seq;
        var G__15438 = i_15437 + 1;
        i_15437 = G__15438;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__15439 = cljs.core.next(s__$1);
        var G__15440 = i - 1;
        var G__15441 = sum + 1;
        s__$1 = G__15439;
        i = G__15440;
        sum = G__15441;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var args15443 = [];
  var len__5593__auto___15455 = arguments.length;
  var i__5594__auto___15456 = 0;
  while (true) {
    if (i__5594__auto___15456 < len__5593__auto___15455) {
      args15443.push(arguments[i__5594__auto___15456]);
      var G__15457 = i__5594__auto___15456 + 1;
      i__5594__auto___15456 = G__15457;
      continue;
    } else {
    }
    break;
  }
  var G__15448 = args15443.length;
  switch(G__15448) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15443.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq15444) {
  var G__15445 = cljs.core.first(seq15444);
  var seq15444__$1 = cljs.core.next(seq15444);
  var G__15446 = cljs.core.first(seq15444__$1);
  var seq15444__$2 = cljs.core.next(seq15444__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__15445, G__15446, seq15444__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var args15459 = [];
  var len__5593__auto___15467 = arguments.length;
  var i__5594__auto___15468 = 0;
  while (true) {
    if (i__5594__auto___15468 < len__5593__auto___15467) {
      args15459.push(arguments[i__5594__auto___15468]);
      var G__15469 = i__5594__auto___15468 + 1;
      i__5594__auto___15468 = G__15469;
      continue;
    } else {
    }
    break;
  }
  var G__15466 = args15459.length;
  switch(G__15466) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15459.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5612__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq15460) {
  var G__15461 = cljs.core.first(seq15460);
  var seq15460__$1 = cljs.core.next(seq15460);
  var G__15462 = cljs.core.first(seq15460__$1);
  var seq15460__$2 = cljs.core.next(seq15460__$1);
  var G__15463 = cljs.core.first(seq15460__$2);
  var seq15460__$3 = cljs.core.next(seq15460__$2);
  var G__15464 = cljs.core.first(seq15460__$3);
  var seq15460__$4 = cljs.core.next(seq15460__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__15461, G__15462, G__15463, G__15464, seq15460__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var args15471 = [];
  var len__5593__auto___15477 = arguments.length;
  var i__5594__auto___15478 = 0;
  while (true) {
    if (i__5594__auto___15478 < len__5593__auto___15477) {
      args15471.push(arguments[i__5594__auto___15478]);
      var G__15479 = i__5594__auto___15478 + 1;
      i__5594__auto___15478 = G__15479;
      continue;
    } else {
    }
    break;
  }
  var G__15476 = args15471.length;
  switch(G__15476) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15471.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__15481 = ntcoll;
      var G__15482 = cljs.core.first(vals);
      var G__15483 = cljs.core.next(vals);
      tcoll = G__15481;
      val = G__15482;
      vals = G__15483;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq15472) {
  var G__15473 = cljs.core.first(seq15472);
  var seq15472__$1 = cljs.core.next(seq15472);
  var G__15474 = cljs.core.first(seq15472__$1);
  var seq15472__$2 = cljs.core.next(seq15472__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15473, G__15474, seq15472__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var args15484 = [];
  var len__5593__auto___15491 = arguments.length;
  var i__5594__auto___15492 = 0;
  while (true) {
    if (i__5594__auto___15492 < len__5593__auto___15491) {
      args15484.push(arguments[i__5594__auto___15492]);
      var G__15493 = i__5594__auto___15492 + 1;
      i__5594__auto___15492 = G__15493;
      continue;
    } else {
    }
    break;
  }
  var G__15490 = args15484.length;
  switch(G__15490) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15484.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__15495 = ntcoll;
      var G__15496 = cljs.core.first(kvs);
      var G__15497 = cljs.core.second(kvs);
      var G__15498 = cljs.core.nnext(kvs);
      tcoll = G__15495;
      key = G__15496;
      val = G__15497;
      kvs = G__15498;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq15485) {
  var G__15486 = cljs.core.first(seq15485);
  var seq15485__$1 = cljs.core.next(seq15485);
  var G__15487 = cljs.core.first(seq15485__$1);
  var seq15485__$2 = cljs.core.next(seq15485__$1);
  var G__15488 = cljs.core.first(seq15485__$2);
  var seq15485__$3 = cljs.core.next(seq15485__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15486, G__15487, G__15488, seq15485__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var args15499 = [];
  var len__5593__auto___15505 = arguments.length;
  var i__5594__auto___15506 = 0;
  while (true) {
    if (i__5594__auto___15506 < len__5593__auto___15505) {
      args15499.push(arguments[i__5594__auto___15506]);
      var G__15507 = i__5594__auto___15506 + 1;
      i__5594__auto___15506 = G__15507;
      continue;
    } else {
    }
    break;
  }
  var G__15504 = args15499.length;
  switch(G__15504) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15499.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__15509 = ntcoll;
      var G__15510 = cljs.core.first(ks);
      var G__15511 = cljs.core.next(ks);
      tcoll = G__15509;
      key = G__15510;
      ks = G__15511;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq15500) {
  var G__15501 = cljs.core.first(seq15500);
  var seq15500__$1 = cljs.core.next(seq15500);
  var G__15502 = cljs.core.first(seq15500__$1);
  var seq15500__$2 = cljs.core.next(seq15500__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15501, G__15502, seq15500__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var args15512 = [];
  var len__5593__auto___15518 = arguments.length;
  var i__5594__auto___15519 = 0;
  while (true) {
    if (i__5594__auto___15519 < len__5593__auto___15518) {
      args15512.push(arguments[i__5594__auto___15519]);
      var G__15520 = i__5594__auto___15519 + 1;
      i__5594__auto___15519 = G__15520;
      continue;
    } else {
    }
    break;
  }
  var G__15517 = args15512.length;
  switch(G__15517) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15512.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__15522 = ntcoll;
      var G__15523 = cljs.core.first(vals);
      var G__15524 = cljs.core.next(vals);
      tcoll = G__15522;
      val = G__15523;
      vals = G__15524;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq15513) {
  var G__15514 = cljs.core.first(seq15513);
  var seq15513__$1 = cljs.core.next(seq15513);
  var G__15515 = cljs.core.first(seq15513__$1);
  var seq15513__$2 = cljs.core.next(seq15513__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15514, G__15515, seq15513__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5482 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5482);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a5482) : f.call(null, a5482);
      }
    } else {
      var b5483 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5482, b5483);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a5482, b5483) : f.call(null, a5482, b5483);
        }
      } else {
        var c5484 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5482, b5483, c5484);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a5482, b5483, c5484) : f.call(null, a5482, b5483, c5484);
          }
        } else {
          var d5485 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5482, b5483, c5484, d5485);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a5482, b5483, c5484, d5485) : f.call(null, a5482, b5483, c5484, d5485);
            }
          } else {
            var e5486 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5482, b5483, c5484, d5485, e5486);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a5482, b5483, c5484, d5485, e5486) : f.call(null, a5482, b5483, c5484, d5485, e5486);
              }
            } else {
              var f5487 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5482, b5483, c5484, d5485, e5486, f5487);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a5482, b5483, c5484, d5485, e5486, f5487) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487);
                }
              } else {
                var g5488 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5482, b5483, c5484, d5485, e5486, f5487, g5488);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a5482, b5483, c5484, d5485, e5486, f5487, g5488) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488);
                  }
                } else {
                  var h5489 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489);
                    }
                  } else {
                    var i5490 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490);
                      }
                    } else {
                      var j5491 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491);
                        }
                      } else {
                        var k5492 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492);
                          }
                        } else {
                          var l5493 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493);
                            }
                          } else {
                            var m5494 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494);
                              }
                            } else {
                              var n5495 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495);
                                }
                              } else {
                                var o5496 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496);
                                  }
                                } else {
                                  var p5497 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497);
                                    }
                                  } else {
                                    var q5498 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498);
                                      }
                                    } else {
                                      var r5499 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499);
                                        }
                                      } else {
                                        var s5500 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500);
                                          }
                                        } else {
                                          var t5501 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500, t5501);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500, t5501) : f.call(null, a5482, b5483, c5484, d5485, e5486, f5487, g5488, h5489, i5490, j5491, k5492, l5493, m5494, n5495, o5496, p5497, q5498, r5499, s5500, t5501);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var args15525 = [];
  var len__5593__auto___15534 = arguments.length;
  var i__5594__auto___15535 = 0;
  while (true) {
    if (i__5594__auto___15535 < len__5593__auto___15534) {
      args15525.push(arguments[i__5594__auto___15535]);
      var G__15536 = i__5594__auto___15535 + 1;
      i__5594__auto___15535 = G__15536;
      continue;
    } else {
    }
    break;
  }
  var G__15533 = args15525.length;
  switch(G__15533) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15525.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5612__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq15526) {
  var G__15527 = cljs.core.first(seq15526);
  var seq15526__$1 = cljs.core.next(seq15526);
  var G__15528 = cljs.core.first(seq15526__$1);
  var seq15526__$2 = cljs.core.next(seq15526__$1);
  var G__15529 = cljs.core.first(seq15526__$2);
  var seq15526__$3 = cljs.core.next(seq15526__$2);
  var G__15530 = cljs.core.first(seq15526__$3);
  var seq15526__$4 = cljs.core.next(seq15526__$3);
  var G__15531 = cljs.core.first(seq15526__$4);
  var seq15526__$5 = cljs.core.next(seq15526__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__15527, G__15528, G__15529, G__15530, G__15531, seq15526__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var args15538 = [];
  var len__5593__auto___15563 = arguments.length;
  var i__5594__auto___15564 = 0;
  while (true) {
    if (i__5594__auto___15564 < len__5593__auto___15563) {
      args15538.push(arguments[i__5594__auto___15564]);
      var G__15565 = i__5594__auto___15564 + 1;
      i__5594__auto___15564 = G__15565;
      continue;
    } else {
    }
    break;
  }
  var G__15547 = args15538.length;
  switch(G__15547) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15538.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5612__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__15548 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15548) : f.call(null, G__15548);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__15549 = cljs.core.meta(obj);
    var G__15550 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15549, G__15550) : f.call(null, G__15549, G__15550);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__15551 = cljs.core.meta(obj);
    var G__15552 = a;
    var G__15553 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15551, G__15552, G__15553) : f.call(null, G__15551, G__15552, G__15553);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__15554 = cljs.core.meta(obj);
    var G__15555 = a;
    var G__15556 = b;
    var G__15557 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15554, G__15555, G__15556, G__15557) : f.call(null, G__15554, G__15555, G__15556, G__15557);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__15558 = cljs.core.meta(obj);
    var G__15559 = a;
    var G__15560 = b;
    var G__15561 = c;
    var G__15562 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15558, G__15559, G__15560, G__15561, G__15562) : f.call(null, G__15558, G__15559, G__15560, G__15561, G__15562);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq15539) {
  var G__15540 = cljs.core.first(seq15539);
  var seq15539__$1 = cljs.core.next(seq15539);
  var G__15541 = cljs.core.first(seq15539__$1);
  var seq15539__$2 = cljs.core.next(seq15539__$1);
  var G__15542 = cljs.core.first(seq15539__$2);
  var seq15539__$3 = cljs.core.next(seq15539__$2);
  var G__15543 = cljs.core.first(seq15539__$3);
  var seq15539__$4 = cljs.core.next(seq15539__$3);
  var G__15544 = cljs.core.first(seq15539__$4);
  var seq15539__$5 = cljs.core.next(seq15539__$4);
  var G__15545 = cljs.core.first(seq15539__$5);
  var seq15539__$6 = cljs.core.next(seq15539__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__15540, G__15541, G__15542, G__15543, G__15544, G__15545, seq15539__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var args15567 = [];
  var len__5593__auto___15573 = arguments.length;
  var i__5594__auto___15574 = 0;
  while (true) {
    if (i__5594__auto___15574 < len__5593__auto___15573) {
      args15567.push(arguments[i__5594__auto___15574]);
      var G__15575 = i__5594__auto___15574 + 1;
      i__5594__auto___15574 = G__15575;
      continue;
    } else {
    }
    break;
  }
  var G__15572 = args15567.length;
  switch(G__15572) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15567.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq15568) {
  var G__15569 = cljs.core.first(seq15568);
  var seq15568__$1 = cljs.core.next(seq15568);
  var G__15570 = cljs.core.first(seq15568__$1);
  var seq15568__$2 = cljs.core.next(seq15568__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__15569, G__15570, seq15568__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t15580 !== "undefined") {
  } else {
    cljs.core.t15580 = function(nil_iter, meta15581) {
      this.nil_iter = nil_iter;
      this.meta15581 = meta15581;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t15580.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15582, meta15581__$1) {
      var self__ = this;
      var _15582__$1 = this;
      return new cljs.core.t15580(self__.nil_iter, meta15581__$1);
    };
    cljs.core.t15580.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15582) {
      var self__ = this;
      var _15582__$1 = this;
      return self__.meta15581;
    };
    cljs.core.t15580.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t15580.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t15580.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t15580.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta15581", "meta15581", 1834071478, null)], 
      null);
    };
    cljs.core.t15580.cljs$lang$type = true;
    cljs.core.t15580.cljs$lang$ctorStr = "cljs.core/t15580";
    cljs.core.t15580.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
      return cljs.core._write(writer__5134__auto__, "cljs.core/t15580");
    };
    cljs.core.__GT_t15580 = function cljs$core$nil_iter_$___GT_t15580(nil_iter__$1, meta15581) {
      return new cljs.core.t15580(nil_iter__$1, meta15581);
    };
  }
  return new cljs.core.t15580(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = !(lt.stepper == null);
      if (and__4542__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4542__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__15583 = lt;
        var G__15584 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__15583, G__15584) : self__.xform.call(null, G__15583, G__15584);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__15585 = cljs.core.next(iters__$1);
        iters__$1 = G__15585;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5438__auto___15586 = self__.iters.length;
  var i_15587 = 0;
  while (true) {
    if (i_15587 < n__5438__auto___15586) {
      self__.nexts[i_15587] = self__.iters[i_15587].next();
      var G__15588 = i_15587 + 1;
      i_15587 = G__15588;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = !(lt.stepper == null);
      if (and__4542__auto__) {
        return this$.hasNext();
      } else {
        return and__4542__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var args15589 = [];
  var len__5593__auto___15592 = arguments.length;
  var i__5594__auto___15593 = 0;
  while (true) {
    if (i__5594__auto___15593 < len__5593__auto___15592) {
      args15589.push(arguments[i__5594__auto___15593]);
      var G__15594 = i__5594__auto___15593 + 1;
      i__5594__auto___15593 = G__15594;
      continue;
    } else {
    }
    break;
  }
  var G__15591 = args15589.length;
  switch(G__15591) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15589.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__15596_15600 = cljs.core.seq(colls);
  var chunk__15597_15601 = null;
  var count__15598_15602 = 0;
  var i__15599_15603 = 0;
  while (true) {
    if (i__15599_15603 < count__15598_15602) {
      var coll_15604 = chunk__15597_15601.cljs$core$IIndexed$_nth$arity$2(null, i__15599_15603);
      iters.push(cljs.core.iter(coll_15604));
      var G__15605 = seq__15596_15600;
      var G__15606 = chunk__15597_15601;
      var G__15607 = count__15598_15602;
      var G__15608 = i__15599_15603 + 1;
      seq__15596_15600 = G__15605;
      chunk__15597_15601 = G__15606;
      count__15598_15602 = G__15607;
      i__15599_15603 = G__15608;
      continue;
    } else {
      var temp__4425__auto___15609 = cljs.core.seq(seq__15596_15600);
      if (temp__4425__auto___15609) {
        var seq__15596_15610__$1 = temp__4425__auto___15609;
        if (cljs.core.chunked_seq_QMARK_(seq__15596_15610__$1)) {
          var c__5338__auto___15611 = cljs.core.chunk_first(seq__15596_15610__$1);
          var G__15612 = cljs.core.chunk_rest(seq__15596_15610__$1);
          var G__15613 = c__5338__auto___15611;
          var G__15614 = cljs.core.count(c__5338__auto___15611);
          var G__15615 = 0;
          seq__15596_15600 = G__15612;
          chunk__15597_15601 = G__15613;
          count__15598_15602 = G__15614;
          i__15599_15603 = G__15615;
          continue;
        } else {
          var coll_15616 = cljs.core.first(seq__15596_15610__$1);
          iters.push(cljs.core.iter(coll_15616));
          var G__15617 = cljs.core.next(seq__15596_15610__$1);
          var G__15618 = null;
          var G__15619 = 0;
          var G__15620 = 0;
          seq__15596_15600 = G__15617;
          chunk__15597_15601 = G__15618;
          count__15598_15602 = G__15619;
          i__15599_15603 = G__15620;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var args15621 = [];
  var len__5593__auto___15627 = arguments.length;
  var i__5594__auto___15628 = 0;
  while (true) {
    if (i__5594__auto___15628 < len__5593__auto___15627) {
      args15621.push(arguments[i__5594__auto___15628]);
      var G__15629 = i__5594__auto___15628 + 1;
      i__5594__auto___15628 = G__15629;
      continue;
    } else {
    }
    break;
  }
  var G__15626 = args15621.length;
  switch(G__15626) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15621.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4554__auto__ = cljs.core.seq(coll);
    if (or__4554__auto__) {
      return or__4554__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq15622) {
  var G__15623 = cljs.core.first(seq15622);
  var seq15622__$1 = cljs.core.next(seq15622);
  var G__15624 = cljs.core.first(seq15622__$1);
  var seq15622__$2 = cljs.core.next(seq15622__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__15623, G__15624, seq15622__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__15632 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15632) : pred.call(null, G__15632);
      }())) {
        var G__15633 = pred;
        var G__15634 = cljs.core.next(coll);
        pred = G__15633;
        coll = G__15634;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4554__auto__ = function() {
        var G__15638 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15638) : pred.call(null, G__15638);
      }();
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var G__15639 = pred;
        var G__15640 = cljs.core.next(coll);
        pred = G__15639;
        coll = G__15640;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__15641 = null;
    var G__15641__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__15641__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__15641__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__15641__3 = function() {
      var G__15642__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__15642 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__15643__i = 0, G__15643__a = new Array(arguments.length - 2);
          while (G__15643__i < G__15643__a.length) {
            G__15643__a[G__15643__i] = arguments[G__15643__i + 2];
            ++G__15643__i;
          }
          zs = new cljs.core.IndexedSeq(G__15643__a, 0);
        }
        return G__15642__delegate.call(this, x, y, zs);
      };
      G__15642.cljs$lang$maxFixedArity = 2;
      G__15642.cljs$lang$applyTo = function(arglist__15644) {
        var x = cljs.core.first(arglist__15644);
        arglist__15644 = cljs.core.next(arglist__15644);
        var y = cljs.core.first(arglist__15644);
        var zs = cljs.core.rest(arglist__15644);
        return G__15642__delegate(x, y, zs);
      };
      G__15642.cljs$core$IFn$_invoke$arity$variadic = G__15642__delegate;
      return G__15642;
    }();
    G__15641 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__15641__0.call(this);
        case 1:
          return G__15641__1.call(this, x);
        case 2:
          return G__15641__2.call(this, x, y);
        default:
          var G__15645 = null;
          if (arguments.length > 2) {
            var G__15646__i = 0, G__15646__a = new Array(arguments.length - 2);
            while (G__15646__i < G__15646__a.length) {
              G__15646__a[G__15646__i] = arguments[G__15646__i + 2];
              ++G__15646__i;
            }
            G__15645 = new cljs.core.IndexedSeq(G__15646__a, 0);
          }
          return G__15641__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__15645);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15641.cljs$lang$maxFixedArity = 2;
    G__15641.cljs$lang$applyTo = G__15641__3.cljs$lang$applyTo;
    G__15641.cljs$core$IFn$_invoke$arity$0 = G__15641__0;
    G__15641.cljs$core$IFn$_invoke$arity$1 = G__15641__1;
    G__15641.cljs$core$IFn$_invoke$arity$2 = G__15641__2;
    G__15641.cljs$core$IFn$_invoke$arity$variadic = G__15641__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__15641;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__15647__delegate = function(args) {
      return x;
    };
    var G__15647 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__15648__i = 0, G__15648__a = new Array(arguments.length - 0);
        while (G__15648__i < G__15648__a.length) {
          G__15648__a[G__15648__i] = arguments[G__15648__i + 0];
          ++G__15648__i;
        }
        args = new cljs.core.IndexedSeq(G__15648__a, 0);
      }
      return G__15647__delegate.call(this, args);
    };
    G__15647.cljs$lang$maxFixedArity = 0;
    G__15647.cljs$lang$applyTo = function(arglist__15649) {
      var args = cljs.core.seq(arglist__15649);
      return G__15647__delegate(args);
    };
    G__15647.cljs$core$IFn$_invoke$arity$variadic = G__15647__delegate;
    return G__15647;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var args15650 = [];
  var len__5593__auto___15677 = arguments.length;
  var i__5594__auto___15678 = 0;
  while (true) {
    if (i__5594__auto___15678 < len__5593__auto___15677) {
      args15650.push(arguments[i__5594__auto___15678]);
      var G__15679 = i__5594__auto___15678 + 1;
      i__5594__auto___15678 = G__15679;
      continue;
    } else {
    }
    break;
  }
  var G__15656 = args15650.length;
  switch(G__15656) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15650.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__15681 = null;
    var G__15681__0 = function() {
      var G__15657 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15657) : f.call(null, G__15657);
    };
    var G__15681__1 = function(x) {
      var G__15658 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15658) : f.call(null, G__15658);
    };
    var G__15681__2 = function(x, y) {
      var G__15659 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15659) : f.call(null, G__15659);
    };
    var G__15681__3 = function(x, y, z) {
      var G__15660 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15660) : f.call(null, G__15660);
    };
    var G__15681__4 = function() {
      var G__15682__delegate = function(x, y, z, args) {
        var G__15661 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15661) : f.call(null, G__15661);
      };
      var G__15682 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15683__i = 0, G__15683__a = new Array(arguments.length - 3);
          while (G__15683__i < G__15683__a.length) {
            G__15683__a[G__15683__i] = arguments[G__15683__i + 3];
            ++G__15683__i;
          }
          args = new cljs.core.IndexedSeq(G__15683__a, 0);
        }
        return G__15682__delegate.call(this, x, y, z, args);
      };
      G__15682.cljs$lang$maxFixedArity = 3;
      G__15682.cljs$lang$applyTo = function(arglist__15684) {
        var x = cljs.core.first(arglist__15684);
        arglist__15684 = cljs.core.next(arglist__15684);
        var y = cljs.core.first(arglist__15684);
        arglist__15684 = cljs.core.next(arglist__15684);
        var z = cljs.core.first(arglist__15684);
        var args = cljs.core.rest(arglist__15684);
        return G__15682__delegate(x, y, z, args);
      };
      G__15682.cljs$core$IFn$_invoke$arity$variadic = G__15682__delegate;
      return G__15682;
    }();
    G__15681 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15681__0.call(this);
        case 1:
          return G__15681__1.call(this, x);
        case 2:
          return G__15681__2.call(this, x, y);
        case 3:
          return G__15681__3.call(this, x, y, z);
        default:
          var G__15685 = null;
          if (arguments.length > 3) {
            var G__15686__i = 0, G__15686__a = new Array(arguments.length - 3);
            while (G__15686__i < G__15686__a.length) {
              G__15686__a[G__15686__i] = arguments[G__15686__i + 3];
              ++G__15686__i;
            }
            G__15685 = new cljs.core.IndexedSeq(G__15686__a, 0);
          }
          return G__15681__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15685);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15681.cljs$lang$maxFixedArity = 3;
    G__15681.cljs$lang$applyTo = G__15681__4.cljs$lang$applyTo;
    G__15681.cljs$core$IFn$_invoke$arity$0 = G__15681__0;
    G__15681.cljs$core$IFn$_invoke$arity$1 = G__15681__1;
    G__15681.cljs$core$IFn$_invoke$arity$2 = G__15681__2;
    G__15681.cljs$core$IFn$_invoke$arity$3 = G__15681__3;
    G__15681.cljs$core$IFn$_invoke$arity$variadic = G__15681__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15681;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__15687 = null;
    var G__15687__0 = function() {
      var G__15663 = function() {
        var G__15664 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15664) : g.call(null, G__15664);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15663) : f.call(null, G__15663);
    };
    var G__15687__1 = function(x) {
      var G__15666 = function() {
        var G__15667 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15667) : g.call(null, G__15667);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15666) : f.call(null, G__15666);
    };
    var G__15687__2 = function(x, y) {
      var G__15669 = function() {
        var G__15670 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15670) : g.call(null, G__15670);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15669) : f.call(null, G__15669);
    };
    var G__15687__3 = function(x, y, z) {
      var G__15672 = function() {
        var G__15673 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15673) : g.call(null, G__15673);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15672) : f.call(null, G__15672);
    };
    var G__15687__4 = function() {
      var G__15688__delegate = function(x, y, z, args) {
        var G__15675 = function() {
          var G__15676 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15676) : g.call(null, G__15676);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15675) : f.call(null, G__15675);
      };
      var G__15688 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15689__i = 0, G__15689__a = new Array(arguments.length - 3);
          while (G__15689__i < G__15689__a.length) {
            G__15689__a[G__15689__i] = arguments[G__15689__i + 3];
            ++G__15689__i;
          }
          args = new cljs.core.IndexedSeq(G__15689__a, 0);
        }
        return G__15688__delegate.call(this, x, y, z, args);
      };
      G__15688.cljs$lang$maxFixedArity = 3;
      G__15688.cljs$lang$applyTo = function(arglist__15690) {
        var x = cljs.core.first(arglist__15690);
        arglist__15690 = cljs.core.next(arglist__15690);
        var y = cljs.core.first(arglist__15690);
        arglist__15690 = cljs.core.next(arglist__15690);
        var z = cljs.core.first(arglist__15690);
        var args = cljs.core.rest(arglist__15690);
        return G__15688__delegate(x, y, z, args);
      };
      G__15688.cljs$core$IFn$_invoke$arity$variadic = G__15688__delegate;
      return G__15688;
    }();
    G__15687 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15687__0.call(this);
        case 1:
          return G__15687__1.call(this, x);
        case 2:
          return G__15687__2.call(this, x, y);
        case 3:
          return G__15687__3.call(this, x, y, z);
        default:
          var G__15691 = null;
          if (arguments.length > 3) {
            var G__15692__i = 0, G__15692__a = new Array(arguments.length - 3);
            while (G__15692__i < G__15692__a.length) {
              G__15692__a[G__15692__i] = arguments[G__15692__i + 3];
              ++G__15692__i;
            }
            G__15691 = new cljs.core.IndexedSeq(G__15692__a, 0);
          }
          return G__15687__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15691);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15687.cljs$lang$maxFixedArity = 3;
    G__15687.cljs$lang$applyTo = G__15687__4.cljs$lang$applyTo;
    G__15687.cljs$core$IFn$_invoke$arity$0 = G__15687__0;
    G__15687.cljs$core$IFn$_invoke$arity$1 = G__15687__1;
    G__15687.cljs$core$IFn$_invoke$arity$2 = G__15687__2;
    G__15687.cljs$core$IFn$_invoke$arity$3 = G__15687__3;
    G__15687.cljs$core$IFn$_invoke$arity$variadic = G__15687__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15687;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__15693__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__15694 = cljs.core.first(fs__$2).call(null, ret);
            var G__15695 = cljs.core.next(fs__$2);
            ret = G__15694;
            fs__$2 = G__15695;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__15693 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__15696__i = 0, G__15696__a = new Array(arguments.length - 0);
          while (G__15696__i < G__15696__a.length) {
            G__15696__a[G__15696__i] = arguments[G__15696__i + 0];
            ++G__15696__i;
          }
          args = new cljs.core.IndexedSeq(G__15696__a, 0);
        }
        return G__15693__delegate.call(this, args);
      };
      G__15693.cljs$lang$maxFixedArity = 0;
      G__15693.cljs$lang$applyTo = function(arglist__15697) {
        var args = cljs.core.seq(arglist__15697);
        return G__15693__delegate(args);
      };
      G__15693.cljs$core$IFn$_invoke$arity$variadic = G__15693__delegate;
      return G__15693;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq15651) {
  var G__15652 = cljs.core.first(seq15651);
  var seq15651__$1 = cljs.core.next(seq15651);
  var G__15653 = cljs.core.first(seq15651__$1);
  var seq15651__$2 = cljs.core.next(seq15651__$1);
  var G__15654 = cljs.core.first(seq15651__$2);
  var seq15651__$3 = cljs.core.next(seq15651__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__15652, G__15653, G__15654, seq15651__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var args15698 = [];
  var len__5593__auto___15706 = arguments.length;
  var i__5594__auto___15707 = 0;
  while (true) {
    if (i__5594__auto___15707 < len__5593__auto___15706) {
      args15698.push(arguments[i__5594__auto___15707]);
      var G__15708 = i__5594__auto___15707 + 1;
      i__5594__auto___15707 = G__15708;
      continue;
    } else {
    }
    break;
  }
  var G__15705 = args15698.length;
  switch(G__15705) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15698.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5612__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__15710 = null;
    var G__15710__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__15710__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__15710__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__15710__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__15710__4 = function() {
      var G__15711__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__15711 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15712__i = 0, G__15712__a = new Array(arguments.length - 3);
          while (G__15712__i < G__15712__a.length) {
            G__15712__a[G__15712__i] = arguments[G__15712__i + 3];
            ++G__15712__i;
          }
          args = new cljs.core.IndexedSeq(G__15712__a, 0);
        }
        return G__15711__delegate.call(this, x, y, z, args);
      };
      G__15711.cljs$lang$maxFixedArity = 3;
      G__15711.cljs$lang$applyTo = function(arglist__15713) {
        var x = cljs.core.first(arglist__15713);
        arglist__15713 = cljs.core.next(arglist__15713);
        var y = cljs.core.first(arglist__15713);
        arglist__15713 = cljs.core.next(arglist__15713);
        var z = cljs.core.first(arglist__15713);
        var args = cljs.core.rest(arglist__15713);
        return G__15711__delegate(x, y, z, args);
      };
      G__15711.cljs$core$IFn$_invoke$arity$variadic = G__15711__delegate;
      return G__15711;
    }();
    G__15710 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15710__0.call(this);
        case 1:
          return G__15710__1.call(this, x);
        case 2:
          return G__15710__2.call(this, x, y);
        case 3:
          return G__15710__3.call(this, x, y, z);
        default:
          var G__15714 = null;
          if (arguments.length > 3) {
            var G__15715__i = 0, G__15715__a = new Array(arguments.length - 3);
            while (G__15715__i < G__15715__a.length) {
              G__15715__a[G__15715__i] = arguments[G__15715__i + 3];
              ++G__15715__i;
            }
            G__15714 = new cljs.core.IndexedSeq(G__15715__a, 0);
          }
          return G__15710__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15714);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15710.cljs$lang$maxFixedArity = 3;
    G__15710.cljs$lang$applyTo = G__15710__4.cljs$lang$applyTo;
    G__15710.cljs$core$IFn$_invoke$arity$0 = G__15710__0;
    G__15710.cljs$core$IFn$_invoke$arity$1 = G__15710__1;
    G__15710.cljs$core$IFn$_invoke$arity$2 = G__15710__2;
    G__15710.cljs$core$IFn$_invoke$arity$3 = G__15710__3;
    G__15710.cljs$core$IFn$_invoke$arity$variadic = G__15710__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15710;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__15716 = null;
    var G__15716__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__15716__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__15716__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__15716__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__15716__4 = function() {
      var G__15717__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__15717 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15718__i = 0, G__15718__a = new Array(arguments.length - 3);
          while (G__15718__i < G__15718__a.length) {
            G__15718__a[G__15718__i] = arguments[G__15718__i + 3];
            ++G__15718__i;
          }
          args = new cljs.core.IndexedSeq(G__15718__a, 0);
        }
        return G__15717__delegate.call(this, x, y, z, args);
      };
      G__15717.cljs$lang$maxFixedArity = 3;
      G__15717.cljs$lang$applyTo = function(arglist__15719) {
        var x = cljs.core.first(arglist__15719);
        arglist__15719 = cljs.core.next(arglist__15719);
        var y = cljs.core.first(arglist__15719);
        arglist__15719 = cljs.core.next(arglist__15719);
        var z = cljs.core.first(arglist__15719);
        var args = cljs.core.rest(arglist__15719);
        return G__15717__delegate(x, y, z, args);
      };
      G__15717.cljs$core$IFn$_invoke$arity$variadic = G__15717__delegate;
      return G__15717;
    }();
    G__15716 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15716__0.call(this);
        case 1:
          return G__15716__1.call(this, x);
        case 2:
          return G__15716__2.call(this, x, y);
        case 3:
          return G__15716__3.call(this, x, y, z);
        default:
          var G__15720 = null;
          if (arguments.length > 3) {
            var G__15721__i = 0, G__15721__a = new Array(arguments.length - 3);
            while (G__15721__i < G__15721__a.length) {
              G__15721__a[G__15721__i] = arguments[G__15721__i + 3];
              ++G__15721__i;
            }
            G__15720 = new cljs.core.IndexedSeq(G__15721__a, 0);
          }
          return G__15716__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15720);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15716.cljs$lang$maxFixedArity = 3;
    G__15716.cljs$lang$applyTo = G__15716__4.cljs$lang$applyTo;
    G__15716.cljs$core$IFn$_invoke$arity$0 = G__15716__0;
    G__15716.cljs$core$IFn$_invoke$arity$1 = G__15716__1;
    G__15716.cljs$core$IFn$_invoke$arity$2 = G__15716__2;
    G__15716.cljs$core$IFn$_invoke$arity$3 = G__15716__3;
    G__15716.cljs$core$IFn$_invoke$arity$variadic = G__15716__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15716;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__15722 = null;
    var G__15722__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__15722__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__15722__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__15722__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__15722__4 = function() {
      var G__15723__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__15723 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15724__i = 0, G__15724__a = new Array(arguments.length - 3);
          while (G__15724__i < G__15724__a.length) {
            G__15724__a[G__15724__i] = arguments[G__15724__i + 3];
            ++G__15724__i;
          }
          args = new cljs.core.IndexedSeq(G__15724__a, 0);
        }
        return G__15723__delegate.call(this, x, y, z, args);
      };
      G__15723.cljs$lang$maxFixedArity = 3;
      G__15723.cljs$lang$applyTo = function(arglist__15725) {
        var x = cljs.core.first(arglist__15725);
        arglist__15725 = cljs.core.next(arglist__15725);
        var y = cljs.core.first(arglist__15725);
        arglist__15725 = cljs.core.next(arglist__15725);
        var z = cljs.core.first(arglist__15725);
        var args = cljs.core.rest(arglist__15725);
        return G__15723__delegate(x, y, z, args);
      };
      G__15723.cljs$core$IFn$_invoke$arity$variadic = G__15723__delegate;
      return G__15723;
    }();
    G__15722 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15722__0.call(this);
        case 1:
          return G__15722__1.call(this, x);
        case 2:
          return G__15722__2.call(this, x, y);
        case 3:
          return G__15722__3.call(this, x, y, z);
        default:
          var G__15726 = null;
          if (arguments.length > 3) {
            var G__15727__i = 0, G__15727__a = new Array(arguments.length - 3);
            while (G__15727__i < G__15727__a.length) {
              G__15727__a[G__15727__i] = arguments[G__15727__i + 3];
              ++G__15727__i;
            }
            G__15726 = new cljs.core.IndexedSeq(G__15727__a, 0);
          }
          return G__15722__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15726);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15722.cljs$lang$maxFixedArity = 3;
    G__15722.cljs$lang$applyTo = G__15722__4.cljs$lang$applyTo;
    G__15722.cljs$core$IFn$_invoke$arity$0 = G__15722__0;
    G__15722.cljs$core$IFn$_invoke$arity$1 = G__15722__1;
    G__15722.cljs$core$IFn$_invoke$arity$2 = G__15722__2;
    G__15722.cljs$core$IFn$_invoke$arity$3 = G__15722__3;
    G__15722.cljs$core$IFn$_invoke$arity$variadic = G__15722__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15722;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__15728__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__15728 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__15729__i = 0, G__15729__a = new Array(arguments.length - 0);
        while (G__15729__i < G__15729__a.length) {
          G__15729__a[G__15729__i] = arguments[G__15729__i + 0];
          ++G__15729__i;
        }
        args = new cljs.core.IndexedSeq(G__15729__a, 0);
      }
      return G__15728__delegate.call(this, args);
    };
    G__15728.cljs$lang$maxFixedArity = 0;
    G__15728.cljs$lang$applyTo = function(arglist__15730) {
      var args = cljs.core.seq(arglist__15730);
      return G__15728__delegate(args);
    };
    G__15728.cljs$core$IFn$_invoke$arity$variadic = G__15728__delegate;
    return G__15728;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq15699) {
  var G__15700 = cljs.core.first(seq15699);
  var seq15699__$1 = cljs.core.next(seq15699);
  var G__15701 = cljs.core.first(seq15699__$1);
  var seq15699__$2 = cljs.core.next(seq15699__$1);
  var G__15702 = cljs.core.first(seq15699__$2);
  var seq15699__$3 = cljs.core.next(seq15699__$2);
  var G__15703 = cljs.core.first(seq15699__$3);
  var seq15699__$4 = cljs.core.next(seq15699__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__15700, G__15701, G__15702, G__15703, seq15699__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var args15731 = [];
  var len__5593__auto___15750 = arguments.length;
  var i__5594__auto___15751 = 0;
  while (true) {
    if (i__5594__auto___15751 < len__5593__auto___15750) {
      args15731.push(arguments[i__5594__auto___15751]);
      var G__15752 = i__5594__auto___15751 + 1;
      i__5594__auto___15751 = G__15752;
      continue;
    } else {
    }
    break;
  }
  var G__15733 = args15731.length;
  switch(G__15733) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15731.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__15754 = null;
    var G__15754__1 = function(a) {
      var G__15734 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15734) : f.call(null, G__15734);
    };
    var G__15754__2 = function(a, b) {
      var G__15735 = a == null ? x : a;
      var G__15736 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15735, G__15736) : f.call(null, G__15735, G__15736);
    };
    var G__15754__3 = function(a, b, c) {
      var G__15737 = a == null ? x : a;
      var G__15738 = b;
      var G__15739 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15737, G__15738, G__15739) : f.call(null, G__15737, G__15738, G__15739);
    };
    var G__15754__4 = function() {
      var G__15755__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__15755 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__15756__i = 0, G__15756__a = new Array(arguments.length - 3);
          while (G__15756__i < G__15756__a.length) {
            G__15756__a[G__15756__i] = arguments[G__15756__i + 3];
            ++G__15756__i;
          }
          ds = new cljs.core.IndexedSeq(G__15756__a, 0);
        }
        return G__15755__delegate.call(this, a, b, c, ds);
      };
      G__15755.cljs$lang$maxFixedArity = 3;
      G__15755.cljs$lang$applyTo = function(arglist__15757) {
        var a = cljs.core.first(arglist__15757);
        arglist__15757 = cljs.core.next(arglist__15757);
        var b = cljs.core.first(arglist__15757);
        arglist__15757 = cljs.core.next(arglist__15757);
        var c = cljs.core.first(arglist__15757);
        var ds = cljs.core.rest(arglist__15757);
        return G__15755__delegate(a, b, c, ds);
      };
      G__15755.cljs$core$IFn$_invoke$arity$variadic = G__15755__delegate;
      return G__15755;
    }();
    G__15754 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__15754__1.call(this, a);
        case 2:
          return G__15754__2.call(this, a, b);
        case 3:
          return G__15754__3.call(this, a, b, c);
        default:
          var G__15758 = null;
          if (arguments.length > 3) {
            var G__15759__i = 0, G__15759__a = new Array(arguments.length - 3);
            while (G__15759__i < G__15759__a.length) {
              G__15759__a[G__15759__i] = arguments[G__15759__i + 3];
              ++G__15759__i;
            }
            G__15758 = new cljs.core.IndexedSeq(G__15759__a, 0);
          }
          return G__15754__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__15758);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15754.cljs$lang$maxFixedArity = 3;
    G__15754.cljs$lang$applyTo = G__15754__4.cljs$lang$applyTo;
    G__15754.cljs$core$IFn$_invoke$arity$1 = G__15754__1;
    G__15754.cljs$core$IFn$_invoke$arity$2 = G__15754__2;
    G__15754.cljs$core$IFn$_invoke$arity$3 = G__15754__3;
    G__15754.cljs$core$IFn$_invoke$arity$variadic = G__15754__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15754;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__15760 = null;
    var G__15760__2 = function(a, b) {
      var G__15740 = a == null ? x : a;
      var G__15741 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15740, G__15741) : f.call(null, G__15740, G__15741);
    };
    var G__15760__3 = function(a, b, c) {
      var G__15742 = a == null ? x : a;
      var G__15743 = b == null ? y : b;
      var G__15744 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15742, G__15743, G__15744) : f.call(null, G__15742, G__15743, G__15744);
    };
    var G__15760__4 = function() {
      var G__15761__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__15761 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__15762__i = 0, G__15762__a = new Array(arguments.length - 3);
          while (G__15762__i < G__15762__a.length) {
            G__15762__a[G__15762__i] = arguments[G__15762__i + 3];
            ++G__15762__i;
          }
          ds = new cljs.core.IndexedSeq(G__15762__a, 0);
        }
        return G__15761__delegate.call(this, a, b, c, ds);
      };
      G__15761.cljs$lang$maxFixedArity = 3;
      G__15761.cljs$lang$applyTo = function(arglist__15763) {
        var a = cljs.core.first(arglist__15763);
        arglist__15763 = cljs.core.next(arglist__15763);
        var b = cljs.core.first(arglist__15763);
        arglist__15763 = cljs.core.next(arglist__15763);
        var c = cljs.core.first(arglist__15763);
        var ds = cljs.core.rest(arglist__15763);
        return G__15761__delegate(a, b, c, ds);
      };
      G__15761.cljs$core$IFn$_invoke$arity$variadic = G__15761__delegate;
      return G__15761;
    }();
    G__15760 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__15760__2.call(this, a, b);
        case 3:
          return G__15760__3.call(this, a, b, c);
        default:
          var G__15764 = null;
          if (arguments.length > 3) {
            var G__15765__i = 0, G__15765__a = new Array(arguments.length - 3);
            while (G__15765__i < G__15765__a.length) {
              G__15765__a[G__15765__i] = arguments[G__15765__i + 3];
              ++G__15765__i;
            }
            G__15764 = new cljs.core.IndexedSeq(G__15765__a, 0);
          }
          return G__15760__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__15764);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15760.cljs$lang$maxFixedArity = 3;
    G__15760.cljs$lang$applyTo = G__15760__4.cljs$lang$applyTo;
    G__15760.cljs$core$IFn$_invoke$arity$2 = G__15760__2;
    G__15760.cljs$core$IFn$_invoke$arity$3 = G__15760__3;
    G__15760.cljs$core$IFn$_invoke$arity$variadic = G__15760__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15760;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__15766 = null;
    var G__15766__2 = function(a, b) {
      var G__15745 = a == null ? x : a;
      var G__15746 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15745, G__15746) : f.call(null, G__15745, G__15746);
    };
    var G__15766__3 = function(a, b, c) {
      var G__15747 = a == null ? x : a;
      var G__15748 = b == null ? y : b;
      var G__15749 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15747, G__15748, G__15749) : f.call(null, G__15747, G__15748, G__15749);
    };
    var G__15766__4 = function() {
      var G__15767__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__15767 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__15768__i = 0, G__15768__a = new Array(arguments.length - 3);
          while (G__15768__i < G__15768__a.length) {
            G__15768__a[G__15768__i] = arguments[G__15768__i + 3];
            ++G__15768__i;
          }
          ds = new cljs.core.IndexedSeq(G__15768__a, 0);
        }
        return G__15767__delegate.call(this, a, b, c, ds);
      };
      G__15767.cljs$lang$maxFixedArity = 3;
      G__15767.cljs$lang$applyTo = function(arglist__15769) {
        var a = cljs.core.first(arglist__15769);
        arglist__15769 = cljs.core.next(arglist__15769);
        var b = cljs.core.first(arglist__15769);
        arglist__15769 = cljs.core.next(arglist__15769);
        var c = cljs.core.first(arglist__15769);
        var ds = cljs.core.rest(arglist__15769);
        return G__15767__delegate(a, b, c, ds);
      };
      G__15767.cljs$core$IFn$_invoke$arity$variadic = G__15767__delegate;
      return G__15767;
    }();
    G__15766 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__15766__2.call(this, a, b);
        case 3:
          return G__15766__3.call(this, a, b, c);
        default:
          var G__15770 = null;
          if (arguments.length > 3) {
            var G__15771__i = 0, G__15771__a = new Array(arguments.length - 3);
            while (G__15771__i < G__15771__a.length) {
              G__15771__a[G__15771__i] = arguments[G__15771__i + 3];
              ++G__15771__i;
            }
            G__15770 = new cljs.core.IndexedSeq(G__15771__a, 0);
          }
          return G__15766__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__15770);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15766.cljs$lang$maxFixedArity = 3;
    G__15766.cljs$lang$applyTo = G__15766__4.cljs$lang$applyTo;
    G__15766.cljs$core$IFn$_invoke$arity$2 = G__15766__2;
    G__15766.cljs$core$IFn$_invoke$arity$3 = G__15766__3;
    G__15766.cljs$core$IFn$_invoke$arity$variadic = G__15766__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15766;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var args15772 = [];
  var len__5593__auto___15805 = arguments.length;
  var i__5594__auto___15806 = 0;
  while (true) {
    if (i__5594__auto___15806 < len__5593__auto___15805) {
      args15772.push(arguments[i__5594__auto___15806]);
      var G__15807 = i__5594__auto___15806 + 1;
      i__5594__auto___15806 = G__15807;
      continue;
    } else {
    }
    break;
  }
  var G__15774 = args15772.length;
  switch(G__15774) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15772.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__15809 = null;
        var G__15809__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15809__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15809__2 = function(result, input) {
          var G__15777 = result;
          var G__15778 = function() {
            var G__15779 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__15780 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15779, G__15780) : f.call(null, G__15779, G__15780);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15777, G__15778) : rf.call(null, G__15777, G__15778);
        };
        G__15809 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15809__0.call(this);
            case 1:
              return G__15809__1.call(this, result);
            case 2:
              return G__15809__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15809.cljs$core$IFn$_invoke$arity$0 = G__15809__0;
        G__15809.cljs$core$IFn$_invoke$arity$1 = G__15809__1;
        G__15809.cljs$core$IFn$_invoke$arity$2 = G__15809__2;
        return G__15809;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5438__auto___15810 = size;
          var i_15811 = 0;
          while (true) {
            if (i_15811 < n__5438__auto___15810) {
              cljs.core.chunk_append(b, function() {
                var G__15801 = idx + i_15811;
                var G__15802 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15811);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15801, G__15802) : f.call(null, G__15801, G__15802);
              }());
              var G__15812 = i_15811 + 1;
              i_15811 = G__15812;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__15803 = idx;
            var G__15804 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15803, G__15804) : f.call(null, G__15803, G__15804);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var args15813 = [];
  var len__5593__auto___15818 = arguments.length;
  var i__5594__auto___15819 = 0;
  while (true) {
    if (i__5594__auto___15819 < len__5593__auto___15818) {
      args15813.push(arguments[i__5594__auto___15819]);
      var G__15820 = i__5594__auto___15819 + 1;
      i__5594__auto___15819 = G__15820;
      continue;
    } else {
    }
    break;
  }
  var G__15815 = args15813.length;
  switch(G__15815) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15813.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__15822 = null;
      var G__15822__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15822__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__15822__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__15822 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__15822__0.call(this);
          case 1:
            return G__15822__1.call(this, result);
          case 2:
            return G__15822__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15822.cljs$core$IFn$_invoke$arity$0 = G__15822__0;
      G__15822.cljs$core$IFn$_invoke$arity$1 = G__15822__1;
      G__15822.cljs$core$IFn$_invoke$arity$2 = G__15822__2;
      return G__15822;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5438__auto___15823 = size;
        var i_15824 = 0;
        while (true) {
          if (i_15824 < n__5438__auto___15823) {
            var x_15825 = function() {
              var G__15816 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15824);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15816) : f.call(null, G__15816);
            }();
            if (x_15825 == null) {
            } else {
              cljs.core.chunk_append(b, x_15825);
            }
            var G__15826 = i_15824 + 1;
            i_15824 = G__15826;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__15817 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15817) : f.call(null, G__15817);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__15827 = cljs.core.seq(self__.watches);
  var chunk__15828 = null;
  var count__15829 = 0;
  var i__15830 = 0;
  while (true) {
    if (i__15830 < count__15829) {
      var vec__15831 = chunk__15828.cljs$core$IIndexed$_nth$arity$2(null, i__15830);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15831, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15831, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__15833 = seq__15827;
      var G__15834 = chunk__15828;
      var G__15835 = count__15829;
      var G__15836 = i__15830 + 1;
      seq__15827 = G__15833;
      chunk__15828 = G__15834;
      count__15829 = G__15835;
      i__15830 = G__15836;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__15827);
      if (temp__4425__auto__) {
        var seq__15827__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15827__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__15827__$1);
          var G__15837 = cljs.core.chunk_rest(seq__15827__$1);
          var G__15838 = c__5338__auto__;
          var G__15839 = cljs.core.count(c__5338__auto__);
          var G__15840 = 0;
          seq__15827 = G__15837;
          chunk__15828 = G__15838;
          count__15829 = G__15839;
          i__15830 = G__15840;
          continue;
        } else {
          var vec__15832 = cljs.core.first(seq__15827__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15832, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15832, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__15841 = cljs.core.next(seq__15827__$1);
          var G__15842 = null;
          var G__15843 = 0;
          var G__15844 = 0;
          seq__15827 = G__15841;
          chunk__15828 = G__15842;
          count__15829 = G__15843;
          i__15830 = G__15844;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var args15845 = [];
  var len__5593__auto___15853 = arguments.length;
  var i__5594__auto___15854 = 0;
  while (true) {
    if (i__5594__auto___15854 < len__5593__auto___15853) {
      args15845.push(arguments[i__5594__auto___15854]);
      var G__15855 = i__5594__auto___15854 + 1;
      i__5594__auto___15854 = G__15855;
      continue;
    } else {
    }
    break;
  }
  var G__15849 = args15845.length;
  switch(G__15849) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15845.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5612__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__15850) {
  var map__15851 = p__15850;
  var map__15851__$1 = (!(map__15851 == null) ? map__15851.cljs$lang$protocol_mask$partition0$ & 64 || map__15851.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__15851) : map__15851;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15851__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15851__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq15846) {
  var G__15847 = cljs.core.first(seq15846);
  var seq15846__$1 = cljs.core.next(seq15846);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__15847, seq15846__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__15858 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15858) : cljs.core.pr_str.call(null, G__15858);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var args15859 = [];
  var len__5593__auto___15873 = arguments.length;
  var i__5594__auto___15874 = 0;
  while (true) {
    if (i__5594__auto___15874 < len__5593__auto___15873) {
      args15859.push(arguments[i__5594__auto___15874]);
      var G__15875 = i__5594__auto___15874 + 1;
      i__5594__auto___15874 = G__15875;
      continue;
    } else {
    }
    break;
  }
  var G__15866 = args15859.length;
  switch(G__15866) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15859.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5612__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__15867 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15867) : f.call(null, G__15867);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__15868 = a.state;
      var G__15869 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15868, G__15869) : f.call(null, G__15868, G__15869);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__15870 = a.state;
      var G__15871 = x;
      var G__15872 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15870, G__15871, G__15872) : f.call(null, G__15870, G__15871, G__15872);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq15860) {
  var G__15861 = cljs.core.first(seq15860);
  var seq15860__$1 = cljs.core.next(seq15860);
  var G__15862 = cljs.core.first(seq15860__$1);
  var seq15860__$2 = cljs.core.next(seq15860__$1);
  var G__15863 = cljs.core.first(seq15860__$2);
  var seq15860__$3 = cljs.core.next(seq15860__$2);
  var G__15864 = cljs.core.first(seq15860__$3);
  var seq15860__$4 = cljs.core.next(seq15860__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15861, G__15862, G__15863, G__15864, seq15860__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var args15877 = [];
  var len__5593__auto___15908 = arguments.length;
  var i__5594__auto___15909 = 0;
  while (true) {
    if (i__5594__auto___15909 < len__5593__auto___15908) {
      args15877.push(arguments[i__5594__auto___15909]);
      var G__15910 = i__5594__auto___15909 + 1;
      i__5594__auto___15909 = G__15910;
      continue;
    } else {
    }
    break;
  }
  var G__15879 = args15877.length;
  switch(G__15879) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15877.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__15912 = null;
        var G__15912__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15912__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15912__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__15912 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15912__0.call(this);
            case 1:
              return G__15912__1.call(this, result);
            case 2:
              return G__15912__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15912.cljs$core$IFn$_invoke$arity$0 = G__15912__0;
        G__15912.cljs$core$IFn$_invoke$arity$1 = G__15912__1;
        G__15912.cljs$core$IFn$_invoke$arity$2 = G__15912__2;
        return G__15912;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5438__auto___15913 = size;
          var i_15914 = 0;
          while (true) {
            if (i_15914 < n__5438__auto___15913) {
              var x_15915 = function() {
                var G__15904 = idx + i_15914;
                var G__15905 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15914);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15904, G__15905) : f.call(null, G__15904, G__15905);
              }();
              if (x_15915 == null) {
              } else {
                cljs.core.chunk_append(b, x_15915);
              }
              var G__15916 = i_15914 + 1;
              i_15914 = G__15916;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__15906 = idx;
            var G__15907 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15906, G__15907) : f.call(null, G__15906, G__15907);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var args15923 = [];
  var len__5593__auto___15930 = arguments.length;
  var i__5594__auto___15931 = 0;
  while (true) {
    if (i__5594__auto___15931 < len__5593__auto___15930) {
      args15923.push(arguments[i__5594__auto___15931]);
      var G__15932 = i__5594__auto___15931 + 1;
      i__5594__auto___15931 = G__15932;
      continue;
    } else {
    }
    break;
  }
  var G__15929 = args15923.length;
  switch(G__15929) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15923.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__15934__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4542__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4542__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4542__auto__;
          }
        }());
      };
      var G__15934 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15935__i = 0, G__15935__a = new Array(arguments.length - 3);
          while (G__15935__i < G__15935__a.length) {
            G__15935__a[G__15935__i] = arguments[G__15935__i + 3];
            ++G__15935__i;
          }
          args = new cljs.core.IndexedSeq(G__15935__a, 0);
        }
        return G__15934__delegate.call(this, x, y, z, args);
      };
      G__15934.cljs$lang$maxFixedArity = 3;
      G__15934.cljs$lang$applyTo = function(arglist__15936) {
        var x = cljs.core.first(arglist__15936);
        arglist__15936 = cljs.core.next(arglist__15936);
        var y = cljs.core.first(arglist__15936);
        arglist__15936 = cljs.core.next(arglist__15936);
        var z = cljs.core.first(arglist__15936);
        var args = cljs.core.rest(arglist__15936);
        return G__15934__delegate(x, y, z, args);
      };
      G__15934.cljs$core$IFn$_invoke$arity$variadic = G__15934__delegate;
      return G__15934;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__15937 = null;
          if (arguments.length > 3) {
            var G__15938__i = 0, G__15938__a = new Array(arguments.length - 3);
            while (G__15938__i < G__15938__a.length) {
              G__15938__a[G__15938__i] = arguments[G__15938__i + 3];
              ++G__15938__i;
            }
            G__15937 = new cljs.core.IndexedSeq(G__15938__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15937);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            var and__4542__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4542__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4542__auto____$2;
            }
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            var and__4542__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4542__auto____$2)) {
              var and__4542__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4542__auto____$3)) {
                var and__4542__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4542__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4542__auto____$4;
                }
              } else {
                return and__4542__auto____$3;
              }
            } else {
              return and__4542__auto____$2;
            }
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__15939__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4542__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4542__auto__)) {
            return cljs.core.every_QMARK_(function(and__4542__auto__) {
              return function(p1__15917_SHARP_) {
                var and__4542__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15917_SHARP_) : p1.call(null, p1__15917_SHARP_);
                if (cljs.core.truth_(and__4542__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15917_SHARP_) : p2.call(null, p1__15917_SHARP_);
                } else {
                  return and__4542__auto____$1;
                }
              };
            }(and__4542__auto__), args);
          } else {
            return and__4542__auto__;
          }
        }());
      };
      var G__15939 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15940__i = 0, G__15940__a = new Array(arguments.length - 3);
          while (G__15940__i < G__15940__a.length) {
            G__15940__a[G__15940__i] = arguments[G__15940__i + 3];
            ++G__15940__i;
          }
          args = new cljs.core.IndexedSeq(G__15940__a, 0);
        }
        return G__15939__delegate.call(this, x, y, z, args);
      };
      G__15939.cljs$lang$maxFixedArity = 3;
      G__15939.cljs$lang$applyTo = function(arglist__15941) {
        var x = cljs.core.first(arglist__15941);
        arglist__15941 = cljs.core.next(arglist__15941);
        var y = cljs.core.first(arglist__15941);
        arglist__15941 = cljs.core.next(arglist__15941);
        var z = cljs.core.first(arglist__15941);
        var args = cljs.core.rest(arglist__15941);
        return G__15939__delegate(x, y, z, args);
      };
      G__15939.cljs$core$IFn$_invoke$arity$variadic = G__15939__delegate;
      return G__15939;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__15942 = null;
          if (arguments.length > 3) {
            var G__15943__i = 0, G__15943__a = new Array(arguments.length - 3);
            while (G__15943__i < G__15943__a.length) {
              G__15943__a[G__15943__i] = arguments[G__15943__i + 3];
              ++G__15943__i;
            }
            G__15942 = new cljs.core.IndexedSeq(G__15943__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15942);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            var and__4542__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4542__auto____$2)) {
              var and__4542__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4542__auto____$3)) {
                var and__4542__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4542__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4542__auto____$4;
                }
              } else {
                return and__4542__auto____$3;
              }
            } else {
              return and__4542__auto____$2;
            }
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4542__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            var and__4542__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4542__auto____$2)) {
              var and__4542__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4542__auto____$3)) {
                var and__4542__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4542__auto____$4)) {
                  var and__4542__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4542__auto____$5)) {
                    var and__4542__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4542__auto____$6)) {
                      var and__4542__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4542__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4542__auto____$7;
                      }
                    } else {
                      return and__4542__auto____$6;
                    }
                  } else {
                    return and__4542__auto____$5;
                  }
                } else {
                  return and__4542__auto____$4;
                }
              } else {
                return and__4542__auto____$3;
              }
            } else {
              return and__4542__auto____$2;
            }
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__15944__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4542__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4542__auto__)) {
            return cljs.core.every_QMARK_(function(and__4542__auto__) {
              return function(p1__15918_SHARP_) {
                var and__4542__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15918_SHARP_) : p1.call(null, p1__15918_SHARP_);
                if (cljs.core.truth_(and__4542__auto____$1)) {
                  var and__4542__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15918_SHARP_) : p2.call(null, p1__15918_SHARP_);
                  if (cljs.core.truth_(and__4542__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__15918_SHARP_) : p3.call(null, p1__15918_SHARP_);
                  } else {
                    return and__4542__auto____$2;
                  }
                } else {
                  return and__4542__auto____$1;
                }
              };
            }(and__4542__auto__), args);
          } else {
            return and__4542__auto__;
          }
        }());
      };
      var G__15944 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15945__i = 0, G__15945__a = new Array(arguments.length - 3);
          while (G__15945__i < G__15945__a.length) {
            G__15945__a[G__15945__i] = arguments[G__15945__i + 3];
            ++G__15945__i;
          }
          args = new cljs.core.IndexedSeq(G__15945__a, 0);
        }
        return G__15944__delegate.call(this, x, y, z, args);
      };
      G__15944.cljs$lang$maxFixedArity = 3;
      G__15944.cljs$lang$applyTo = function(arglist__15946) {
        var x = cljs.core.first(arglist__15946);
        arglist__15946 = cljs.core.next(arglist__15946);
        var y = cljs.core.first(arglist__15946);
        arglist__15946 = cljs.core.next(arglist__15946);
        var z = cljs.core.first(arglist__15946);
        var args = cljs.core.rest(arglist__15946);
        return G__15944__delegate(x, y, z, args);
      };
      G__15944.cljs$core$IFn$_invoke$arity$variadic = G__15944__delegate;
      return G__15944;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__15947 = null;
          if (arguments.length > 3) {
            var G__15948__i = 0, G__15948__a = new Array(arguments.length - 3);
            while (G__15948__i < G__15948__a.length) {
              G__15948__a[G__15948__i] = arguments[G__15948__i + 3];
              ++G__15948__i;
            }
            G__15947 = new cljs.core.IndexedSeq(G__15948__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15947);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__15919_SHARP_) {
            return p1__15919_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15919_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15919_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__15920_SHARP_) {
            var and__4542__auto__ = p1__15920_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15920_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15920_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4542__auto__)) {
              return p1__15920_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15920_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15920_SHARP_.call(null, y);
            } else {
              return and__4542__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__15921_SHARP_) {
            var and__4542__auto__ = p1__15921_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15921_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15921_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4542__auto__)) {
              var and__4542__auto____$1 = p1__15921_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15921_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15921_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4542__auto____$1)) {
                return p1__15921_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15921_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__15921_SHARP_.call(null, z);
              } else {
                return and__4542__auto____$1;
              }
            } else {
              return and__4542__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__15949__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4542__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4542__auto__)) {
              return cljs.core.every_QMARK_(function(and__4542__auto__, ps__$1) {
                return function(p1__15922_SHARP_) {
                  return cljs.core.every_QMARK_(p1__15922_SHARP_, args);
                };
              }(and__4542__auto__, ps__$1), ps__$1);
            } else {
              return and__4542__auto__;
            }
          }());
        };
        var G__15949 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15950__i = 0, G__15950__a = new Array(arguments.length - 3);
            while (G__15950__i < G__15950__a.length) {
              G__15950__a[G__15950__i] = arguments[G__15950__i + 3];
              ++G__15950__i;
            }
            args = new cljs.core.IndexedSeq(G__15950__a, 0);
          }
          return G__15949__delegate.call(this, x, y, z, args);
        };
        G__15949.cljs$lang$maxFixedArity = 3;
        G__15949.cljs$lang$applyTo = function(arglist__15951) {
          var x = cljs.core.first(arglist__15951);
          arglist__15951 = cljs.core.next(arglist__15951);
          var y = cljs.core.first(arglist__15951);
          arglist__15951 = cljs.core.next(arglist__15951);
          var z = cljs.core.first(arglist__15951);
          var args = cljs.core.rest(arglist__15951);
          return G__15949__delegate(x, y, z, args);
        };
        G__15949.cljs$core$IFn$_invoke$arity$variadic = G__15949__delegate;
        return G__15949;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__15952 = null;
            if (arguments.length > 3) {
              var G__15953__i = 0, G__15953__a = new Array(arguments.length - 3);
              while (G__15953__i < G__15953__a.length) {
                G__15953__a[G__15953__i] = arguments[G__15953__i + 3];
                ++G__15953__i;
              }
              G__15952 = new cljs.core.IndexedSeq(G__15953__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15952);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq15924) {
  var G__15925 = cljs.core.first(seq15924);
  var seq15924__$1 = cljs.core.next(seq15924);
  var G__15926 = cljs.core.first(seq15924__$1);
  var seq15924__$2 = cljs.core.next(seq15924__$1);
  var G__15927 = cljs.core.first(seq15924__$2);
  var seq15924__$3 = cljs.core.next(seq15924__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__15925, G__15926, G__15927, seq15924__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var args15960 = [];
  var len__5593__auto___15967 = arguments.length;
  var i__5594__auto___15968 = 0;
  while (true) {
    if (i__5594__auto___15968 < len__5593__auto___15967) {
      args15960.push(arguments[i__5594__auto___15968]);
      var G__15969 = i__5594__auto___15968 + 1;
      i__5594__auto___15968 = G__15969;
      continue;
    } else {
    }
    break;
  }
  var G__15966 = args15960.length;
  switch(G__15966) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15960.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4554__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4554__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__15971__delegate = function(x, y, z, args) {
        var or__4554__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__15971 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15972__i = 0, G__15972__a = new Array(arguments.length - 3);
          while (G__15972__i < G__15972__a.length) {
            G__15972__a[G__15972__i] = arguments[G__15972__i + 3];
            ++G__15972__i;
          }
          args = new cljs.core.IndexedSeq(G__15972__a, 0);
        }
        return G__15971__delegate.call(this, x, y, z, args);
      };
      G__15971.cljs$lang$maxFixedArity = 3;
      G__15971.cljs$lang$applyTo = function(arglist__15973) {
        var x = cljs.core.first(arglist__15973);
        arglist__15973 = cljs.core.next(arglist__15973);
        var y = cljs.core.first(arglist__15973);
        arglist__15973 = cljs.core.next(arglist__15973);
        var z = cljs.core.first(arglist__15973);
        var args = cljs.core.rest(arglist__15973);
        return G__15971__delegate(x, y, z, args);
      };
      G__15971.cljs$core$IFn$_invoke$arity$variadic = G__15971__delegate;
      return G__15971;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__15974 = null;
          if (arguments.length > 3) {
            var G__15975__i = 0, G__15975__a = new Array(arguments.length - 3);
            while (G__15975__i < G__15975__a.length) {
              G__15975__a[G__15975__i] = arguments[G__15975__i + 3];
              ++G__15975__i;
            }
            G__15974 = new cljs.core.IndexedSeq(G__15975__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15974);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            var or__4554__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4554__auto____$3)) {
              return or__4554__auto____$3;
            } else {
              var or__4554__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4554__auto____$4)) {
                return or__4554__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__15976__delegate = function(x, y, z, args) {
        var or__4554__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return cljs.core.some(function(or__4554__auto__) {
            return function(p1__15954_SHARP_) {
              var or__4554__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15954_SHARP_) : p1.call(null, p1__15954_SHARP_);
              if (cljs.core.truth_(or__4554__auto____$1)) {
                return or__4554__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15954_SHARP_) : p2.call(null, p1__15954_SHARP_);
              }
            };
          }(or__4554__auto__), args);
        }
      };
      var G__15976 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15977__i = 0, G__15977__a = new Array(arguments.length - 3);
          while (G__15977__i < G__15977__a.length) {
            G__15977__a[G__15977__i] = arguments[G__15977__i + 3];
            ++G__15977__i;
          }
          args = new cljs.core.IndexedSeq(G__15977__a, 0);
        }
        return G__15976__delegate.call(this, x, y, z, args);
      };
      G__15976.cljs$lang$maxFixedArity = 3;
      G__15976.cljs$lang$applyTo = function(arglist__15978) {
        var x = cljs.core.first(arglist__15978);
        arglist__15978 = cljs.core.next(arglist__15978);
        var y = cljs.core.first(arglist__15978);
        arglist__15978 = cljs.core.next(arglist__15978);
        var z = cljs.core.first(arglist__15978);
        var args = cljs.core.rest(arglist__15978);
        return G__15976__delegate(x, y, z, args);
      };
      G__15976.cljs$core$IFn$_invoke$arity$variadic = G__15976__delegate;
      return G__15976;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__15979 = null;
          if (arguments.length > 3) {
            var G__15980__i = 0, G__15980__a = new Array(arguments.length - 3);
            while (G__15980__i < G__15980__a.length) {
              G__15980__a[G__15980__i] = arguments[G__15980__i + 3];
              ++G__15980__i;
            }
            G__15979 = new cljs.core.IndexedSeq(G__15980__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15979);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            var or__4554__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4554__auto____$3)) {
              return or__4554__auto____$3;
            } else {
              var or__4554__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4554__auto____$4)) {
                return or__4554__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4554__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            var or__4554__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4554__auto____$3)) {
              return or__4554__auto____$3;
            } else {
              var or__4554__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4554__auto____$4)) {
                return or__4554__auto____$4;
              } else {
                var or__4554__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4554__auto____$5)) {
                  return or__4554__auto____$5;
                } else {
                  var or__4554__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4554__auto____$6)) {
                    return or__4554__auto____$6;
                  } else {
                    var or__4554__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4554__auto____$7)) {
                      return or__4554__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__15981__delegate = function(x, y, z, args) {
        var or__4554__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return cljs.core.some(function(or__4554__auto__) {
            return function(p1__15955_SHARP_) {
              var or__4554__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__15955_SHARP_) : p1.call(null, p1__15955_SHARP_);
              if (cljs.core.truth_(or__4554__auto____$1)) {
                return or__4554__auto____$1;
              } else {
                var or__4554__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__15955_SHARP_) : p2.call(null, p1__15955_SHARP_);
                if (cljs.core.truth_(or__4554__auto____$2)) {
                  return or__4554__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__15955_SHARP_) : p3.call(null, p1__15955_SHARP_);
                }
              }
            };
          }(or__4554__auto__), args);
        }
      };
      var G__15981 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15982__i = 0, G__15982__a = new Array(arguments.length - 3);
          while (G__15982__i < G__15982__a.length) {
            G__15982__a[G__15982__i] = arguments[G__15982__i + 3];
            ++G__15982__i;
          }
          args = new cljs.core.IndexedSeq(G__15982__a, 0);
        }
        return G__15981__delegate.call(this, x, y, z, args);
      };
      G__15981.cljs$lang$maxFixedArity = 3;
      G__15981.cljs$lang$applyTo = function(arglist__15983) {
        var x = cljs.core.first(arglist__15983);
        arglist__15983 = cljs.core.next(arglist__15983);
        var y = cljs.core.first(arglist__15983);
        arglist__15983 = cljs.core.next(arglist__15983);
        var z = cljs.core.first(arglist__15983);
        var args = cljs.core.rest(arglist__15983);
        return G__15981__delegate(x, y, z, args);
      };
      G__15981.cljs$core$IFn$_invoke$arity$variadic = G__15981__delegate;
      return G__15981;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__15984 = null;
          if (arguments.length > 3) {
            var G__15985__i = 0, G__15985__a = new Array(arguments.length - 3);
            while (G__15985__i < G__15985__a.length) {
              G__15985__a[G__15985__i] = arguments[G__15985__i + 3];
              ++G__15985__i;
            }
            G__15984 = new cljs.core.IndexedSeq(G__15985__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15984);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__15956_SHARP_) {
            return p1__15956_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15956_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15956_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__15957_SHARP_) {
            var or__4554__auto__ = p1__15957_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15957_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15957_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              return p1__15957_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15957_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15957_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__15958_SHARP_) {
            var or__4554__auto__ = p1__15958_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15958_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__15958_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              var or__4554__auto____$1 = p1__15958_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15958_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__15958_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4554__auto____$1)) {
                return or__4554__auto____$1;
              } else {
                return p1__15958_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15958_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__15958_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__15986__delegate = function(x, y, z, args) {
          var or__4554__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4554__auto__)) {
            return or__4554__auto__;
          } else {
            return cljs.core.some(function(or__4554__auto__, ps__$1) {
              return function(p1__15959_SHARP_) {
                return cljs.core.some(p1__15959_SHARP_, args);
              };
            }(or__4554__auto__, ps__$1), ps__$1);
          }
        };
        var G__15986 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15987__i = 0, G__15987__a = new Array(arguments.length - 3);
            while (G__15987__i < G__15987__a.length) {
              G__15987__a[G__15987__i] = arguments[G__15987__i + 3];
              ++G__15987__i;
            }
            args = new cljs.core.IndexedSeq(G__15987__a, 0);
          }
          return G__15986__delegate.call(this, x, y, z, args);
        };
        G__15986.cljs$lang$maxFixedArity = 3;
        G__15986.cljs$lang$applyTo = function(arglist__15988) {
          var x = cljs.core.first(arglist__15988);
          arglist__15988 = cljs.core.next(arglist__15988);
          var y = cljs.core.first(arglist__15988);
          arglist__15988 = cljs.core.next(arglist__15988);
          var z = cljs.core.first(arglist__15988);
          var args = cljs.core.rest(arglist__15988);
          return G__15986__delegate(x, y, z, args);
        };
        G__15986.cljs$core$IFn$_invoke$arity$variadic = G__15986__delegate;
        return G__15986;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__15989 = null;
            if (arguments.length > 3) {
              var G__15990__i = 0, G__15990__a = new Array(arguments.length - 3);
              while (G__15990__i < G__15990__a.length) {
                G__15990__a[G__15990__i] = arguments[G__15990__i + 3];
                ++G__15990__i;
              }
              G__15989 = new cljs.core.IndexedSeq(G__15990__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15989);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq15961) {
  var G__15962 = cljs.core.first(seq15961);
  var seq15961__$1 = cljs.core.next(seq15961);
  var G__15963 = cljs.core.first(seq15961__$1);
  var seq15961__$2 = cljs.core.next(seq15961__$1);
  var G__15964 = cljs.core.first(seq15961__$2);
  var seq15961__$3 = cljs.core.next(seq15961__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__15962, G__15963, G__15964, seq15961__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var args15992 = [];
  var len__5593__auto___16012 = arguments.length;
  var i__5594__auto___16013 = 0;
  while (true) {
    if (i__5594__auto___16013 < len__5593__auto___16012) {
      args15992.push(arguments[i__5594__auto___16013]);
      var G__16014 = i__5594__auto___16013 + 1;
      i__5594__auto___16013 = G__16014;
      continue;
    } else {
    }
    break;
  }
  var G__15999 = args15992.length;
  switch(G__15999) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args15992.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5612__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__16016 = null;
      var G__16016__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__16016__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__16016__2 = function(result, input) {
        var G__16000 = result;
        var G__16001 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16000, G__16001) : rf.call(null, G__16000, G__16001);
      };
      var G__16016__3 = function() {
        var G__16017__delegate = function(result, input, inputs) {
          var G__16002 = result;
          var G__16003 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16002, G__16003) : rf.call(null, G__16002, G__16003);
        };
        var G__16017 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__16018__i = 0, G__16018__a = new Array(arguments.length - 2);
            while (G__16018__i < G__16018__a.length) {
              G__16018__a[G__16018__i] = arguments[G__16018__i + 2];
              ++G__16018__i;
            }
            inputs = new cljs.core.IndexedSeq(G__16018__a, 0);
          }
          return G__16017__delegate.call(this, result, input, inputs);
        };
        G__16017.cljs$lang$maxFixedArity = 2;
        G__16017.cljs$lang$applyTo = function(arglist__16019) {
          var result = cljs.core.first(arglist__16019);
          arglist__16019 = cljs.core.next(arglist__16019);
          var input = cljs.core.first(arglist__16019);
          var inputs = cljs.core.rest(arglist__16019);
          return G__16017__delegate(result, input, inputs);
        };
        G__16017.cljs$core$IFn$_invoke$arity$variadic = G__16017__delegate;
        return G__16017;
      }();
      G__16016 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__16016__0.call(this);
          case 1:
            return G__16016__1.call(this, result);
          case 2:
            return G__16016__2.call(this, result, input);
          default:
            var G__16020 = null;
            if (arguments.length > 2) {
              var G__16021__i = 0, G__16021__a = new Array(arguments.length - 2);
              while (G__16021__i < G__16021__a.length) {
                G__16021__a[G__16021__i] = arguments[G__16021__i + 2];
                ++G__16021__i;
              }
              G__16020 = new cljs.core.IndexedSeq(G__16021__a, 0);
            }
            return G__16016__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__16020);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16016.cljs$lang$maxFixedArity = 2;
      G__16016.cljs$lang$applyTo = G__16016__3.cljs$lang$applyTo;
      G__16016.cljs$core$IFn$_invoke$arity$0 = G__16016__0;
      G__16016.cljs$core$IFn$_invoke$arity$1 = G__16016__1;
      G__16016.cljs$core$IFn$_invoke$arity$2 = G__16016__2;
      G__16016.cljs$core$IFn$_invoke$arity$variadic = G__16016__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__16016;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5438__auto___16022 = size;
        var i_16023 = 0;
        while (true) {
          if (i_16023 < n__5438__auto___16022) {
            cljs.core.chunk_append(b, function() {
              var G__16004 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_16023);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16004) : f.call(null, G__16004);
            }());
            var G__16024 = i_16023 + 1;
            i_16023 = G__16024;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__16005 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16005) : f.call(null, G__16005);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__16006 = cljs.core.first(s1);
        var G__16007 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16006, G__16007) : f.call(null, G__16006, G__16007);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__16008 = cljs.core.first(s1);
        var G__16009 = cljs.core.first(s2);
        var G__16010 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16008, G__16009, G__16010) : f.call(null, G__16008, G__16009, G__16010);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__15991_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__15991_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq15993) {
  var G__15994 = cljs.core.first(seq15993);
  var seq15993__$1 = cljs.core.next(seq15993);
  var G__15995 = cljs.core.first(seq15993__$1);
  var seq15993__$2 = cljs.core.next(seq15993__$1);
  var G__15996 = cljs.core.first(seq15993__$2);
  var seq15993__$3 = cljs.core.next(seq15993__$2);
  var G__15997 = cljs.core.first(seq15993__$3);
  var seq15993__$4 = cljs.core.next(seq15993__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__15994, G__15995, G__15996, G__15997, seq15993__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var args16025 = [];
  var len__5593__auto___16030 = arguments.length;
  var i__5594__auto___16031 = 0;
  while (true) {
    if (i__5594__auto___16031 < len__5593__auto___16030) {
      args16025.push(arguments[i__5594__auto___16031]);
      var G__16032 = i__5594__auto___16031 + 1;
      i__5594__auto___16031 = G__16032;
      continue;
    } else {
    }
    break;
  }
  var G__16027 = args16025.length;
  switch(G__16027) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16025.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__16028 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__16028) : cljs.core.pr_str.call(null, G__16028);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__16034 = null;
        var G__16034__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16034__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__16034__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__16034 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16034__0.call(this);
            case 1:
              return G__16034__1.call(this, result);
            case 2:
              return G__16034__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16034.cljs$core$IFn$_invoke$arity$0 = G__16034__0;
        G__16034.cljs$core$IFn$_invoke$arity$1 = G__16034__1;
        G__16034.cljs$core$IFn$_invoke$arity$2 = G__16034__2;
        return G__16034;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__16029 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__16029) : cljs.core.pr_str.call(null, G__16029);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var args16035 = [];
  var len__5593__auto___16040 = arguments.length;
  var i__5594__auto___16041 = 0;
  while (true) {
    if (i__5594__auto___16041 < len__5593__auto___16040) {
      args16035.push(arguments[i__5594__auto___16041]);
      var G__16042 = i__5594__auto___16041 + 1;
      i__5594__auto___16041 = G__16042;
      continue;
    } else {
    }
    break;
  }
  var G__16037 = args16035.length;
  switch(G__16037) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16035.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__16038 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__16038) : cljs.core.pr_str.call(null, G__16038);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__16044 = null;
        var G__16044__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16044__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__16044__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__16044 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16044__0.call(this);
            case 1:
              return G__16044__1.call(this, result);
            case 2:
              return G__16044__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16044.cljs$core$IFn$_invoke$arity$0 = G__16044__0;
        G__16044.cljs$core$IFn$_invoke$arity$1 = G__16044__1;
        G__16044.cljs$core$IFn$_invoke$arity$2 = G__16044__2;
        return G__16044;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__16039 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__16039) : cljs.core.pr_str.call(null, G__16039);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__16045 = n__$1 - 1;
        var G__16046 = cljs.core.rest(s);
        n__$1 = G__16045;
        coll__$1 = G__16046;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var args16047 = [];
  var len__5593__auto___16050 = arguments.length;
  var i__5594__auto___16051 = 0;
  while (true) {
    if (i__5594__auto___16051 < len__5593__auto___16050) {
      args16047.push(arguments[i__5594__auto___16051]);
      var G__16052 = i__5594__auto___16051 + 1;
      i__5594__auto___16051 = G__16052;
      continue;
    } else {
    }
    break;
  }
  var G__16049 = args16047.length;
  switch(G__16049) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16047.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__16054 = cljs.core.next(s);
      var G__16055 = cljs.core.next(lead);
      s = G__16054;
      lead = G__16055;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var args16056 = [];
  var len__5593__auto___16061 = arguments.length;
  var i__5594__auto___16062 = 0;
  while (true) {
    if (i__5594__auto___16062 < len__5593__auto___16061) {
      args16056.push(arguments[i__5594__auto___16062]);
      var G__16063 = i__5594__auto___16062 + 1;
      i__5594__auto___16062 = G__16063;
      continue;
    } else {
    }
    break;
  }
  var G__16058 = args16056.length;
  switch(G__16058) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16056.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__16065 = null;
        var G__16065__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16065__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__16065__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4542__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4542__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4542__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__16065 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16065__0.call(this);
            case 1:
              return G__16065__1.call(this, result);
            case 2:
              return G__16065__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16065.cljs$core$IFn$_invoke$arity$0 = G__16065__0;
        G__16065.cljs$core$IFn$_invoke$arity$1 = G__16065__1;
        G__16065.cljs$core$IFn$_invoke$arity$2 = G__16065__2;
        return G__16065;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = s;
        if (and__4542__auto__) {
          var G__16060 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__16060) : pred__$1.call(null, G__16060);
        } else {
          return and__4542__auto__;
        }
      }())) {
        var G__16066 = pred__$1;
        var G__16067 = cljs.core.rest(s);
        pred__$1 = G__16066;
        coll__$1 = G__16067;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var args16068 = [];
  var len__5593__auto___16071 = arguments.length;
  var i__5594__auto___16072 = 0;
  while (true) {
    if (i__5594__auto___16072 < len__5593__auto___16071) {
      args16068.push(arguments[i__5594__auto___16072]);
      var G__16073 = i__5594__auto___16072 + 1;
      i__5594__auto___16072 = G__16073;
      continue;
    } else {
    }
    break;
  }
  var G__16070 = args16068.length;
  switch(G__16070) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16068.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var args16075 = [];
  var len__5593__auto___16078 = arguments.length;
  var i__5594__auto___16079 = 0;
  while (true) {
    if (i__5594__auto___16079 < len__5593__auto___16078) {
      args16075.push(arguments[i__5594__auto___16079]);
      var G__16080 = i__5594__auto___16079 + 1;
      i__5594__auto___16079 = G__16080;
      continue;
    } else {
    }
    break;
  }
  var G__16077 = args16075.length;
  switch(G__16077) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16075.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var args16084 = [];
  var len__5593__auto___16090 = arguments.length;
  var i__5594__auto___16091 = 0;
  while (true) {
    if (i__5594__auto___16091 < len__5593__auto___16090) {
      args16084.push(arguments[i__5594__auto___16091]);
      var G__16092 = i__5594__auto___16091 + 1;
      i__5594__auto___16091 = G__16092;
      continue;
    } else {
    }
    break;
  }
  var G__16089 = args16084.length;
  switch(G__16089) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args16084.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq16085) {
  var G__16086 = cljs.core.first(seq16085);
  var seq16085__$1 = cljs.core.next(seq16085);
  var G__16087 = cljs.core.first(seq16085__$1);
  var seq16085__$2 = cljs.core.next(seq16085__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__16086, G__16087, seq16085__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var args16094 = [];
  var len__5593__auto___16097 = arguments.length;
  var i__5594__auto___16098 = 0;
  while (true) {
    if (i__5594__auto___16098 < len__5593__auto___16097) {
      args16094.push(arguments[i__5594__auto___16098]);
      var G__16099 = i__5594__auto___16098 + 1;
      i__5594__auto___16098 = G__16099;
      continue;
    } else {
    }
    break;
  }
  var G__16096 = args16094.length;
  switch(G__16096) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16094.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__16101 = null;
        var G__16101__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16101__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__16101__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__16101 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16101__0.call(this);
            case 1:
              return G__16101__1.call(this, result);
            case 2:
              return G__16101__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16101.cljs$core$IFn$_invoke$arity$0 = G__16101__0;
        G__16101.cljs$core$IFn$_invoke$arity$1 = G__16101__1;
        G__16101.cljs$core$IFn$_invoke$arity$2 = G__16101__2;
        return G__16101;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var args16110 = [];
  var len__5593__auto___16115 = arguments.length;
  var i__5594__auto___16116 = 0;
  while (true) {
    if (i__5594__auto___16116 < len__5593__auto___16115) {
      args16110.push(arguments[i__5594__auto___16116]);
      var G__16117 = i__5594__auto___16116 + 1;
      i__5594__auto___16116 = G__16117;
      continue;
    } else {
    }
    break;
  }
  var G__16114 = args16110.length;
  switch(G__16114) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args16110.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5612__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq16111) {
  var G__16112 = cljs.core.first(seq16111);
  var seq16111__$1 = cljs.core.next(seq16111);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__16112, seq16111__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var args16119 = [];
  var len__5593__auto___16123 = arguments.length;
  var i__5594__auto___16124 = 0;
  while (true) {
    if (i__5594__auto___16124 < len__5593__auto___16123) {
      args16119.push(arguments[i__5594__auto___16124]);
      var G__16125 = i__5594__auto___16124 + 1;
      i__5594__auto___16124 = G__16125;
      continue;
    } else {
    }
    break;
  }
  var G__16121 = args16119.length;
  switch(G__16121) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16119.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__16127 = null;
      var G__16127__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__16127__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__16127__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__16127 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__16127__0.call(this);
          case 1:
            return G__16127__1.call(this, result);
          case 2:
            return G__16127__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16127.cljs$core$IFn$_invoke$arity$0 = G__16127__0;
      G__16127.cljs$core$IFn$_invoke$arity$1 = G__16127__1;
      G__16127.cljs$core$IFn$_invoke$arity$2 = G__16127__2;
      return G__16127;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5438__auto___16128 = size;
        var i_16129 = 0;
        while (true) {
          if (i_16129 < n__5438__auto___16128) {
            if (cljs.core.truth_(function() {
              var G__16122 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_16129);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16122) : pred.call(null, G__16122);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_16129));
            } else {
            }
            var G__16130 = i_16129 + 1;
            i_16129 = G__16130;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var args16131 = [];
  var len__5593__auto___16134 = arguments.length;
  var i__5594__auto___16135 = 0;
  while (true) {
    if (i__5594__auto___16135 < len__5593__auto___16134) {
      args16131.push(arguments[i__5594__auto___16135]);
      var G__16136 = i__5594__auto___16135 + 1;
      i__5594__auto___16135 = G__16136;
      continue;
    } else {
    }
    break;
  }
  var G__16133 = args16131.length;
  switch(G__16133) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16131.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__16138_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__16138_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var args16139 = [];
  var len__5593__auto___16144 = arguments.length;
  var i__5594__auto___16145 = 0;
  while (true) {
    if (i__5594__auto___16145 < len__5593__auto___16144) {
      args16139.push(arguments[i__5594__auto___16145]);
      var G__16146 = i__5594__auto___16145 + 1;
      i__5594__auto___16145 = G__16146;
      continue;
    } else {
    }
    break;
  }
  var G__16141 = args16139.length;
  switch(G__16141) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16139.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var args16148 = [];
  var len__5593__auto___16156 = arguments.length;
  var i__5594__auto___16157 = 0;
  while (true) {
    if (i__5594__auto___16157 < len__5593__auto___16156) {
      args16148.push(arguments[i__5594__auto___16157]);
      var G__16158 = i__5594__auto___16157 + 1;
      i__5594__auto___16157 = G__16158;
      continue;
    } else {
    }
    break;
  }
  var G__16155 = args16148.length;
  switch(G__16155) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args16148.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5612__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq16149) {
  var G__16150 = cljs.core.first(seq16149);
  var seq16149__$1 = cljs.core.next(seq16149);
  var G__16151 = cljs.core.first(seq16149__$1);
  var seq16149__$2 = cljs.core.next(seq16149__$1);
  var G__16152 = cljs.core.first(seq16149__$2);
  var seq16149__$3 = cljs.core.next(seq16149__$2);
  var G__16153 = cljs.core.first(seq16149__$3);
  var seq16149__$4 = cljs.core.next(seq16149__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__16150, G__16151, G__16152, G__16153, seq16149__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var args16160 = [];
  var len__5593__auto___16163 = arguments.length;
  var i__5594__auto___16164 = 0;
  while (true) {
    if (i__5594__auto___16164 < len__5593__auto___16163) {
      args16160.push(arguments[i__5594__auto___16164]);
      var G__16165 = i__5594__auto___16164 + 1;
      i__5594__auto___16164 = G__16165;
      continue;
    } else {
    }
    break;
  }
  var G__16162 = args16160.length;
  switch(G__16162) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16160.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var args16167 = [];
  var len__5593__auto___16171 = arguments.length;
  var i__5594__auto___16172 = 0;
  while (true) {
    if (i__5594__auto___16172 < len__5593__auto___16171) {
      args16167.push(arguments[i__5594__auto___16172]);
      var G__16173 = i__5594__auto___16172 + 1;
      i__5594__auto___16172 = G__16173;
      continue;
    } else {
    }
    break;
  }
  var G__16169 = args16167.length;
  switch(G__16169) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16167.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__16175 = sentinel;
          var G__16176 = m__$2;
          var G__16177 = cljs.core.next(ks__$1);
          sentinel = G__16175;
          m__$1 = G__16176;
          ks__$1 = G__16177;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__16178, v) {
  var vec__16183 = p__16178;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16183, 0, null);
  var ks = cljs.core.nthnext(vec__16183, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var args16184 = [];
  var len__5593__auto___16214 = arguments.length;
  var i__5594__auto___16215 = 0;
  while (true) {
    if (i__5594__auto___16215 < len__5593__auto___16214) {
      args16184.push(arguments[i__5594__auto___16215]);
      var G__16216 = i__5594__auto___16215 + 1;
      i__5594__auto___16215 = G__16216;
      continue;
    } else {
    }
    break;
  }
  var G__16193 = args16184.length;
  switch(G__16193) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args16184.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5612__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__16194, f) {
  var vec__16195 = p__16194;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16195, 0, null);
  var ks = cljs.core.nthnext(vec__16195, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16196 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16196) : f.call(null, G__16196);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__16197, f, a) {
  var vec__16198 = p__16197;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16198, 0, null);
  var ks = cljs.core.nthnext(vec__16198, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16199 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__16200 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16199, G__16200) : f.call(null, G__16199, G__16200);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__16201, f, a, b) {
  var vec__16202 = p__16201;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16202, 0, null);
  var ks = cljs.core.nthnext(vec__16202, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16203 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__16204 = a;
      var G__16205 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16203, G__16204, G__16205) : f.call(null, G__16203, G__16204, G__16205);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__16206, f, a, b, c) {
  var vec__16207 = p__16206;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16207, 0, null);
  var ks = cljs.core.nthnext(vec__16207, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16208 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__16209 = a;
      var G__16210 = b;
      var G__16211 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16208, G__16209, G__16210, G__16211) : f.call(null, G__16208, G__16209, G__16210, G__16211);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__16212, f, a, b, c, args) {
  var vec__16213 = p__16212;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16213, 0, null);
  var ks = cljs.core.nthnext(vec__16213, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq16185) {
  var G__16186 = cljs.core.first(seq16185);
  var seq16185__$1 = cljs.core.next(seq16185);
  var G__16187 = cljs.core.first(seq16185__$1);
  var seq16185__$2 = cljs.core.next(seq16185__$1);
  var G__16188 = cljs.core.first(seq16185__$2);
  var seq16185__$3 = cljs.core.next(seq16185__$2);
  var G__16189 = cljs.core.first(seq16185__$3);
  var seq16185__$4 = cljs.core.next(seq16185__$3);
  var G__16190 = cljs.core.first(seq16185__$4);
  var seq16185__$5 = cljs.core.next(seq16185__$4);
  var G__16191 = cljs.core.first(seq16185__$5);
  var seq16185__$6 = cljs.core.next(seq16185__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__16186, G__16187, G__16188, G__16189, G__16190, G__16191, seq16185__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var args16218 = [];
  var len__5593__auto___16238 = arguments.length;
  var i__5594__auto___16239 = 0;
  while (true) {
    if (i__5594__auto___16239 < len__5593__auto___16238) {
      args16218.push(arguments[i__5594__auto___16239]);
      var G__16240 = i__5594__auto___16239 + 1;
      i__5594__auto___16239 = G__16240;
      continue;
    } else {
    }
    break;
  }
  var G__16227 = args16218.length;
  switch(G__16227) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args16218.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5612__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__16228 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16228) : f.call(null, G__16228);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__16229 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__16230 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16229, G__16230) : f.call(null, G__16229, G__16230);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__16231 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__16232 = x;
    var G__16233 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16231, G__16232, G__16233) : f.call(null, G__16231, G__16232, G__16233);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__16234 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__16235 = x;
    var G__16236 = y;
    var G__16237 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16234, G__16235, G__16236, G__16237) : f.call(null, G__16234, G__16235, G__16236, G__16237);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq16219) {
  var G__16220 = cljs.core.first(seq16219);
  var seq16219__$1 = cljs.core.next(seq16219);
  var G__16221 = cljs.core.first(seq16219__$1);
  var seq16219__$2 = cljs.core.next(seq16219__$1);
  var G__16222 = cljs.core.first(seq16219__$2);
  var seq16219__$3 = cljs.core.next(seq16219__$2);
  var G__16223 = cljs.core.first(seq16219__$3);
  var seq16219__$4 = cljs.core.next(seq16219__$3);
  var G__16224 = cljs.core.first(seq16219__$4);
  var seq16219__$5 = cljs.core.next(seq16219__$4);
  var G__16225 = cljs.core.first(seq16219__$5);
  var seq16219__$6 = cljs.core.next(seq16219__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__16220, G__16221, G__16222, G__16223, G__16224, G__16225, seq16219__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__16242 = ll - 5;
      var G__16243 = r;
      ll = G__16242;
      ret = G__16243;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__16248 = cljs.core.pv_aget(node, 0);
      var G__16249 = level - 5;
      node = G__16248;
      level = G__16249;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__16250 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__16251 = level - 5;
        node = G__16250;
        level = G__16251;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__16261 = init__$2;
              var G__16262 = j + i;
              var G__16263 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16261, G__16262, G__16263) : f.call(null, G__16261, G__16262, G__16263);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__16270 = j + 1;
              var G__16271 = init__$3;
              j = G__16270;
              init__$2 = G__16271;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__16272 = i + len;
        var G__16273 = init__$2;
        i = G__16272;
        init__$1 = G__16273;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__16264 = init__$2;
              var G__16265 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16264, G__16265) : f.call(null, G__16264, G__16265);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__16274 = j + 1;
              var G__16275 = init__$3;
              j = G__16274;
              init__$2 = G__16275;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__16276 = i + len;
        var G__16277 = init__$2;
        i = G__16276;
        init__$1 = G__16277;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__16266 = coll__$1;
      var G__16267 = cljs.core.first_array_for_longvec(coll__$1);
      var G__16268 = 0;
      var G__16269 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16266, G__16267, G__16268, G__16269) : cljs.core.chunked_seq.call(null, G__16266, G__16267, G__16268, G__16269);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5438__auto___16278 = len;
    var i_16279 = 0;
    while (true) {
      if (i_16279 < n__5438__auto___16278) {
        new_tail[i_16279] = self__.tail[i_16279];
        var G__16280 = i_16279 + 1;
        i_16279 = G__16280;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__16281 = null;
  var G__16281__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__16281__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__16281 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16281__2.call(this, self__, k);
      case 3:
        return G__16281__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16281.cljs$core$IFn$_invoke$arity$2 = G__16281__2;
  G__16281.cljs$core$IFn$_invoke$arity$3 = G__16281__3;
  return G__16281;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args16260) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16260)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__16282 = i + 1;
        var G__16283 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__16282;
        out = G__16283;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var args__5600__auto__ = [];
  var len__5593__auto___16285 = arguments.length;
  var i__5594__auto___16286 = 0;
  while (true) {
    if (i__5594__auto___16286 < len__5593__auto___16285) {
      args__5600__auto__.push(arguments[i__5594__auto___16286]);
      var G__16287 = i__5594__auto___16286 + 1;
      i__5594__auto___16286 = G__16287;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq16284) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16284));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__16288 = self__.vec;
      var G__16289 = self__.node;
      var G__16290 = self__.i;
      var G__16291 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16288, G__16289, G__16290, G__16291) : cljs.core.chunked_seq.call(null, G__16288, G__16289, G__16290, G__16291);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16292 = self__.vec;
    var G__16293 = self__.i + self__.off;
    var G__16294 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16292, G__16293, G__16294) : cljs.core.subvec.call(null, G__16292, G__16293, G__16294);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__16295 = self__.vec;
    var G__16296 = self__.i + self__.off;
    var G__16297 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16295, G__16296, G__16297) : cljs.core.subvec.call(null, G__16295, G__16296, G__16297);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__16298 = self__.vec;
      var G__16299 = self__.node;
      var G__16300 = self__.i;
      var G__16301 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16298, G__16299, G__16300, G__16301) : cljs.core.chunked_seq.call(null, G__16298, G__16299, G__16300, G__16301);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__16302 = self__.vec;
    var G__16303 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__16304 = end;
    var G__16305 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16302, G__16303, G__16304, G__16305) : cljs.core.chunked_seq.call(null, G__16302, G__16303, G__16304, G__16305);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__16306 = self__.vec;
    var G__16307 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__16308 = end;
    var G__16309 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16306, G__16307, G__16308, G__16309) : cljs.core.chunked_seq.call(null, G__16306, G__16307, G__16308, G__16309);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var args16310 = [];
  var len__5593__auto___16313 = arguments.length;
  var i__5594__auto___16314 = 0;
  while (true) {
    if (i__5594__auto___16314 < len__5593__auto___16313) {
      args16310.push(arguments[i__5594__auto___16314]);
      var G__16315 = i__5594__auto___16314 + 1;
      i__5594__auto___16314 = G__16315;
      continue;
    } else {
    }
    break;
  }
  var G__16312 = args16310.length;
  switch(G__16312) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16310.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__16318 = init__$1;
        var G__16319 = j;
        var G__16320 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16318, G__16319, G__16320) : f.call(null, G__16318, G__16319, G__16320);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__16337 = i + 1;
        var G__16338 = j + 1;
        var G__16339 = init__$2;
        i = G__16337;
        j = G__16338;
        init__$1 = G__16339;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__16321 = self__.meta;
  var G__16322 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__16323 = self__.start;
  var G__16324 = function() {
    var x__4866__auto__ = self__.end;
    var y__4867__auto__ = v_pos + 1;
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }();
  var G__16325 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16321, G__16322, G__16323, G__16324, G__16325) : cljs.core.build_subvec.call(null, G__16321, G__16322, G__16323, G__16324, G__16325);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__16326 = self__.meta;
    var G__16327 = self__.v;
    var G__16328 = self__.start;
    var G__16329 = self__.end - 1;
    var G__16330 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16326, G__16327, G__16328, G__16329, G__16330) : cljs.core.build_subvec.call(null, G__16326, G__16327, G__16328, G__16329, G__16330);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__16332 = self__.meta;
  var G__16333 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__16334 = self__.start;
  var G__16335 = self__.end + 1;
  var G__16336 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16332, G__16333, G__16334, G__16335, G__16336) : cljs.core.build_subvec.call(null, G__16332, G__16333, G__16334, G__16335, G__16336);
};
cljs.core.Subvec.prototype.call = function() {
  var G__16340 = null;
  var G__16340__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__16340__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__16340 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16340__2.call(this, self__, k);
      case 3:
        return G__16340__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16340.cljs$core$IFn$_invoke$arity$2 = G__16340__2;
  G__16340.cljs$core$IFn$_invoke$arity$3 = G__16340__3;
  return G__16340;
}();
cljs.core.Subvec.prototype.apply = function(self__, args16317) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16317)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__16341 = meta;
      var G__16342 = v.v;
      var G__16343 = v.start + start;
      var G__16344 = v.start + end;
      var G__16345 = __hash;
      meta = G__16341;
      v = G__16342;
      start = G__16343;
      end = G__16344;
      __hash = G__16345;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var args16346 = [];
  var len__5593__auto___16349 = arguments.length;
  var i__5594__auto___16350 = 0;
  while (true) {
    if (i__5594__auto___16350 < len__5593__auto___16349) {
      args16346.push(arguments[i__5594__auto___16350]);
      var G__16351 = i__5594__auto___16350 + 1;
      i__5594__auto___16350 = G__16351;
      continue;
    } else {
    }
    break;
  }
  var G__16348 = args16346.length;
  switch(G__16348) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16346.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__16364 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__16365 = level - 5;
        node = G__16364;
        level = G__16365;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__16369 = null;
  var G__16369__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16369__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16369 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16369__2.call(this, self__, k);
      case 3:
        return G__16369__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16369.cljs$core$IFn$_invoke$arity$2 = G__16369__2;
  G__16369.cljs$core$IFn$_invoke$arity$3 = G__16369__3;
  return G__16369;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args16366) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16366)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4554__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    var and__4542__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__4542__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4542__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4554__auto__ = self__.front;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4554__auto__ = self__.rear;
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__16370 = i + incr;
        i = G__16370;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__16371 = i + 1;
      var G__16372 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__16371;
      out = G__16372;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_16377 = 0;
  while (true) {
    if (i_16377 < l) {
      var k_16378 = ks[i_16377];
      new_obj[k_16378] = obj[k_16378];
      var G__16379 = i_16377 + 1;
      i_16377 = G__16379;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__16382 = init__$1;
        var G__16383 = k;
        var G__16384 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16382, G__16383, G__16384) : f.call(null, G__16382, G__16383, G__16384);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__16385 = cljs.core.rest(keys__$1);
        var G__16386 = init__$2;
        keys__$1 = G__16385;
        init__$1 = G__16386;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__16380_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__16380_SHARP_, self__.strobj[p1__16380_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__16387 = null;
  var G__16387__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16387__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16387 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16387__2.call(this, self__, k);
      case 3:
        return G__16387__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16387.cljs$core$IFn$_invoke$arity$2 = G__16387__2;
  G__16387.cljs$core$IFn$_invoke$arity$3 = G__16387__3;
  return G__16387;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args16381) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16381)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4554__auto__ = self__.i < self__.base_count;
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__16390 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16390, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16390, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__16391 = i + 2;
        i = G__16391;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__16392 = i + 2;
        i = G__16392;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__16393 = i + 2;
        i = G__16393;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__16394 = i + 2;
        i = G__16394;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__16395 = i + 2;
        i = G__16395;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_16396 = 0;
  while (true) {
    if (i_16396 < l) {
      narr[i_16396] = arr[i_16396];
      var G__16397 = i_16396 + 1;
      i_16396 = G__16397;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16399 = cljs.core.seq(coll);
  var chunk__16400 = null;
  var count__16401 = 0;
  var i__16402 = 0;
  while (true) {
    if (i__16402 < count__16401) {
      var vec__16403 = chunk__16400.cljs$core$IIndexed$_nth$arity$2(null, i__16402);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16403, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16403, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__16412 = seq__16399;
      var G__16413 = chunk__16400;
      var G__16414 = count__16401;
      var G__16415 = i__16402 + 1;
      seq__16399 = G__16412;
      chunk__16400 = G__16413;
      count__16401 = G__16414;
      i__16402 = G__16415;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__16399);
      if (temp__4425__auto__) {
        var seq__16399__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16399__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__16399__$1);
          var G__16416 = cljs.core.chunk_rest(seq__16399__$1);
          var G__16417 = c__5338__auto__;
          var G__16418 = cljs.core.count(c__5338__auto__);
          var G__16419 = 0;
          seq__16399 = G__16416;
          chunk__16400 = G__16417;
          count__16401 = G__16418;
          i__16402 = G__16419;
          continue;
        } else {
          var vec__16404 = cljs.core.first(seq__16399__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16404, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16404, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__16420 = cljs.core.next(seq__16399__$1);
          var G__16421 = null;
          var G__16422 = 0;
          var G__16423 = 0;
          seq__16399 = G__16420;
          chunk__16400 = G__16421;
          count__16401 = G__16422;
          i__16402 = G__16423;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__16405 = init__$1;
        var G__16406 = self__.arr[i];
        var G__16407 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16405, G__16406, G__16407) : f.call(null, G__16405, G__16406, G__16407);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__16424 = i + 2;
        var G__16425 = init__$2;
        i = G__16424;
        init__$1 = G__16425;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__16426 = i + 2;
              i = G__16426;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__16427 = s + 2;
            var G__16428 = d;
            s = G__16427;
            d = G__16428;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__16429 = s + 2;
            var G__16430 = d + 2;
            s = G__16429;
            d = G__16430;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__16411 = cljs.core.aclone(self__.arr);
        G__16411[idx + 1] = v;
        return G__16411;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__16431 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__16432 = cljs.core.next(es);
          ret = G__16431;
          es = G__16432;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__16433 = null;
  var G__16433__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16433__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16433 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16433__2.call(this, self__, k);
      case 3:
        return G__16433__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16433.cljs$core$IFn$_invoke$arity$2 = G__16433__2;
  G__16433.cljs$core$IFn$_invoke$arity$3 = G__16433__3;
  return G__16433;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args16398) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16398)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_16434 = 0;
    while (true) {
      if (i_16434 < arr__$1.length) {
        var k_16435 = arr__$1[i_16434];
        var v_16436 = arr__$1[i_16434 + 1];
        var idx_16437 = cljs.core.array_index_of(ret, k_16435);
        if (idx_16437 === -1) {
          ret.push(k_16435);
          ret.push(v_16436);
        } else {
        }
        var G__16438 = i_16434 + 2;
        i_16434 = G__16438;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__16441 = cljs.core.next(es);
          var G__16442 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__16441;
          tcoll__$2 = G__16442;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__16440_16443 = self__.arr;
      G__16440_16443.pop();
      G__16440_16443.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__16444 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__16445 = i + 2;
      out = G__16444;
      i = G__16445;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var args16446 = [];
  var len__5593__auto___16451 = arguments.length;
  var i__5594__auto___16452 = 0;
  while (true) {
    if (i__5594__auto___16452 < len__5593__auto___16451) {
      args16446.push(arguments[i__5594__auto___16452]);
      var G__16453 = i__5594__auto___16452 + 1;
      i__5594__auto___16452 = G__16453;
      continue;
    } else {
    }
    break;
  }
  var G__16448 = args16446.length;
  switch(G__16448) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16446.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__16449 = cljs.core.aclone(arr);
  G__16449[i] = a;
  return G__16449;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__16450 = cljs.core.aclone(arr);
  G__16450[i] = a;
  G__16450[j] = b;
  return G__16450;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var args16455 = [];
  var len__5593__auto___16458 = arguments.length;
  var i__5594__auto___16459 = 0;
  while (true) {
    if (i__5594__auto___16459 < len__5593__auto___16458) {
      args16455.push(arguments[i__5594__auto___16459]);
      var G__16460 = i__5594__auto___16459 + 1;
      i__5594__auto___16459 = G__16460;
      continue;
    } else {
    }
    break;
  }
  var G__16457 = args16455.length;
  switch(G__16457) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16455.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__16465 = init__$1;
          var G__16466 = k;
          var G__16467 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16465, G__16466, G__16467) : f.call(null, G__16465, G__16466, G__16467);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__16468 = i + 2;
        var G__16469 = init__$2;
        i = G__16468;
        init__$1 = G__16469;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4554__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    var or__4554__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__4554__auto____$1) {
      return or__4554__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_16483 = 0;
        var j_16484 = 0;
        while (true) {
          if (i_16483 < 32) {
            if ((self__.bitmap >>> i_16483 & 1) === 0) {
              var G__16485 = i_16483 + 1;
              var G__16486 = j_16484;
              i_16483 = G__16485;
              j_16484 = G__16486;
              continue;
            } else {
              nodes[i_16483] = !(self__.arr[j_16484] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_16484]), self__.arr[j_16484], self__.arr[j_16484 + 1], added_leaf_QMARK_) : self__.arr[j_16484 + 1];
              var G__16487 = i_16483 + 1;
              var G__16488 = j_16484 + 2;
              i_16483 = G__16487;
              j_16484 = G__16488;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__16470 = edit__$1;
          var G__16471 = shift + 5;
          var G__16472 = key_or_nil;
          var G__16473 = val_or_node;
          var G__16474 = hash;
          var G__16475 = key;
          var G__16476 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__16470, G__16471, G__16472, G__16473, G__16474, G__16475, G__16476) : cljs.core.create_node.call(null, G__16470, G__16471, G__16472, G__16473, G__16474, G__16475, G__16476);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_16489 = 0;
      var j_16490 = 0;
      while (true) {
        if (i_16489 < 32) {
          if ((self__.bitmap >>> i_16489 & 1) === 0) {
            var G__16491 = i_16489 + 1;
            var G__16492 = j_16490;
            i_16489 = G__16491;
            j_16490 = G__16492;
            continue;
          } else {
            nodes[i_16489] = !(self__.arr[j_16490] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_16490]), self__.arr[j_16490], self__.arr[j_16490 + 1], added_leaf_QMARK_) : self__.arr[j_16490 + 1];
            var G__16493 = i_16489 + 1;
            var G__16494 = j_16490 + 2;
            i_16489 = G__16493;
            j_16490 = G__16494;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__16477 = shift + 5;
          var G__16478 = key_or_nil;
          var G__16479 = val_or_node;
          var G__16480 = hash;
          var G__16481 = key;
          var G__16482 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__16477, G__16478, G__16479, G__16480, G__16481, G__16482) : cljs.core.create_node.call(null, G__16477, G__16478, G__16479, G__16480, G__16481, G__16482);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__16495 = i + 1;
        var G__16496 = j + 2;
        var G__16497 = bitmap | 1 << i;
        i = G__16495;
        j = G__16496;
        bitmap = G__16497;
        continue;
      } else {
        var G__16498 = i + 1;
        var G__16499 = j;
        var G__16500 = bitmap;
        i = G__16498;
        j = G__16499;
        bitmap = G__16500;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__16501 = i + 1;
          var G__16502 = init__$2;
          i = G__16501;
          init__$1 = G__16502;
          continue;
        }
      } else {
        var G__16503 = i + 1;
        var G__16504 = init__$1;
        i = G__16503;
        init__$1 = G__16504;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__16505 = i + 2;
        i = G__16505;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var args16506 = [];
  var len__5593__auto___16509 = arguments.length;
  var i__5594__auto___16510 = 0;
  while (true) {
    if (i__5594__auto___16510 < len__5593__auto___16509) {
      args16506.push(arguments[i__5594__auto___16510]);
      var G__16511 = i__5594__auto___16510 + 1;
      i__5594__auto___16510 = G__16511;
      continue;
    } else {
    }
    break;
  }
  var G__16508 = args16506.length;
  switch(G__16508) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16506.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__16513 = self__.nodes;
    var G__16514 = self__.i + 2;
    var G__16515 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16513, G__16514, G__16515) : cljs.core.create_inode_seq.call(null, G__16513, G__16514, G__16515);
  } else {
    var G__16516 = self__.nodes;
    var G__16517 = self__.i;
    var G__16518 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16516, G__16517, G__16518) : cljs.core.create_inode_seq.call(null, G__16516, G__16517, G__16518);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var args16519 = [];
  var len__5593__auto___16522 = arguments.length;
  var i__5594__auto___16523 = 0;
  while (true) {
    if (i__5594__auto___16523 < len__5593__auto___16522) {
      args16519.push(arguments[i__5594__auto___16523]);
      var G__16524 = i__5594__auto___16523 + 1;
      i__5594__auto___16523 = G__16524;
      continue;
    } else {
    }
    break;
  }
  var G__16521 = args16519.length;
  switch(G__16521) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16519.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__16526 = j + 2;
              j = G__16526;
              continue;
            }
          } else {
            var G__16527 = j + 2;
            j = G__16527;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__16528 = null;
  var G__16529 = self__.nodes;
  var G__16530 = self__.i;
  var G__16531 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__16528, G__16529, G__16530, G__16531) : cljs.core.create_array_node_seq.call(null, G__16528, G__16529, G__16530, G__16531);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var args16532 = [];
  var len__5593__auto___16535 = arguments.length;
  var i__5594__auto___16536 = 0;
  while (true) {
    if (i__5594__auto___16536 < len__5593__auto___16535) {
      args16532.push(arguments[i__5594__auto___16536]);
      var G__16537 = i__5594__auto___16536 + 1;
      i__5594__auto___16536 = G__16537;
      continue;
    } else {
    }
    break;
  }
  var G__16534 = args16532.length;
  switch(G__16534) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16532.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__16539 = j + 1;
            j = G__16539;
            continue;
          }
        } else {
          var G__16540 = j + 1;
          j = G__16540;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16542 = cljs.core.seq(coll);
  var chunk__16543 = null;
  var count__16544 = 0;
  var i__16545 = 0;
  while (true) {
    if (i__16545 < count__16544) {
      var vec__16546 = chunk__16543.cljs$core$IIndexed$_nth$arity$2(null, i__16545);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16546, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16546, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__16550 = seq__16542;
      var G__16551 = chunk__16543;
      var G__16552 = count__16544;
      var G__16553 = i__16545 + 1;
      seq__16542 = G__16550;
      chunk__16543 = G__16551;
      count__16544 = G__16552;
      i__16545 = G__16553;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__16542);
      if (temp__4425__auto__) {
        var seq__16542__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16542__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__16542__$1);
          var G__16554 = cljs.core.chunk_rest(seq__16542__$1);
          var G__16555 = c__5338__auto__;
          var G__16556 = cljs.core.count(c__5338__auto__);
          var G__16557 = 0;
          seq__16542 = G__16554;
          chunk__16543 = G__16555;
          count__16544 = G__16556;
          i__16545 = G__16557;
          continue;
        } else {
          var vec__16547 = cljs.core.first(seq__16542__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16547, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16547, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__16558 = cljs.core.next(seq__16542__$1);
          var G__16559 = null;
          var G__16560 = 0;
          var G__16561 = 0;
          seq__16542 = G__16558;
          chunk__16543 = G__16559;
          count__16544 = G__16560;
          i__16545 = G__16561;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__16562 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__16563 = cljs.core.next(es);
          ret = G__16562;
          es = G__16563;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__16564 = null;
  var G__16564__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16564__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16564 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16564__2.call(this, self__, k);
      case 3:
        return G__16564__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16564.cljs$core$IFn$_invoke$arity$2 = G__16564__2;
  G__16564.cljs$core$IFn$_invoke$arity$3 = G__16564__3;
  return G__16564;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args16541) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16541)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__16565 = i + 2;
      var G__16566 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__16565;
      ret = G__16566;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__16567 = i + 1;
      var G__16568 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__16567;
      out = G__16568;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__16570 = cljs.core.next(es);
          var G__16571 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__16570;
          tcoll__$1 = G__16571;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__16572 = ascending_QMARK_ ? t.left : t.right;
      var G__16573 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__16572;
      stack__$1 = G__16573;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__16583 = init__$1;
      var G__16584 = node.key;
      var G__16585 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16583, G__16584, G__16585) : f.call(null, G__16583, G__16584, G__16585);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__16587 = null;
  var G__16587__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16587__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16587 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16587__2.call(this, self__, k);
      case 3:
        return G__16587__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16587.cljs$core$IFn$_invoke$arity$2 = G__16587__2;
  G__16587.cljs$core$IFn$_invoke$arity$3 = G__16587__3;
  return G__16587;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args16586) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16586)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__16589 = null;
  var G__16589__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16589__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16589 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16589__2.call(this, self__, k);
      case 3:
        return G__16589__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16589.cljs$core$IFn$_invoke$arity$2 = G__16589__2;
  G__16589.cljs$core$IFn$_invoke$arity$3 = G__16589__3;
  return G__16589;
}();
cljs.core.RedNode.prototype.apply = function(self__, args16588) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16588)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__16602 = k;
      var G__16603 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16602, G__16603) : comp.call(null, G__16602, G__16603);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__16622 = k;
      var G__16623 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16622, G__16623) : comp.call(null, G__16622, G__16623);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16633 = cljs.core.seq(coll);
  var chunk__16634 = null;
  var count__16635 = 0;
  var i__16636 = 0;
  while (true) {
    if (i__16636 < count__16635) {
      var vec__16637 = chunk__16634.cljs$core$IIndexed$_nth$arity$2(null, i__16636);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16637, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16637, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__16643 = seq__16633;
      var G__16644 = chunk__16634;
      var G__16645 = count__16635;
      var G__16646 = i__16636 + 1;
      seq__16633 = G__16643;
      chunk__16634 = G__16644;
      count__16635 = G__16645;
      i__16636 = G__16646;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__16633);
      if (temp__4425__auto__) {
        var seq__16633__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16633__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__16633__$1);
          var G__16647 = cljs.core.chunk_rest(seq__16633__$1);
          var G__16648 = c__5338__auto__;
          var G__16649 = cljs.core.count(c__5338__auto__);
          var G__16650 = 0;
          seq__16633 = G__16647;
          chunk__16634 = G__16648;
          count__16635 = G__16649;
          i__16636 = G__16650;
          continue;
        } else {
          var vec__16638 = cljs.core.first(seq__16633__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16638, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16638, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__16651 = cljs.core.next(seq__16633__$1);
          var G__16652 = null;
          var G__16653 = 0;
          var G__16654 = 0;
          seq__16633 = G__16651;
          chunk__16634 = G__16652;
          count__16635 = G__16653;
          i__16636 = G__16654;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__16639 = k;
        var G__16640 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16639, G__16640) : self__.comp.call(null, G__16639, G__16640);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__16655 = t.left;
          t = G__16655;
          continue;
        } else {
          var G__16656 = t.right;
          t = G__16656;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__16657 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__16658 = cljs.core.next(es);
          ret = G__16657;
          es = G__16658;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__16659 = null;
  var G__16659__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16659__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16659 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16659__2.call(this, self__, k);
      case 3:
        return G__16659__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16659.cljs$core$IFn$_invoke$arity$2 = G__16659__2;
  G__16659.cljs$core$IFn$_invoke$arity$3 = G__16659__3;
  return G__16659;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args16632) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16632)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__16641 = k;
          var G__16642 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16641, G__16642) : self__.comp.call(null, G__16641, G__16642);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__16660 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__16661 = t.left;
              stack = G__16660;
              t = G__16661;
              continue;
            } else {
              var G__16662 = stack;
              var G__16663 = t.right;
              stack = G__16662;
              t = G__16663;
              continue;
            }
          } else {
            if (c > 0) {
              var G__16664 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__16665 = t.right;
              stack = G__16664;
              t = G__16665;
              continue;
            } else {
              var G__16666 = stack;
              var G__16667 = t.left;
              stack = G__16666;
              t = G__16667;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var args__5600__auto__ = [];
  var len__5593__auto___16669 = arguments.length;
  var i__5594__auto___16670 = 0;
  while (true) {
    if (i__5594__auto___16670 < len__5593__auto___16669) {
      args__5600__auto__.push(arguments[i__5594__auto___16670]);
      var G__16671 = i__5594__auto___16670 + 1;
      i__5594__auto___16670 = G__16671;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__16672 = cljs.core.nnext(in$);
      var G__16673 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__16672;
      out = G__16673;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq16668) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16668));
};
cljs.core.array_map = function cljs$core$array_map() {
  var args__5600__auto__ = [];
  var len__5593__auto___16675 = arguments.length;
  var i__5594__auto___16676 = 0;
  while (true) {
    if (i__5594__auto___16676 < len__5593__auto___16675) {
      args__5600__auto__.push(arguments[i__5594__auto___16676]);
      var G__16677 = i__5594__auto___16676 + 1;
      i__5594__auto___16676 = G__16677;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq16674) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16674));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var args__5600__auto__ = [];
  var len__5593__auto___16681 = arguments.length;
  var i__5594__auto___16682 = 0;
  while (true) {
    if (i__5594__auto___16682 < len__5593__auto___16681) {
      args__5600__auto__.push(arguments[i__5594__auto___16682]);
      var G__16683 = i__5594__auto___16682 + 1;
      i__5594__auto___16682 = G__16683;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__16684 = cljs.core.nnext(kvs);
      kvs = G__16684;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq16678) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16678));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var args__5600__auto__ = [];
  var len__5593__auto___16686 = arguments.length;
  var i__5594__auto___16687 = 0;
  while (true) {
    if (i__5594__auto___16687 < len__5593__auto___16686) {
      args__5600__auto__.push(arguments[i__5594__auto___16687]);
      var G__16688 = i__5594__auto___16687 + 1;
      i__5594__auto___16687 = G__16688;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__16689 = cljs.core.nnext(in$);
      var G__16690 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__16689;
      out = G__16690;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq16685) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16685));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var args__5600__auto__ = [];
  var len__5593__auto___16693 = arguments.length;
  var i__5594__auto___16694 = 0;
  while (true) {
    if (i__5594__auto___16694 < len__5593__auto___16693) {
      args__5600__auto__.push(arguments[i__5594__auto___16694]);
      var G__16695 = i__5594__auto___16694 + 1;
      i__5594__auto___16694 = G__16695;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__16696 = cljs.core.nnext(in$);
      var G__16697 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__16696;
      out = G__16697;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq16691) {
  var G__16692 = cljs.core.first(seq16691);
  var seq16691__$1 = cljs.core.next(seq16691);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__16692, seq16691__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var args__5600__auto__ = [];
  var len__5593__auto___16705 = arguments.length;
  var i__5594__auto___16706 = 0;
  while (true) {
    if (i__5594__auto___16706 < len__5593__auto___16705) {
      args__5600__auto__.push(arguments[i__5594__auto___16706]);
      var G__16707 = i__5594__auto___16706 + 1;
      i__5594__auto___16706 = G__16707;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__16702_SHARP_, p2__16703_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4554__auto__ = p1__16702_SHARP_;
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__16703_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq16704) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16704));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var args__5600__auto__ = [];
  var len__5593__auto___16712 = arguments.length;
  var i__5594__auto___16713 = 0;
  while (true) {
    if (i__5594__auto___16713 < len__5593__auto___16712) {
      args__5600__auto__.push(arguments[i__5594__auto___16713]);
      var G__16714 = i__5594__auto___16713 + 1;
      i__5594__auto___16713 = G__16714;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__16710 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__16711 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16710, G__16711) : f.call(null, G__16710, G__16711);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4554__auto__ = m1;
          if (cljs.core.truth_(or__4554__auto__)) {
            return or__4554__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq16708) {
  var G__16709 = cljs.core.first(seq16708);
  var seq16708__$1 = cljs.core.next(seq16708);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__16709, seq16708__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__16715 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__16716 = cljs.core.next(keys);
      ret = G__16715;
      keys = G__16716;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16719 = cljs.core.seq(coll);
  var chunk__16720 = null;
  var count__16721 = 0;
  var i__16722 = 0;
  while (true) {
    if (i__16722 < count__16721) {
      var vec__16723 = chunk__16720.cljs$core$IIndexed$_nth$arity$2(null, i__16722);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16723, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16723, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__16725 = seq__16719;
      var G__16726 = chunk__16720;
      var G__16727 = count__16721;
      var G__16728 = i__16722 + 1;
      seq__16719 = G__16725;
      chunk__16720 = G__16726;
      count__16721 = G__16727;
      i__16722 = G__16728;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__16719);
      if (temp__4425__auto__) {
        var seq__16719__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16719__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__16719__$1);
          var G__16729 = cljs.core.chunk_rest(seq__16719__$1);
          var G__16730 = c__5338__auto__;
          var G__16731 = cljs.core.count(c__5338__auto__);
          var G__16732 = 0;
          seq__16719 = G__16729;
          chunk__16720 = G__16730;
          count__16721 = G__16731;
          i__16722 = G__16732;
          continue;
        } else {
          var vec__16724 = cljs.core.first(seq__16719__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16724, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16724, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__16733 = cljs.core.next(seq__16719__$1);
          var G__16734 = null;
          var G__16735 = 0;
          var G__16736 = 0;
          seq__16719 = G__16733;
          chunk__16720 = G__16734;
          count__16721 = G__16735;
          i__16722 = G__16736;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__16717_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__16717_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__16737 = null;
  var G__16737__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16737__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16737 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16737__2.call(this, self__, k);
      case 3:
        return G__16737__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16737.cljs$core$IFn$_invoke$arity$2 = G__16737__2;
  G__16737.cljs$core$IFn$_invoke$arity$3 = G__16737__3;
  return G__16737;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args16718) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16718)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__16738 = i + 1;
        var G__16739 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__16738;
        out = G__16739;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__16740 = i + 1;
        var G__16741 = cljs.core._conj_BANG_(out, items[i]);
        i = G__16740;
        out = G__16741;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__16743 = null;
  var G__16743__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__16743__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__16743 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16743__2.call(this, self__, k);
      case 3:
        return G__16743__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16743.cljs$core$IFn$_invoke$arity$2 = G__16743__2;
  G__16743.cljs$core$IFn$_invoke$arity$3 = G__16743__3;
  return G__16743;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args16742) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16742)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16746 = cljs.core.seq(coll);
  var chunk__16747 = null;
  var count__16748 = 0;
  var i__16749 = 0;
  while (true) {
    if (i__16749 < count__16748) {
      var vec__16750 = chunk__16747.cljs$core$IIndexed$_nth$arity$2(null, i__16749);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16750, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16750, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__16752 = seq__16746;
      var G__16753 = chunk__16747;
      var G__16754 = count__16748;
      var G__16755 = i__16749 + 1;
      seq__16746 = G__16752;
      chunk__16747 = G__16753;
      count__16748 = G__16754;
      i__16749 = G__16755;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__16746);
      if (temp__4425__auto__) {
        var seq__16746__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16746__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__16746__$1);
          var G__16756 = cljs.core.chunk_rest(seq__16746__$1);
          var G__16757 = c__5338__auto__;
          var G__16758 = cljs.core.count(c__5338__auto__);
          var G__16759 = 0;
          seq__16746 = G__16756;
          chunk__16747 = G__16757;
          count__16748 = G__16758;
          i__16749 = G__16759;
          continue;
        } else {
          var vec__16751 = cljs.core.first(seq__16746__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16751, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16751, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__16760 = cljs.core.next(seq__16746__$1);
          var G__16761 = null;
          var G__16762 = 0;
          var G__16763 = 0;
          seq__16746 = G__16760;
          chunk__16747 = G__16761;
          count__16748 = G__16762;
          i__16749 = G__16763;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__16744_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__16744_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__16764 = null;
  var G__16764__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16764__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16764 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16764__2.call(this, self__, k);
      case 3:
        return G__16764__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16764.cljs$core$IFn$_invoke$arity$2 = G__16764__2;
  G__16764.cljs$core$IFn$_invoke$arity$3 = G__16764__3;
  return G__16764;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args16745) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16745)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5432__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5432__auto__.length) {
        var G__16765 = i + 1;
        var G__16766 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__16765;
        res = G__16766;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__16767 = cljs.core.next(in$__$1);
          var G__16768 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__16767;
          out = G__16768;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var args16769 = [];
  var len__5593__auto___16773 = arguments.length;
  var i__5594__auto___16774 = 0;
  while (true) {
    if (i__5594__auto___16774 < len__5593__auto___16773) {
      args16769.push(arguments[i__5594__auto___16774]);
      var G__16775 = i__5594__auto___16774 + 1;
      i__5594__auto___16774 = G__16775;
      continue;
    } else {
    }
    break;
  }
  var G__16772 = args16769.length;
  switch(G__16772) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args16769.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5612__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq16770) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16770));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var args__5600__auto__ = [];
  var len__5593__auto___16778 = arguments.length;
  var i__5594__auto___16779 = 0;
  while (true) {
    if (i__5594__auto___16779 < len__5593__auto___16778) {
      args__5600__auto__.push(arguments[i__5594__auto___16779]);
      var G__16780 = i__5594__auto___16779 + 1;
      i__5594__auto___16779 = G__16780;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq16777) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16777));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var args__5600__auto__ = [];
  var len__5593__auto___16783 = arguments.length;
  var i__5594__auto___16784 = 0;
  while (true) {
    if (i__5594__auto___16784 < len__5593__auto___16783) {
      args__5600__auto__.push(arguments[i__5594__auto___16784]);
      var G__16785 = i__5594__auto___16784 + 1;
      i__5594__auto___16784 = G__16785;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq16781) {
  var G__16782 = cljs.core.first(seq16781);
  var seq16781__$1 = cljs.core.next(seq16781);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__16782, seq16781__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var args16788 = [];
  var len__5593__auto___16791 = arguments.length;
  var i__5594__auto___16792 = 0;
  while (true) {
    if (i__5594__auto___16792 < len__5593__auto___16791) {
      args16788.push(arguments[i__5594__auto___16792]);
      var G__16793 = i__5594__auto___16792 + 1;
      i__5594__auto___16792 = G__16793;
      continue;
    } else {
    }
    break;
  }
  var G__16790 = args16788.length;
  switch(G__16790) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16788.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__16786_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__16786_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__16786_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__16787_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__16787_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__16787_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var args16795 = [];
  var len__5593__auto___16804 = arguments.length;
  var i__5594__auto___16805 = 0;
  while (true) {
    if (i__5594__auto___16805 < len__5593__auto___16804) {
      args16795.push(arguments[i__5594__auto___16805]);
      var G__16806 = i__5594__auto___16805 + 1;
      i__5594__auto___16805 = G__16806;
      continue;
    } else {
    }
    break;
  }
  var G__16797 = args16795.length;
  switch(G__16797) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16795.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__16808 = null;
        var G__16808__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16808__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__16808__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__16808 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16808__0.call(this);
            case 1:
              return G__16808__1.call(this, result);
            case 2:
              return G__16808__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16808.cljs$core$IFn$_invoke$arity$0 = G__16808__0;
        G__16808.cljs$core$IFn$_invoke$arity$1 = G__16808__1;
        G__16808.cljs$core$IFn$_invoke$arity$2 = G__16808__2;
        return G__16808;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__16802, seen__$1) {
        while (true) {
          var vec__16803 = p__16802;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16803, 0, null);
          var xs__$1 = vec__16803;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__16809 = cljs.core.rest(s);
              var G__16810 = seen__$1;
              p__16802 = G__16809;
              seen__$1 = G__16810;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__16811 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__16812 = cljs.core.next(s__$1);
      ret = G__16811;
      s__$1 = G__16812;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__16815 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__16816 = cljs.core.next(ks);
      var G__16817 = cljs.core.next(vs);
      map = G__16815;
      ks = G__16816;
      vs = G__16817;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var args16820 = [];
  var len__5593__auto___16827 = arguments.length;
  var i__5594__auto___16828 = 0;
  while (true) {
    if (i__5594__auto___16828 < len__5593__auto___16827) {
      args16820.push(arguments[i__5594__auto___16828]);
      var G__16829 = i__5594__auto___16828 + 1;
      i__5594__auto___16828 = G__16829;
      continue;
    } else {
    }
    break;
  }
  var G__16826 = args16820.length;
  switch(G__16826) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args16820.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__16818_SHARP_, p2__16819_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__16818_SHARP_, p2__16819_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq16821) {
  var G__16822 = cljs.core.first(seq16821);
  var seq16821__$1 = cljs.core.next(seq16821);
  var G__16823 = cljs.core.first(seq16821__$1);
  var seq16821__$2 = cljs.core.next(seq16821__$1);
  var G__16824 = cljs.core.first(seq16821__$2);
  var seq16821__$3 = cljs.core.next(seq16821__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__16822, G__16823, G__16824, seq16821__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var args16833 = [];
  var len__5593__auto___16840 = arguments.length;
  var i__5594__auto___16841 = 0;
  while (true) {
    if (i__5594__auto___16841 < len__5593__auto___16840) {
      args16833.push(arguments[i__5594__auto___16841]);
      var G__16842 = i__5594__auto___16841 + 1;
      i__5594__auto___16841 = G__16842;
      continue;
    } else {
    }
    break;
  }
  var G__16839 = args16833.length;
  switch(G__16839) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args16833.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__16831_SHARP_, p2__16832_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__16831_SHARP_, p2__16832_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq16834) {
  var G__16835 = cljs.core.first(seq16834);
  var seq16834__$1 = cljs.core.next(seq16834);
  var G__16836 = cljs.core.first(seq16834__$1);
  var seq16834__$2 = cljs.core.next(seq16834__$1);
  var G__16837 = cljs.core.first(seq16834__$2);
  var seq16834__$3 = cljs.core.next(seq16834__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__16835, G__16836, G__16837, seq16834__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var args16844 = [];
  var len__5593__auto___16847 = arguments.length;
  var i__5594__auto___16848 = 0;
  while (true) {
    if (i__5594__auto___16848 < len__5593__auto___16847) {
      args16844.push(arguments[i__5594__auto___16848]);
      var G__16849 = i__5594__auto___16848 + 1;
      i__5594__auto___16848 = G__16849;
      continue;
    } else {
    }
    break;
  }
  var G__16846 = args16844.length;
  switch(G__16846) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16844.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__16851 = null;
        var G__16851__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16851__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__16851__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__16851 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16851__0.call(this);
            case 1:
              return G__16851__1.call(this, result);
            case 2:
              return G__16851__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16851.cljs$core$IFn$_invoke$arity$0 = G__16851__0;
        G__16851.cljs$core$IFn$_invoke$arity$1 = G__16851__1;
        G__16851.cljs$core$IFn$_invoke$arity$2 = G__16851__2;
        return G__16851;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var args16852 = [];
  var len__5593__auto___16856 = arguments.length;
  var i__5594__auto___16857 = 0;
  while (true) {
    if (i__5594__auto___16857 < len__5593__auto___16856) {
      args16852.push(arguments[i__5594__auto___16857]);
      var G__16858 = i__5594__auto___16857 + 1;
      i__5594__auto___16857 = G__16858;
      continue;
    } else {
    }
    break;
  }
  var G__16854 = args16852.length;
  switch(G__16854) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16852.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__16860 = null;
      var G__16860__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__16860__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__16860__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__16860 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__16860__0.call(this);
          case 1:
            return G__16860__1.call(this, result);
          case 2:
            return G__16860__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16860.cljs$core$IFn$_invoke$arity$0 = G__16860__0;
      G__16860.cljs$core$IFn$_invoke$arity$1 = G__16860__1;
      G__16860.cljs$core$IFn$_invoke$arity$2 = G__16860__2;
      return G__16860;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__16855 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16855) : pred.call(null, G__16855);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__16869 = function() {
      var G__16871 = cljs.core._entry_key(sc, e);
      var G__16872 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16871, G__16872) : comp.call(null, G__16871, G__16872);
    }();
    var G__16870 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__16869, G__16870) : test.call(null, G__16869, G__16870);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var args16873 = [];
  var len__5593__auto___16878 = arguments.length;
  var i__5594__auto___16879 = 0;
  while (true) {
    if (i__5594__auto___16879 < len__5593__auto___16878) {
      args16873.push(arguments[i__5594__auto___16879]);
      var G__16880 = i__5594__auto___16879 + 1;
      i__5594__auto___16879 = G__16880;
      continue;
    } else {
    }
    break;
  }
  var G__16875 = args16873.length;
  switch(G__16875) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16873.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__16876 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16876, 0, null);
      var s = vec__16876;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__16877 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16877, 0, null);
    var s = vec__16877;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var args16882 = [];
  var len__5593__auto___16887 = arguments.length;
  var i__5594__auto___16888 = 0;
  while (true) {
    if (i__5594__auto___16888 < len__5593__auto___16887) {
      args16882.push(arguments[i__5594__auto___16888]);
      var G__16889 = i__5594__auto___16888 + 1;
      i__5594__auto___16888 = G__16889;
      continue;
    } else {
    }
    break;
  }
  var G__16884 = args16882.length;
  switch(G__16884) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16882.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__16885 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16885, 0, null);
      var s = vec__16885;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__16886 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16886, 0, null);
    var s = vec__16886;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__16891 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__16891);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__16892 = i + self__.step;
        var G__16893 = ret__$1;
        i = G__16892;
        ret = G__16893;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.range = function cljs$core$range() {
  var args16894 = [];
  var len__5593__auto___16897 = arguments.length;
  var i__5594__auto___16898 = 0;
  while (true) {
    if (i__5594__auto___16898 < len__5593__auto___16897) {
      args16894.push(arguments[i__5594__auto___16898]);
      var G__16899 = i__5594__auto___16898 + 1;
      i__5594__auto___16898 = G__16899;
      continue;
    } else {
    }
    break;
  }
  var G__16896 = args16894.length;
  switch(G__16896) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16894.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var args16901 = [];
  var len__5593__auto___16906 = arguments.length;
  var i__5594__auto___16907 = 0;
  while (true) {
    if (i__5594__auto___16907 < len__5593__auto___16906) {
      args16901.push(arguments[i__5594__auto___16907]);
      var G__16908 = i__5594__auto___16907 + 1;
      i__5594__auto___16907 = G__16908;
      continue;
    } else {
    }
    break;
  }
  var G__16903 = args16901.length;
  switch(G__16903) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16901.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__16904 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__16904) : cljs.core.pr_str.call(null, G__16904);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__16910 = null;
        var G__16910__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16910__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__16910__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__16910 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16910__0.call(this);
            case 1:
              return G__16910__1.call(this, result);
            case 2:
              return G__16910__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16910.cljs$core$IFn$_invoke$arity$0 = G__16910__0;
        G__16910.cljs$core$IFn$_invoke$arity$1 = G__16910__1;
        G__16910.cljs$core$IFn$_invoke$arity$2 = G__16910__2;
        return G__16910;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__16905 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__16905) : cljs.core.pr_str.call(null, G__16905);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var args16912 = [];
  var len__5593__auto___16915 = arguments.length;
  var i__5594__auto___16916 = 0;
  while (true) {
    if (i__5594__auto___16916 < len__5593__auto___16915) {
      args16912.push(arguments[i__5594__auto___16916]);
      var G__16917 = i__5594__auto___16916 + 1;
      i__5594__auto___16916 = G__16917;
      continue;
    } else {
    }
    break;
  }
  var G__16914 = args16912.length;
  switch(G__16914) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16912.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__16919 = null;
        var G__16919__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16919__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__16919__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__16919 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16919__0.call(this);
            case 1:
              return G__16919__1.call(this, result);
            case 2:
              return G__16919__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16919.cljs$core$IFn$_invoke$arity$0 = G__16919__0;
        G__16919.cljs$core$IFn$_invoke$arity$1 = G__16919__1;
        G__16919.cljs$core$IFn$_invoke$arity$2 = G__16919__2;
        return G__16919;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__16911_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__16911_SHARP_) : f.call(null, p1__16911_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var args16920 = [];
  var len__5593__auto___16925 = arguments.length;
  var i__5594__auto___16926 = 0;
  while (true) {
    if (i__5594__auto___16926 < len__5593__auto___16925) {
      args16920.push(arguments[i__5594__auto___16926]);
      var G__16927 = i__5594__auto___16926 + 1;
      i__5594__auto___16926 = G__16927;
      continue;
    } else {
    }
    break;
  }
  var G__16922 = args16920.length;
  switch(G__16922) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16920.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__16923 = init;
        var G__16924 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16923, G__16924) : f.call(null, G__16923, G__16924);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var args16939 = [];
  var len__5593__auto___16946 = arguments.length;
  var i__5594__auto___16947 = 0;
  while (true) {
    if (i__5594__auto___16947 < len__5593__auto___16946) {
      args16939.push(arguments[i__5594__auto___16947]);
      var G__16948 = i__5594__auto___16947 + 1;
      i__5594__auto___16947 = G__16948;
      continue;
    } else {
    }
    break;
  }
  var G__16945 = args16939.length;
  switch(G__16945) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args16939.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5612__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__16950 = null;
    var G__16950__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__16950__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__16950__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__16950__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__16950__4 = function() {
      var G__16951__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__16951 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16952__i = 0, G__16952__a = new Array(arguments.length - 3);
          while (G__16952__i < G__16952__a.length) {
            G__16952__a[G__16952__i] = arguments[G__16952__i + 3];
            ++G__16952__i;
          }
          args = new cljs.core.IndexedSeq(G__16952__a, 0);
        }
        return G__16951__delegate.call(this, x, y, z, args);
      };
      G__16951.cljs$lang$maxFixedArity = 3;
      G__16951.cljs$lang$applyTo = function(arglist__16953) {
        var x = cljs.core.first(arglist__16953);
        arglist__16953 = cljs.core.next(arglist__16953);
        var y = cljs.core.first(arglist__16953);
        arglist__16953 = cljs.core.next(arglist__16953);
        var z = cljs.core.first(arglist__16953);
        var args = cljs.core.rest(arglist__16953);
        return G__16951__delegate(x, y, z, args);
      };
      G__16951.cljs$core$IFn$_invoke$arity$variadic = G__16951__delegate;
      return G__16951;
    }();
    G__16950 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__16950__0.call(this);
        case 1:
          return G__16950__1.call(this, x);
        case 2:
          return G__16950__2.call(this, x, y);
        case 3:
          return G__16950__3.call(this, x, y, z);
        default:
          var G__16954 = null;
          if (arguments.length > 3) {
            var G__16955__i = 0, G__16955__a = new Array(arguments.length - 3);
            while (G__16955__i < G__16955__a.length) {
              G__16955__a[G__16955__i] = arguments[G__16955__i + 3];
              ++G__16955__i;
            }
            G__16954 = new cljs.core.IndexedSeq(G__16955__a, 0);
          }
          return G__16950__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16954);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__16950.cljs$lang$maxFixedArity = 3;
    G__16950.cljs$lang$applyTo = G__16950__4.cljs$lang$applyTo;
    G__16950.cljs$core$IFn$_invoke$arity$0 = G__16950__0;
    G__16950.cljs$core$IFn$_invoke$arity$1 = G__16950__1;
    G__16950.cljs$core$IFn$_invoke$arity$2 = G__16950__2;
    G__16950.cljs$core$IFn$_invoke$arity$3 = G__16950__3;
    G__16950.cljs$core$IFn$_invoke$arity$variadic = G__16950__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__16950;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__16956 = null;
    var G__16956__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__16956__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__16956__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__16956__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__16956__4 = function() {
      var G__16957__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__16957 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16958__i = 0, G__16958__a = new Array(arguments.length - 3);
          while (G__16958__i < G__16958__a.length) {
            G__16958__a[G__16958__i] = arguments[G__16958__i + 3];
            ++G__16958__i;
          }
          args = new cljs.core.IndexedSeq(G__16958__a, 0);
        }
        return G__16957__delegate.call(this, x, y, z, args);
      };
      G__16957.cljs$lang$maxFixedArity = 3;
      G__16957.cljs$lang$applyTo = function(arglist__16959) {
        var x = cljs.core.first(arglist__16959);
        arglist__16959 = cljs.core.next(arglist__16959);
        var y = cljs.core.first(arglist__16959);
        arglist__16959 = cljs.core.next(arglist__16959);
        var z = cljs.core.first(arglist__16959);
        var args = cljs.core.rest(arglist__16959);
        return G__16957__delegate(x, y, z, args);
      };
      G__16957.cljs$core$IFn$_invoke$arity$variadic = G__16957__delegate;
      return G__16957;
    }();
    G__16956 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__16956__0.call(this);
        case 1:
          return G__16956__1.call(this, x);
        case 2:
          return G__16956__2.call(this, x, y);
        case 3:
          return G__16956__3.call(this, x, y, z);
        default:
          var G__16960 = null;
          if (arguments.length > 3) {
            var G__16961__i = 0, G__16961__a = new Array(arguments.length - 3);
            while (G__16961__i < G__16961__a.length) {
              G__16961__a[G__16961__i] = arguments[G__16961__i + 3];
              ++G__16961__i;
            }
            G__16960 = new cljs.core.IndexedSeq(G__16961__a, 0);
          }
          return G__16956__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16960);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__16956.cljs$lang$maxFixedArity = 3;
    G__16956.cljs$lang$applyTo = G__16956__4.cljs$lang$applyTo;
    G__16956.cljs$core$IFn$_invoke$arity$0 = G__16956__0;
    G__16956.cljs$core$IFn$_invoke$arity$1 = G__16956__1;
    G__16956.cljs$core$IFn$_invoke$arity$2 = G__16956__2;
    G__16956.cljs$core$IFn$_invoke$arity$3 = G__16956__3;
    G__16956.cljs$core$IFn$_invoke$arity$variadic = G__16956__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__16956;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__16962 = null;
    var G__16962__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__16962__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__16962__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__16962__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__16962__4 = function() {
      var G__16963__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__16963 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16964__i = 0, G__16964__a = new Array(arguments.length - 3);
          while (G__16964__i < G__16964__a.length) {
            G__16964__a[G__16964__i] = arguments[G__16964__i + 3];
            ++G__16964__i;
          }
          args = new cljs.core.IndexedSeq(G__16964__a, 0);
        }
        return G__16963__delegate.call(this, x, y, z, args);
      };
      G__16963.cljs$lang$maxFixedArity = 3;
      G__16963.cljs$lang$applyTo = function(arglist__16965) {
        var x = cljs.core.first(arglist__16965);
        arglist__16965 = cljs.core.next(arglist__16965);
        var y = cljs.core.first(arglist__16965);
        arglist__16965 = cljs.core.next(arglist__16965);
        var z = cljs.core.first(arglist__16965);
        var args = cljs.core.rest(arglist__16965);
        return G__16963__delegate(x, y, z, args);
      };
      G__16963.cljs$core$IFn$_invoke$arity$variadic = G__16963__delegate;
      return G__16963;
    }();
    G__16962 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__16962__0.call(this);
        case 1:
          return G__16962__1.call(this, x);
        case 2:
          return G__16962__2.call(this, x, y);
        case 3:
          return G__16962__3.call(this, x, y, z);
        default:
          var G__16966 = null;
          if (arguments.length > 3) {
            var G__16967__i = 0, G__16967__a = new Array(arguments.length - 3);
            while (G__16967__i < G__16967__a.length) {
              G__16967__a[G__16967__i] = arguments[G__16967__i + 3];
              ++G__16967__i;
            }
            G__16966 = new cljs.core.IndexedSeq(G__16967__a, 0);
          }
          return G__16962__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16966);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__16962.cljs$lang$maxFixedArity = 3;
    G__16962.cljs$lang$applyTo = G__16962__4.cljs$lang$applyTo;
    G__16962.cljs$core$IFn$_invoke$arity$0 = G__16962__0;
    G__16962.cljs$core$IFn$_invoke$arity$1 = G__16962__1;
    G__16962.cljs$core$IFn$_invoke$arity$2 = G__16962__2;
    G__16962.cljs$core$IFn$_invoke$arity$3 = G__16962__3;
    G__16962.cljs$core$IFn$_invoke$arity$variadic = G__16962__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__16962;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__16968 = null;
      var G__16968__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__16929_SHARP_, p2__16930_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16929_SHARP_, p2__16930_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__16930_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__16930_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__16968__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__16931_SHARP_, p2__16932_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16931_SHARP_, p2__16932_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__16932_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__16932_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__16968__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__16933_SHARP_, p2__16934_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16933_SHARP_, p2__16934_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__16934_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__16934_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__16968__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__16935_SHARP_, p2__16936_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16935_SHARP_, p2__16936_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__16936_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__16936_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__16968__4 = function() {
        var G__16969__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__16937_SHARP_, p2__16938_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16937_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__16938_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__16969 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16970__i = 0, G__16970__a = new Array(arguments.length - 3);
            while (G__16970__i < G__16970__a.length) {
              G__16970__a[G__16970__i] = arguments[G__16970__i + 3];
              ++G__16970__i;
            }
            args = new cljs.core.IndexedSeq(G__16970__a, 0);
          }
          return G__16969__delegate.call(this, x, y, z, args);
        };
        G__16969.cljs$lang$maxFixedArity = 3;
        G__16969.cljs$lang$applyTo = function(arglist__16971) {
          var x = cljs.core.first(arglist__16971);
          arglist__16971 = cljs.core.next(arglist__16971);
          var y = cljs.core.first(arglist__16971);
          arglist__16971 = cljs.core.next(arglist__16971);
          var z = cljs.core.first(arglist__16971);
          var args = cljs.core.rest(arglist__16971);
          return G__16969__delegate(x, y, z, args);
        };
        G__16969.cljs$core$IFn$_invoke$arity$variadic = G__16969__delegate;
        return G__16969;
      }();
      G__16968 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16968__0.call(this);
          case 1:
            return G__16968__1.call(this, x);
          case 2:
            return G__16968__2.call(this, x, y);
          case 3:
            return G__16968__3.call(this, x, y, z);
          default:
            var G__16972 = null;
            if (arguments.length > 3) {
              var G__16973__i = 0, G__16973__a = new Array(arguments.length - 3);
              while (G__16973__i < G__16973__a.length) {
                G__16973__a[G__16973__i] = arguments[G__16973__i + 3];
                ++G__16973__i;
              }
              G__16972 = new cljs.core.IndexedSeq(G__16973__a, 0);
            }
            return G__16968__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16972);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16968.cljs$lang$maxFixedArity = 3;
      G__16968.cljs$lang$applyTo = G__16968__4.cljs$lang$applyTo;
      G__16968.cljs$core$IFn$_invoke$arity$0 = G__16968__0;
      G__16968.cljs$core$IFn$_invoke$arity$1 = G__16968__1;
      G__16968.cljs$core$IFn$_invoke$arity$2 = G__16968__2;
      G__16968.cljs$core$IFn$_invoke$arity$3 = G__16968__3;
      G__16968.cljs$core$IFn$_invoke$arity$variadic = G__16968__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__16968;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq16940) {
  var G__16941 = cljs.core.first(seq16940);
  var seq16940__$1 = cljs.core.next(seq16940);
  var G__16942 = cljs.core.first(seq16940__$1);
  var seq16940__$2 = cljs.core.next(seq16940__$1);
  var G__16943 = cljs.core.first(seq16940__$2);
  var seq16940__$3 = cljs.core.next(seq16940__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__16941, G__16942, G__16943, seq16940__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var args16974 = [];
  var len__5593__auto___16977 = arguments.length;
  var i__5594__auto___16978 = 0;
  while (true) {
    if (i__5594__auto___16978 < len__5593__auto___16977) {
      args16974.push(arguments[i__5594__auto___16978]);
      var G__16979 = i__5594__auto___16978 + 1;
      i__5594__auto___16978 = G__16979;
      continue;
    } else {
    }
    break;
  }
  var G__16976 = args16974.length;
  switch(G__16976) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16974.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__16981 = cljs.core.next(coll);
      coll = G__16981;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__16982 = n - 1;
      var G__16983 = cljs.core.next(coll);
      n = G__16982;
      coll = G__16983;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var args16984 = [];
  var len__5593__auto___16987 = arguments.length;
  var i__5594__auto___16988 = 0;
  while (true) {
    if (i__5594__auto___16988 < len__5593__auto___16987) {
      args16984.push(arguments[i__5594__auto___16988]);
      var G__16989 = i__5594__auto___16988 + 1;
      i__5594__auto___16988 = G__16989;
      continue;
    } else {
    }
    break;
  }
  var G__16986 = args16984.length;
  switch(G__16986) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16984.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__16992 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16992, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16992, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4554__auto__ = flags;
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_17000 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4554__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__17001_17007 = cljs.core.first(coll);
          var G__17002_17008 = writer;
          var G__17003_17009 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17001_17007, G__17002_17008, G__17003_17009) : print_one.call(null, G__17001_17007, G__17002_17008, G__17003_17009);
        } else {
        }
        var coll_17010__$1 = cljs.core.next(coll);
        var n_17011 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_17010__$1 && (n_17011 == null || !(n_17011 === 0))) {
            cljs.core._write(writer, sep);
            var G__17004_17012 = cljs.core.first(coll_17010__$1);
            var G__17005_17013 = writer;
            var G__17006_17014 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17004_17012, G__17005_17013, G__17006_17014) : print_one.call(null, G__17004_17012, G__17005_17013, G__17006_17014);
            var G__17015 = cljs.core.next(coll_17010__$1);
            var G__17016 = n_17011 - 1;
            coll_17010__$1 = G__17015;
            n_17011 = G__17016;
            continue;
          } else {
            if (cljs.core.seq(coll_17010__$1) && n_17011 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4554__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4554__auto__)) {
                  return or__4554__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_17000;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var args__5600__auto__ = [];
  var len__5593__auto___17023 = arguments.length;
  var i__5594__auto___17024 = 0;
  while (true) {
    if (i__5594__auto___17024 < len__5593__auto___17023) {
      args__5600__auto__.push(arguments[i__5594__auto___17024]);
      var G__17025 = i__5594__auto___17024 + 1;
      i__5594__auto___17024 = G__17025;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__17019 = cljs.core.seq(ss);
  var chunk__17020 = null;
  var count__17021 = 0;
  var i__17022 = 0;
  while (true) {
    if (i__17022 < count__17021) {
      var s = chunk__17020.cljs$core$IIndexed$_nth$arity$2(null, i__17022);
      cljs.core._write(writer, s);
      var G__17026 = seq__17019;
      var G__17027 = chunk__17020;
      var G__17028 = count__17021;
      var G__17029 = i__17022 + 1;
      seq__17019 = G__17026;
      chunk__17020 = G__17027;
      count__17021 = G__17028;
      i__17022 = G__17029;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__17019);
      if (temp__4425__auto__) {
        var seq__17019__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__17019__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__17019__$1);
          var G__17030 = cljs.core.chunk_rest(seq__17019__$1);
          var G__17031 = c__5338__auto__;
          var G__17032 = cljs.core.count(c__5338__auto__);
          var G__17033 = 0;
          seq__17019 = G__17030;
          chunk__17020 = G__17031;
          count__17021 = G__17032;
          i__17022 = G__17033;
          continue;
        } else {
          var s = cljs.core.first(seq__17019__$1);
          cljs.core._write(writer, s);
          var G__17034 = cljs.core.next(seq__17019__$1);
          var G__17035 = null;
          var G__17036 = 0;
          var G__17037 = 0;
          seq__17019 = G__17034;
          chunk__17020 = G__17035;
          count__17021 = G__17036;
          i__17022 = G__17037;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq17017) {
  var G__17018 = cljs.core.first(seq17017);
  var seq17017__$1 = cljs.core.next(seq17017);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__17018, seq17017__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj17039 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj17039;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4542__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4542__auto__) {
    var and__4542__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4542__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4542__auto____$1;
    }
  } else {
    return and__4542__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__17055_17064 = cljs.core.meta(obj);
      var G__17056_17065 = writer;
      var G__17057_17066 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__17055_17064, G__17056_17065, G__17057_17066) : cljs.core.pr_writer.call(null, G__17055_17064, G__17056_17065, G__17057_17066);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__17059 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__17060 = cljs.core.pr_writer;
            var G__17061 = writer;
            var G__17062 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__17059, G__17060, G__17061, G__17062) : cljs.core.print_map.call(null, G__17059, G__17060, G__17061, G__17062);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__4554__auto__ = name == null;
                    if (or__4554__auto__) {
                      return or__4554__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__17067 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__17067;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4554__auto__ = name == null;
                            if (or__4554__auto__) {
                              return or__4554__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__17071 = obj;
    var G__17072 = writer;
    var G__17073 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__17071, G__17072, G__17073) : alt_impl.call(null, G__17071, G__17072, G__17073);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__17078 = cljs.core.seq(cljs.core.next(objs));
  var chunk__17079 = null;
  var count__17080 = 0;
  var i__17081 = 0;
  while (true) {
    if (i__17081 < count__17080) {
      var obj = chunk__17079.cljs$core$IIndexed$_nth$arity$2(null, i__17081);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__17082 = seq__17078;
      var G__17083 = chunk__17079;
      var G__17084 = count__17080;
      var G__17085 = i__17081 + 1;
      seq__17078 = G__17082;
      chunk__17079 = G__17083;
      count__17080 = G__17084;
      i__17081 = G__17085;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__17078);
      if (temp__4425__auto__) {
        var seq__17078__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__17078__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first(seq__17078__$1);
          var G__17086 = cljs.core.chunk_rest(seq__17078__$1);
          var G__17087 = c__5338__auto__;
          var G__17088 = cljs.core.count(c__5338__auto__);
          var G__17089 = 0;
          seq__17078 = G__17086;
          chunk__17079 = G__17087;
          count__17080 = G__17088;
          i__17081 = G__17089;
          continue;
        } else {
          var obj = cljs.core.first(seq__17078__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__17090 = cljs.core.next(seq__17078__$1);
          var G__17091 = null;
          var G__17092 = 0;
          var G__17093 = 0;
          seq__17078 = G__17090;
          chunk__17079 = G__17091;
          count__17080 = G__17092;
          i__17081 = G__17093;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline() {
  var args17094 = [];
  var len__5593__auto___17097 = arguments.length;
  var i__5594__auto___17098 = 0;
  while (true) {
    if (i__5594__auto___17098 < len__5593__auto___17097) {
      args17094.push(arguments[i__5594__auto___17098]);
      var G__17099 = i__5594__auto___17098 + 1;
      i__5594__auto___17098 = G__17099;
      continue;
    } else {
    }
    break;
  }
  var G__17096 = args17094.length;
  switch(G__17096) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17094.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str() {
  var args__5600__auto__ = [];
  var len__5593__auto___17102 = arguments.length;
  var i__5594__auto___17103 = 0;
  while (true) {
    if (i__5594__auto___17103 < len__5593__auto___17102) {
      args__5600__auto__.push(arguments[i__5594__auto___17103]);
      var G__17104 = i__5594__auto___17103 + 1;
      i__5594__auto___17103 = G__17104;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq17101) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17101));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var args__5600__auto__ = [];
  var len__5593__auto___17106 = arguments.length;
  var i__5594__auto___17107 = 0;
  while (true) {
    if (i__5594__auto___17107 < len__5593__auto___17106) {
      args__5600__auto__.push(arguments[i__5594__auto___17107]);
      var G__17108 = i__5594__auto___17107 + 1;
      i__5594__auto___17107 = G__17108;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq17105) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17105));
};
cljs.core.pr = function cljs$core$pr() {
  var args__5600__auto__ = [];
  var len__5593__auto___17110 = arguments.length;
  var i__5594__auto___17111 = 0;
  while (true) {
    if (i__5594__auto___17111 < len__5593__auto___17110) {
      args__5600__auto__.push(arguments[i__5594__auto___17111]);
      var G__17112 = i__5594__auto___17111 + 1;
      i__5594__auto___17111 = G__17112;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq17109) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17109));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__17113__i = 0, G__17113__a = new Array(arguments.length - 0);
      while (G__17113__i < G__17113__a.length) {
        G__17113__a[G__17113__i] = arguments[G__17113__i + 0];
        ++G__17113__i;
      }
      objs = new cljs.core.IndexedSeq(G__17113__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__17114) {
    var objs = cljs.core.seq(arglist__17114);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var args__5600__auto__ = [];
  var len__5593__auto___17116 = arguments.length;
  var i__5594__auto___17117 = 0;
  while (true) {
    if (i__5594__auto___17117 < len__5593__auto___17116) {
      args__5600__auto__.push(arguments[i__5594__auto___17117]);
      var G__17118 = i__5594__auto___17117 + 1;
      i__5594__auto___17117 = G__17118;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq17115) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17115));
};
cljs.core.println = function cljs$core$println() {
  var args__5600__auto__ = [];
  var len__5593__auto___17120 = arguments.length;
  var i__5594__auto___17121 = 0;
  while (true) {
    if (i__5594__auto___17121 < len__5593__auto___17120) {
      args__5600__auto__.push(arguments[i__5594__auto___17121]);
      var G__17122 = i__5594__auto___17121 + 1;
      i__5594__auto___17121 = G__17122;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq17119) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17119));
};
cljs.core.println_str = function cljs$core$println_str() {
  var args__5600__auto__ = [];
  var len__5593__auto___17124 = arguments.length;
  var i__5594__auto___17125 = 0;
  while (true) {
    if (i__5594__auto___17125 < len__5593__auto___17124) {
      args__5600__auto__.push(arguments[i__5594__auto___17125]);
      var G__17126 = i__5594__auto___17125 + 1;
      i__5594__auto___17125 = G__17126;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq17123) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17123));
};
cljs.core.prn = function cljs$core$prn() {
  var args__5600__auto__ = [];
  var len__5593__auto___17128 = arguments.length;
  var i__5594__auto___17129 = 0;
  while (true) {
    if (i__5594__auto___17129 < len__5593__auto___17128) {
      args__5600__auto__.push(arguments[i__5594__auto___17129]);
      var G__17130 = i__5594__auto___17129 + 1;
      i__5594__auto___17129 = G__17130;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq17127) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17127));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__17137_17143 = cljs.core.key(e);
    var G__17138_17144 = w;
    var G__17139_17145 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17137_17143, G__17138_17144, G__17139_17145) : print_one.call(null, G__17137_17143, G__17138_17144, G__17139_17145);
    cljs.core._write(w, " ");
    var G__17140 = cljs.core.val(e);
    var G__17141 = w;
    var G__17142 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17140, G__17141, G__17142) : print_one.call(null, G__17140, G__17141, G__17142);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var args__5600__auto__ = [];
  var len__5593__auto___17149 = arguments.length;
  var i__5594__auto___17150 = 0;
  while (true) {
    if (i__5594__auto___17150 < len__5593__auto___17149) {
      args__5600__auto__.push(arguments[i__5594__auto___17150]);
      var G__17151 = i__5594__auto___17150 + 1;
      i__5594__auto___17150 = G__17151;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq17146) {
  var G__17147 = cljs.core.first(seq17146);
  var seq17146__$1 = cljs.core.next(seq17146);
  var G__17148 = cljs.core.first(seq17146__$1);
  var seq17146__$2 = cljs.core.next(seq17146__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__17147, G__17148, seq17146__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var args17152 = [];
  var len__5593__auto___17155 = arguments.length;
  var i__5594__auto___17156 = 0;
  while (true) {
    if (i__5594__auto___17156 < len__5593__auto___17155) {
      args17152.push(arguments[i__5594__auto___17156]);
      var G__17157 = i__5594__auto___17156 + 1;
      i__5594__auto___17156 = G__17157;
      continue;
    } else {
    }
    break;
  }
  var G__17154 = args17152.length;
  switch(G__17154) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17152.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__17159_SHARP_, p2__17160_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__17159_SHARP_, p2__17160_SHARP_) : rf.call(null, p1__17159_SHARP_, p2__17160_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__17161 = null;
      var G__17161__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__17161__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__17161__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__17161 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__17161__0.call(this);
          case 1:
            return G__17161__1.call(this, result);
          case 2:
            return G__17161__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17161.cljs$core$IFn$_invoke$arity$0 = G__17161__0;
      G__17161.cljs$core$IFn$_invoke$arity$1 = G__17161__1;
      G__17161.cljs$core$IFn$_invoke$arity$2 = G__17161__2;
      return G__17161;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var args17162 = [];
  var len__5593__auto___17165 = arguments.length;
  var i__5594__auto___17166 = 0;
  while (true) {
    if (i__5594__auto___17166 < len__5593__auto___17165) {
      args17162.push(arguments[i__5594__auto___17166]);
      var G__17167 = i__5594__auto___17166 + 1;
      i__5594__auto___17166 = G__17167;
      continue;
    } else {
    }
    break;
  }
  var G__17164 = args17162.length;
  switch(G__17164) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17162.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__17169 = null;
        var G__17169__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__17169__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__17169__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__17169 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__17169__0.call(this);
            case 1:
              return G__17169__1.call(this, result);
            case 2:
              return G__17169__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__17169.cljs$core$IFn$_invoke$arity$0 = G__17169__0;
        G__17169.cljs$core$IFn$_invoke$arity$1 = G__17169__1;
        G__17169.cljs$core$IFn$_invoke$arity$2 = G__17169__2;
        return G__17169;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var args17170 = [];
  var len__5593__auto___17173 = arguments.length;
  var i__5594__auto___17174 = 0;
  while (true) {
    if (i__5594__auto___17174 < len__5593__auto___17173) {
      args17170.push(arguments[i__5594__auto___17174]);
      var G__17175 = i__5594__auto___17174 + 1;
      i__5594__auto___17174 = G__17175;
      continue;
    } else {
    }
    break;
  }
  var G__17172 = args17170.length;
  switch(G__17172) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17170.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5529__auto__ = this;
  return cljs.core.es6_iterator(this__5529__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var args__5600__auto__ = [];
  var len__5593__auto___17178 = arguments.length;
  var i__5594__auto___17179 = 0;
  while (true) {
    if (i__5594__auto___17179 < len__5593__auto___17178) {
      args__5600__auto__.push(arguments[i__5594__auto___17179]);
      var G__17180 = i__5594__auto___17179 + 1;
      i__5594__auto___17179 = G__17180;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq17177) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17177));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__17182_SHARP_, p2__17181_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__17181_SHARP_) : proc.call(null, p2__17181_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto__.call(null, x);
    } else {
      var m__5191__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._key__GT_js[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto__.call(null, x);
    } else {
      var m__5191__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5191__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__17203_17213 = cljs.core.seq(x);
            var chunk__17204_17214 = null;
            var count__17205_17215 = 0;
            var i__17206_17216 = 0;
            while (true) {
              if (i__17206_17216 < count__17205_17215) {
                var vec__17207_17217 = chunk__17204_17214.cljs$core$IIndexed$_nth$arity$2(null, i__17206_17216);
                var k_17218 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17207_17217, 0, null);
                var v_17219 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17207_17217, 1, null);
                m[cljs.core.key__GT_js(k_17218)] = cljs$core$clj__GT_js(v_17219);
                var G__17220 = seq__17203_17213;
                var G__17221 = chunk__17204_17214;
                var G__17222 = count__17205_17215;
                var G__17223 = i__17206_17216 + 1;
                seq__17203_17213 = G__17220;
                chunk__17204_17214 = G__17221;
                count__17205_17215 = G__17222;
                i__17206_17216 = G__17223;
                continue;
              } else {
                var temp__4425__auto___17224 = cljs.core.seq(seq__17203_17213);
                if (temp__4425__auto___17224) {
                  var seq__17203_17225__$1 = temp__4425__auto___17224;
                  if (cljs.core.chunked_seq_QMARK_(seq__17203_17225__$1)) {
                    var c__5338__auto___17226 = cljs.core.chunk_first(seq__17203_17225__$1);
                    var G__17227 = cljs.core.chunk_rest(seq__17203_17225__$1);
                    var G__17228 = c__5338__auto___17226;
                    var G__17229 = cljs.core.count(c__5338__auto___17226);
                    var G__17230 = 0;
                    seq__17203_17213 = G__17227;
                    chunk__17204_17214 = G__17228;
                    count__17205_17215 = G__17229;
                    i__17206_17216 = G__17230;
                    continue;
                  } else {
                    var vec__17208_17231 = cljs.core.first(seq__17203_17225__$1);
                    var k_17232 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17208_17231, 0, null);
                    var v_17233 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17208_17231, 1, null);
                    m[cljs.core.key__GT_js(k_17232)] = cljs$core$clj__GT_js(v_17233);
                    var G__17234 = cljs.core.next(seq__17203_17225__$1);
                    var G__17235 = null;
                    var G__17236 = 0;
                    var G__17237 = 0;
                    seq__17203_17213 = G__17234;
                    chunk__17204_17214 = G__17235;
                    count__17205_17215 = G__17236;
                    i__17206_17216 = G__17237;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__17209_17238 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__17210_17239 = null;
              var count__17211_17240 = 0;
              var i__17212_17241 = 0;
              while (true) {
                if (i__17212_17241 < count__17211_17240) {
                  var x_17242__$1 = chunk__17210_17239.cljs$core$IIndexed$_nth$arity$2(null, i__17212_17241);
                  arr.push(x_17242__$1);
                  var G__17243 = seq__17209_17238;
                  var G__17244 = chunk__17210_17239;
                  var G__17245 = count__17211_17240;
                  var G__17246 = i__17212_17241 + 1;
                  seq__17209_17238 = G__17243;
                  chunk__17210_17239 = G__17244;
                  count__17211_17240 = G__17245;
                  i__17212_17241 = G__17246;
                  continue;
                } else {
                  var temp__4425__auto___17247 = cljs.core.seq(seq__17209_17238);
                  if (temp__4425__auto___17247) {
                    var seq__17209_17248__$1 = temp__4425__auto___17247;
                    if (cljs.core.chunked_seq_QMARK_(seq__17209_17248__$1)) {
                      var c__5338__auto___17249 = cljs.core.chunk_first(seq__17209_17248__$1);
                      var G__17250 = cljs.core.chunk_rest(seq__17209_17248__$1);
                      var G__17251 = c__5338__auto___17249;
                      var G__17252 = cljs.core.count(c__5338__auto___17249);
                      var G__17253 = 0;
                      seq__17209_17238 = G__17250;
                      chunk__17210_17239 = G__17251;
                      count__17211_17240 = G__17252;
                      i__17212_17241 = G__17253;
                      continue;
                    } else {
                      var x_17254__$1 = cljs.core.first(seq__17209_17248__$1);
                      arr.push(x_17254__$1);
                      var G__17255 = cljs.core.next(seq__17209_17248__$1);
                      var G__17256 = null;
                      var G__17257 = 0;
                      var G__17258 = 0;
                      seq__17209_17238 = G__17255;
                      chunk__17210_17239 = G__17256;
                      count__17211_17240 = G__17257;
                      i__17212_17241 = G__17258;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__5190__auto__ = x == null ? null : x;
    var m__5191__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__5191__auto__.call(null, x, options);
    } else {
      var m__5191__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__5191__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var args17261 = [];
  var len__5593__auto___17286 = arguments.length;
  var i__5594__auto___17287 = 0;
  while (true) {
    if (i__5594__auto___17287 < len__5593__auto___17286) {
      args17261.push(arguments[i__5594__auto___17287]);
      var G__17288 = i__5594__auto___17287 + 1;
      i__5594__auto___17287 = G__17288;
      continue;
    } else {
    }
    break;
  }
  var G__17265 = args17261.length;
  switch(G__17265) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args17261.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5612__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__17266 = opts;
  var map__17266__$1 = (!(map__17266 == null) ? map__17266.cljs$lang$protocol_mask$partition0$ & 64 || map__17266.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__17266) : map__17266;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17266__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__17266, map__17266__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5307__auto__ = function(map__17266, map__17266__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__17280(s__17281) {
                      return new cljs.core.LazySeq(null, function(map__17266, map__17266__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__17281__$1 = s__17281;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__17281__$1);
                            if (temp__4425__auto__) {
                              var s__17281__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__17281__$2)) {
                                var c__5305__auto__ = cljs.core.chunk_first(s__17281__$2);
                                var size__5306__auto__ = cljs.core.count(c__5305__auto__);
                                var b__17283 = cljs.core.chunk_buffer(size__5306__auto__);
                                if (function() {
                                  var i__17282 = 0;
                                  while (true) {
                                    if (i__17282 < size__5306__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5305__auto__, i__17282);
                                      cljs.core.chunk_append(b__17283, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__17290 = i__17282 + 1;
                                      i__17282 = G__17290;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__17283), cljs$core$thisfn_$_iter__17280(cljs.core.chunk_rest(s__17281__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__17283), null);
                                }
                              } else {
                                var k = cljs.core.first(s__17281__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__17280(cljs.core.rest(s__17281__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__17266, map__17266__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__17266, map__17266__$1, keywordize_keys, keyfn);
                  return iter__5307__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__17266, map__17266__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq17262) {
  var G__17263 = cljs.core.first(seq17262);
  var seq17262__$1 = cljs.core.next(seq17262);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__17263, seq17262__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__17292 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17292) : cljs.core.atom.call(null, G__17292);
  }();
  return function(mem) {
    return function() {
      var G__17293__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__17293 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__17294__i = 0, G__17294__a = new Array(arguments.length - 0);
          while (G__17294__i < G__17294__a.length) {
            G__17294__a[G__17294__i] = arguments[G__17294__i + 0];
            ++G__17294__i;
          }
          args = new cljs.core.IndexedSeq(G__17294__a, 0);
        }
        return G__17293__delegate.call(this, args);
      };
      G__17293.cljs$lang$maxFixedArity = 0;
      G__17293.cljs$lang$applyTo = function(arglist__17295) {
        var args = cljs.core.seq(arglist__17295);
        return G__17293__delegate(args);
      };
      G__17293.cljs$core$IFn$_invoke$arity$variadic = G__17293__delegate;
      return G__17293;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var args17296 = [];
  var len__5593__auto___17301 = arguments.length;
  var i__5594__auto___17302 = 0;
  while (true) {
    if (i__5594__auto___17302 < len__5593__auto___17301) {
      args17296.push(arguments[i__5594__auto___17302]);
      var G__17303 = i__5594__auto___17302 + 1;
      i__5594__auto___17302 = G__17303;
      continue;
    } else {
    }
    break;
  }
  var G__17300 = args17296.length;
  switch(G__17300) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args17296.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5612__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__17305 = ret;
      f = G__17305;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq17297) {
  var G__17298 = cljs.core.first(seq17297);
  var seq17297__$1 = cljs.core.next(seq17297);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__17298, seq17297__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var args17306 = [];
  var len__5593__auto___17309 = arguments.length;
  var i__5594__auto___17310 = 0;
  while (true) {
    if (i__5594__auto___17310 < len__5593__auto___17309) {
      args17306.push(arguments[i__5594__auto___17310]);
      var G__17311 = i__5594__auto___17310 + 1;
      i__5594__auto___17310 = G__17311;
      continue;
    } else {
    }
    break;
  }
  var G__17308 = args17306.length;
  switch(G__17308) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17306.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__17314 = Math.random() * n;
  return Math.floor(G__17314);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__17316 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17316) : cljs.core.atom.call(null, G__17316);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var args__5600__auto__ = [];
  var len__5593__auto___17319 = arguments.length;
  var i__5594__auto___17320 = 0;
  while (true) {
    if (i__5594__auto___17320 < len__5593__auto___17319) {
      args__5600__auto__.push(arguments[i__5594__auto___17320]);
      var G__17321 = i__5594__auto___17320 + 1;
      i__5594__auto___17320 = G__17321;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq17317) {
  var G__17318 = cljs.core.first(seq17317);
  var seq17317__$1 = cljs.core.next(seq17317);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__17318, seq17317__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var args17322 = [];
  var len__5593__auto___17326 = arguments.length;
  var i__5594__auto___17327 = 0;
  while (true) {
    if (i__5594__auto___17327 < len__5593__auto___17326) {
      args17322.push(arguments[i__5594__auto___17327]);
      var G__17328 = i__5594__auto___17327 + 1;
      i__5594__auto___17327 = G__17328;
      continue;
    } else {
    }
    break;
  }
  var G__17324 = args17322.length;
  switch(G__17324) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17322.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__17325 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17325) : cljs.core.deref.call(null, G__17325);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4554__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4554__auto__) {
    return or__4554__auto__;
  } else {
    var or__4554__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4554__auto____$1) {
      return or__4554__auto____$1;
    } else {
      var and__4542__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4542__auto__) {
        var and__4542__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4542__auto____$1) {
          var and__4542__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4542__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__17330 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__17331 = i + 1;
                ret = G__17330;
                i = G__17331;
                continue;
              }
              break;
            }
          } else {
            return and__4542__auto____$2;
          }
        } else {
          return and__4542__auto____$1;
        }
      } else {
        return and__4542__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var args17332 = [];
  var len__5593__auto___17336 = arguments.length;
  var i__5594__auto___17337 = 0;
  while (true) {
    if (i__5594__auto___17337 < len__5593__auto___17336) {
      args17332.push(arguments[i__5594__auto___17337]);
      var G__17338 = i__5594__auto___17337 + 1;
      i__5594__auto___17337 = G__17338;
      continue;
    } else {
    }
    break;
  }
  var G__17334 = args17332.length;
  switch(G__17334) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17332.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__17335 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17335) : cljs.core.deref.call(null, G__17335);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var args17340 = [];
  var len__5593__auto___17344 = arguments.length;
  var i__5594__auto___17345 = 0;
  while (true) {
    if (i__5594__auto___17345 < len__5593__auto___17344) {
      args17340.push(arguments[i__5594__auto___17345]);
      var G__17346 = i__5594__auto___17345 + 1;
      i__5594__auto___17345 = G__17346;
      continue;
    } else {
    }
    break;
  }
  var G__17342 = args17340.length;
  switch(G__17342) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17340.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__17343 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17343) : cljs.core.deref.call(null, G__17343);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var args17348 = [];
  var len__5593__auto___17352 = arguments.length;
  var i__5594__auto___17353 = 0;
  while (true) {
    if (i__5594__auto___17353 < len__5593__auto___17352) {
      args17348.push(arguments[i__5594__auto___17353]);
      var G__17354 = i__5594__auto___17353 + 1;
      i__5594__auto___17353 = G__17354;
      continue;
    } else {
    }
    break;
  }
  var G__17350 = args17348.length;
  switch(G__17350) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17348.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__17351 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17351) : cljs.core.deref.call(null, G__17351);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var args17356 = [];
  var len__5593__auto___17359 = arguments.length;
  var i__5594__auto___17360 = 0;
  while (true) {
    if (i__5594__auto___17360 < len__5593__auto___17359) {
      args17356.push(arguments[i__5594__auto___17360]);
      var G__17361 = i__5594__auto___17360 + 1;
      i__5594__auto___17360 = G__17361;
      continue;
    } else {
    }
    break;
  }
  var G__17358 = args17356.length;
  switch(G__17358) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17356.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4554__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var args17366 = [];
  var len__5593__auto___17369 = arguments.length;
  var i__5594__auto___17370 = 0;
  while (true) {
    if (i__5594__auto___17370 < len__5593__auto___17369) {
      args17366.push(arguments[i__5594__auto___17370]);
      var G__17371 = i__5594__auto___17370 + 1;
      i__5594__auto___17370 = G__17371;
      continue;
    } else {
    }
    break;
  }
  var G__17368 = args17366.length;
  switch(G__17368) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17366.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__17363_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__17363_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__17363_SHARP_), cljs.core.second(p1__17363_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__17364_SHARP_, p2__17365_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__17364_SHARP_, p2__17365_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__4554__auto__ = cljs.core.truth_(function() {
    var and__4542__auto__ = xprefs;
    if (cljs.core.truth_(and__4542__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4542__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    var or__4554__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__17385 = cljs.core.rest(ps);
          ps = G__17385;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4554__auto____$1)) {
      return or__4554__auto____$1;
    } else {
      var or__4554__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__17386 = cljs.core.rest(ps);
            ps = G__17386;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4554__auto____$2)) {
        return or__4554__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4554__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__17389) {
    var vec__17390 = p__17389;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17390, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17390, 1, null);
    var e = vec__17390;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4554__auto__ = be == null;
        if (or__4554__auto__) {
          return or__4554__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._reset[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto__.call(null, mf);
    } else {
      var m__5191__auto____$1 = cljs.core._reset["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._add_method[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5191__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__5191__auto____$1 = cljs.core._add_method["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5191__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._remove_method[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5191__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5191__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5191__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._prefer_method[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5191__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__5191__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5191__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._get_method[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5191__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5191__auto____$1 = cljs.core._get_method["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5191__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._methods[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto__.call(null, mf);
    } else {
      var m__5191__auto____$1 = cljs.core._methods["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._prefers[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto__.call(null, mf);
    } else {
      var m__5191__auto____$1 = cljs.core._prefers["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto__.call(null, mf);
    } else {
      var m__5191__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__5190__auto__ = mf == null ? null : mf;
    var m__5191__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto__.call(null, mf);
    } else {
      var m__5191__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5191__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5191__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__17394 = null;
  var G__17394__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__17394__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__17394__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__17394__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__17394__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__17394__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__17394__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__17394__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__17394__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__17394__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__17394__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__17394__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__17394__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__17394__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__17394__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__17394__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__17394__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__17394__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__17394__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__17394__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__17394__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__17394__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__17394 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__17394__1.call(this, self__);
      case 2:
        return G__17394__2.call(this, self__, a);
      case 3:
        return G__17394__3.call(this, self__, a, b);
      case 4:
        return G__17394__4.call(this, self__, a, b, c);
      case 5:
        return G__17394__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17394__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17394__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17394__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17394__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17394__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17394__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17394__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17394__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17394__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17394__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17394__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17394__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17394__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17394__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17394__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17394__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17394__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17394.cljs$core$IFn$_invoke$arity$1 = G__17394__1;
  G__17394.cljs$core$IFn$_invoke$arity$2 = G__17394__2;
  G__17394.cljs$core$IFn$_invoke$arity$3 = G__17394__3;
  G__17394.cljs$core$IFn$_invoke$arity$4 = G__17394__4;
  G__17394.cljs$core$IFn$_invoke$arity$5 = G__17394__5;
  G__17394.cljs$core$IFn$_invoke$arity$6 = G__17394__6;
  G__17394.cljs$core$IFn$_invoke$arity$7 = G__17394__7;
  G__17394.cljs$core$IFn$_invoke$arity$8 = G__17394__8;
  G__17394.cljs$core$IFn$_invoke$arity$9 = G__17394__9;
  G__17394.cljs$core$IFn$_invoke$arity$10 = G__17394__10;
  G__17394.cljs$core$IFn$_invoke$arity$11 = G__17394__11;
  G__17394.cljs$core$IFn$_invoke$arity$12 = G__17394__12;
  G__17394.cljs$core$IFn$_invoke$arity$13 = G__17394__13;
  G__17394.cljs$core$IFn$_invoke$arity$14 = G__17394__14;
  G__17394.cljs$core$IFn$_invoke$arity$15 = G__17394__15;
  G__17394.cljs$core$IFn$_invoke$arity$16 = G__17394__16;
  G__17394.cljs$core$IFn$_invoke$arity$17 = G__17394__17;
  G__17394.cljs$core$IFn$_invoke$arity$18 = G__17394__18;
  G__17394.cljs$core$IFn$_invoke$arity$19 = G__17394__19;
  G__17394.cljs$core$IFn$_invoke$arity$20 = G__17394__20;
  G__17394.cljs$core$IFn$_invoke$arity$21 = G__17394__21;
  G__17394.cljs$core$IFn$_invoke$arity$22 = G__17394__22;
  return G__17394;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args17393) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17393)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = goog.string.hashCode(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__17395 = self__.uuid;
  var G__17396 = other.uuid;
  return goog.array.defaultCompare(G__17395, G__17396);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var args17397 = [];
  var len__5593__auto___17400 = arguments.length;
  var i__5594__auto___17401 = 0;
  while (true) {
    if (i__5594__auto___17401 < len__5593__auto___17400) {
      args17397.push(arguments[i__5594__auto___17401]);
      var G__17402 = i__5594__auto___17401 + 1;
      i__5594__auto___17401 = G__17402;
      continue;
    } else {
    }
    break;
  }
  var G__17399 = args17397.length;
  switch(G__17399) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17397.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__17404 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__17404) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__17406_SHARP_, p2__17407_SHARP_) {
      goog.object.set(p1__17406_SHARP_, p2__17407_SHARP_, true);
      return p1__17406_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return goog.object.containsKey(cljs.core.js_reserved, x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__17410 = cljs.core.next(ks__$1);
          var G__17411 = [cljs.core.str(function() {
            var G__17409 = ret;
            var G__17409__$1 = !(ret === "") ? [cljs.core.str(G__17409), cljs.core.str("|")].join("") : G__17409;
            return G__17409__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__17410;
          ret = G__17411;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_17412 = 0;
  while (true) {
    if (i_17412 < name.length) {
      var c_17413 = name.charAt(i_17412);
      var sub_17414 = goog.object.get(cljs.core.CHAR_MAP, c_17413);
      if (!(sub_17414 == null)) {
        sb.append(sub_17414);
      } else {
        sb.append(c_17413);
      }
      var G__17415 = i_17412 + 1;
      i_17412 = G__17415;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__17417 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17417, 0, null);
      var G__17418 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__17419 = r.lastIndex;
      ret = G__17418;
      last_match_end = G__17419;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
  return cljs.core._write(writer__5134__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__17424 = function() {
          var G__17422 = ctxt;
          var G__17423 = cljs.core.first(xs);
          return goog.object.get(G__17422, G__17423);
        }();
        var G__17425 = cljs.core.next(xs);
        ctxt = G__17424;
        xs = G__17425;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__17427 = cljs.core._STAR_target_STAR_;
  switch(G__17427) {
    case "nodejs":
      if (COMPILED) {
        return eval(munged_ns);
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(window, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns() {
  var args17429 = [];
  var len__5593__auto___17432 = arguments.length;
  var i__5594__auto___17433 = 0;
  while (true) {
    if (i__5594__auto___17433 < len__5593__auto___17432) {
      args17429.push(arguments[i__5594__auto___17433]);
      var G__17434 = i__5594__auto___17433 + 1;
      i__5594__auto___17433 = G__17434;
      continue;
    } else {
    }
    break;
  }
  var G__17431 = args17429.length;
  switch(G__17431) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17429.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__17437 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17437) : cljs.core.atom.call(null, G__17437);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__17439 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17439) : cljs.core.atom.call(null, G__17439);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join() {
  var args14396 = [];
  var len__5593__auto___14399 = arguments.length;
  var i__5594__auto___14400 = 0;
  while (true) {
    if (i__5594__auto___14400 < len__5593__auto___14399) {
      args14396.push(arguments[i__5594__auto___14400]);
      var G__14401 = i__5594__auto___14400 + 1;
      i__5594__auto___14400 = G__14401;
      continue;
    } else {
    }
    break;
  }
  var G__14398 = args14396.length;
  switch(G__14398) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14396.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__14403 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__14404 = cljs.core.next.call(null, coll__$1);
      sb = G__14403;
      coll__$1 = G__14404;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__14405 = sb;
      var G__14406 = coll__$2;
      sb = G__14405;
      coll__$1 = G__14406;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__14407 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__14407;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__14411 = cljs.core._EQ__EQ_;
    var expr__14412 = limit;
    if (cljs.core.truth_(pred__14411.call(null, 1, expr__14412))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__14411.call(null, 2, expr__14412))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split() {
  var args14414 = [];
  var len__5593__auto___14417 = arguments.length;
  var i__5594__auto___14418 = 0;
  while (true) {
    if (i__5594__auto___14418 < len__5593__auto___14417) {
      args14414.push(arguments[i__5594__auto___14418]);
      var G__14419 = i__5594__auto___14418 + 1;
      i__5594__auto___14418 = G__14419;
      continue;
    } else {
    }
    break;
  }
  var G__14416 = args14414.length;
  switch(G__14416) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14414.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__14421 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__14422 = limit__$1 - 1;
          var G__14423 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__14421;
          limit__$1 = G__14422;
          parts = G__14423;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__14424 = index - 1;
        index = G__14424;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__14425 = index + 1;
      index = G__14425;
      continue;
    }
    break;
  }
};
goog.provide("tiltontec.util.base");
goog.require("cljs.core");
goog.require("clojure.string");
cljs.core.enable_console_print_BANG_.call(null);
tiltontec.util.base._STAR_trx_QMARK__STAR_ = true;
tiltontec.util.base._STAR_trc_ensure_STAR_ = null;
tiltontec.util.base._STAR_trx_path_id_STAR_ = null;
tiltontec.util.base._STAR_trxdepth_STAR_ = 0;
tiltontec.util.base.last_trc = cljs.core.atom.call(null, 0);
tiltontec.util.base.call_trc$ = function tiltontec$util$base$call_trc$(s, bits) {
  return [cljs.core.str(s), cljs.core.str(": "), cljs.core.str([cljs.core.str(bits)].join(""))].join("");
};
tiltontec.util.base.call_trc = function tiltontec$util$base$call_trc() {
  var args__5600__auto__ = [];
  var len__5593__auto___9816 = arguments.length;
  var i__5594__auto___9817 = 0;
  while (true) {
    if (i__5594__auto___9817 < len__5593__auto___9816) {
      args__5600__auto__.push(arguments[i__5594__auto___9817]);
      var G__9818 = i__5594__auto___9817 + 1;
      i__5594__auto___9817 = G__9818;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic = function(s, os) {
  if (cljs.core.truth_(tiltontec.util.base._STAR_trx_QMARK__STAR_)) {
    if (cljs.core.truth_(s)) {
      var path = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, tiltontec.util.base._STAR_trxdepth_STAR_, "."));
      return cljs.core.println.call(null, path, tiltontec.util.base.call_trc$.call(null, s, os));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
tiltontec.util.base.call_trc.cljs$lang$maxFixedArity = 1;
tiltontec.util.base.call_trc.cljs$lang$applyTo = function(seq9814) {
  var G__9815 = cljs.core.first.call(null, seq9814);
  var seq9814__$1 = cljs.core.next.call(null, seq9814);
  return tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic(G__9815, seq9814__$1);
};
tiltontec.util.base.trx = function tiltontec$util$base$trx() {
  var args__5600__auto__ = [];
  var len__5593__auto___9823 = arguments.length;
  var i__5594__auto___9824 = 0;
  while (true) {
    if (i__5594__auto___9824 < len__5593__auto___9823) {
      args__5600__auto__.push(arguments[i__5594__auto___9824]);
      var G__9825 = i__5594__auto___9824 + 1;
      i__5594__auto___9824 = G__9825;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, label, vals) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "call-trc", "tiltontec.util.base/call-trc", 242817092, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, !(label == null) ? [cljs.core.str(label)].join("") : null), vals)));
};
tiltontec.util.base.trx.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.trx.cljs$lang$applyTo = function(seq9819) {
  var G__9820 = cljs.core.first.call(null, seq9819);
  var seq9819__$1 = cljs.core.next.call(null, seq9819);
  var G__9821 = cljs.core.first.call(null, seq9819__$1);
  var seq9819__$2 = cljs.core.next.call(null, seq9819__$1);
  var G__9822 = cljs.core.first.call(null, seq9819__$2);
  var seq9819__$3 = cljs.core.next.call(null, seq9819__$2);
  return tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic(G__9820, G__9821, G__9822, seq9819__$3);
};
tiltontec.util.base.trx.cljs$lang$macro = true;
tiltontec.util.base.call_wtrx = function tiltontec$util$base$call_wtrx(fn, lo, hi, trxargs) {
  var _STAR_trxdepth_STAR_9827 = tiltontec.util.base._STAR_trxdepth_STAR_;
  tiltontec.util.base._STAR_trxdepth_STAR_ = tiltontec.util.base._STAR_trxdepth_STAR_ + 1;
  try {
    if (lo <= tiltontec.util.base._STAR_trxdepth_STAR_ && tiltontec.util.base._STAR_trxdepth_STAR_ <= hi) {
      cljs.core.apply.call(null, tiltontec.util.base.call_trc, trxargs);
    } else {
      if (tiltontec.util.base._STAR_trxdepth_STAR_ > hi) {
        throw new Error([cljs.core.str("wtrx exceeded max depth "), cljs.core.str(hi), cljs.core.str(":"), cljs.core.str(cljs.core.apply.call(null, tiltontec.util.base.call_trc$, cljs.core.first.call(null, trxargs), cljs.core.rest.call(null, trxargs)))].join(""));
      } else {
      }
    }
    return fn.call(null);
  } finally {
    tiltontec.util.base._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_9827;
  }
};
tiltontec.util.base.wtrx = function tiltontec$util$base$wtrx() {
  var args__5600__auto__ = [];
  var len__5593__auto___9834 = arguments.length;
  var i__5594__auto___9835 = 0;
  while (true) {
    if (i__5594__auto___9835 < len__5593__auto___9834) {
      args__5600__auto__.push(arguments[i__5594__auto___9835]);
      var G__9836 = i__5594__auto___9835 + 1;
      i__5594__auto___9835 = G__9836;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__9832, body) {
  var vec__9833 = p__9832;
  var lo = cljs.core.nth.call(null, vec__9833, 0, null);
  var hi = cljs.core.nth.call(null, vec__9833, 1, null);
  var trxargs = cljs.core.nthnext.call(null, vec__9833, 2);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "call-wtrx", "tiltontec.util.base/call-wtrx", -151750095, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, 
  null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null))))), body)))), cljs.core._conj.call(null, cljs.core.List.EMPTY, lo), cljs.core._conj.call(null, cljs.core.List.EMPTY, hi), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", 
  "list", "cljs.core/list", -1331406371, null)), trxargs)))))));
};
tiltontec.util.base.wtrx.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.wtrx.cljs$lang$applyTo = function(seq9828) {
  var G__9829 = cljs.core.first.call(null, seq9828);
  var seq9828__$1 = cljs.core.next.call(null, seq9828);
  var G__9830 = cljs.core.first.call(null, seq9828__$1);
  var seq9828__$2 = cljs.core.next.call(null, seq9828__$1);
  var G__9831 = cljs.core.first.call(null, seq9828__$2);
  var seq9828__$3 = cljs.core.next.call(null, seq9828__$2);
  return tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic(G__9829, G__9830, G__9831, seq9828__$3);
};
tiltontec.util.base.wtrx.cljs$lang$macro = true;
tiltontec.util.base.prog1 = function tiltontec$util$base$prog1() {
  var args__5600__auto__ = [];
  var len__5593__auto___9841 = arguments.length;
  var i__5594__auto___9842 = 0;
  while (true) {
    if (i__5594__auto___9842 < len__5593__auto___9841) {
      args__5600__auto__.push(arguments[i__5594__auto___9842]);
      var G__9843 = i__5594__auto___9842 + 1;
      i__5594__auto___9842 = G__9843;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "result__9837__auto__", "result__9837__auto__", -931058316, 
  null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.first.call(null, body))))))), cljs.core.rest.call(null, body), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "result__9837__auto__", "result__9837__auto__", -931058316, null)))));
};
tiltontec.util.base.prog1.cljs$lang$maxFixedArity = 2;
tiltontec.util.base.prog1.cljs$lang$applyTo = function(seq9838) {
  var G__9839 = cljs.core.first.call(null, seq9838);
  var seq9838__$1 = cljs.core.next.call(null, seq9838);
  var G__9840 = cljs.core.first.call(null, seq9838__$1);
  var seq9838__$2 = cljs.core.next.call(null, seq9838__$1);
  return tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic(G__9839, G__9840, seq9838__$2);
};
tiltontec.util.base.prog1.cljs$lang$macro = true;
tiltontec.util.base.b_when = function tiltontec$util$base$b_when() {
  var args__5600__auto__ = [];
  var len__5593__auto___9849 = arguments.length;
  var i__5594__auto___9850 = 0;
  while (true) {
    if (i__5594__auto___9850 < len__5593__auto___9849) {
      args__5600__auto__.push(arguments[i__5594__auto___9850]);
      var G__9851 = i__5594__auto___9850 + 1;
      i__5594__auto___9850 = G__9851;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, var$, form, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-let", "cljs.core/when-let", -2049838349, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, var$), cljs.core._conj.call(null, cljs.core.List.EMPTY, form)))))), 
  body)));
};
tiltontec.util.base.b_when.cljs$lang$maxFixedArity = 4;
tiltontec.util.base.b_when.cljs$lang$applyTo = function(seq9844) {
  var G__9845 = cljs.core.first.call(null, seq9844);
  var seq9844__$1 = cljs.core.next.call(null, seq9844);
  var G__9846 = cljs.core.first.call(null, seq9844__$1);
  var seq9844__$2 = cljs.core.next.call(null, seq9844__$1);
  var G__9847 = cljs.core.first.call(null, seq9844__$2);
  var seq9844__$3 = cljs.core.next.call(null, seq9844__$2);
  var G__9848 = cljs.core.first.call(null, seq9844__$3);
  var seq9844__$4 = cljs.core.next.call(null, seq9844__$3);
  return tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic(G__9845, G__9846, G__9847, G__9848, seq9844__$4);
};
tiltontec.util.base.b_when.cljs$lang$macro = true;
tiltontec.util.base.unless = function tiltontec$util$base$unless() {
  var args__5600__auto__ = [];
  var len__5593__auto___9856 = arguments.length;
  var i__5594__auto___9857 = 0;
  while (true) {
    if (i__5594__auto___9857 < len__5593__auto___9856) {
      args__5600__auto__.push(arguments[i__5594__auto___9857]);
      var G__9858 = i__5594__auto___9857 + 1;
      i__5594__auto___9857 = G__9858;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, form, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-not", "cljs.core/when-not", -556141047, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, form), body)));
};
tiltontec.util.base.unless.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.unless.cljs$lang$applyTo = function(seq9852) {
  var G__9853 = cljs.core.first.call(null, seq9852);
  var seq9852__$1 = cljs.core.next.call(null, seq9852);
  var G__9854 = cljs.core.first.call(null, seq9852__$1);
  var seq9852__$2 = cljs.core.next.call(null, seq9852__$1);
  var G__9855 = cljs.core.first.call(null, seq9852__$2);
  var seq9852__$3 = cljs.core.next.call(null, seq9852__$2);
  return tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic(G__9853, G__9854, G__9855, seq9852__$3);
};
tiltontec.util.base.unless.cljs$lang$macro = true;
tiltontec.util.base.def_rmap_slots = function tiltontec$util$base$def_rmap_slots() {
  var args__5600__auto__ = [];
  var len__5593__auto___9863 = arguments.length;
  var i__5594__auto___9864 = 0;
  while (true) {
    if (i__5594__auto___9864 < len__5593__auto___9863) {
      args__5600__auto__.push(arguments[i__5594__auto___9864]);
      var G__9865 = i__5594__auto___9864 + 1;
      i__5594__auto___9864 = G__9865;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, reader_prefix, slots) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core.map.call(null, function(slot_SHARP_) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defn", "cljs.core/defn", -1606493717, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.symbol.call(null, [cljs.core.str(function() {
      var or__4554__auto__ = reader_prefix;
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return "";
      }
    }()), cljs.core.str(slot_SHARP_)].join(""))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    cljs.core.keyword.call(null, slot_SHARP_)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))))))))));
  }, slots))));
};
tiltontec.util.base.def_rmap_slots.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.def_rmap_slots.cljs$lang$applyTo = function(seq9859) {
  var G__9860 = cljs.core.first.call(null, seq9859);
  var seq9859__$1 = cljs.core.next.call(null, seq9859);
  var G__9861 = cljs.core.first.call(null, seq9859__$1);
  var seq9859__$2 = cljs.core.next.call(null, seq9859__$1);
  var G__9862 = cljs.core.first.call(null, seq9859__$2);
  var seq9859__$3 = cljs.core.next.call(null, seq9859__$2);
  return tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic(G__9860, G__9861, G__9862, seq9859__$3);
};
tiltontec.util.base.def_rmap_slots.cljs$lang$macro = true;
tiltontec.util.base.def_rmap_meta_slots = function tiltontec$util$base$def_rmap_meta_slots() {
  var args__5600__auto__ = [];
  var len__5593__auto___9870 = arguments.length;
  var i__5594__auto___9871 = 0;
  while (true) {
    if (i__5594__auto___9871 < len__5593__auto___9870) {
      args__5600__auto__.push(arguments[i__5594__auto___9871]);
      var G__9872 = i__5594__auto___9871 + 1;
      i__5594__auto___9871 = G__9872;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, reader_prefix, slots) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core.map.call(null, function(slot_SHARP_) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defn", "cljs.core/defn", -1606493717, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.symbol.call(null, [cljs.core.str(function() {
      var or__4554__auto__ = reader_prefix;
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return "";
      }
    }()), cljs.core.str(slot_SHARP_)].join(""))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    cljs.core.keyword.call(null, slot_SHARP_)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "meta", "cljs.core/meta", -748218346, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))))))))));
  }, slots))));
};
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$applyTo = function(seq9866) {
  var G__9867 = cljs.core.first.call(null, seq9866);
  var seq9866__$1 = cljs.core.next.call(null, seq9866);
  var G__9868 = cljs.core.first.call(null, seq9866__$1);
  var seq9866__$2 = cljs.core.next.call(null, seq9866__$1);
  var G__9869 = cljs.core.first.call(null, seq9866__$2);
  var seq9866__$3 = cljs.core.next.call(null, seq9866__$2);
  return tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic(G__9867, G__9868, G__9869, seq9866__$3);
};
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$macro = true;
goog.provide("tiltontec.util.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("tiltontec.util.base");
cljs.core._STAR_print_level_STAR_ = 2;
tiltontec.util.core.type_of = function tiltontec$util$core$type_of(x) {
  return cljs.core.type.call(null, x);
};
tiltontec.util.core.set_ify = function tiltontec$util$core$set_ify(x) {
  if (x == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return cljs.core.set.call(null, x);
    } else {
      return cljs.core.PersistentHashSet.fromArray([x], true);
    }
  }
};
tiltontec.util.core.cl_find = function tiltontec$util$core$cl_find(sought, coll) {
  if (sought == null) {
    return null;
  } else {
    return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([sought], true), coll);
  }
};
tiltontec.util.core.ia_ref = function tiltontec$util$core$ia_ref(x) {
  return cljs.core.atom.call(null, x);
};
tiltontec.util.core.any_ref_QMARK_ = function tiltontec$util$core$any_ref_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
tiltontec.util.core.rmap_setf = function tiltontec$util$core$rmap_setf(p__9875, new_value) {
  var vec__9877 = p__9875;
  var slot = cljs.core.nth.call(null, vec__9877, 0, null);
  var ref = cljs.core.nth.call(null, vec__9877, 1, null);
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))].join(""));
  }
  cljs.core.swap_BANG_.call(null, ref, cljs.core.assoc, slot, new_value);
  return new_value;
};
tiltontec.util.core.rmap_meta_setf = function tiltontec$util$core$rmap_meta_setf(p__9878, new_value) {
  var vec__9880 = p__9878;
  var slot = cljs.core.nth.call(null, vec__9880, 0, null);
  var ref = cljs.core.nth.call(null, vec__9880, 1, null);
  if (cljs.core.truth_(cljs.core.meta.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  cljs.core.alter_meta_BANG_.call(null, ref, cljs.core.assoc, slot, new_value);
  return new_value;
};
if (typeof tiltontec.util.core.err !== "undefined") {
} else {
  tiltontec.util.core.err = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.util.core", "err"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function() {
        var G__9881__delegate = function(a1, args) {
          return cljs.core.fn_QMARK_.call(null, a1);
        };
        var G__9881 = function(a1, var_args) {
          var args = null;
          if (arguments.length > 1) {
            var G__9882__i = 0, G__9882__a = new Array(arguments.length - 1);
            while (G__9882__i < G__9882__a.length) {
              G__9882__a[G__9882__i] = arguments[G__9882__i + 1];
              ++G__9882__i;
            }
            args = new cljs.core.IndexedSeq(G__9882__a, 0);
          }
          return G__9881__delegate.call(this, a1, args);
        };
        G__9881.cljs$lang$maxFixedArity = 1;
        G__9881.cljs$lang$applyTo = function(arglist__9883) {
          var a1 = cljs.core.first(arglist__9883);
          var args = cljs.core.rest(arglist__9883);
          return G__9881__delegate(a1, args);
        };
        G__9881.cljs$core$IFn$_invoke$arity$variadic = G__9881__delegate;
        return G__9881;
      }();
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.util.core.err, true, function() {
  var G__9884__delegate = function(fn, mas) {
    return tiltontec.util.core.err.call(null, cljs.core.apply.call(null, fn, mas));
  };
  var G__9884 = function(fn, var_args) {
    var mas = null;
    if (arguments.length > 1) {
      var G__9885__i = 0, G__9885__a = new Array(arguments.length - 1);
      while (G__9885__i < G__9885__a.length) {
        G__9885__a[G__9885__i] = arguments[G__9885__i + 1];
        ++G__9885__i;
      }
      mas = new cljs.core.IndexedSeq(G__9885__a, 0);
    }
    return G__9884__delegate.call(this, fn, mas);
  };
  G__9884.cljs$lang$maxFixedArity = 1;
  G__9884.cljs$lang$applyTo = function(arglist__9886) {
    var fn = cljs.core.first(arglist__9886);
    var mas = cljs.core.rest(arglist__9886);
    return G__9884__delegate(fn, mas);
  };
  G__9884.cljs$core$IFn$_invoke$arity$variadic = G__9884__delegate;
  return G__9884;
}());
cljs.core._add_method.call(null, tiltontec.util.core.err, new cljs.core.Keyword(null, "default", "default", -1987822328), function() {
  var G__9887__delegate = function(bits) {
    throw new Error(clojure.string.join.call(null, " ", cljs.core.cons.call(null, "jz/err\x3e", bits)));
  };
  var G__9887 = function(var_args) {
    var bits = null;
    if (arguments.length > 0) {
      var G__9888__i = 0, G__9888__a = new Array(arguments.length - 0);
      while (G__9888__i < G__9888__a.length) {
        G__9888__a[G__9888__i] = arguments[G__9888__i + 0];
        ++G__9888__i;
      }
      bits = new cljs.core.IndexedSeq(G__9888__a, 0);
    }
    return G__9887__delegate.call(this, bits);
  };
  G__9887.cljs$lang$maxFixedArity = 0;
  G__9887.cljs$lang$applyTo = function(arglist__9889) {
    var bits = cljs.core.seq(arglist__9889);
    return G__9887__delegate(bits);
  };
  G__9887.cljs$core$IFn$_invoke$arity$variadic = G__9887__delegate;
  return G__9887;
}());
tiltontec.util.core.flz = function tiltontec$util$core$flz(x) {
  if (cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, x), cljs.core.LazySeq)) {
    return cljs.core.vec.call(null, cljs.core.doall.call(null, x));
  } else {
    return x;
  }
};
tiltontec.util.core.wtrx_test = function tiltontec$util$core$wtrx_test(n) {
  return tiltontec.util.base.call_wtrx.call(null, function() {
    if (n > 0) {
      return tiltontec$util$core$wtrx_test.call(null, n - 1);
    } else {
      return null;
    }
  }, 0, 10, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, n), "test"));
};
tiltontec.util.core.slot_users = function tiltontec$util$core$slot_users(me, slot) {
  return cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "slotq", "slotq", 1456717980), cljs.core.map.call(null, cljs.core.deref, (new cljs.core.Keyword(null, "callers", "callers", -1991542784)).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null, slot.call(null, cljs.core.deref.call(null, me))), cljs.core.PersistentHashSet.EMPTY))));
};
tiltontec.util.core.slot_useds = function tiltontec$util$core$slot_useds(me, slot) {
  return cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), cljs.core.map.call(null, cljs.core.deref, (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null, slot.call(null, cljs.core.deref.call(null, me))), cljs.core.PersistentHashSet.EMPTY))));
};
tiltontec.util.core.make_fifo_queue = function tiltontec$util$core$make_fifo_queue() {
  return cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
};
tiltontec.util.core.fifo_data = function tiltontec$util$core$fifo_data(q) {
  return cljs.core.deref.call(null, q);
};
tiltontec.util.core.fifo_clear = function tiltontec$util$core$fifo_clear(q) {
  return cljs.core.swap_BANG_.call(null, q, cljs.core.empty);
};
tiltontec.util.core.fifo_empty_QMARK_ = function tiltontec$util$core$fifo_empty_QMARK_(q) {
  return cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, q));
};
tiltontec.util.core.fifo_peek = function tiltontec$util$core$fifo_peek(q) {
  return cljs.core.first.call(null, cljs.core.deref.call(null, q));
};
tiltontec.util.core.fifo_add = function tiltontec$util$core$fifo_add(q, new$) {
  return cljs.core.swap_BANG_.call(null, q, cljs.core.conj, new$);
};
tiltontec.util.core.fifo_pop = function tiltontec$util$core$fifo_pop(q) {
  if (cljs.core.truth_(tiltontec.util.core.fifo_empty_QMARK_.call(null, q))) {
    return null;
  } else {
    var result__6575__auto__ = cljs.core.first.call(null, cljs.core.deref.call(null, q));
    cljs.core.swap_BANG_.call(null, q, cljs.core.subvec, 1);
    return result__6575__auto__;
  }
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print() {
  var args__5600__auto__ = [];
  var len__5593__auto___13282 = arguments.length;
  var i__5594__auto___13283 = 0;
  while (true) {
    if (i__5594__auto___13283 < len__5593__auto___13282) {
      args__5600__auto__.push(arguments[i__5594__auto___13283]);
      var G__13284 = i__5594__auto___13283 + 1;
      i__5594__auto___13283 = G__13284;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq13281) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13281));
};
cljs.pprint.println = function cljs$pprint$println() {
  var args__5600__auto__ = [];
  var len__5593__auto___13286 = arguments.length;
  var i__5594__auto___13287 = 0;
  while (true) {
    if (i__5594__auto___13287 < len__5593__auto___13286) {
      args__5600__auto__.push(arguments[i__5594__auto___13287]);
      var G__13288 = i__5594__auto___13287 + 1;
      i__5594__auto___13287 = G__13288;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq13285) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13285));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__13292 = cljs.core._EQ_;
    var expr__13293 = c;
    if (cljs.core.truth_(pred__13292.call(null, "\b", expr__13293))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__13292.call(null, "\t", expr__13293))) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(pred__13292.call(null, "\n", expr__13293))) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(pred__13292.call(null, "\f", expr__13293))) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(pred__13292.call(null, "\r", expr__13293))) {
              return "\\return";
            } else {
              if (cljs.core.truth_(pred__13292.call(null, '"', expr__13293))) {
                return '\\"';
              } else {
                if (cljs.core.truth_(pred__13292.call(null, "\\", expr__13293))) {
                  return "\\\\";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr() {
  var args__5600__auto__ = [];
  var len__5593__auto___13296 = arguments.length;
  var i__5594__auto___13297 = 0;
  while (true) {
    if (i__5594__auto___13297 < len__5593__auto___13296) {
      args__5600__auto__.push(arguments[i__5594__auto___13297]);
      var G__13298 = i__5594__auto___13297 + 1;
      i__5594__auto___13297 = G__13298;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq13295) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13295));
};
cljs.pprint.prn = function cljs$pprint$prn() {
  var args__5600__auto__ = [];
  var len__5593__auto___13300 = arguments.length;
  var i__5594__auto___13301 = 0;
  while (true) {
    if (i__5594__auto___13301 < len__5593__auto___13300) {
      args__5600__auto__.push(arguments[i__5594__auto___13301]);
      var G__13302 = i__5594__auto___13301 + 1;
      i__5594__auto___13301 = G__13302;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq13299) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13299));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__13304 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__13304, 0, null);
      var new_context = cljs.core.nth.call(null, vec__13304, 1, null);
      var G__13305 = new_context;
      var G__13306 = remainder;
      var G__13307 = cljs.core.conj.call(null, acc, result);
      context = G__13305;
      lis__$1 = G__13306;
      acc = G__13307;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__13309 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__13309, 0, null);
    var new_context = cljs.core.nth.call(null, vec__13309, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__13310 = new_context;
      var G__13311 = cljs.core.conj.call(null, acc, result);
      context = G__13310;
      acc = G__13311;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__13313 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__13313, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__13313, 1, null);
    var new_context = cljs.core.nth.call(null, vec__13313, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__13314 = new_context;
      var G__13315 = cljs.core.conj.call(null, acc, result);
      context = G__13314;
      acc = G__13315;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5307__auto__ = function cljs$pprint$unzip_map_$_iter__13340(s__13341) {
      return new cljs.core.LazySeq(null, function() {
        var s__13341__$1 = s__13341;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__13341__$1);
          if (temp__4425__auto__) {
            var s__13341__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__13341__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__13341__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__13343 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__13342 = 0;
                while (true) {
                  if (i__13342 < size__5306__auto__) {
                    var vec__13348 = cljs.core._nth.call(null, c__5305__auto__, i__13342);
                    var k = cljs.core.nth.call(null, vec__13348, 0, null);
                    var vec__13349 = cljs.core.nth.call(null, vec__13348, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__13349, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__13349, 1, null);
                    cljs.core.chunk_append.call(null, b__13343, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__13364 = i__13342 + 1;
                    i__13342 = G__13364;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13343), cljs$pprint$unzip_map_$_iter__13340.call(null, cljs.core.chunk_rest.call(null, s__13341__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13343), null);
              }
            } else {
              var vec__13350 = cljs.core.first.call(null, s__13341__$2);
              var k = cljs.core.nth.call(null, vec__13350, 0, null);
              var vec__13351 = cljs.core.nth.call(null, vec__13350, 1, null);
              var v1 = cljs.core.nth.call(null, vec__13351, 0, null);
              var v2 = cljs.core.nth.call(null, vec__13351, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__13340.call(null, cljs.core.rest.call(null, s__13341__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5307__auto__ = function cljs$pprint$unzip_map_$_iter__13352(s__13353) {
      return new cljs.core.LazySeq(null, function() {
        var s__13353__$1 = s__13353;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__13353__$1);
          if (temp__4425__auto__) {
            var s__13353__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__13353__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__13353__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__13355 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__13354 = 0;
                while (true) {
                  if (i__13354 < size__5306__auto__) {
                    var vec__13360 = cljs.core._nth.call(null, c__5305__auto__, i__13354);
                    var k = cljs.core.nth.call(null, vec__13360, 0, null);
                    var vec__13361 = cljs.core.nth.call(null, vec__13360, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__13361, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__13361, 1, null);
                    cljs.core.chunk_append.call(null, b__13355, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__13365 = i__13354 + 1;
                    i__13354 = G__13365;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13355), cljs$pprint$unzip_map_$_iter__13352.call(null, cljs.core.chunk_rest.call(null, s__13353__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13355), null);
              }
            } else {
              var vec__13362 = cljs.core.first.call(null, s__13353__$2);
              var k = cljs.core.nth.call(null, vec__13362, 0, null);
              var vec__13363 = cljs.core.nth.call(null, vec__13362, 1, null);
              var v1 = cljs.core.nth.call(null, vec__13363, 0, null);
              var v2 = cljs.core.nth.call(null, vec__13363, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__13352.call(null, cljs.core.rest.call(null, s__13353__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5307__auto__ = function cljs$pprint$tuple_map_$_iter__13374(s__13375) {
      return new cljs.core.LazySeq(null, function() {
        var s__13375__$1 = s__13375;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__13375__$1);
          if (temp__4425__auto__) {
            var s__13375__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__13375__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__13375__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__13377 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__13376 = 0;
                while (true) {
                  if (i__13376 < size__5306__auto__) {
                    var vec__13380 = cljs.core._nth.call(null, c__5305__auto__, i__13376);
                    var k = cljs.core.nth.call(null, vec__13380, 0, null);
                    var v = cljs.core.nth.call(null, vec__13380, 1, null);
                    cljs.core.chunk_append.call(null, b__13377, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__13382 = i__13376 + 1;
                    i__13376 = G__13382;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13377), cljs$pprint$tuple_map_$_iter__13374.call(null, cljs.core.chunk_rest.call(null, s__13375__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13377), null);
              }
            } else {
              var vec__13381 = cljs.core.first.call(null, s__13375__$2);
              var k = cljs.core.nth.call(null, vec__13381, 0, null);
              var v = cljs.core.nth.call(null, vec__13381, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__13374.call(null, cljs.core.rest.call(null, s__13375__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__13383 = n - 1;
          n = G__13383;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__13384 = n + 1;
        n = G__13384;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.fromArray([val], true);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__13385 = pos + 1;
      pos = G__13385;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = {};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__5190__auto__ = pp == null ? null : pp;
    var m__5191__auto__ = cljs.pprint._ppflush[goog.typeOf(x__5190__auto__)];
    if (!(m__5191__auto__ == null)) {
      return m__5191__auto__.call(null, pp);
    } else {
      var m__5191__auto____$1 = cljs.pprint._ppflush["_"];
      if (!(m__5191__auto____$1 == null)) {
        return m__5191__auto____$1.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer() {
  var args13389 = [];
  var len__5593__auto___13398 = arguments.length;
  var i__5594__auto___13399 = 0;
  while (true) {
    if (i__5594__auto___13399 < len__5593__auto___13398) {
      args13389.push(arguments[i__5594__auto___13399]);
      var G__13400 = i__5594__auto___13399 + 1;
      i__5594__auto___13399 = G__13400;
      continue;
    } else {
    }
    break;
  }
  var G__13391 = args13389.length;
  switch(G__13391) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13389.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs.pprint.t13392 !== "undefined") {
  } else {
    cljs.pprint.t13392 = function(writer, max_columns, fields, meta13393) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta13393 = meta13393;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t13392.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_13394, meta13393__$1) {
        var self__ = this;
        var _13394__$1 = this;
        return new cljs.pprint.t13392(self__.writer, self__.max_columns, self__.fields, meta13393__$1);
      };
    }(fields);
    cljs.pprint.t13392.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_13394) {
        var self__ = this;
        var _13394__$1 = this;
        return self__.meta13393;
      };
    }(fields);
    cljs.pprint.t13392.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t13392.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(fields);
    cljs.pprint.t13392.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__13395 = cljs.core._EQ_;
        var expr__13396 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__13395.call(null, String, expr__13396))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
          } else {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(s, nl, pred__13395, expr__13396, this$__$1, fields) {
              return function(p1__13388_SHARP_) {
                return cljs.core._EQ_.call(null, p1__13388_SHARP_, "\n");
              };
            }(s, nl, pred__13395, expr__13396, this$__$1, fields), s)));
          }
          return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__13395.call(null, Number, expr__13396))) {
            return cljs.pprint.c_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__13396)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t13392.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta13393", "meta13393", 374889891, null)], null);
      };
    }(fields);
    cljs.pprint.t13392.cljs$lang$type = true;
    cljs.pprint.t13392.cljs$lang$ctorStr = "cljs.pprint/t13392";
    cljs.pprint.t13392.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
        return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t13392");
      };
    }(fields);
    cljs.pprint.__GT_t13392 = function(fields) {
      return function cljs$pprint$__GT_t13392(writer__$1, max_columns__$1, fields__$1, meta13393) {
        return new cljs.pprint.t13392(writer__$1, max_columns__$1, fields__$1, meta13393);
      };
    }(fields);
  }
  return new cljs.pprint.t13392(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k13403, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__13405 = k13403 instanceof cljs.core.Keyword ? k13403.fqn : null;
  switch(G__13405) {
    case "suffix":
      return self__.suffix;
      break;
    case "indent":
      return self__.indent;
      break;
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13403, else__5152__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = true;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__13402) {
  var self__ = this;
  var G__13402__$1 = this;
  return new cljs.core.RecordIter(0, G__13402__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__13402) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__13406 = cljs.core.keyword_identical_QMARK_;
  var expr__13407 = k__5157__auto__;
  if (cljs.core.truth_(pred__13406.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__13407))) {
    return new cljs.pprint.logical_block(G__13402, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13406.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__13407))) {
      return new cljs.pprint.logical_block(self__.parent, G__13402, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13406.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__13407))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__13402, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13406.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__13407))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__13402, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13406.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__13407))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__13402, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__13406.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__13407))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__13402, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__13406.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__13407))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__13402, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__13406.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__13407))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__13402, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__13406.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__13407))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__13402, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__13406.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__13407))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__13402, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__13402), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__13402) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__13402, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__13404) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__13404), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__13404), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__13404), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__13404), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__13404), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__13404), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__13404), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__13404), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__13404), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__13404), null, cljs.core.dissoc.call(null, G__13404, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", 
  "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__13410 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__13410;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k13412, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__13414 = k13412 instanceof cljs.core.Keyword ? k13412.fqn : null;
  switch(G__13414) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13412, else__5152__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = true;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__13411) {
  var self__ = this;
  var G__13411__$1 = this;
  return new cljs.core.RecordIter(0, G__13411__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__13411) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__13415 = cljs.core.keyword_identical_QMARK_;
  var expr__13416 = k__5157__auto__;
  if (cljs.core.truth_(pred__13415.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__13416))) {
    return new cljs.pprint.buffer_blob(G__13411, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13415.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__13416))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__13411, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13415.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__13416))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__13411, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13415.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__13416))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__13411, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13415.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__13416))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__13411, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__13411), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], 
  null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__13411) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__13411, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__13413) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__13413), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__13413), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__13413), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__13413), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__13413), null, cljs.core.dissoc.call(null, G__13413, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__9637__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__9637__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k13420, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__13422 = k13420 instanceof cljs.core.Keyword ? k13420.fqn : null;
  switch(G__13422) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13420, else__5152__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__13419) {
  var self__ = this;
  var G__13419__$1 = this;
  return new cljs.core.RecordIter(0, G__13419__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__13419) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__13423 = cljs.core.keyword_identical_QMARK_;
  var expr__13424 = k__5157__auto__;
  if (cljs.core.truth_(pred__13423.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__13424))) {
    return new cljs.pprint.nl_t(G__13419, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13423.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__13424))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__13419, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13423.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__13424))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__13419, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13423.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__13424))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__13419, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13423.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__13424))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__13419, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__13419), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__13419) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__13419, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__13421) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__13421), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__13421), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__13421), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__13421), (new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__13421), null, cljs.core.dissoc.call(null, G__13421, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__9637__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__9637__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k13428, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__13430 = k13428 instanceof cljs.core.Keyword ? k13428.fqn : null;
  switch(G__13430) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13428, else__5152__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__13427) {
  var self__ = this;
  var G__13427__$1 = this;
  return new cljs.core.RecordIter(0, G__13427__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__13427) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__13431 = cljs.core.keyword_identical_QMARK_;
  var expr__13432 = k__5157__auto__;
  if (cljs.core.truth_(pred__13431.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__13432))) {
    return new cljs.pprint.start_block_t(G__13427, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13431.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__13432))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__13427, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13431.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__13432))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__13427, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13431.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__13432))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__13427, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__13427), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__13427) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__13427, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__13429) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__13429), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__13429), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__13429), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__13429), null, cljs.core.dissoc.call(null, 
  G__13429, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__9637__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__9637__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k13436, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__13438 = k13436 instanceof cljs.core.Keyword ? k13436.fqn : null;
  switch(G__13438) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13436, else__5152__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__13435) {
  var self__ = this;
  var G__13435__$1 = this;
  return new cljs.core.RecordIter(0, G__13435__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__13435) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__13439 = cljs.core.keyword_identical_QMARK_;
  var expr__13440 = k__5157__auto__;
  if (cljs.core.truth_(pred__13439.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__13440))) {
    return new cljs.pprint.end_block_t(G__13435, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13439.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__13440))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__13435, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13439.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__13440))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__13435, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13439.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__13440))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__13435, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__13435), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__13435) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__13435, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__13437) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__13437), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__13437), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__13437), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__13437), null, cljs.core.dissoc.call(null, 
  G__13437, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__9637__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__9637__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k13444, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__13446 = k13444 instanceof cljs.core.Keyword ? k13444.fqn : null;
  switch(G__13446) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13444, else__5152__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__13443) {
  var self__ = this;
  var G__13443__$1 = this;
  return new cljs.core.RecordIter(0, G__13443__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__13443) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__13447 = cljs.core.keyword_identical_QMARK_;
  var expr__13448 = k__5157__auto__;
  if (cljs.core.truth_(pred__13447.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__13448))) {
    return new cljs.pprint.indent_t(G__13443, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13447.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__13448))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__13443, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13447.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__13448))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__13443, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13447.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__13448))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__13443, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13447.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__13448))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__13443, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__13447.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__13448))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__13443, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__13443), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__13443) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__13443, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__13445) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__13445), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__13445), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__13445), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__13445), (new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__13445), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__13445), null, cljs.core.dissoc.call(null, G__13445, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__9637__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__9637__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(p1__13452_SHARP_, p2__13451_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__13451_SHARP_);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__4425__auto___13453 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto___13453)) {
    var cb_13454 = temp__4425__auto___13453;
    cb_13454.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__4425__auto___13455 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__4425__auto___13455)) {
    var prefix_13456 = temp__4425__auto___13455;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_13456);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__4425__auto___13457 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto___13457)) {
    var cb_13458 = temp__4425__auto___13457;
    cb_13458.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var suffix = temp__4425__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__13459 = cljs.core._EQ_;
    var expr__13460 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__13459.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__13460))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__13459.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__13460))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__13460)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__4554__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__4554__auto__) {
      return or__4554__auto__;
    } else {
      var and__4542__auto__ = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__4542__auto__) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__4542__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__4423__auto___13462 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4423__auto___13462)) {
      var tws_13463 = temp__4423__auto___13462;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_13463);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__13468 = cljs.core.seq.call(null, tokens);
  var chunk__13469 = null;
  var count__13470 = 0;
  var i__13471 = 0;
  while (true) {
    if (i__13471 < count__13470) {
      var token = cljs.core._nth.call(null, chunk__13469, i__13471);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__4423__auto___13472 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__4423__auto___13472)) {
          var tws_13473 = temp__4423__auto___13472;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_13473);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_13474 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__4542__auto__)) {
          return tws_13474;
        } else {
          return and__4542__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_13474);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__13475 = seq__13468;
      var G__13476 = chunk__13469;
      var G__13477 = count__13470;
      var G__13478 = i__13471 + 1;
      seq__13468 = G__13475;
      chunk__13469 = G__13476;
      count__13470 = G__13477;
      i__13471 = G__13478;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13468);
      if (temp__4425__auto__) {
        var seq__13468__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13468__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__13468__$1);
          var G__13479 = cljs.core.chunk_rest.call(null, seq__13468__$1);
          var G__13480 = c__5338__auto__;
          var G__13481 = cljs.core.count.call(null, c__5338__auto__);
          var G__13482 = 0;
          seq__13468 = G__13479;
          chunk__13469 = G__13480;
          count__13470 = G__13481;
          i__13471 = G__13482;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__13468__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__4423__auto___13483 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__4423__auto___13483)) {
              var tws_13484 = temp__4423__auto___13483;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_13484);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_13485 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__4542__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__4542__auto__)) {
              return tws_13485;
            } else {
              return and__4542__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_13485);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__13486 = cljs.core.next.call(null, seq__13468__$1);
          var G__13487 = null;
          var G__13488 = 0;
          var G__13489 = 0;
          seq__13468 = G__13486;
          chunk__13469 = G__13487;
          count__13470 = G__13488;
          i__13471 = G__13489;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__4554__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, section));
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__4542__auto__ = miser_width;
  if (cljs.core.truth_(and__4542__auto__)) {
    var and__4542__auto____$1 = maxcol;
    if (cljs.core.truth_(and__4542__auto____$1)) {
      var and__4542__auto____$2 = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__4542__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return and__4542__auto____$2;
      }
    } else {
      return and__4542__auto____$1;
    }
  } else {
    return and__4542__auto__;
  }
};
if (typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__4554__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    var or__4554__auto____$1 = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection));
    if (or__4554__auto____$1) {
      return or__4554__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__13490_SHARP_) {
      return cljs.core.not.call(null, function() {
        var and__4542__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__13490_SHARP_);
        if (cljs.core.truth_(and__4542__auto__)) {
          return cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__13490_SHARP_), lb);
        } else {
          return and__4542__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__13491_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__13491_SHARP_);
      return cljs.core.not.call(null, function() {
        var and__4542__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__13491_SHARP_);
        if (cljs.core.truth_(and__4542__auto__)) {
          var or__4554__auto__ = cljs.core._EQ_.call(null, nl_lb, lb);
          if (or__4554__auto__) {
            return or__4554__auto__;
          } else {
            return cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb);
          }
        } else {
          return and__4542__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__13492 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__13492;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_13493 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_13493);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__13494_SHARP_) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, p1__13494_SHARP_));
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__13497 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__13497, 0, null);
  var b = cljs.core.nth.call(null, vec__13497, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__13498 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__13498, 0, null);
    var remainder = cljs.core.nth.call(null, vec__13498, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, result));
    var result__$1 = long_section ? function() {
      var rem2 = cljs$pprint$write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer))) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__13499 = new_buffer;
        buffer = G__13499;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var buf = temp__4423__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var tws = temp__4425__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_13508 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_13509 = oldpos_13508 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_13509);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_13508, newpos_13509));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__13504_13510 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__13505_13511 = null;
    var count__13506_13512 = 0;
    var i__13507_13513 = 0;
    while (true) {
      if (i__13507_13513 < count__13506_13512) {
        var l_13514__$1 = cljs.core._nth.call(null, chunk__13505_13511, i__13507_13513);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_13514__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__13515 = seq__13504_13510;
        var G__13516 = chunk__13505_13511;
        var G__13517 = count__13506_13512;
        var G__13518 = i__13507_13513 + 1;
        seq__13504_13510 = G__13515;
        chunk__13505_13511 = G__13516;
        count__13506_13512 = G__13517;
        i__13507_13513 = G__13518;
        continue;
      } else {
        var temp__4425__auto___13519 = cljs.core.seq.call(null, seq__13504_13510);
        if (temp__4425__auto___13519) {
          var seq__13504_13520__$1 = temp__4425__auto___13519;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13504_13520__$1)) {
            var c__5338__auto___13521 = cljs.core.chunk_first.call(null, seq__13504_13520__$1);
            var G__13522 = cljs.core.chunk_rest.call(null, seq__13504_13520__$1);
            var G__13523 = c__5338__auto___13521;
            var G__13524 = cljs.core.count.call(null, c__5338__auto___13521);
            var G__13525 = 0;
            seq__13504_13510 = G__13522;
            chunk__13505_13511 = G__13523;
            count__13506_13512 = G__13524;
            i__13507_13513 = G__13525;
            continue;
          } else {
            var l_13526__$1 = cljs.core.first.call(null, seq__13504_13520__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_13526__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__13527 = cljs.core.next.call(null, seq__13504_13520__$1);
            var G__13528 = null;
            var G__13529 = 0;
            var G__13530 = 0;
            seq__13504_13510 = G__13527;
            chunk__13505_13511 = G__13528;
            count__13506_13512 = G__13529;
            i__13507_13513 = G__13530;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs.pprint.t13537 !== "undefined") {
  } else {
    cljs.pprint.t13537 = function(pretty_writer, writer, max_columns, miser_width, lb, fields, meta13538) {
      this.pretty_writer = pretty_writer;
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta13538 = meta13538;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t13537.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_13539, meta13538__$1) {
        var self__ = this;
        var _13539__$1 = this;
        return new cljs.pprint.t13537(self__.pretty_writer, self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta13538__$1);
      };
    }(lb, fields);
    cljs.pprint.t13537.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_13539) {
        var self__ = this;
        var _13539__$1 = this;
        return self__.meta13538;
      };
    }(lb, fields);
    cljs.pprint.t13537.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t13537.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__13540 = cljs.core._EQ_;
        var expr__13541 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__13540.call(null, String, expr__13541))) {
          var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
          var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
          var white_space = cljs.core.subs.call(null, s0, cljs.core.count.call(null, s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space.call(null, this$__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
            return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
            var newpos = oldpos + cljs.core.count.call(null, s0);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__13540.call(null, Number, expr__13541))) {
            return cljs.pprint.p_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__13541)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t13537.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        cljs.pprint._ppflush.call(null, this$__$1);
        return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t13537.prototype.cljs$pprint$IPrettyFlush$ = true;
    cljs.pprint.t13537.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space.call(null, this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t13537.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
        new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta13538", "meta13538", -2045312889, null)], null);
      };
    }(lb, fields);
    cljs.pprint.t13537.cljs$lang$type = true;
    cljs.pprint.t13537.cljs$lang$ctorStr = "cljs.pprint/t13537";
    cljs.pprint.t13537.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
        return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t13537");
      };
    }(lb, fields);
    cljs.pprint.__GT_t13537 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t13537(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta13538) {
        return new cljs.pprint.t13537(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta13538);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t13537(cljs$pprint$pretty_writer, writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__4425__auto___13543 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4425__auto___13543)) {
      var cb_13544 = temp__4425__auto___13543;
      cb_13544.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__4425__auto___13545 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4425__auto___13545)) {
      var cb_13546 = temp__4425__auto___13545;
      cb_13546.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_13547 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_13548 = oldpos_13547 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_13548);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_13547, newpos_13548));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__13552 = cljs.core._EQ_;
      var expr__13553 = relative_to;
      if (cljs.core.truth_(pred__13552.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__13553))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__13552.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__13553))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__13553)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "/home/kenneth/rube/target/cljsbuild-compiler-0/cljs/pprint.cljs", 21, 1, true, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "/home/kenneth/rube/target/cljsbuild-compiler-0/cljs/pprint.cljs", 22, 1, true, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "/home/kenneth/rube/target/cljsbuild-compiler-0/cljs/pprint.cljs", 15, 1, true, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "/home/kenneth/rube/target/cljsbuild-compiler-0/cljs/pprint.cljs", 14, 1, true, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "/home/kenneth/rube/target/cljsbuild-compiler-0/cljs/pprint.cljs", 28, 1, true, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "/home/kenneth/rube/target/cljsbuild-compiler-0/cljs/pprint.cljs", 
14, 1, true, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 1, true, 112, 122, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, true, 80, 86, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "/home/kenneth/rube/target/cljsbuild-compiler-0/cljs/pprint.cljs", 25, 1, true, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 17, 1, true, 104, 110, cljs.core.List.EMPTY, "When set to logical true, objects will be printed in a way that preserves\n  their type when read in later.\n\n  Defaults to false.", 
cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "/home/kenneth/rube/target/cljsbuild-compiler-0/cljs/pprint.cljs", 
16, 1, true, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "/home/kenneth/rube/target/cljsbuild-compiler-0/cljs/pprint.cljs", 
13, 1, true, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__13555_SHARP_) {
    var temp__4425__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__13555_SHARP_));
    if (cljs.core.truth_(temp__4425__auto__)) {
      var v = temp__4425__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__13555_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__4542__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  if (and__4542__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return and__4542__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__4542__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__4542__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write() {
  var args__5600__auto__ = [];
  var len__5593__auto___13576 = arguments.length;
  var i__5594__auto___13577 = 0;
  while (true) {
    if (i__5594__auto___13577 < len__5593__auto___13576) {
      args__5600__auto__.push(arguments[i__5594__auto___13577]);
      var G__13578 = i__5594__auto___13577 + 1;
      i__5594__auto___13577 = G__13578;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR_13562 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR_13563 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR_13564 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR_13565 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR_13566 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR_13567 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR_13568 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR_13569 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR_13570 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR_13571 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR_13572 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR_13573 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__9620__auto___13579 = base_writer;
        var new_writer__9621__auto___13580 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__9620__auto___13579));
        var _STAR_out_STAR_13574_13581 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new_writer__9621__auto___13580 ? cljs.pprint.make_pretty_writer.call(null, base_writer__9620__auto___13579, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__9620__auto___13579;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_13574_13581;
        }
      } else {
        var _STAR_out_STAR_13575_13582 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = base_writer;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_13575_13582;
        }
      }
      if (optval === true) {
        cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
      }
      if (optval == null) {
        return [cljs.core.str(sb)].join("");
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR_13573;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR_13572;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR_13571;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR_13570;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_13569;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR_13568;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR_13567;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR_13566;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_13565;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_13564;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR_13563;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR_13562;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq13560) {
  var G__13561 = cljs.core.first.call(null, seq13560);
  var seq13560__$1 = cljs.core.next.call(null, seq13560);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(G__13561, seq13560__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint() {
  var args13583 = [];
  var len__5593__auto___13589 = arguments.length;
  var i__5594__auto___13590 = 0;
  while (true) {
    if (i__5594__auto___13590 < len__5593__auto___13589) {
      args13583.push(arguments[i__5594__auto___13590]);
      var G__13591 = i__5594__auto___13590 + 1;
      i__5594__auto___13590 = G__13591;
      continue;
    } else {
    }
    break;
  }
  var G__13585 = args13583.length;
  switch(G__13585) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13583.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR_13586 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_13586;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__9620__auto__ = writer;
  var new_writer__9621__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__9620__auto__));
  var _STAR_out_STAR_13587 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new_writer__9621__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__9620__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__9620__auto__;
  try {
    var _STAR_print_pretty_STAR_13588_13593 = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = true;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_13588_13593;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_13587;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error([cljs.core.str("Bad argument: "), cljs.core.str(arg), cljs.core.str(". It must be one of "), cljs.core.str(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__4542__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__4542__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__4542__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format() {
  var args__5600__auto__ = [];
  var len__5593__auto___13597 = arguments.length;
  var i__5594__auto___13598 = 0;
  while (true) {
    if (i__5594__auto___13598 < len__5593__auto___13597) {
      args__5600__auto__.push(arguments[i__5594__auto___13598]);
      var G__13599 = i__5594__auto___13598 + 1;
      i__5594__auto___13598 = G__13599;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq13594) {
  var G__13595 = cljs.core.first.call(null, seq13594);
  var seq13594__$1 = cljs.core.next.call(null, seq13594);
  var G__13596 = cljs.core.first.call(null, seq13594__$1);
  var seq13594__$2 = cljs.core.next.call(null, seq13594__$1);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(G__13595, G__13596, seq13594__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str(message), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k13601, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__13603 = k13601 instanceof cljs.core.Keyword ? k13601.fqn : null;
  switch(G__13603) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13601, else__5152__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = true;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__13600) {
  var self__ = this;
  var G__13600__$1 = this;
  return new cljs.core.RecordIter(0, G__13600__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__13600) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__13604 = cljs.core.keyword_identical_QMARK_;
  var expr__13605 = k__5157__auto__;
  if (cljs.core.truth_(pred__13604.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__13605))) {
    return new cljs.pprint.arg_navigator(G__13600, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13604.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__13605))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__13600, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13604.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__13605))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__13600, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__13600), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__13600) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__13600, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__13602) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__13602), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__13602), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__13602), null, cljs.core.dissoc.call(null, G__13602, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220)), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__13609 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__13609, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13609, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5149__auto__, k__5150__auto__) {
  var self__ = this;
  var this__5149__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5149__auto____$1, k__5150__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5151__auto__, k13611, else__5152__auto__) {
  var self__ = this;
  var this__5151__auto____$1 = this;
  var G__13613 = k13611 instanceof cljs.core.Keyword ? k13611.fqn : null;
  switch(G__13613) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13611, else__5152__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5163__auto__, writer__5164__auto__, opts__5165__auto__) {
  var self__ = this;
  var this__5163__auto____$1 = this;
  var pr_pair__5166__auto__ = function(this__5163__auto____$1) {
    return function(keyval__5167__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, cljs.core.pr_writer, "", " ", "", opts__5165__auto__, keyval__5167__auto__);
    };
  }(this__5163__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5164__auto__, pr_pair__5166__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__5165__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = true;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__13610) {
  var self__ = this;
  var G__13610__$1 = this;
  return new cljs.core.RecordIter(0, G__13610__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5147__auto__) {
  var self__ = this;
  var this__5147__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5143__auto__) {
  var self__ = this;
  var this__5143__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5153__auto__) {
  var self__ = this;
  var this__5153__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5144__auto__) {
  var self__ = this;
  var this__5144__auto____$1 = this;
  var h__4970__auto__ = self__.__hash;
  if (!(h__4970__auto__ == null)) {
    return h__4970__auto__;
  } else {
    var h__4970__auto____$1 = cljs.core.hash_imap.call(null, this__5144__auto____$1);
    self__.__hash = h__4970__auto____$1;
    return h__4970__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5145__auto__, other__5146__auto__) {
  var self__ = this;
  var this__5145__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = other__5146__auto__;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = this__5145__auto____$1.constructor === other__5146__auto__.constructor;
      if (and__4542__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5145__auto____$1, other__5146__auto__);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5158__auto__, k__5159__auto__) {
  var self__ = this;
  var this__5158__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__5159__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5158__auto____$1), self__.__meta), k__5159__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5159__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5156__auto__, k__5157__auto__, G__13610) {
  var self__ = this;
  var this__5156__auto____$1 = this;
  var pred__13614 = cljs.core.keyword_identical_QMARK_;
  var expr__13615 = k__5157__auto__;
  if (cljs.core.truth_(pred__13614.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__13615))) {
    return new cljs.pprint.compiled_directive(G__13610, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13614.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__13615))) {
      return new cljs.pprint.compiled_directive(self__.func, G__13610, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13614.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__13615))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__13610, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13614.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__13615))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__13610, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5157__auto__, G__13610), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5161__auto__) {
  var self__ = this;
  var this__5161__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5148__auto__, G__13610) {
  var self__ = this;
  var this__5148__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__13610, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5154__auto__, entry__5155__auto__) {
  var self__ = this;
  var this__5154__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5155__auto__)) {
    return cljs.core._assoc.call(null, this__5154__auto____$1, cljs.core._nth.call(null, entry__5155__auto__, 0), cljs.core._nth.call(null, entry__5155__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5154__auto____$1, entry__5155__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__5183__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__5183__auto__, writer__5184__auto__) {
  return cljs.core._write.call(null, writer__5184__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__13612) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__13612), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__13612), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__13612), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__13612), null, cljs.core.dissoc.call(null, G__13612, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__13618, navigator) {
  var vec__13622 = p__13618;
  var param = cljs.core.nth.call(null, vec__13622, 0, null);
  var vec__13623 = cljs.core.nth.call(null, vec__13622, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__13623, 0, null);
  var offset = cljs.core.nth.call(null, vec__13623, 1, null);
  var vec__13624 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__13624, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__13624, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__13626 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__13626, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__13626, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str(n), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("");
    } else {
      return [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__4554__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
        }
      }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__13628 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__13628, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__13628, 1, null);
  var base_output = function() {
    var or__4554__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str(chars), cljs.core.str(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(base_output), cljs.core.str(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__13629_SHARP_) {
    if (p1__13629_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__13629_SHARP_, base), cljs.core.quot.call(null, p1__13629_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(xlated_val) {
      return function(p1__13630_SHARP_) {
        if (p1__13630_SHARP_ < 10) {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__13630_SHARP_);
        } else {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__13630_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__13633 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__13633, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__13633, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, arg))) {
    var neg_13634 = arg < 0;
    var pos_arg_13635 = neg_13634 ? -arg : arg;
    var raw_str_13636 = cljs.pprint.opt_base_str.call(null, base, pos_arg_13635);
    var group_str_13637 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(neg_13634, pos_arg_13635, raw_str_13636, vec__13633, arg, arg_navigator__$1) {
        return function(p1__13631_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, p1__13631_SHARP_);
        };
      }(neg_13634, pos_arg_13635, raw_str_13636, vec__13633, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_13636));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_13636;
    var signed_str_13638 = neg_13634 ? [cljs.core.str("-"), cljs.core.str(group_str_13637)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? [cljs.core.str("+"), cljs.core.str(group_str_13637)].join("") : group_str_13637;
    var padded_str_13639 = signed_str_13638.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_13638.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(signed_str_13638)].join("") : 
    signed_str_13638;
    cljs.pprint.print.call(null, padded_str_13639);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null), cljs.core.str(this$), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null)].join("");
    } else {
      var G__13640 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str(this$), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__13641 = pos - 1;
      var G__13642 = cljs.core.first.call(null, remainder);
      var G__13643 = cljs.core.next.call(null, remainder);
      acc = G__13640;
      pos = G__13641;
      this$ = G__13642;
      remainder = G__13643;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__13645 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__13645, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13645, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_13646 = arg < 0 ? -arg : arg;
    var parts_13647 = cljs.pprint.remainders.call(null, 1E3, abs_arg_13646);
    if (cljs.core.count.call(null, parts_13647) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_13648 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_13647);
      var full_str_13649 = cljs.pprint.add_english_scales.call(null, parts_strs_13648, 0);
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(full_str_13649)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__13651 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__13651, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13651, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_13652 = arg < 0 ? -arg : arg;
    var parts_13653 = cljs.pprint.remainders.call(null, 1E3, abs_arg_13652);
    if (cljs.core.count.call(null, parts_13653) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_13654 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_13653));
      var head_str_13655 = cljs.pprint.add_english_scales.call(null, parts_strs_13654, 1);
      var tail_str_13656 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_13653));
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(!cljs.core.empty_QMARK_.call(null, head_str_13655) && !cljs.core.empty_QMARK_.call(null, tail_str_13656) ? [cljs.core.str(head_str_13655), cljs.core.str(", "), cljs.core.str(tail_str_13656)].join("") : !cljs.core.empty_QMARK_.call(null, head_str_13655) ? [cljs.core.str(head_str_13655), cljs.core.str("th")].join("") : tail_str_13656)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_13657 = cljs.core.rem.call(null, arg, 100);
      var not_teens_13658 = 11 < low_two_digits_13657 || 19 > low_two_digits_13657;
      var low_digit_13659 = cljs.core.rem.call(null, low_two_digits_13657, 10);
      cljs.pprint.print.call(null, low_digit_13659 === 1 && not_teens_13658 ? "st" : low_digit_13659 === 2 && not_teens_13658 ? "nd" : low_digit_13659 === 3 && not_teens_13658 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__13661 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__13661, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13661, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4E3) {
    var digits_13662 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_13663 = cljs.core.PersistentVector.EMPTY;
    var pos_13664 = cljs.core.count.call(null, digits_13662) - 1;
    var digits_13665__$1 = digits_13662;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_13665__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_13663));
      } else {
        var digit_13666 = cljs.core.first.call(null, digits_13665__$1);
        var G__13667 = cljs.core._EQ_.call(null, 0, digit_13666) ? acc_13663 : cljs.core.conj.call(null, acc_13663, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_13664), digit_13666 - 1));
        var G__13668 = pos_13664 - 1;
        var G__13669 = cljs.core.next.call(null, digits_13665__$1);
        acc_13663 = G__13667;
        pos_13664 = G__13668;
        digits_13665__$1 = G__13669;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__13671 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__13671, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13671, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__13676 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__13676, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13676, 1, null);
  var pred__13677_13680 = cljs.core._EQ_;
  var expr__13678_13681 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__13677_13680.call(null, "o", expr__13678_13681))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__13677_13680.call(null, "u", expr__13678_13681))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__13677_13680.call(null, null, expr__13678_13681))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__13678_13681)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__13683 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__13683, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13683, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__13686 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__13686, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__13686, 1, null);
      var vec__13687 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__13687, 0, null);
      var offsets = cljs.core.nth.call(null, vec__13687, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, [cljs.core.str(f)].join(""));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, [cljs.core.str(cljs.core.count.call(null, s) - 1)].join("")], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, dotloc)), cljs.core.str(cljs.core.subs.call(null, s, dotloc + 1))].join(""), [cljs.core.str(dotloc - 1)].join("")], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, 1)), cljs.core.str(cljs.core.subs.call(null, s, 2, exploc))].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__13689 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__13689, 0, null);
  var e = cljs.core.nth.call(null, vec__13689, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__13690 = i - 1;
        i = G__13690;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__4554__auto__ = d;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__4866__auto__ = 2;
      var y__4867__auto__ = w;
      return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__4866__auto__ = e + 1;
      var y__4867__auto__ = w__$1 - 1;
      return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
    }() : w__$1 + e;
    var vec__13692 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__13692, 0, null);
    var e1 = cljs.core.nth.call(null, vec__13692, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__13692, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__13692, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > cljs.core.count.call(null, result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__13694 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__13694, 0, null);
  var e1 = cljs.core.nth.call(null, vec__13694, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str(m1), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, loc)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, k)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__13699 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__13699, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13699, 1, null);
  var vec__13700 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__13700, 0, null);
  var abs = cljs.core.nth.call(null, vec__13700, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__13701 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__13701, 0, null);
  var exp = cljs.core.nth.call(null, vec__13701, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__13702 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__13702, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__13702, 1, null);
  var expanded = cljs.core.nth.call(null, vec__13702, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__4542__auto__ = w;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = d;
      if (cljs.core.truth_(and__4542__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && cljs.core.count.call(null, fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_13703 = cljs.core.count.call(null, fixed_repr__$1);
    var signed_len_13704 = cljs.core.truth_(add_sign) ? len_13703 + 1 : len_13703;
    var prepend_zero_13705__$1 = prepend_zero && !(signed_len_13704 >= w);
    var append_zero_13706__$1 = append_zero && !(signed_len_13704 >= w);
    var full_len_13707 = prepend_zero_13705__$1 || append_zero_13706__$1 ? signed_len_13704 + 1 : signed_len_13704;
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = full_len_13707 > w;
      if (and__4542__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4542__auto__;
      }
    }())) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_13707, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero_13705__$1 ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero_13706__$1 ? "0" : null)].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero ? "0" : null)].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__13714 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__13714, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13714, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__13716_13720 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__13717_13721 = G__13716_13720;
  var mantissa_13722 = cljs.core.nth.call(null, vec__13717_13721, 0, null);
  var exp_13723 = cljs.core.nth.call(null, vec__13717_13721, 1, null);
  var G__13716_13724__$1 = G__13716_13720;
  while (true) {
    var vec__13718_13725 = G__13716_13724__$1;
    var mantissa_13726__$1 = cljs.core.nth.call(null, vec__13718_13725, 0, null);
    var exp_13727__$1 = cljs.core.nth.call(null, vec__13718_13725, 1, null);
    var w_13728 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_13729 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_13730 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_13731 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_13732 = function() {
      var or__4554__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_13733 = function() {
      var or__4554__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_13734 = k_13731 <= 0;
    var scaled_exp_13735 = exp_13727__$1 - (k_13731 - 1);
    var scaled_exp_str_13736 = [cljs.core.str(Math.abs(scaled_exp_13735))].join("");
    var scaled_exp_str_13737__$1 = [cljs.core.str(expchar_13732), cljs.core.str(scaled_exp_13735 < 0 ? "-" : "+"), cljs.core.str(cljs.core.truth_(e_13730) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_13730 - cljs.core.count.call(null, scaled_exp_str_13736), "0")) : null), cljs.core.str(scaled_exp_str_13736)].join("");
    var exp_width_13738 = cljs.core.count.call(null, scaled_exp_str_13737__$1);
    var base_mantissa_width_13739 = cljs.core.count.call(null, mantissa_13726__$1);
    var scaled_mantissa_13740 = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_13731, "0"))), cljs.core.str(mantissa_13726__$1), cljs.core.str(cljs.core.truth_(d_13729) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_13729 - (base_mantissa_width_13739 - 1) - (k_13731 < 0 ? -k_13731 : 0), "0")) : null)].join("");
    var w_mantissa_13741 = cljs.core.truth_(w_13728) ? w_13728 - exp_width_13738 : null;
    var vec__13719_13742 = cljs.pprint.round_str.call(null, scaled_mantissa_13740, 0, cljs.core._EQ_.call(null, k_13731, 0) ? d_13729 - 1 : k_13731 > 0 ? d_13729 : k_13731 < 0 ? d_13729 - 1 : null, cljs.core.truth_(w_mantissa_13741) ? w_mantissa_13741 - (cljs.core.truth_(add_sign_13733) ? 1 : 0) : null);
    var rounded_mantissa_13743 = cljs.core.nth.call(null, vec__13719_13742, 0, null);
    var __13744 = cljs.core.nth.call(null, vec__13719_13742, 1, null);
    var incr_exp_13745 = cljs.core.nth.call(null, vec__13719_13742, 2, null);
    var full_mantissa_13746 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_13743, k_13731);
    var append_zero_13747 = cljs.core._EQ_.call(null, k_13731, cljs.core.count.call(null, rounded_mantissa_13743)) && d_13729 == null;
    if (cljs.core.not.call(null, incr_exp_13745)) {
      if (cljs.core.truth_(w_13728)) {
        var len_13748 = cljs.core.count.call(null, full_mantissa_13746) + exp_width_13738;
        var signed_len_13749 = cljs.core.truth_(add_sign_13733) ? len_13748 + 1 : len_13748;
        var prepend_zero_13750__$1 = prepend_zero_13734 && !cljs.core._EQ_.call(null, signed_len_13749, w_13728);
        var full_len_13751 = prepend_zero_13750__$1 ? signed_len_13749 + 1 : signed_len_13749;
        var append_zero_13752__$1 = append_zero_13747 && full_len_13751 < w_13728;
        if (cljs.core.truth_(function() {
          var and__4542__auto__ = function() {
            var or__4554__auto__ = full_len_13751 > w_13728;
            if (or__4554__auto__) {
              return or__4554__auto__;
            } else {
              var and__4542__auto__ = e_13730;
              if (cljs.core.truth_(and__4542__auto__)) {
                return exp_width_13738 - 2 > e_13730;
              } else {
                return and__4542__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__4542__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__4542__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_13728, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_13728 - full_len_13751 - (append_zero_13752__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign_13733) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_13750__$1 ? "0" : null), cljs.core.str(full_mantissa_13746), cljs.core.str(append_zero_13752__$1 ? "0" : 
          null), cljs.core.str(scaled_exp_str_13737__$1)].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign_13733) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_13734 ? "0" : null), cljs.core.str(full_mantissa_13746), cljs.core.str(append_zero_13747 ? "0" : null), cljs.core.str(scaled_exp_str_13737__$1)].join(""));
      }
    } else {
      var G__13753 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_13743, exp_13727__$1 + 1], null);
      G__13716_13724__$1 = G__13753;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__13756 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__13756, 0, null);
  var _ = cljs.core.nth.call(null, vec__13756, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__13757 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__13757, 0, null);
  var exp = cljs.core.nth.call(null, vec__13757, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__4866__auto__ = cljs.core.count.call(null, mantissa);
    var y__4867__auto__ = function() {
      var x__4873__auto__ = n;
      var y__4874__auto__ = 7;
      return x__4873__auto__ < y__4874__auto__ ? x__4873__auto__ : y__4874__auto__;
    }();
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__13761 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__13761, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13761, 1, null);
  var vec__13762 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__13762, 0, null);
  var exp = cljs.core.nth.call(null, vec__13762, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__13763 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__13763, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__13763, 1, null);
  var expanded = cljs.core.nth.call(null, vec__13763, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), cljs.core.str(fixed_repr)].join("");
  var full_len = cljs.core.count.call(null, full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var and__4542__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4542__auto__)) {
      return add_sign;
    } else {
      return and__4542__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(function() {
    var and__4542__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__4542__auto__) {
      return add_sign;
    } else {
      return and__4542__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(full_repr)].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__13765 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__13765, 0, null);
  var navigator = cljs.core.nth.call(null, vec__13765, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__13767 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__13767, 0, null);
  var navigator = cljs.core.nth.call(null, vec__13767, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__13769 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__13769, 0, null);
  var navigator = cljs.core.nth.call(null, vec__13769, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__13772 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__13772, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13772, 1, null);
  var vec__13773 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__13773, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__13773, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4554__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4554__auto__) {
        return or__4554__auto__;
      } else {
        var and__4542__auto__ = max_count;
        if (cljs.core.truth_(and__4542__auto__)) {
          return count >= max_count;
        } else {
          return and__4542__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__13774 = count + 1;
        var G__13775 = iter_result;
        var G__13776 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__13774;
        args__$1 = G__13775;
        last_pos = G__13776;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__13779 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__13779, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13779, 1, null);
  var vec__13780 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__13780, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__13780, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4554__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4554__auto__) {
        return or__4554__auto__;
      } else {
        var and__4542__auto__ = max_count;
        if (cljs.core.truth_(and__4542__auto__)) {
          return count >= max_count;
        } else {
          return and__4542__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__13781 = count + 1;
        var G__13782 = cljs.core.next.call(null, arg_list__$1);
        count = G__13781;
        arg_list__$1 = G__13782;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__13784 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__13784, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13784, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4554__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4554__auto__) {
        return or__4554__auto__;
      } else {
        var and__4542__auto__ = max_count;
        if (cljs.core.truth_(and__4542__auto__)) {
          return count >= max_count;
        } else {
          return and__4542__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__13785 = count + 1;
        var G__13786 = iter_result;
        var G__13787 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__13785;
        navigator__$2 = G__13786;
        last_pos = G__13787;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__13790 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__13790, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13790, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4554__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4554__auto__) {
        return or__4554__auto__;
      } else {
        var and__4542__auto__ = max_count;
        if (cljs.core.truth_(and__4542__auto__)) {
          return count >= max_count;
        } else {
          return and__4542__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__13791 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__13791, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__13791, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__13792 = count + 1;
        var G__13793 = navigator__$3;
        count = G__13792;
        navigator__$2 = G__13793;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__13796 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR_13797 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), [cljs.core.str(sb)].join("")], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_13797;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__13796, 0, null);
      var result_str = cljs.core.nth.call(null, vec__13796, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__13798 = cljs.core.next.call(null, clauses__$1);
        var G__13799 = cljs.core.conj.call(null, acc, result_str);
        var G__13800 = iter_result;
        clauses__$1 = G__13798;
        acc = G__13799;
        navigator__$1 = G__13800;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__13805 = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var else$ = temp__4425__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__13806 = cljs.core.nth.call(null, vec__13805, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__13806, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__13805, 1, null);
  var navigator__$1 = function() {
    var or__4554__auto__ = new_navigator;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__13807 = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var p = temp__4425__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__13807, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__13807, 1, null);
  var navigator__$2 = function() {
    var or__4554__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__4554__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__4554__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__13808 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__13808, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__13808, 1, null);
  var slots = function() {
    var x__4866__auto__ = 1;
    var y__4867__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__4866__auto__ = minpad;
    var y__4867__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = eol_str;
    if (cljs.core.truth_(and__4542__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__4542__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_13809__$1 = slots;
  var extra_pad_13810__$1 = extra_pad;
  var strs_13811__$1 = strs;
  var pad_only_13812 = function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_13811__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_13811__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, pad_only_13812) ? cljs.core.first.call(null, strs_13811__$1) : null), cljs.core.str(cljs.core.truth_(function() {
        var or__4554__auto__ = pad_only_13812;
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          var or__4554__auto____$1 = cljs.core.next.call(null, strs_13811__$1);
          if (or__4554__auto____$1) {
            return or__4554__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str(extra_pad_13810__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__13813 = slots_13809__$1 - 1;
      var G__13814 = extra_pad_13810__$1 - 1;
      var G__13815 = cljs.core.truth_(pad_only_13812) ? strs_13811__$1 : cljs.core.next.call(null, strs_13811__$1);
      var G__13816 = false;
      slots_13809__$1 = G__13813;
      extra_pad_13810__$1 = G__13814;
      strs_13811__$1 = G__13815;
      pad_only_13812 = G__13816;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs.pprint.t13823 !== "undefined") {
  } else {
    cljs.pprint.t13823 = function(downcase_writer, writer, meta13824) {
      this.downcase_writer = downcase_writer;
      this.writer = writer;
      this.meta13824 = meta13824;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t13823.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13825, meta13824__$1) {
      var self__ = this;
      var _13825__$1 = this;
      return new cljs.pprint.t13823(self__.downcase_writer, self__.writer, meta13824__$1);
    };
    cljs.pprint.t13823.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13825) {
      var self__ = this;
      var _13825__$1 = this;
      return self__.meta13824;
    };
    cljs.pprint.t13823.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t13823.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__13826 = cljs.core._EQ_;
      var expr__13827 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__13826.call(null, String, expr__13827))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__13826.call(null, Number, expr__13827))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__13827)].join(""));
        }
      }
    };
    cljs.pprint.t13823.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta13824", "meta13824", 34801754, null)], null);
    };
    cljs.pprint.t13823.cljs$lang$type = true;
    cljs.pprint.t13823.cljs$lang$ctorStr = "cljs.pprint/t13823";
    cljs.pprint.t13823.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
      return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t13823");
    };
    cljs.pprint.__GT_t13823 = function cljs$pprint$downcase_writer_$___GT_t13823(downcase_writer__$1, writer__$1, meta13824) {
      return new cljs.pprint.t13823(downcase_writer__$1, writer__$1, meta13824);
    };
  }
  return new cljs.pprint.t13823(cljs$pprint$downcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs.pprint.t13835 !== "undefined") {
  } else {
    cljs.pprint.t13835 = function(upcase_writer, writer, meta13836) {
      this.upcase_writer = upcase_writer;
      this.writer = writer;
      this.meta13836 = meta13836;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t13835.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13837, meta13836__$1) {
      var self__ = this;
      var _13837__$1 = this;
      return new cljs.pprint.t13835(self__.upcase_writer, self__.writer, meta13836__$1);
    };
    cljs.pprint.t13835.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13837) {
      var self__ = this;
      var _13837__$1 = this;
      return self__.meta13836;
    };
    cljs.pprint.t13835.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t13835.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__13838 = cljs.core._EQ_;
      var expr__13839 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__13838.call(null, String, expr__13839))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__13838.call(null, Number, expr__13839))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__13839)].join(""));
        }
      }
    };
    cljs.pprint.t13835.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta13836", "meta13836", -1718568219, null)], null);
    };
    cljs.pprint.t13835.cljs$lang$type = true;
    cljs.pprint.t13835.cljs$lang$ctorStr = "cljs.pprint/t13835";
    cljs.pprint.t13835.cljs$lang$ctorPrWriter = function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
      return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t13835");
    };
    cljs.pprint.__GT_t13835 = function cljs$pprint$upcase_writer_$___GT_t13835(upcase_writer__$1, writer__$1, meta13836) {
      return new cljs.pprint.t13835(upcase_writer__$1, writer__$1, meta13836);
    };
  }
  return new cljs.pprint.t13835(cljs$pprint$upcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__4542__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = f;
      if (cljs.core.truth_(and__4542__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }()) ? [cljs.core.str(clojure.string.upper_case.call(null, f)), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_.call(null, s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__4542__auto__ = m;
          if (cljs.core.truth_(and__4542__auto__)) {
            return m.index + 1;
          } else {
            return and__4542__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s__$2, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset)))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs.pprint.t13847 !== "undefined") {
  } else {
    cljs.pprint.t13847 = function(capitalize_word_writer, writer, last_was_whitespace_QMARK_, meta13848) {
      this.capitalize_word_writer = capitalize_word_writer;
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta13848 = meta13848;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t13847.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_13849, meta13848__$1) {
        var self__ = this;
        var _13849__$1 = this;
        return new cljs.pprint.t13847(self__.capitalize_word_writer, self__.writer, self__.last_was_whitespace_QMARK_, meta13848__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t13847.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_13849) {
        var self__ = this;
        var _13849__$1 = this;
        return self__.meta13848;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t13847.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t13847.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__13850 = cljs.core._EQ_;
        var expr__13851 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__13850.call(null, String, expr__13851))) {
          var s = x;
          cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__13850.call(null, Number, expr__13851))) {
            var c = cljs.core.char$.call(null, x);
            var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
            cljs.core._write.call(null, self__.writer, mod_c);
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__13851)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t13847.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta13848", "meta13848", -938697343, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t13847.cljs$lang$type = true;
    cljs.pprint.t13847.cljs$lang$ctorStr = "cljs.pprint/t13847";
    cljs.pprint.t13847.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
        return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t13847");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t13847 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t13847(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta13848) {
        return new cljs.pprint.t13847(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta13848);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t13847(cljs$pprint$capitalize_word_writer, writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs.pprint.t13859 !== "undefined") {
  } else {
    cljs.pprint.t13859 = function(init_cap_writer, writer, capped, meta13860) {
      this.init_cap_writer = init_cap_writer;
      this.writer = writer;
      this.capped = capped;
      this.meta13860 = meta13860;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t13859.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_13861, meta13860__$1) {
        var self__ = this;
        var _13861__$1 = this;
        return new cljs.pprint.t13859(self__.init_cap_writer, self__.writer, self__.capped, meta13860__$1);
      };
    }(capped);
    cljs.pprint.t13859.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_13861) {
        var self__ = this;
        var _13861__$1 = this;
        return self__.meta13860;
      };
    }(capped);
    cljs.pprint.t13859.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(capped);
    cljs.pprint.t13859.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__13862 = cljs.core._EQ_;
        var expr__13863 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__13862.call(null, String, expr__13863))) {
          var s = clojure.string.lower_case.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__4542__auto__ = m;
              if (cljs.core.truth_(and__4542__auto__)) {
                return m.index;
              } else {
                return and__4542__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write.call(null, self__.writer, [cljs.core.str(cljs.core.subs.call(null, s, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_.call(null, self__.capped, true);
            } else {
              return cljs.core._write.call(null, self__.writer, s);
            }
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
          }
        } else {
          if (cljs.core.truth_(pred__13862.call(null, Number, expr__13863))) {
            var c = cljs.core.char$.call(null, x);
            if (cljs.core.truth_(function() {
              var and__4542__auto__ = cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped));
              if (and__4542__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__4542__auto__;
              }
            }())) {
              cljs.core.reset_BANG_.call(null, self__.capped, true);
              return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
            } else {
              return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
            }
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__13863)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t13859.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta13860", "meta13860", 1296149436, null)], null);
      };
    }(capped);
    cljs.pprint.t13859.cljs$lang$type = true;
    cljs.pprint.t13859.cljs$lang$ctorStr = "cljs.pprint/t13859";
    cljs.pprint.t13859.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__5133__auto__, writer__5134__auto__, opt__5135__auto__) {
        return cljs.core._write.call(null, writer__5134__auto__, "cljs.pprint/t13859");
      };
    }(capped);
    cljs.pprint.__GT_t13859 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t13859(init_cap_writer__$1, writer__$1, capped__$1, meta13860) {
        return new cljs.pprint.t13859(init_cap_writer__$1, writer__$1, capped__$1, meta13860);
      };
    }(capped);
  }
  return new cljs.pprint.t13859(cljs$pprint$init_cap_writer, writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR_13866 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = make_writer.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_13866;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_13869 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_13870 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_13871 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_13872 = current_13871 < colnum_13869 ? colnum_13869 - current_13871 : cljs.core._EQ_.call(null, colinc_13870, 0) ? 0 : colinc_13870 - cljs.core.rem.call(null, current_13871 - colnum_13869, colinc_13870);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_13872, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_13873 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_13874 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_13875 = colrel_13873 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_13876 = colinc_13874 > 0 ? cljs.core.rem.call(null, start_col_13875, colinc_13874) : 0;
  var space_count_13877 = colrel_13873 + (cljs.core._EQ_.call(null, 0, offset_13876) ? 0 : colinc_13874 - offset_13876);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_13877, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__13881 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__13881, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__13881, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_13882_13884 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_13883_13885 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_13883_13885;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_13882_13884;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__13886_SHARP_, p2__13887_SHARP_, p3__13888_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__13886_SHARP_, p2__13887_SHARP_, p3__13888_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__13889_SHARP_, p2__13890_SHARP_, p3__13891_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__13889_SHARP_, p2__13890_SHARP_, p3__13891_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__13892_SHARP_, p2__13893_SHARP_, p3__13894_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__13892_SHARP_, p2__13893_SHARP_, p3__13894_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__13895_SHARP_, p2__13896_SHARP_, p3__13897_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__13895_SHARP_, p2__13896_SHARP_, p3__13897_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__13898_SHARP_, p2__13899_SHARP_, p3__13900_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__13898_SHARP_, p2__13899_SHARP_, p3__13900_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__13901_SHARP_, p2__13902_SHARP_, p3__13903_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__13901_SHARP_, p2__13902_SHARP_, p3__13903_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__13904_SHARP_, p2__13905_SHARP_, p3__13906_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__13904_SHARP_), p1__13904_SHARP_, p2__13905_SHARP_, p3__13906_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__4542__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4542__auto__;
      }
    }())) {
      return function(p1__13907_SHARP_, p2__13908_SHARP_, p3__13909_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__13907_SHARP_, p2__13908_SHARP_, p3__13909_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__13910_SHARP_, p2__13911_SHARP_, p3__13912_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__13910_SHARP_, p2__13911_SHARP_, p3__13912_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__13913_SHARP_, p2__13914_SHARP_, p3__13915_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__13913_SHARP_, p2__13914_SHARP_, p3__13915_SHARP_);
          };
        } else {
          return function(p1__13916_SHARP_, p2__13917_SHARP_, p3__13918_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__13916_SHARP_, p2__13917_SHARP_, p3__13918_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__13928 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__13928, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__13928, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__5438__auto___13934 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_13935 = 0;
    while (true) {
      if (i_13935 < n__5438__auto___13934) {
        cljs.pprint.prn.call(null);
        var G__13936 = i_13935 + 1;
        i_13935 = G__13936;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_13937 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_13937 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__5438__auto___13938 = cnt_13937 - 1;
    var i_13939 = 0;
    while (true) {
      if (i_13939 < n__5438__auto___13938) {
        cljs.pprint.prn.call(null);
        var G__13940 = i_13939 + 1;
        i_13939 = G__13940;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__5438__auto___13941 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_13942 = 0;
    while (true) {
      if (i_13942 < n__5438__auto___13941) {
        cljs.pprint.print.call(null, "\f");
        var G__13943 = i_13942 + 1;
        i_13942 = G__13943;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__13919_SHARP_, p2__13920_SHARP_, p3__13921_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__13919_SHARP_, p2__13920_SHARP_, p3__13921_SHARP_);
    };
  } else {
    return function(p1__13922_SHARP_, p2__13923_SHARP_, p3__13924_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__13922_SHARP_, p2__13923_SHARP_, p3__13924_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__13929 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__13929, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__13929, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__13930 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__13930, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__13930, 1, null);
      var vec__13931 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__13931, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__13931, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__4542__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4542__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4542__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__13925_SHARP_, p2__13926_SHARP_, p3__13927_SHARP_) {
      return cljs.pprint.modify_case.call(null, mod_case_writer, p1__13925_SHARP_, p2__13926_SHARP_, p3__13927_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4542__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4542__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = arg1;
      if (cljs.core.truth_(and__4542__auto__)) {
        var and__4542__auto____$1 = arg2;
        if (cljs.core.truth_(and__4542__auto____$1)) {
          return arg3;
        } else {
          return and__4542__auto____$1;
        }
      } else {
        return and__4542__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = arg1;
        if (cljs.core.truth_(and__4542__auto__)) {
          return arg2;
        } else {
          return and__4542__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__13932 = cljs.pprint.next_arg.call(null, navigator);
        var arg = cljs.core.nth.call(null, vec__13932, 0, null);
        var navigator__$1 = cljs.core.nth.call(null, vec__13932, 1, null);
        if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__13933 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__13933, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__13933, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__13944) {
  var vec__13946 = p__13944;
  var s = cljs.core.nth.call(null, vec__13946, 0, null);
  var offset = cljs.core.nth.call(null, vec__13946, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__13946, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__13947) {
  var vec__13949 = p__13947;
  var p = cljs.core.nth.call(null, vec__13949, 0, null);
  var offset = cljs.core.nth.call(null, vec__13949, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__13952) {
    var vec__13953 = p__13952;
    var s__$1 = cljs.core.nth.call(null, vec__13953, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__13953, 1, null);
    var flags = cljs.core.nth.call(null, vec__13953, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, s__$1)), cljs.core.str('" appears more than once in a directive')].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4542__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4542__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4542__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4542__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4542__auto__) {
      var and__4542__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__4542__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    return cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), function() {
      var x__4873__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__4874__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__4873__auto__ < y__4874__auto__ ? x__4873__auto__ : y__4874__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__13954_SHARP_, p2__13955_SHARP_) {
    var val = cljs.core.first.call(null, p1__13954_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__13955_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, p2__13955_SHARP_))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__13954_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__5307__auto__ = function cljs$pprint$map_params_$_iter__13971(s__13972) {
      return new cljs.core.LazySeq(null, function() {
        var s__13972__$1 = s__13972;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__13972__$1);
          if (temp__4425__auto__) {
            var s__13972__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__13972__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__13972__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__13974 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__13973 = 0;
                while (true) {
                  if (i__13973 < size__5306__auto__) {
                    var vec__13979 = cljs.core._nth.call(null, c__5305__auto__, i__13973);
                    var name = cljs.core.nth.call(null, vec__13979, 0, null);
                    var vec__13980 = cljs.core.nth.call(null, vec__13979, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__13980, 0, null);
                    cljs.core.chunk_append.call(null, b__13974, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__13983 = i__13973 + 1;
                    i__13973 = G__13983;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13974), cljs$pprint$map_params_$_iter__13971.call(null, cljs.core.chunk_rest.call(null, s__13972__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13974), null);
              }
            } else {
              var vec__13981 = cljs.core.first.call(null, s__13972__$2);
              var name = cljs.core.nth.call(null, vec__13981, 0, null);
              var vec__13982 = cljs.core.nth.call(null, vec__13981, 1, null);
              var default$ = cljs.core.nth.call(null, vec__13982, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__13971.call(null, cljs.core.rest.call(null, s__13972__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__13956_SHARP_, p2__13957_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__13956_SHARP_, p2__13957_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__13958_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__13958_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__13988 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__13988, 0, null);
  var vec__13989 = cljs.core.nth.call(null, vec__13988, 1, null);
  var rest = cljs.core.nth.call(null, vec__13989, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__13989, 1, null);
  var vec__13990 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__13990, 0, null);
  var vec__13991 = cljs.core.nth.call(null, vec__13990, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__13991, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__13991, 1, null);
  var flags = cljs.core.nth.call(null, vec__13991, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(directive), cljs.core.str('" is undefined')].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__4542__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__4542__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__4542__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__13993 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__13993, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__13993, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__13998) {
    var vec__13999 = p__13998;
    var clause_map = cljs.core.nth.call(null, vec__13999, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__13999, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__13999, 2, null);
    var vec__14000 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__14000, 0, null);
    var vec__14001 = cljs.core.nth.call(null, vec__14000, 1, null);
    var type = cljs.core.nth.call(null, vec__14001, 0, null);
    var right_params = cljs.core.nth.call(null, vec__14001, 1, null);
    var else_params = cljs.core.nth.call(null, vec__14001, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__14001, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params], true, false)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null)
              ;
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR_14005 = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = format_str;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(_STAR_format_str_STAR_14005) {
      return function(p__14006) {
        var vec__14007 = p__14006;
        var s = cljs.core.nth.call(null, vec__14007, 0, null);
        var offset = cljs.core.nth.call(null, vec__14007, 1, null);
        if (cljs.core.empty_QMARK_.call(null, s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR_14005), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR_14005;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__4554__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          var or__4554__auto____$1 = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__4554__auto____$1)) {
            return or__4554__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__14008 = cljs.core.next.call(null, format__$1);
        format__$1 = G__14008;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format() {
  var args14009 = [];
  var len__5593__auto___14015 = arguments.length;
  var i__5594__auto___14016 = 0;
  while (true) {
    if (i__5594__auto___14016 < len__5593__auto___14015) {
      args14009.push(arguments[i__5594__auto___14016]);
      var G__14017 = i__5594__auto___14016 + 1;
      i__5594__auto___14016 = G__14017;
      continue;
    } else {
    }
    break;
  }
  var G__14011 = args14009.length;
  switch(G__14011) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14009.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.core.truth_(function() {
    var and__4542__auto__ = cljs.pprint.needs_pretty.call(null, format);
    if (cljs.core.truth_(and__4542__auto__)) {
      return cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream));
    } else {
      return and__4542__auto__;
    }
  }()) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR_14012 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = wrapped_stream;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return [cljs.core.str(sb)].join("");
    } else {
      if (stream === true) {
        return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_14012;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__14013 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__14013, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__14013, 1, null);
      var vec__14014 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__14014, 0, null);
      var offsets = cljs.core.nth.call(null, vec__14014, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = macro_char;
    if (cljs.core.truth_(and__4542__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__4542__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_14022_14025 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_14023_14026 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count14024_14027 = 0;
      var alis_14028__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count14024_14027 < cljs.core._STAR_print_length_STAR_) {
          if (alis_14028__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_14028__$1));
            if (cljs.core.next.call(null, alis_14028__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__14029 = length_count14024_14027 + 1;
              var G__14030 = cljs.core.next.call(null, alis_14028__$1);
              length_count14024_14027 = G__14029;
              alis_14028__$1 = G__14030;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14023_14026;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14022_14025;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_14034_14037 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_14035_14038 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count14036_14039 = 0;
      var aseq_14040 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count14036_14039 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_14040) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_14040));
            if (cljs.core.next.call(null, aseq_14040)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__14041 = length_count14036_14039 + 1;
              var G__14042 = cljs.core.next.call(null, aseq_14040);
              length_count14036_14039 = G__14041;
              aseq_14040 = G__14042;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14035_14038;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14034_14037;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__9682__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
  return function(format_in__9682__auto__, cf__9683__auto__) {
    return function() {
      var G__14043__delegate = function(args__9684__auto__) {
        var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
        return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
      };
      var G__14043 = function(var_args) {
        var args__9684__auto__ = null;
        if (arguments.length > 0) {
          var G__14044__i = 0, G__14044__a = new Array(arguments.length - 0);
          while (G__14044__i < G__14044__a.length) {
            G__14044__a[G__14044__i] = arguments[G__14044__i + 0];
            ++G__14044__i;
          }
          args__9684__auto__ = new cljs.core.IndexedSeq(G__14044__a, 0);
        }
        return G__14043__delegate.call(this, args__9684__auto__);
      };
      G__14043.cljs$lang$maxFixedArity = 0;
      G__14043.cljs$lang$applyTo = function(arglist__14045) {
        var args__9684__auto__ = cljs.core.seq(arglist__14045);
        return G__14043__delegate(args__9684__auto__);
      };
      G__14043.cljs$core$IFn$_invoke$arity$variadic = G__14043__delegate;
      return G__14043;
    }();
  }(format_in__9682__auto__, cf__9683__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_14051_14056 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_14052_14057 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      var length_count14053_14058 = 0;
      var aseq_14059 = cljs.core.seq.call(null, amap);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count14053_14058 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_14059) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_14054_14060 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_14055_14061 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_14059));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_14059)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14055_14061;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14054_14060;
              }
            }
            if (cljs.core.next.call(null, aseq_14059)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__14062 = length_count14053_14058 + 1;
              var G__14063 = cljs.core.next.call(null, aseq_14059);
              length_count14053_14058 = G__14062;
              aseq_14059 = G__14063;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14052_14057;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14051_14056;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__9682__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
  return function(format_in__9682__auto__, cf__9683__auto__) {
    return function() {
      var G__14064__delegate = function(args__9684__auto__) {
        var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
        return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
      };
      var G__14064 = function(var_args) {
        var args__9684__auto__ = null;
        if (arguments.length > 0) {
          var G__14065__i = 0, G__14065__a = new Array(arguments.length - 0);
          while (G__14065__i < G__14065__a.length) {
            G__14065__a[G__14065__i] = arguments[G__14065__i + 0];
            ++G__14065__i;
          }
          args__9684__auto__ = new cljs.core.IndexedSeq(G__14065__a, 0);
        }
        return G__14064__delegate.call(this, args__9684__auto__);
      };
      G__14064.cljs$lang$maxFixedArity = 0;
      G__14064.cljs$lang$applyTo = function(arglist__14066) {
        var args__9684__auto__ = cljs.core.seq(arglist__14066);
        return G__14064__delegate(args__9684__auto__);
      };
      G__14064.cljs$core$IFn$_invoke$arity$variadic = G__14064__delegate;
      return G__14064;
    }();
  }(format_in__9682__auto__, cf__9683__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__4554__auto__ = function() {
    var temp__4425__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var match = temp__4425__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(o)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_14071_14075 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_14072_14076 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, prefix) - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, function() {
        var and__4542__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o);
        if (and__4542__auto__) {
          return !cljs.core._realized_QMARK_.call(null, o);
        } else {
          return and__4542__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14072_14076;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14071_14075;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__9682__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
  return function(format_in__9682__auto__, cf__9683__auto__) {
    return function() {
      var G__14077__delegate = function(args__9684__auto__) {
        var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
        return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
      };
      var G__14077 = function(var_args) {
        var args__9684__auto__ = null;
        if (arguments.length > 0) {
          var G__14078__i = 0, G__14078__a = new Array(arguments.length - 0);
          while (G__14078__i < G__14078__a.length) {
            G__14078__a[G__14078__i] = arguments[G__14078__i + 0];
            ++G__14078__i;
          }
          args__9684__auto__ = new cljs.core.IndexedSeq(G__14078__a, 0);
        }
        return G__14077__delegate.call(this, args__9684__auto__);
      };
      G__14077.cljs$lang$maxFixedArity = 0;
      G__14077.cljs$lang$applyTo = function(arglist__14079) {
        var args__9684__auto__ = cljs.core.seq(arglist__14079);
        return G__14077__delegate(args__9684__auto__);
      };
      G__14077.cljs$core$IFn$_invoke$arity$variadic = G__14077__delegate;
      return G__14077;
    }();
  }(format_in__9682__auto__, cf__9683__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__14090 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__14090, 0, null);
    var end = cljs.core.nth.call(null, vec__14090, 1, null);
    var vec__14091 = reference;
    var keyw = cljs.core.nth.call(null, vec__14091, 0, null);
    var args = cljs.core.nthnext.call(null, vec__14091, 1);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_14092_14098 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_14093_14099 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__9682__auto__ = "~w~:i";
          var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
          return function(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args) {
            return function() {
              var G__14100__delegate = function(args__9684__auto__) {
                var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
              };
              var G__14100 = function(var_args) {
                var args__9684__auto__ = null;
                if (arguments.length > 0) {
                  var G__14101__i = 0, G__14101__a = new Array(arguments.length - 0);
                  while (G__14101__i < G__14101__a.length) {
                    G__14101__a[G__14101__i] = arguments[G__14101__i + 0];
                    ++G__14101__i;
                  }
                  args__9684__auto__ = new cljs.core.IndexedSeq(G__14101__a, 0);
                }
                return G__14100__delegate.call(this, args__9684__auto__);
              };
              G__14100.cljs$lang$maxFixedArity = 0;
              G__14100.cljs$lang$applyTo = function(arglist__14102) {
                var args__9684__auto__ = cljs.core.seq(arglist__14102);
                return G__14100__delegate(args__9684__auto__);
              };
              G__14100.cljs$core$IFn$_invoke$arity$variadic = G__14100__delegate;
              return G__14100;
            }();
          }(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args);
        })().call(null, keyw);
        var args_14103__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_14103__$1)) {
            (function() {
              var format_in__9682__auto__ = " ";
              var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
              return function(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args) {
                return function() {
                  var G__14104__delegate = function(args__9684__auto__) {
                    var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                    return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
                  };
                  var G__14104 = function(var_args) {
                    var args__9684__auto__ = null;
                    if (arguments.length > 0) {
                      var G__14105__i = 0, G__14105__a = new Array(arguments.length - 0);
                      while (G__14105__i < G__14105__a.length) {
                        G__14105__a[G__14105__i] = arguments[G__14105__i + 0];
                        ++G__14105__i;
                      }
                      args__9684__auto__ = new cljs.core.IndexedSeq(G__14105__a, 0);
                    }
                    return G__14104__delegate.call(this, args__9684__auto__);
                  };
                  G__14104.cljs$lang$maxFixedArity = 0;
                  G__14104.cljs$lang$applyTo = function(arglist__14106) {
                    var args__9684__auto__ = cljs.core.seq(arglist__14106);
                    return G__14104__delegate(args__9684__auto__);
                  };
                  G__14104.cljs$core$IFn$_invoke$arity$variadic = G__14104__delegate;
                  return G__14104;
                }();
              }(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args);
            })().call(null);
            var arg_14107 = cljs.core.first.call(null, args_14103__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_14107)) {
              var vec__14094_14108 = cljs.pprint.brackets.call(null, arg_14107);
              var start_14109__$1 = cljs.core.nth.call(null, vec__14094_14108, 0, null);
              var end_14110__$1 = cljs.core.nth.call(null, vec__14094_14108, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_14095_14111 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_14096_14112 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_14109__$1, null, end_14110__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_14107), 3) && cljs.core.second.call(null, arg_14107) instanceof cljs.core.Keyword) {
                    var vec__14097_14113 = arg_14107;
                    var ns_14114 = cljs.core.nth.call(null, vec__14097_14113, 0, null);
                    var kw_14115 = cljs.core.nth.call(null, vec__14097_14113, 1, null);
                    var lis_14116 = cljs.core.nth.call(null, vec__14097_14113, 2, null);
                    (function() {
                      var format_in__9682__auto__ = "~w ~w ";
                      var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
                      return function(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, vec__14097_14113, ns_14114, kw_14115, lis_14116, _STAR_current_level_STAR_14095_14111, _STAR_current_length_STAR_14096_14112, vec__14094_14108, start_14109__$1, end_14110__$1, arg_14107, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args) {
                        return function() {
                          var G__14117__delegate = function(args__9684__auto__) {
                            var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                            return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
                          };
                          var G__14117 = function(var_args) {
                            var args__9684__auto__ = null;
                            if (arguments.length > 0) {
                              var G__14118__i = 0, G__14118__a = new Array(arguments.length - 0);
                              while (G__14118__i < G__14118__a.length) {
                                G__14118__a[G__14118__i] = arguments[G__14118__i + 0];
                                ++G__14118__i;
                              }
                              args__9684__auto__ = new cljs.core.IndexedSeq(G__14118__a, 0);
                            }
                            return G__14117__delegate.call(this, args__9684__auto__);
                          };
                          G__14117.cljs$lang$maxFixedArity = 0;
                          G__14117.cljs$lang$applyTo = function(arglist__14119) {
                            var args__9684__auto__ = cljs.core.seq(arglist__14119);
                            return G__14117__delegate(args__9684__auto__);
                          };
                          G__14117.cljs$core$IFn$_invoke$arity$variadic = G__14117__delegate;
                          return G__14117;
                        }();
                      }(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, vec__14097_14113, ns_14114, kw_14115, lis_14116, _STAR_current_level_STAR_14095_14111, _STAR_current_length_STAR_14096_14112, vec__14094_14108, start_14109__$1, end_14110__$1, arg_14107, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args);
                    })().call(null, ns_14114, kw_14115);
                    if (cljs.core.sequential_QMARK_.call(null, lis_14116)) {
                      (function() {
                        var format_in__9682__auto__ = cljs.core.vector_QMARK_.call(null, lis_14116) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
                        return function(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, vec__14097_14113, ns_14114, kw_14115, lis_14116, _STAR_current_level_STAR_14095_14111, _STAR_current_length_STAR_14096_14112, vec__14094_14108, start_14109__$1, end_14110__$1, arg_14107, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args) {
                          return function() {
                            var G__14120__delegate = function(args__9684__auto__) {
                              var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                              return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
                            };
                            var G__14120 = function(var_args) {
                              var args__9684__auto__ = null;
                              if (arguments.length > 0) {
                                var G__14121__i = 0, G__14121__a = new Array(arguments.length - 0);
                                while (G__14121__i < G__14121__a.length) {
                                  G__14121__a[G__14121__i] = arguments[G__14121__i + 0];
                                  ++G__14121__i;
                                }
                                args__9684__auto__ = new cljs.core.IndexedSeq(G__14121__a, 0);
                              }
                              return G__14120__delegate.call(this, args__9684__auto__);
                            };
                            G__14120.cljs$lang$maxFixedArity = 0;
                            G__14120.cljs$lang$applyTo = function(arglist__14122) {
                              var args__9684__auto__ = cljs.core.seq(arglist__14122);
                              return G__14120__delegate(args__9684__auto__);
                            };
                            G__14120.cljs$core$IFn$_invoke$arity$variadic = G__14120__delegate;
                            return G__14120;
                          }();
                        }(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, vec__14097_14113, ns_14114, kw_14115, lis_14116, _STAR_current_level_STAR_14095_14111, _STAR_current_length_STAR_14096_14112, vec__14094_14108, start_14109__$1, end_14110__$1, arg_14107, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args);
                      })().call(null, lis_14116);
                    } else {
                      cljs.pprint.write_out.call(null, lis_14116);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__9682__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
                      return function(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14095_14111, _STAR_current_length_STAR_14096_14112, vec__14094_14108, start_14109__$1, end_14110__$1, arg_14107, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args) {
                        return function() {
                          var G__14123__delegate = function(args__9684__auto__) {
                            var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                            return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
                          };
                          var G__14123 = function(var_args) {
                            var args__9684__auto__ = null;
                            if (arguments.length > 0) {
                              var G__14124__i = 0, G__14124__a = new Array(arguments.length - 0);
                              while (G__14124__i < G__14124__a.length) {
                                G__14124__a[G__14124__i] = arguments[G__14124__i + 0];
                                ++G__14124__i;
                              }
                              args__9684__auto__ = new cljs.core.IndexedSeq(G__14124__a, 0);
                            }
                            return G__14123__delegate.call(this, args__9684__auto__);
                          };
                          G__14123.cljs$lang$maxFixedArity = 0;
                          G__14123.cljs$lang$applyTo = function(arglist__14125) {
                            var args__9684__auto__ = cljs.core.seq(arglist__14125);
                            return G__14123__delegate(args__9684__auto__);
                          };
                          G__14123.cljs$core$IFn$_invoke$arity$variadic = G__14123__delegate;
                          return G__14123;
                        }();
                      }(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14095_14111, _STAR_current_length_STAR_14096_14112, vec__14094_14108, start_14109__$1, end_14110__$1, arg_14107, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args);
                    }(), arg_14107);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14096_14112;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14095_14111;
                }
              }
              if (cljs.core.next.call(null, args_14103__$1)) {
                (function() {
                  var format_in__9682__auto__ = "~_";
                  var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
                  return function(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, vec__14094_14108, start_14109__$1, end_14110__$1, arg_14107, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args) {
                    return function() {
                      var G__14126__delegate = function(args__9684__auto__) {
                        var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                        return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
                      };
                      var G__14126 = function(var_args) {
                        var args__9684__auto__ = null;
                        if (arguments.length > 0) {
                          var G__14127__i = 0, G__14127__a = new Array(arguments.length - 0);
                          while (G__14127__i < G__14127__a.length) {
                            G__14127__a[G__14127__i] = arguments[G__14127__i + 0];
                            ++G__14127__i;
                          }
                          args__9684__auto__ = new cljs.core.IndexedSeq(G__14127__a, 0);
                        }
                        return G__14126__delegate.call(this, args__9684__auto__);
                      };
                      G__14126.cljs$lang$maxFixedArity = 0;
                      G__14126.cljs$lang$applyTo = function(arglist__14128) {
                        var args__9684__auto__ = cljs.core.seq(arglist__14128);
                        return G__14126__delegate(args__9684__auto__);
                      };
                      G__14126.cljs$core$IFn$_invoke$arity$variadic = G__14126__delegate;
                      return G__14126;
                    }();
                  }(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, vec__14094_14108, start_14109__$1, end_14110__$1, arg_14107, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_14107);
              if (cljs.core.next.call(null, args_14103__$1)) {
                (function() {
                  var format_in__9682__auto__ = "~:_";
                  var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
                  return function(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, arg_14107, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args) {
                    return function() {
                      var G__14129__delegate = function(args__9684__auto__) {
                        var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                        return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
                      };
                      var G__14129 = function(var_args) {
                        var args__9684__auto__ = null;
                        if (arguments.length > 0) {
                          var G__14130__i = 0, G__14130__a = new Array(arguments.length - 0);
                          while (G__14130__i < G__14130__a.length) {
                            G__14130__a[G__14130__i] = arguments[G__14130__i + 0];
                            ++G__14130__i;
                          }
                          args__9684__auto__ = new cljs.core.IndexedSeq(G__14130__a, 0);
                        }
                        return G__14129__delegate.call(this, args__9684__auto__);
                      };
                      G__14129.cljs$lang$maxFixedArity = 0;
                      G__14129.cljs$lang$applyTo = function(arglist__14131) {
                        var args__9684__auto__ = cljs.core.seq(arglist__14131);
                        return G__14129__delegate(args__9684__auto__);
                      };
                      G__14129.cljs$core$IFn$_invoke$arity$variadic = G__14129__delegate;
                      return G__14129;
                    }();
                  }(args_14103__$1, format_in__9682__auto__, cf__9683__auto__, arg_14107, _STAR_current_level_STAR_14092_14098, _STAR_current_length_STAR_14093_14099, vec__14090, start, end, vec__14091, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__14132 = cljs.core.next.call(null, args_14103__$1);
            args_14103__$1 = G__14132;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14093_14099;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14092_14098;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__14138 = alis;
    var ns_sym = cljs.core.nth.call(null, vec__14138, 0, null);
    var ns_name = cljs.core.nth.call(null, vec__14138, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__14138, 2);
    var vec__14139 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__14139, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__14139, 1, null);
    var vec__14140 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__14140, 0, null);
    var references = cljs.core.nth.call(null, vec__14140, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_14141_14143 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_14142_14144 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__9682__auto__ = "~w ~1I~@_~w";
          var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
          return function(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14141_14143, _STAR_current_length_STAR_14142_14144, vec__14138, ns_sym, ns_name, stuff, vec__14139, doc_str, stuff__$1, vec__14140, attr_map, references) {
            return function() {
              var G__14145__delegate = function(args__9684__auto__) {
                var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
              };
              var G__14145 = function(var_args) {
                var args__9684__auto__ = null;
                if (arguments.length > 0) {
                  var G__14146__i = 0, G__14146__a = new Array(arguments.length - 0);
                  while (G__14146__i < G__14146__a.length) {
                    G__14146__a[G__14146__i] = arguments[G__14146__i + 0];
                    ++G__14146__i;
                  }
                  args__9684__auto__ = new cljs.core.IndexedSeq(G__14146__a, 0);
                }
                return G__14145__delegate.call(this, args__9684__auto__);
              };
              G__14145.cljs$lang$maxFixedArity = 0;
              G__14145.cljs$lang$applyTo = function(arglist__14147) {
                var args__9684__auto__ = cljs.core.seq(arglist__14147);
                return G__14145__delegate(args__9684__auto__);
              };
              G__14145.cljs$core$IFn$_invoke$arity$variadic = G__14145__delegate;
              return G__14145;
            }();
          }(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14141_14143, _STAR_current_length_STAR_14142_14144, vec__14138, ns_sym, ns_name, stuff, vec__14139, doc_str, stuff__$1, vec__14140, attr_map, references);
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__4554__auto__ = doc_str;
          if (cljs.core.truth_(or__4554__auto__)) {
            return or__4554__auto__;
          } else {
            var or__4554__auto____$1 = attr_map;
            if (cljs.core.truth_(or__4554__auto____$1)) {
              return or__4554__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__9682__auto__ = "~@:_";
            var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
            return function(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14141_14143, _STAR_current_length_STAR_14142_14144, vec__14138, ns_sym, ns_name, stuff, vec__14139, doc_str, stuff__$1, vec__14140, attr_map, references) {
              return function() {
                var G__14148__delegate = function(args__9684__auto__) {
                  var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                  return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
                };
                var G__14148 = function(var_args) {
                  var args__9684__auto__ = null;
                  if (arguments.length > 0) {
                    var G__14149__i = 0, G__14149__a = new Array(arguments.length - 0);
                    while (G__14149__i < G__14149__a.length) {
                      G__14149__a[G__14149__i] = arguments[G__14149__i + 0];
                      ++G__14149__i;
                    }
                    args__9684__auto__ = new cljs.core.IndexedSeq(G__14149__a, 0);
                  }
                  return G__14148__delegate.call(this, args__9684__auto__);
                };
                G__14148.cljs$lang$maxFixedArity = 0;
                G__14148.cljs$lang$applyTo = function(arglist__14150) {
                  var args__9684__auto__ = cljs.core.seq(arglist__14150);
                  return G__14148__delegate(args__9684__auto__);
                };
                G__14148.cljs$core$IFn$_invoke$arity$variadic = G__14148__delegate;
                return G__14148;
              }();
            }(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14141_14143, _STAR_current_length_STAR_14142_14144, vec__14138, ns_sym, ns_name, stuff, vec__14139, doc_str, stuff__$1, vec__14140, attr_map, references);
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__4554__auto__ = attr_map;
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__9682__auto__ = "~w~:[~;~:@_~]";
            var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
            return function(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14141_14143, _STAR_current_length_STAR_14142_14144, vec__14138, ns_sym, ns_name, stuff, vec__14139, doc_str, stuff__$1, vec__14140, attr_map, references) {
              return function() {
                var G__14151__delegate = function(args__9684__auto__) {
                  var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                  return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
                };
                var G__14151 = function(var_args) {
                  var args__9684__auto__ = null;
                  if (arguments.length > 0) {
                    var G__14152__i = 0, G__14152__a = new Array(arguments.length - 0);
                    while (G__14152__i < G__14152__a.length) {
                      G__14152__a[G__14152__i] = arguments[G__14152__i + 0];
                      ++G__14152__i;
                    }
                    args__9684__auto__ = new cljs.core.IndexedSeq(G__14152__a, 0);
                  }
                  return G__14151__delegate.call(this, args__9684__auto__);
                };
                G__14151.cljs$lang$maxFixedArity = 0;
                G__14151.cljs$lang$applyTo = function(arglist__14153) {
                  var args__9684__auto__ = cljs.core.seq(arglist__14153);
                  return G__14151__delegate(args__9684__auto__);
                };
                G__14151.cljs$core$IFn$_invoke$arity$variadic = G__14151__delegate;
                return G__14151;
              }();
            }(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14141_14143, _STAR_current_length_STAR_14142_14144, vec__14138, ns_sym, ns_name, stuff, vec__14139, doc_str, stuff__$1, vec__14140, attr_map, references);
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_14154__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_14154__$1));
          var temp__4425__auto___14155 = cljs.core.next.call(null, references_14154__$1);
          if (temp__4425__auto___14155) {
            var references_14156__$2 = temp__4425__auto___14155;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__14157 = references_14156__$2;
            references_14154__$1 = G__14157;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14142_14144;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14141_14143;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__9682__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
  return function(format_in__9682__auto__, cf__9683__auto__) {
    return function() {
      var G__14158__delegate = function(args__9684__auto__) {
        var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
        return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
      };
      var G__14158 = function(var_args) {
        var args__9684__auto__ = null;
        if (arguments.length > 0) {
          var G__14159__i = 0, G__14159__a = new Array(arguments.length - 0);
          while (G__14159__i < G__14159__a.length) {
            G__14159__a[G__14159__i] = arguments[G__14159__i + 0];
            ++G__14159__i;
          }
          args__9684__auto__ = new cljs.core.IndexedSeq(G__14159__a, 0);
        }
        return G__14158__delegate.call(this, args__9684__auto__);
      };
      G__14158.cljs$lang$maxFixedArity = 0;
      G__14158.cljs$lang$applyTo = function(arglist__14160) {
        var args__9684__auto__ = cljs.core.seq(arglist__14160);
        return G__14158__delegate(args__9684__auto__);
      };
      G__14158.cljs$core$IFn$_invoke$arity$variadic = G__14158__delegate;
      return G__14158;
    }();
  }(format_in__9682__auto__, cf__9683__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__9682__auto__ = " ~_";
        var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
        return function(format_in__9682__auto__, cf__9683__auto__) {
          return function() {
            var G__14161__delegate = function(args__9684__auto__) {
              var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
              return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
            };
            var G__14161 = function(var_args) {
              var args__9684__auto__ = null;
              if (arguments.length > 0) {
                var G__14162__i = 0, G__14162__a = new Array(arguments.length - 0);
                while (G__14162__i < G__14162__a.length) {
                  G__14162__a[G__14162__i] = arguments[G__14162__i + 0];
                  ++G__14162__i;
                }
                args__9684__auto__ = new cljs.core.IndexedSeq(G__14162__a, 0);
              }
              return G__14161__delegate.call(this, args__9684__auto__);
            };
            G__14161.cljs$lang$maxFixedArity = 0;
            G__14161.cljs$lang$applyTo = function(arglist__14163) {
              var args__9684__auto__ = cljs.core.seq(arglist__14163);
              return G__14161__delegate(args__9684__auto__);
            };
            G__14161.cljs$core$IFn$_invoke$arity$variadic = G__14161__delegate;
            return G__14161;
          }();
        }(format_in__9682__auto__, cf__9683__auto__);
      })().call(null);
    } else {
      (function() {
        var format_in__9682__auto__ = " ~@_";
        var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
        return function(format_in__9682__auto__, cf__9683__auto__) {
          return function() {
            var G__14164__delegate = function(args__9684__auto__) {
              var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
              return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
            };
            var G__14164 = function(var_args) {
              var args__9684__auto__ = null;
              if (arguments.length > 0) {
                var G__14165__i = 0, G__14165__a = new Array(arguments.length - 0);
                while (G__14165__i < G__14165__a.length) {
                  G__14165__a[G__14165__i] = arguments[G__14165__i + 0];
                  ++G__14165__i;
                }
                args__9684__auto__ = new cljs.core.IndexedSeq(G__14165__a, 0);
              }
              return G__14164__delegate.call(this, args__9684__auto__);
            };
            G__14164.cljs$lang$maxFixedArity = 0;
            G__14164.cljs$lang$applyTo = function(arglist__14166) {
              var args__9684__auto__ = cljs.core.seq(arglist__14166);
              return G__14164__delegate(args__9684__auto__);
            };
            G__14164.cljs$core$IFn$_invoke$arity$variadic = G__14164__delegate;
            return G__14164;
          }();
        }(format_in__9682__auto__, cf__9683__auto__);
      })().call(null);
    }
    return function() {
      var format_in__9682__auto__ = "~{~w~^ ~_~}";
      var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
      return function(format_in__9682__auto__, cf__9683__auto__) {
        return function() {
          var G__14167__delegate = function(args__9684__auto__) {
            var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
            return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
          };
          var G__14167 = function(var_args) {
            var args__9684__auto__ = null;
            if (arguments.length > 0) {
              var G__14168__i = 0, G__14168__a = new Array(arguments.length - 0);
              while (G__14168__i < G__14168__a.length) {
                G__14168__a[G__14168__i] = arguments[G__14168__i + 0];
                ++G__14168__i;
              }
              args__9684__auto__ = new cljs.core.IndexedSeq(G__14168__a, 0);
            }
            return G__14167__delegate.call(this, args__9684__auto__);
          };
          G__14167.cljs$lang$maxFixedArity = 0;
          G__14167.cljs$lang$applyTo = function(arglist__14169) {
            var args__9684__auto__ = cljs.core.seq(arglist__14169);
            return G__14167__delegate(args__9684__auto__);
          };
          G__14167.cljs$core$IFn$_invoke$arity$variadic = G__14167__delegate;
          return G__14167;
        }();
      }(format_in__9682__auto__, cf__9683__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__9682__auto__ = " ~_~{~w~^ ~_~}";
      var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
      return function(format_in__9682__auto__, cf__9683__auto__) {
        return function() {
          var G__14170__delegate = function(args__9684__auto__) {
            var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
            return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
          };
          var G__14170 = function(var_args) {
            var args__9684__auto__ = null;
            if (arguments.length > 0) {
              var G__14171__i = 0, G__14171__a = new Array(arguments.length - 0);
              while (G__14171__i < G__14171__a.length) {
                G__14171__a[G__14171__i] = arguments[G__14171__i + 0];
                ++G__14171__i;
              }
              args__9684__auto__ = new cljs.core.IndexedSeq(G__14171__a, 0);
            }
            return G__14170__delegate.call(this, args__9684__auto__);
          };
          G__14170.cljs$lang$maxFixedArity = 0;
          G__14170.cljs$lang$applyTo = function(arglist__14172) {
            var args__9684__auto__ = cljs.core.seq(arglist__14172);
            return G__14170__delegate(args__9684__auto__);
          };
          G__14170.cljs$core$IFn$_invoke$arity$variadic = G__14170__delegate;
          return G__14170;
        }();
      }(format_in__9682__auto__, cf__9683__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__14178 = alis;
    var defn_sym = cljs.core.nth.call(null, vec__14178, 0, null);
    var defn_name = cljs.core.nth.call(null, vec__14178, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__14178, 2);
    var vec__14179 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__14179, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__14179, 1, null);
    var vec__14180 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__14180, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__14180, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_14181_14183 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_14182_14184 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__9682__auto__ = "~w ~1I~@_~w";
          var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
          return function(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14181_14183, _STAR_current_length_STAR_14182_14184, vec__14178, defn_sym, defn_name, stuff, vec__14179, doc_str, stuff__$1, vec__14180, attr_map, stuff__$2) {
            return function() {
              var G__14185__delegate = function(args__9684__auto__) {
                var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
              };
              var G__14185 = function(var_args) {
                var args__9684__auto__ = null;
                if (arguments.length > 0) {
                  var G__14186__i = 0, G__14186__a = new Array(arguments.length - 0);
                  while (G__14186__i < G__14186__a.length) {
                    G__14186__a[G__14186__i] = arguments[G__14186__i + 0];
                    ++G__14186__i;
                  }
                  args__9684__auto__ = new cljs.core.IndexedSeq(G__14186__a, 0);
                }
                return G__14185__delegate.call(this, args__9684__auto__);
              };
              G__14185.cljs$lang$maxFixedArity = 0;
              G__14185.cljs$lang$applyTo = function(arglist__14187) {
                var args__9684__auto__ = cljs.core.seq(arglist__14187);
                return G__14185__delegate(args__9684__auto__);
              };
              G__14185.cljs$core$IFn$_invoke$arity$variadic = G__14185__delegate;
              return G__14185;
            }();
          }(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14181_14183, _STAR_current_length_STAR_14182_14184, vec__14178, defn_sym, defn_name, stuff, vec__14179, doc_str, stuff__$1, vec__14180, attr_map, stuff__$2);
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__9682__auto__ = " ~_~w";
            var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
            return function(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14181_14183, _STAR_current_length_STAR_14182_14184, vec__14178, defn_sym, defn_name, stuff, vec__14179, doc_str, stuff__$1, vec__14180, attr_map, stuff__$2) {
              return function() {
                var G__14188__delegate = function(args__9684__auto__) {
                  var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                  return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
                };
                var G__14188 = function(var_args) {
                  var args__9684__auto__ = null;
                  if (arguments.length > 0) {
                    var G__14189__i = 0, G__14189__a = new Array(arguments.length - 0);
                    while (G__14189__i < G__14189__a.length) {
                      G__14189__a[G__14189__i] = arguments[G__14189__i + 0];
                      ++G__14189__i;
                    }
                    args__9684__auto__ = new cljs.core.IndexedSeq(G__14189__a, 0);
                  }
                  return G__14188__delegate.call(this, args__9684__auto__);
                };
                G__14188.cljs$lang$maxFixedArity = 0;
                G__14188.cljs$lang$applyTo = function(arglist__14190) {
                  var args__9684__auto__ = cljs.core.seq(arglist__14190);
                  return G__14188__delegate(args__9684__auto__);
                };
                G__14188.cljs$core$IFn$_invoke$arity$variadic = G__14188__delegate;
                return G__14188;
              }();
            }(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14181_14183, _STAR_current_length_STAR_14182_14184, vec__14178, defn_sym, defn_name, stuff, vec__14179, doc_str, stuff__$1, vec__14180, attr_map, stuff__$2);
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__9682__auto__ = " ~_~w";
            var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
            return function(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14181_14183, _STAR_current_length_STAR_14182_14184, vec__14178, defn_sym, defn_name, stuff, vec__14179, doc_str, stuff__$1, vec__14180, attr_map, stuff__$2) {
              return function() {
                var G__14191__delegate = function(args__9684__auto__) {
                  var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                  return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
                };
                var G__14191 = function(var_args) {
                  var args__9684__auto__ = null;
                  if (arguments.length > 0) {
                    var G__14192__i = 0, G__14192__a = new Array(arguments.length - 0);
                    while (G__14192__i < G__14192__a.length) {
                      G__14192__a[G__14192__i] = arguments[G__14192__i + 0];
                      ++G__14192__i;
                    }
                    args__9684__auto__ = new cljs.core.IndexedSeq(G__14192__a, 0);
                  }
                  return G__14191__delegate.call(this, args__9684__auto__);
                };
                G__14191.cljs$lang$maxFixedArity = 0;
                G__14191.cljs$lang$applyTo = function(arglist__14193) {
                  var args__9684__auto__ = cljs.core.seq(arglist__14193);
                  return G__14191__delegate(args__9684__auto__);
                };
                G__14191.cljs$core$IFn$_invoke$arity$variadic = G__14191__delegate;
                return G__14191;
              }();
            }(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14181_14183, _STAR_current_length_STAR_14182_14184, vec__14178, defn_sym, defn_name, stuff, vec__14179, doc_str, stuff__$1, vec__14180, attr_map, stuff__$2);
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__4554__auto__ = doc_str;
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__4554__auto__ = doc_str;
            if (cljs.core.truth_(or__4554__auto__)) {
              return or__4554__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14182_14184;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14181_14183;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_14199_14204 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_14200_14205 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count14201_14206 = 0;
      var binding_14207 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count14201_14206 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_14207)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_14202_14208 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_14203_14209 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_14207));
                if (cljs.core.next.call(null, binding_14207)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_14207));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14203_14209;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14202_14208;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_14207))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__14210 = length_count14201_14206 + 1;
              var G__14211 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_14207));
              length_count14201_14206 = G__14210;
              binding_14207 = G__14211;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14200_14205;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14199_14204;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_14214_14216 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_14215_14217 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__9682__auto__ = "~w ~1I~@_";
          var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
          return function(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14214_14216, _STAR_current_length_STAR_14215_14217, base_sym) {
            return function() {
              var G__14218__delegate = function(args__9684__auto__) {
                var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
              };
              var G__14218 = function(var_args) {
                var args__9684__auto__ = null;
                if (arguments.length > 0) {
                  var G__14219__i = 0, G__14219__a = new Array(arguments.length - 0);
                  while (G__14219__i < G__14219__a.length) {
                    G__14219__a[G__14219__i] = arguments[G__14219__i + 0];
                    ++G__14219__i;
                  }
                  args__9684__auto__ = new cljs.core.IndexedSeq(G__14219__a, 0);
                }
                return G__14218__delegate.call(this, args__9684__auto__);
              };
              G__14218.cljs$lang$maxFixedArity = 0;
              G__14218.cljs$lang$applyTo = function(arglist__14220) {
                var args__9684__auto__ = cljs.core.seq(arglist__14220);
                return G__14218__delegate(args__9684__auto__);
              };
              G__14218.cljs$core$IFn$_invoke$arity$variadic = G__14218__delegate;
              return G__14218;
            }();
          }(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14214_14216, _STAR_current_length_STAR_14215_14217, base_sym);
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__9682__auto__ = " ~_~{~w~^ ~_~}";
          var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
          return function(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14214_14216, _STAR_current_length_STAR_14215_14217, base_sym) {
            return function() {
              var G__14221__delegate = function(args__9684__auto__) {
                var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
              };
              var G__14221 = function(var_args) {
                var args__9684__auto__ = null;
                if (arguments.length > 0) {
                  var G__14222__i = 0, G__14222__a = new Array(arguments.length - 0);
                  while (G__14222__i < G__14222__a.length) {
                    G__14222__a[G__14222__i] = arguments[G__14222__i + 0];
                    ++G__14222__i;
                  }
                  args__9684__auto__ = new cljs.core.IndexedSeq(G__14222__a, 0);
                }
                return G__14221__delegate.call(this, args__9684__auto__);
              };
              G__14221.cljs$lang$maxFixedArity = 0;
              G__14221.cljs$lang$applyTo = function(arglist__14223) {
                var args__9684__auto__ = cljs.core.seq(arglist__14223);
                return G__14221__delegate(args__9684__auto__);
              };
              G__14221.cljs$core$IFn$_invoke$arity$variadic = G__14221__delegate;
              return G__14221;
            }();
          }(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14214_14216, _STAR_current_length_STAR_14215_14217, base_sym);
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14215_14217;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14214_14216;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__9682__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
  return function(format_in__9682__auto__, cf__9683__auto__) {
    return function() {
      var G__14224__delegate = function(args__9684__auto__) {
        var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
        return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
      };
      var G__14224 = function(var_args) {
        var args__9684__auto__ = null;
        if (arguments.length > 0) {
          var G__14225__i = 0, G__14225__a = new Array(arguments.length - 0);
          while (G__14225__i < G__14225__a.length) {
            G__14225__a[G__14225__i] = arguments[G__14225__i + 0];
            ++G__14225__i;
          }
          args__9684__auto__ = new cljs.core.IndexedSeq(G__14225__a, 0);
        }
        return G__14224__delegate.call(this, args__9684__auto__);
      };
      G__14224.cljs$lang$maxFixedArity = 0;
      G__14224.cljs$lang$applyTo = function(arglist__14226) {
        var args__9684__auto__ = cljs.core.seq(arglist__14226);
        return G__14224__delegate(args__9684__auto__);
      };
      G__14224.cljs$core$IFn$_invoke$arity$variadic = G__14224__delegate;
      return G__14224;
    }();
  }(format_in__9682__auto__, cf__9683__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_14232_14237 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_14233_14238 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count14234_14239 = 0;
        var alis_14240__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count14234_14239 < cljs.core._STAR_print_length_STAR_) {
            if (alis_14240__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_14235_14241 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_14236_14242 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_14240__$1));
                  if (cljs.core.next.call(null, alis_14240__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_14240__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14236_14242;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14235_14241;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_14240__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__14243 = length_count14234_14239 + 1;
                var G__14244 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_14240__$1));
                length_count14234_14239 = G__14243;
                alis_14240__$1 = G__14244;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14233_14238;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14232_14237;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_14250_14255 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_14251_14256 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__9682__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
          return function(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14250_14255, _STAR_current_length_STAR_14251_14256) {
            return function() {
              var G__14257__delegate = function(args__9684__auto__) {
                var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
                return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
              };
              var G__14257 = function(var_args) {
                var args__9684__auto__ = null;
                if (arguments.length > 0) {
                  var G__14258__i = 0, G__14258__a = new Array(arguments.length - 0);
                  while (G__14258__i < G__14258__a.length) {
                    G__14258__a[G__14258__i] = arguments[G__14258__i + 0];
                    ++G__14258__i;
                  }
                  args__9684__auto__ = new cljs.core.IndexedSeq(G__14258__a, 0);
                }
                return G__14257__delegate.call(this, args__9684__auto__);
              };
              G__14257.cljs$lang$maxFixedArity = 0;
              G__14257.cljs$lang$applyTo = function(arglist__14259) {
                var args__9684__auto__ = cljs.core.seq(arglist__14259);
                return G__14257__delegate(args__9684__auto__);
              };
              G__14257.cljs$core$IFn$_invoke$arity$variadic = G__14257__delegate;
              return G__14257;
            }();
          }(format_in__9682__auto__, cf__9683__auto__, _STAR_current_level_STAR_14250_14255, _STAR_current_length_STAR_14251_14256);
        }(), alis);
        var length_count14252_14260 = 0;
        var alis_14261__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count14252_14260 < cljs.core._STAR_print_length_STAR_) {
            if (alis_14261__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_14253_14262 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_14254_14263 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_14261__$1));
                  if (cljs.core.next.call(null, alis_14261__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_14261__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14254_14263;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14253_14262;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_14261__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__14264 = length_count14252_14260 + 1;
                var G__14265 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_14261__$1));
                length_count14252_14260 = G__14264;
                alis_14261__$1 = G__14265;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14251_14256;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14250_14255;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR_14269 = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? new cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, args), "%"], true, false) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(_STAR_symbol_map_STAR_14269, args, nlis) {
      return function(p1__14266_SHARP_, p2__14267_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14266_SHARP_, [cljs.core.str("%"), cljs.core.str(p2__14267_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR_14269, args, nlis), args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    try {
      return function() {
        var format_in__9682__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__9683__auto__ = typeof format_in__9682__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__9682__auto__) : format_in__9682__auto__;
        return function(format_in__9682__auto__, cf__9683__auto__, _STAR_symbol_map_STAR_14269, args, nlis) {
          return function() {
            var G__14270__delegate = function(args__9684__auto__) {
              var navigator__9685__auto__ = cljs.pprint.init_navigator.call(null, args__9684__auto__);
              return cljs.pprint.execute_format.call(null, cf__9683__auto__, navigator__9685__auto__);
            };
            var G__14270 = function(var_args) {
              var args__9684__auto__ = null;
              if (arguments.length > 0) {
                var G__14271__i = 0, G__14271__a = new Array(arguments.length - 0);
                while (G__14271__i < G__14271__a.length) {
                  G__14271__a[G__14271__i] = arguments[G__14271__i + 0];
                  ++G__14271__i;
                }
                args__9684__auto__ = new cljs.core.IndexedSeq(G__14271__a, 0);
              }
              return G__14270__delegate.call(this, args__9684__auto__);
            };
            G__14270.cljs$lang$maxFixedArity = 0;
            G__14270.cljs$lang$applyTo = function(arglist__14272) {
              var args__9684__auto__ = cljs.core.seq(arglist__14272);
              return G__14270__delegate(args__9684__auto__);
            };
            G__14270.cljs$core$IFn$_invoke$arity$variadic = G__14270__delegate;
            return G__14270;
          }();
        }(format_in__9682__auto__, cf__9683__auto__, _STAR_symbol_map_STAR_14269, args, nlis);
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR_14269;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_14276_14279 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_14277_14280 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count14278_14281 = 0;
      var alis_14282__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count14278_14281 < cljs.core._STAR_print_length_STAR_) {
          if (alis_14282__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_14282__$1));
            if (cljs.core.next.call(null, alis_14282__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__14283 = length_count14278_14281 + 1;
              var G__14284 = cljs.core.next.call(null, alis_14282__$1);
              length_count14278_14281 = G__14283;
              alis_14282__$1 = G__14284;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_14277_14280;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_14276_14279;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__5307__auto__ = function cljs$pprint$two_forms_$_iter__14289(s__14290) {
      return new cljs.core.LazySeq(null, function() {
        var s__14290__$1 = s__14290;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__14290__$1);
          if (temp__4425__auto__) {
            var s__14290__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__14290__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__14290__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__14292 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__14291 = 0;
                while (true) {
                  if (i__14291 < size__5306__auto__) {
                    var x = cljs.core._nth.call(null, c__5305__auto__, i__14291);
                    cljs.core.chunk_append.call(null, b__14292, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__14293 = i__14291 + 1;
                    i__14291 = G__14293;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14292), cljs$pprint$two_forms_$_iter__14289.call(null, cljs.core.chunk_rest.call(null, s__14290__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14292), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__14290__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__14289.call(null, cljs.core.rest.call(null, s__14290__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(core) {
    return function(p1__14294_SHARP_) {
      var vec__14296 = p1__14294_SHARP_;
      var s = cljs.core.nth.call(null, vec__14296, 0, null);
      var f = cljs.core.nth.call(null, vec__14296, 1, null);
      if (cljs.core.not.call(null, function() {
        var or__4554__auto__ = cljs.core.namespace.call(null, s);
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_.call(null, s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
      } else {
        return p1__14294_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__4423__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__4423__auto__)) {
      var special_form = temp__4423__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__4423__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var arg_num = temp__4423__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__4866__auto__ = 0;
    var y__4867__auto__ = width - cljs.core.count.call(null, s);
    return x__4866__auto__ > y__4867__auto__ ? x__4866__auto__ : y__4867__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table() {
  var args14300 = [];
  var len__5593__auto___14316 = arguments.length;
  var i__5594__auto___14317 = 0;
  while (true) {
    if (i__5594__auto___14317 < len__5593__auto___14316) {
      args14300.push(arguments[i__5594__auto___14317]);
      var G__14318 = i__5594__auto___14317 + 1;
      i__5594__auto___14317 = G__14318;
      continue;
    } else {
    }
    break;
  }
  var G__14302 = args14300.length;
  switch(G__14302) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14300.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  var _STAR_print_newline_STAR_14303 = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, rows)) {
      var widths = cljs.core.map.call(null, function(_STAR_print_newline_STAR_14303) {
        return function(k) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str(k)].join("")), cljs.core.map.call(null, function(_STAR_print_newline_STAR_14303) {
            return function(p1__14297_SHARP_) {
              return cljs.core.count.call(null, [cljs.core.str(cljs.core.get.call(null, p1__14297_SHARP_, k))].join(""));
            };
          }(_STAR_print_newline_STAR_14303), rows));
        };
      }(_STAR_print_newline_STAR_14303), ks);
      var spacers = cljs.core.map.call(null, function(widths, _STAR_print_newline_STAR_14303) {
        return function(p1__14298_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__14298_SHARP_, "-"));
        };
      }(widths, _STAR_print_newline_STAR_14303), widths);
      var fmt_row = function(widths, spacers, _STAR_print_newline_STAR_14303) {
        return function(leader, divider, trailer, row) {
          return [cljs.core.str(leader), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
            var iter__5307__auto__ = function(widths, spacers, _STAR_print_newline_STAR_14303) {
              return function cljs$pprint$iter__14304(s__14305) {
                return new cljs.core.LazySeq(null, function(widths, spacers, _STAR_print_newline_STAR_14303) {
                  return function() {
                    var s__14305__$1 = s__14305;
                    while (true) {
                      var temp__4425__auto__ = cljs.core.seq.call(null, s__14305__$1);
                      if (temp__4425__auto__) {
                        var s__14305__$2 = temp__4425__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__14305__$2)) {
                          var c__5305__auto__ = cljs.core.chunk_first.call(null, s__14305__$2);
                          var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
                          var b__14307 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
                          if (function() {
                            var i__14306 = 0;
                            while (true) {
                              if (i__14306 < size__5306__auto__) {
                                var vec__14310 = cljs.core._nth.call(null, c__5305__auto__, i__14306);
                                var col = cljs.core.nth.call(null, vec__14310, 0, null);
                                var width = cljs.core.nth.call(null, vec__14310, 1, null);
                                cljs.core.chunk_append.call(null, b__14307, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")));
                                var G__14320 = i__14306 + 1;
                                i__14306 = G__14320;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14307), cljs$pprint$iter__14304.call(null, cljs.core.chunk_rest.call(null, s__14305__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14307), null);
                          }
                        } else {
                          var vec__14311 = cljs.core.first.call(null, s__14305__$2);
                          var col = cljs.core.nth.call(null, vec__14311, 0, null);
                          var width = cljs.core.nth.call(null, vec__14311, 1, null);
                          return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")), cljs$pprint$iter__14304.call(null, cljs.core.rest.call(null, s__14305__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(widths, spacers, _STAR_print_newline_STAR_14303), null, null);
              };
            }(widths, spacers, _STAR_print_newline_STAR_14303);
            return iter__5307__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(iter__5307__auto__, widths, spacers, _STAR_print_newline_STAR_14303) {
              return function(p1__14299_SHARP_) {
                return cljs.core.get.call(null, row, p1__14299_SHARP_);
              };
            }(iter__5307__auto__, widths, spacers, _STAR_print_newline_STAR_14303), ks), widths));
          }()))), cljs.core.str(trailer)].join("");
        };
      }(widths, spacers, _STAR_print_newline_STAR_14303);
      cljs.core.println.call(null);
      cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
      cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
      var seq__14312 = cljs.core.seq.call(null, rows);
      var chunk__14313 = null;
      var count__14314 = 0;
      var i__14315 = 0;
      while (true) {
        if (i__14315 < count__14314) {
          var row = cljs.core._nth.call(null, chunk__14313, i__14315);
          cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
          var G__14321 = seq__14312;
          var G__14322 = chunk__14313;
          var G__14323 = count__14314;
          var G__14324 = i__14315 + 1;
          seq__14312 = G__14321;
          chunk__14313 = G__14322;
          count__14314 = G__14323;
          i__14315 = G__14324;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__14312);
          if (temp__4425__auto__) {
            var seq__14312__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__14312__$1)) {
              var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__14312__$1);
              var G__14325 = cljs.core.chunk_rest.call(null, seq__14312__$1);
              var G__14326 = c__5338__auto__;
              var G__14327 = cljs.core.count.call(null, c__5338__auto__);
              var G__14328 = 0;
              seq__14312 = G__14325;
              chunk__14313 = G__14326;
              count__14314 = G__14327;
              i__14315 = G__14328;
              continue;
            } else {
              var row = cljs.core.first.call(null, seq__14312__$1);
              cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
              var G__14329 = cljs.core.next.call(null, seq__14312__$1);
              var G__14330 = null;
              var G__14331 = 0;
              var G__14332 = 0;
              seq__14312 = G__14329;
              chunk__14313 = G__14330;
              count__14314 = G__14331;
              i__14315 = G__14332;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_14303;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env() {
  var args13198 = [];
  var len__5593__auto___13202 = arguments.length;
  var i__5594__auto___13203 = 0;
  while (true) {
    if (i__5594__auto___13203 < len__5593__auto___13202) {
      args13198.push(arguments[i__5594__auto___13203]);
      var G__13204 = i__5594__auto___13203 + 1;
      i__5594__auto___13203 = G__13204;
      continue;
    } else {
    }
    break;
  }
  var G__13200 = args13198.length;
  switch(G__13200) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13198.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__13201 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  var G__13201__$1 = cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter) ? cljs.core.assoc.call(null, G__13201, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint) : G__13201;
  return G__13201__$1;
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__4554__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_() {
  var args__5600__auto__ = [];
  var len__5593__auto___13209 = arguments.length;
  var i__5594__auto___13210 = 0;
  while (true) {
    if (i__5594__auto___13210 < len__5593__auto___13209) {
      args__5600__auto__.push(arguments[i__5594__auto___13210]);
      var G__13211 = i__5594__auto___13210 + 1;
      i__5594__auto___13210 = G__13211;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq13206) {
  var G__13207 = cljs.core.first.call(null, seq13206);
  var seq13206__$1 = cljs.core.next.call(null, seq13206);
  var G__13208 = cljs.core.first.call(null, seq13206__$1);
  var seq13206__$2 = cljs.core.next.call(null, seq13206__$1);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__13207, G__13208, seq13206__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__13215 = m;
  var map__13215__$1 = (!(map__13215 == null) ? map__13215.cljs$lang$protocol_mask$partition0$ & 64 || map__13215.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13215) : map__13215;
  var file = cljs.core.get.call(null, map__13215__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__13215__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__13215__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(map__13215, map__13215__$1, file, line, column) {
    return function(p1__13212_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__13212_SHARP_));
    };
  }(map__13215, map__13215__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(cljs.core.truth_(column) ? [cljs.core.str(":"), cljs.core.str(column)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4425__auto___13217 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4425__auto___13217)) {
    var message_13218 = temp__4425__auto___13217;
    cljs.core.println.call(null, message_13218);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4425__auto___13219 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4425__auto___13219)) {
    var message_13220 = temp__4425__auto___13219;
    cljs.core.println.call(null, message_13220);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2)), parseInt(cljs.core.nth.call(null, parts, cnt - 1))], null);
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var source_map = temp__4423__auto__;
    var temp__4423__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var columns = temp__4423__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__4423__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__4423__auto____$2)) {
          var mapping = temp__4423__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__4423__auto__ = function() {
    var and__4542__auto__ = typeof exception.stack === "string";
    if (and__4542__auto__) {
      var G__13226 = exception.stack;
      var G__13226__$1 = G__13226 == null ? null : clojure.string.split_lines.call(null, G__13226);
      var G__13226__$2 = G__13226__$1 == null ? null : cljs.core.get.call(null, G__13226__$1, depth);
      var G__13226__$3 = G__13226__$2 == null ? null : clojure.string.trim.call(null, G__13226__$2);
      return G__13226__$3;
    } else {
      return and__4542__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4423__auto__)) {
    var stack_element = temp__4423__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__13227 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__13227, 0, null);
    var column = cljs.core.nth.call(null, vec__13227, 1, null);
    var vec__13228 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__13228, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__13228, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__13228, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__13230 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
    switch(G__13230) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = {};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__4425__auto__ = cljs.core.seq.call(null, fns);
    if (temp__4425__auto__) {
      var xs__4977__auto__ = temp__4425__auto__;
      var f = cljs.core.first.call(null, xs__4977__auto__);
      var obj = f.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__4977__auto__, temp__4425__auto__) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__4977__auto__, temp__4425__auto__), null);
          return function(fns, d, obj, f, xs__4977__auto__, temp__4425__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__4977__auto__, temp__4425__auto__);
        }());
      } else {
        var G__13238 = function() {
          var G__13237 = cljs.core.rest.call(null, fns);
          var G__13237__$1 = cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj))) ? cljs.core.concat.call(null, obj, G__13237) : G__13237;
          return G__13237__$1;
        }();
        fns = G__13238;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__13240 = fns;
  var G__13240__$1 = G__13240 == null ? null : cljs.core.vary_meta.call(null, G__13240, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  return G__13240__$1;
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "Var", "Var", -1833791616, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e13243) {
      var e = e13243;
      var G__13244 = e instanceof cljs.core.Keyword ? e.fqn : null;
      switch(G__13244) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var t = temp__4423__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__13247 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__13247, 0, null);
  var types = vec__13247;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not-any?", "not-any?", -2114707554, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "types", "types", -2064405130, null))))].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "types", "types", -2064405130, null)))))].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__13255) {
    var vec__13256 = p__13255;
    var ns = cljs.core.nth.call(null, vec__13256, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__13256, 1, null);
    return function(vec__13256, ns, vars__$1) {
      return function() {
        return cljs.test.block.call(null, function() {
          var env = cljs.test.get_current_env.call(null);
          var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__13257 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures).fqn : null;
          switch(G__13257) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__13257, env, once_fixtures, each_fixtures, vec__13256, ns, vars__$1) {
                return function() {
                  return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function(each_fixture_fn, G__13257, env, once_fixtures, each_fixtures, vec__13256, ns, vars__$1) {
                    return function() {
                      var seq__13258 = cljs.core.seq.call(null, vars__$1);
                      var chunk__13259 = null;
                      var count__13260 = 0;
                      var i__13261 = 0;
                      while (true) {
                        if (i__13261 < count__13260) {
                          var v = cljs.core._nth.call(null, chunk__13259, i__13261);
                          var temp__4425__auto___13263 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                          if (cljs.core.truth_(temp__4425__auto___13263)) {
                            var t_13264 = temp__4425__auto___13263;
                            each_fixture_fn.call(null, function(seq__13258, chunk__13259, count__13260, i__13261, t_13264, temp__4425__auto___13263, v, each_fixture_fn, G__13257, env, once_fixtures, each_fixtures, vec__13256, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_13264)));
                              };
                            }(seq__13258, chunk__13259, count__13260, i__13261, t_13264, temp__4425__auto___13263, v, each_fixture_fn, G__13257, env, once_fixtures, each_fixtures, vec__13256, ns, vars__$1));
                          } else {
                          }
                          var G__13265 = seq__13258;
                          var G__13266 = chunk__13259;
                          var G__13267 = count__13260;
                          var G__13268 = i__13261 + 1;
                          seq__13258 = G__13265;
                          chunk__13259 = G__13266;
                          count__13260 = G__13267;
                          i__13261 = G__13268;
                          continue;
                        } else {
                          var temp__4425__auto__ = cljs.core.seq.call(null, seq__13258);
                          if (temp__4425__auto__) {
                            var seq__13258__$1 = temp__4425__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, seq__13258__$1)) {
                              var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__13258__$1);
                              var G__13269 = cljs.core.chunk_rest.call(null, seq__13258__$1);
                              var G__13270 = c__5338__auto__;
                              var G__13271 = cljs.core.count.call(null, c__5338__auto__);
                              var G__13272 = 0;
                              seq__13258 = G__13269;
                              chunk__13259 = G__13270;
                              count__13260 = G__13271;
                              i__13261 = G__13272;
                              continue;
                            } else {
                              var v = cljs.core.first.call(null, seq__13258__$1);
                              var temp__4425__auto___13273__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                              if (cljs.core.truth_(temp__4425__auto___13273__$1)) {
                                var t_13274 = temp__4425__auto___13273__$1;
                                each_fixture_fn.call(null, function(seq__13258, chunk__13259, count__13260, i__13261, t_13274, temp__4425__auto___13273__$1, v, seq__13258__$1, temp__4425__auto__, each_fixture_fn, G__13257, env, once_fixtures, each_fixtures, vec__13256, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_13274)));
                                  };
                                }(seq__13258, chunk__13259, count__13260, i__13261, t_13274, temp__4425__auto___13273__$1, v, seq__13258__$1, temp__4425__auto__, each_fixture_fn, G__13257, env, once_fixtures, each_fixtures, vec__13256, ns, vars__$1));
                              } else {
                              }
                              var G__13275 = cljs.core.next.call(null, seq__13258__$1);
                              var G__13276 = null;
                              var G__13277 = 0;
                              var G__13278 = 0;
                              seq__13258 = G__13275;
                              chunk__13259 = G__13276;
                              count__13260 = G__13277;
                              i__13261 = G__13278;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__13257, env, once_fixtures, each_fixtures, vec__13256, ns, vars__$1));
                };
              }(each_fixture_fn, G__13257, env, once_fixtures, each_fixtures, vec__13256, ns, vars__$1)], null);
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures))].join(""));;
          }
        }());
      };
    }(vec__13256, ns, vars__$1);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("tiltontec.cell.base");
goog.require("cljs.core");
goog.require("tiltontec.util.base");
goog.require("cljs.test");
goog.require("tiltontec.util.core");
tiltontec.cell.base._PLUS_pulse_PLUS_ = cljs.core.atom.call(null, 0);
tiltontec.cell.base.cells_init = function tiltontec$cell$base$cells_init() {
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_, 0);
};
tiltontec.cell.base._STAR_causation_STAR_ = cljs.core.List.EMPTY;
tiltontec.cell.base._STAR_call_stack_STAR_ = null;
tiltontec.cell.base._STAR_depender_STAR_ = null;
tiltontec.cell.base._STAR_defer_changes_STAR_ = false;
tiltontec.cell.base._PLUS_client_q_handler_PLUS_ = cljs.core.atom.call(null, null);
if (typeof tiltontec.cell.base.unbound !== "undefined") {
} else {
  tiltontec.cell.base.unbound = cljs.core.gensym.call(null, "unbound-cell-value");
}
if (typeof tiltontec.cell.base.uncurrent !== "undefined") {
} else {
  tiltontec.cell.base.uncurrent = cljs.core.gensym.call(null, "uncurrent-formulaic-value");
}
tiltontec.cell.base._STAR_not_to_be_STAR_ = false;
tiltontec.cell.base._STAR_unfinished_business_STAR_ = null;
tiltontec.cell.base._STAR_within_integrity_STAR_ = false;
tiltontec.cell.base._STAR_finbiz_id_STAR_ = 0;
tiltontec.cell.base._STAR_c_prop_depth_STAR_ = 0;
tiltontec.cell.base._PLUS_c_debug_PLUS_ = cljs.core.atom.call(null, false);
tiltontec.cell.base._PLUS_stop_PLUS_ = cljs.core.atom.call(null, false);
tiltontec.cell.base.pcell = function tiltontec$cell$base$pcell(_AMPERSAND_form, _AMPERSAND_env, tag, c) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "println", "cljs.core/println", -331834442, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "pcell", "pcell", -240144130)), cljs.core._conj.call(null, cljs.core.List.EMPTY, tag), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-slot", "tiltontec.cell.base/c-slot", 1453031347, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, c))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-state", "tiltontec.cell.base/c-state", 1205895034, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, c))))))));
};
tiltontec.cell.base.pcell.cljs$lang$macro = true;
tiltontec.cell.base.cells_reset = function tiltontec$cell$base$cells_reset() {
  var args10904 = [];
  var len__5593__auto___10907 = arguments.length;
  var i__5594__auto___10908 = 0;
  while (true) {
    if (i__5594__auto___10908 < len__5593__auto___10907) {
      args10904.push(arguments[i__5594__auto___10908]);
      var G__10909 = i__5594__auto___10908 + 1;
      i__5594__auto___10908 = G__10909;
      continue;
    } else {
    }
    break;
  }
  var G__10906 = args10904.length;
  switch(G__10906) {
    case 0:
      return tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10904.length)].join(""));;
  }
};
tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.base.cells_reset.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$1 = function(options) {
  cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_c_debug_PLUS_, (new cljs.core.Keyword(null, "debug", "debug", -1608172596)).cljs$core$IFn$_invoke$arity$2(options, false));
  cljs.core.reset_BANG_.call(null, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), 0);
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_, (new cljs.core.Keyword(null, "client-queue-handler", "client-queue-handler", -817174181)).cljs$core$IFn$_invoke$arity$1(options));
};
tiltontec.cell.base.cells_reset.cljs$lang$maxFixedArity = 1;
tiltontec.cell.base.without_c_dependency = function tiltontec$cell$base$without_c_dependency() {
  var args__5600__auto__ = [];
  var len__5593__auto___10914 = arguments.length;
  var i__5594__auto___10915 = 0;
  while (true) {
    if (i__5594__auto___10915 < len__5593__auto___10914) {
      args__5600__auto__.push(arguments[i__5594__auto___10915]);
      var G__10916 = i__5594__auto___10915 + 1;
      i__5594__auto___10915 = G__10916;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*depender*", "tiltontec.cell.base/*depender*", 
  1302959745, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null)))))), body)));
};
tiltontec.cell.base.without_c_dependency.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.without_c_dependency.cljs$lang$applyTo = function(seq10911) {
  var G__10912 = cljs.core.first.call(null, seq10911);
  var seq10911__$1 = cljs.core.next.call(null, seq10911);
  var G__10913 = cljs.core.first.call(null, seq10911__$1);
  var seq10911__$2 = cljs.core.next.call(null, seq10911__$1);
  return tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic(G__10912, G__10913, seq10911__$2);
};
tiltontec.cell.base.without_c_dependency.cljs$lang$macro = true;
tiltontec.cell.base._PLUS_cause = function tiltontec$cell$base$_PLUS_cause() {
  return cljs.core.first.call(null, tiltontec.cell.base._STAR_causation_STAR_);
};
tiltontec.cell.base.c_stopper = function tiltontec$cell$base$c_stopper(why) {
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_stop_PLUS_, why);
};
tiltontec.cell.base._PLUS_c_stopper_PLUS_ = cljs.core.atom.call(null, tiltontec.cell.base.c_stopper);
tiltontec.cell.base.c_stop = function tiltontec$cell$base$c_stop() {
  var args10917 = [];
  var len__5593__auto___10920 = arguments.length;
  var i__5594__auto___10921 = 0;
  while (true) {
    if (i__5594__auto___10921 < len__5593__auto___10920) {
      args10917.push(arguments[i__5594__auto___10921]);
      var G__10922 = i__5594__auto___10921 + 1;
      i__5594__auto___10921 = G__10922;
      continue;
    } else {
    }
    break;
  }
  var G__10919 = args10917.length;
  switch(G__10919) {
    case 0:
      return tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10917.length)].join(""));;
  }
};
tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.base.c_stop.call(null, true);
};
tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$1 = function(why) {
  return cljs.core.deref.call(null, tiltontec.cell.base._PLUS_c_stopper_PLUS_).call(null, why);
};
tiltontec.cell.base.c_stop.cljs$lang$maxFixedArity = 1;
tiltontec.cell.base.c_stopped = function tiltontec$cell$base$c_stopped() {
  return cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_);
};
tiltontec.cell.base.un_stopped = function tiltontec$cell$base$un_stopped() {
  var args__5600__auto__ = [];
  var len__5593__auto___10927 = arguments.length;
  var i__5594__auto___10928 = 0;
  while (true) {
    if (i__5594__auto___10928 < len__5593__auto___10927) {
      args__5600__auto__.push(arguments[i__5594__auto___10928]);
      var G__10929 = i__5594__auto___10928 + 1;
      i__5594__auto___10928 = G__10929;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-not", "cljs.core/when-not", -556141047, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "+stop+", "tiltontec.cell.base/+stop+", 1421569483, null)))))), body)));
};
tiltontec.cell.base.un_stopped.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.un_stopped.cljs$lang$applyTo = function(seq10924) {
  var G__10925 = cljs.core.first.call(null, seq10924);
  var seq10924__$1 = cljs.core.next.call(null, seq10924);
  var G__10926 = cljs.core.first.call(null, seq10924__$1);
  var seq10924__$2 = cljs.core.next.call(null, seq10924__$1);
  return tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic(G__10925, G__10926, seq10924__$2);
};
tiltontec.cell.base.un_stopped.cljs$lang$macro = true;
tiltontec.cell.base.ustack$ = function tiltontec$cell$base$ustack$(tag) {
  return [cljs.core.str(tag), cljs.core.str("ustack\x3e "), cljs.core.str(cljs.core.vec.call(null, cljs.core.map.call(null, function(c) {
    return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
  }, tiltontec.cell.base._STAR_call_stack_STAR_)))].join("");
};
tiltontec.cell.base.c_assert = function tiltontec$cell$base$c_assert() {
  var args10930 = [];
  var len__5593__auto___10936 = arguments.length;
  var i__5594__auto___10937 = 0;
  while (true) {
    if (i__5594__auto___10937 < len__5593__auto___10936) {
      args10930.push(arguments[i__5594__auto___10937]);
      var G__10938 = i__5594__auto___10937 + 1;
      i__5594__auto___10937 = G__10938;
      continue;
    } else {
    }
    break;
  }
  var G__10935 = args10930.length;
  switch(G__10935) {
    case 1:
      return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args10930.slice(2), 0);
      return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$1 = function(assertion) {
  if (cljs.core.truth_(assertion)) {
    return null;
  } else {
    return tiltontec.util.core.err.call(null, "c-assert anon failed");
  }
};
tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic = function(assertion, fmt$, fmt_args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    if (cljs.core.truth_(assertion)) {
      return null;
    } else {
      return cljs.core.apply.call(null, new cljs.core.Var(function() {
        return tiltontec.util.core.err;
      }, new cljs.core.Symbol("tiltontec.util.core", "err", "tiltontec.util.core/err", -267832473, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core", "tiltontec.util.core", -133870969, null), new cljs.core.Symbol(null, "err", "err", -448925678, null), "src/tiltontec/util/core.cljc", 16, 3, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core.err) ? tiltontec.util.core.err.cljs$lang$test : 
      null])), [cljs.core.str("c-assert\x3e "), cljs.core.str(fmt$), cljs.core.str(fmt_args)].join(""));
    }
  }
};
tiltontec.cell.base.c_assert.cljs$lang$applyTo = function(seq10931) {
  var G__10932 = cljs.core.first.call(null, seq10931);
  var seq10931__$1 = cljs.core.next.call(null, seq10931);
  var G__10933 = cljs.core.first.call(null, seq10931__$1);
  var seq10931__$2 = cljs.core.next.call(null, seq10931__$1);
  return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic(G__10932, G__10933, seq10931__$2);
};
tiltontec.cell.base.c_assert.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.c_break = function tiltontec$cell$base$c_break() {
  var args__5600__auto__ = [];
  var len__5593__auto___10941 = arguments.length;
  var i__5594__auto___10942 = 0;
  while (true) {
    if (i__5594__auto___10942 < len__5593__auto___10941) {
      args__5600__auto__.push(arguments[i__5594__auto___10942]);
      var G__10943 = i__5594__auto___10942 + 1;
      i__5594__auto___10942 = G__10943;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    return tiltontec.util.core.err.call(null, [cljs.core.str(args)].join(""));
  }
};
tiltontec.cell.base.c_break.cljs$lang$maxFixedArity = 0;
tiltontec.cell.base.c_break.cljs$lang$applyTo = function(seq10940) {
  return tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq10940));
};
tiltontec.cell.base.c_warn = function tiltontec$cell$base$c_warn() {
  var args__5600__auto__ = [];
  var len__5593__auto___10945 = arguments.length;
  var i__5594__auto___10946 = 0;
  while (true) {
    if (i__5594__auto___10946 < len__5593__auto___10945) {
      args__5600__auto__.push(arguments[i__5594__auto___10946]);
      var G__10947 = i__5594__auto___10946 + 1;
      i__5594__auto___10946 = G__10947;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    return cljs.core.println.call(null, cljs.core.apply.call(null, cljs.core.str, "WARNING: ", args));
  }
};
tiltontec.cell.base.c_warn.cljs$lang$maxFixedArity = 0;
tiltontec.cell.base.c_warn.cljs$lang$applyTo = function(seq10944) {
  return tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq10944));
};
tiltontec.cell.base.ia_types = cljs.core.derive.call(null, cljs.core.derive.call(null, cljs.core.derive.call(null, cljs.core.make_hierarchy.call(null), new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830), new cljs.core.Keyword("tiltontec.cell.base", "object", "tiltontec.cell.base/object", 1595927066)), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071), new cljs.core.Keyword("tiltontec.cell.base", "object", "tiltontec.cell.base/object", 
1595927066)), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071));
tiltontec.cell.base.ia_type = function tiltontec$cell$base$ia_type(it) {
  if (it instanceof cljs.core.Atom) {
    return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, it));
  } else {
    return cljs.core.type.call(null, it);
  }
};
tiltontec.cell.base.ia_type_QMARK_ = function tiltontec$cell$base$ia_type_QMARK_(it, typ) {
  return cljs.core.isa_QMARK_.call(null, tiltontec.cell.base.ia_types, tiltontec.cell.base.ia_type.call(null, it), typ);
};
tiltontec.cell.base.c_formula_QMARK_ = function tiltontec$cell$base$c_formula_QMARK_(c) {
  return tiltontec.cell.base.ia_type_QMARK_.call(null, c, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037));
};
tiltontec.cell.base.c_ref_QMARK_ = function tiltontec$cell$base$c_ref_QMARK_(x) {
  return tiltontec.cell.base.ia_type_QMARK_.call(null, x, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071));
};
tiltontec.cell.base.c_me = function tiltontec$cell$base$c_me(ref) {
  return (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_slot = function tiltontec$cell$base$c_slot(ref) {
  return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_state = function tiltontec$cell$base$c_state(ref) {
  return (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_input_QMARK_ = function tiltontec$cell$base$c_input_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "input?", "input?", -1792843173)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_rule = function tiltontec$cell$base$c_rule(ref) {
  return (new cljs.core.Keyword(null, "rule", "rule", 729973257)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse = function tiltontec$cell$base$c_pulse(ref) {
  return (new cljs.core.Keyword(null, "pulse", "pulse", -244494476)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse_last_changed = function tiltontec$cell$base$c_pulse_last_changed(ref) {
  return (new cljs.core.Keyword(null, "pulse-last-changed", "pulse-last-changed", 1035703380)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse_observed = function tiltontec$cell$base$c_pulse_observed(ref) {
  return (new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_useds = function tiltontec$cell$base$c_useds(ref) {
  return (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_users = function tiltontec$cell$base$c_users(ref) {
  return (new cljs.core.Keyword(null, "users", "users", -713552705)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_callers = function tiltontec$cell$base$c_callers(ref) {
  return (new cljs.core.Keyword(null, "callers", "callers", -1991542784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_optimize = function tiltontec$cell$base$c_optimize(ref) {
  return (new cljs.core.Keyword(null, "optimize", "optimize", -1912349448)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_ephemeral_QMARK_ = function tiltontec$cell$base$c_ephemeral_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_lazy = function tiltontec$cell$base$c_lazy(ref) {
  return (new cljs.core.Keyword(null, "lazy", "lazy", -424547181)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_synaptic_QMARK_ = function tiltontec$cell$base$c_synaptic_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "synaptic?", "synaptic?", -2113061248)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_value = function tiltontec$cell$base$c_value(c) {
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = tiltontec.cell.base.c_ref_QMARK_.call(null, c);
    if (cljs.core.truth_(and__4542__auto__)) {
      return cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c));
    } else {
      return and__4542__auto__;
    }
  }())) {
    return (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
  } else {
    return cljs.core.deref.call(null, c);
  }
};
tiltontec.cell.base.c_optimized_away_QMARK_ = function tiltontec$cell$base$c_optimized_away_QMARK_(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    return !cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c)) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "optimized-away", "optimized-away", 876765856), (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c)));
  } else {
    return true;
  }
};
tiltontec.cell.base.c_model = function tiltontec$cell$base$c_model(rc) {
  return (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
};
tiltontec.cell.base.c_md_name = function tiltontec$cell$base$c_md_name(c) {
  var temp__4423__auto__ = tiltontec.cell.base.c_model.call(null, c);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var md = temp__4423__auto__;
    var or__4554__auto__ = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, md));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return "anon";
    }
  } else {
    return "no-md";
  }
};
tiltontec.cell.base.c_slot_name = function tiltontec$cell$base$c_slot_name(rc) {
  return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
};
tiltontec.cell.base.c_value_state = function tiltontec$cell$base$c_value_state(rc) {
  var v = tiltontec.cell.base.c_value.call(null, rc);
  if (cljs.core._EQ_.call(null, v, tiltontec.cell.base.unbound)) {
    return new cljs.core.Keyword(null, "unbound", "unbound", -1366326654);
  } else {
    if (cljs.core._EQ_.call(null, v, tiltontec.cell.base.uncurrent)) {
      return new cljs.core.Keyword(null, "uncurrent", "uncurrent", -217246265);
    } else {
      return new cljs.core.Keyword(null, "valid", "valid", 155614240);
    }
  }
};
tiltontec.cell.base.c_unbound_QMARK_ = function tiltontec$cell$base$c_unbound_QMARK_(rc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654), tiltontec.cell.base.c_value_state.call(null, rc));
};
tiltontec.cell.base.c_valid_QMARK_ = function tiltontec$cell$base$c_valid_QMARK_(rc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "valid", "valid", 155614240), tiltontec.cell.base.c_value_state.call(null, rc));
};
tiltontec.cell.base.caller_ensure = function tiltontec$cell$base$caller_ensure(used, new_caller) {
  return cljs.core.swap_BANG_.call(null, used, cljs.core.assoc, new cljs.core.Keyword(null, "callers", "callers", -1991542784), cljs.core.conj.call(null, tiltontec.cell.base.c_callers.call(null, used), new_caller));
};
tiltontec.cell.base.caller_drop = function tiltontec$cell$base$caller_drop(used, caller) {
  return cljs.core.swap_BANG_.call(null, used, cljs.core.assoc, new cljs.core.Keyword(null, "callers", "callers", -1991542784), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), caller));
};
tiltontec.cell.base.unlink_from_callers = function tiltontec$cell$base$unlink_from_callers(c) {
  var iter__5307__auto___10956 = function tiltontec$cell$base$unlink_from_callers_$_iter__10952(s__10953) {
    return new cljs.core.LazySeq(null, function() {
      var s__10953__$1 = s__10953;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__10953__$1);
        if (temp__4425__auto__) {
          var s__10953__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__10953__$2)) {
            var c__5305__auto__ = cljs.core.chunk_first.call(null, s__10953__$2);
            var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
            var b__10955 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
            if (function() {
              var i__10954 = 0;
              while (true) {
                if (i__10954 < size__5306__auto__) {
                  var caller = cljs.core._nth.call(null, c__5305__auto__, i__10954);
                  cljs.core.chunk_append.call(null, b__10955, tiltontec.cell.base.caller_drop.call(null, c, caller));
                  var G__10957 = i__10954 + 1;
                  i__10954 = G__10957;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10955), tiltontec$cell$base$unlink_from_callers_$_iter__10952.call(null, cljs.core.chunk_rest.call(null, s__10953__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10955), null);
            }
          } else {
            var caller = cljs.core.first.call(null, s__10953__$2);
            return cljs.core.cons.call(null, tiltontec.cell.base.caller_drop.call(null, c, caller), tiltontec$cell$base$unlink_from_callers_$_iter__10952.call(null, cljs.core.rest.call(null, s__10953__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  iter__5307__auto___10956.call(null, tiltontec.cell.base.c_callers.call(null, c));
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), c], null), null);
};
tiltontec.cell.base.c_slots = function tiltontec$cell$base$c_slots(c, k) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  return cljs.core.set.call(null, cljs.core.map.call(null, tiltontec.cell.base.c_slot, k.call(null, cljs.core.deref.call(null, c))));
};
tiltontec.cell.base.md_ref_QMARK_ = function tiltontec$cell$base$md_ref_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
if (typeof tiltontec.cell.base.mdead_QMARK_ !== "undefined") {
} else {
  tiltontec.cell.base.mdead_QMARK_ = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.base", "mdead?"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(me) {
        if (cljs.core.truth_(function() {
          var or__4554__auto__ = me == null;
          if (or__4554__auto__) {
            return or__4554__auto__;
          } else {
            return tiltontec.cell.base.md_ref_QMARK_.call(null, me);
          }
        }())) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))))].join(""));
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, cljs.core.truth_(me) ? cljs.core.deref.call(null, me) : null)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.base.mdead_QMARK_, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return false;
});
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.base.md_slot_owning_QMARK_ = function tiltontec$cell$base$md_slot_owning_QMARK_(class_name, slot_name) {
  return false;
};
goog.provide("tiltontec.cell.observer");
goog.require("cljs.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
tiltontec.cell.observer.type_cljc = function tiltontec$cell$observer$type_cljc(x) {
  var or__4554__auto__ = function() {
    var temp__4425__auto__ = cljs.core.meta.call(null, x);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var m = temp__4425__auto__;
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return cljs.core.type.call(null, x);
  }
};
if (typeof tiltontec.cell.observer.observe !== "undefined") {
} else {
  tiltontec.cell.observer.observe = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.observer", "observe"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(slot_name, me, new_val, old_val, c) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot_name, tiltontec.cell.observer.type_cljc.call(null, me)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.Keyword(null, "default", "default", -1987822328), function(slot, me, new_val, old_val, c) {
  return null;
});
tiltontec.cell.observer.defobserver = function tiltontec$cell$observer$defobserver() {
  var args__5600__auto__ = [];
  var len__5593__auto___10974 = arguments.length;
  var i__5594__auto___10975 = 0;
  while (true) {
    if (i__5594__auto___10975 < len__5593__auto___10974) {
      args__5600__auto__.push(arguments[i__5594__auto___10975]);
      var G__10976 = i__5594__auto___10975 + 1;
      i__5594__auto___10975 = G__10976;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 5 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(5), 0) : null;
  return tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5601__auto__);
};
tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, slot, types, params, body) {
  if (slot instanceof cljs.core.Keyword) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("defobserver\x3e slot should be a keyword."), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "slot", "slot", 1880761098, null))))].join(""));
  }
  var ftypes = cljs.core.concat.call(null, types, cljs.core.take_last.call(null, 1 - cljs.core.count.call(null, types), cljs.core.list(new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830))));
  var fparams = cljs.core.concat.call(null, params, cljs.core.take_last.call(null, 4 - cljs.core.count.call(null, params), cljs.core.list(new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null), new cljs.core.Symbol(null, "old-value", "old-value", -1791888974, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defmethod", "cljs.core/defmethod", -180785162, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.observer", "observe", "tiltontec.cell.observer/observe", -883619497, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, slot), ftypes))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot", "slot", 1880761098, null)), fparams))))), body)));
};
tiltontec.cell.observer.defobserver.cljs$lang$maxFixedArity = 5;
tiltontec.cell.observer.defobserver.cljs$lang$applyTo = function(seq10968) {
  var G__10969 = cljs.core.first.call(null, seq10968);
  var seq10968__$1 = cljs.core.next.call(null, seq10968);
  var G__10970 = cljs.core.first.call(null, seq10968__$1);
  var seq10968__$2 = cljs.core.next.call(null, seq10968__$1);
  var G__10971 = cljs.core.first.call(null, seq10968__$2);
  var seq10968__$3 = cljs.core.next.call(null, seq10968__$2);
  var G__10972 = cljs.core.first.call(null, seq10968__$3);
  var seq10968__$4 = cljs.core.next.call(null, seq10968__$3);
  var G__10973 = cljs.core.first.call(null, seq10968__$4);
  var seq10968__$5 = cljs.core.next.call(null, seq10968__$4);
  return tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic(G__10969, G__10970, G__10971, G__10972, G__10973, seq10968__$5);
};
tiltontec.cell.observer.defobserver.cljs$lang$macro = true;
tiltontec.cell.observer.fn_obs = function tiltontec$cell$observer$fn_obs() {
  var args__5600__auto__ = [];
  var len__5593__auto___10980 = arguments.length;
  var i__5594__auto___10981 = 0;
  while (true) {
    if (i__5594__auto___10981 < len__5593__auto___10980) {
      args__5600__auto__.push(arguments[i__5594__auto___10981]);
      var G__10982 = i__5594__auto___10981 + 1;
      i__5594__auto___10981 = G__10982;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot", "slot", 1880761098, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "old", "old", -184691163, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c", "c", -122660552, null))))))), body)));
};
tiltontec.cell.observer.fn_obs.cljs$lang$maxFixedArity = 2;
tiltontec.cell.observer.fn_obs.cljs$lang$applyTo = function(seq10977) {
  var G__10978 = cljs.core.first.call(null, seq10977);
  var seq10977__$1 = cljs.core.next.call(null, seq10977);
  var G__10979 = cljs.core.first.call(null, seq10977__$1);
  var seq10977__$2 = cljs.core.next.call(null, seq10977__$1);
  return tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic(G__10978, G__10979, seq10977__$2);
};
tiltontec.cell.observer.fn_obs.cljs$lang$macro = true;
tiltontec.cell.observer.c_observe = function tiltontec$cell$observer$c_observe() {
  var args10983 = [];
  var len__5593__auto___10986 = arguments.length;
  var i__5594__auto___10987 = 0;
  while (true) {
    if (i__5594__auto___10987 < len__5593__auto___10986) {
      args10983.push(arguments[i__5594__auto___10987]);
      var G__10988 = i__5594__auto___10987 + 1;
      i__5594__auto___10987 = G__10988;
      continue;
    } else {
    }
    break;
  }
  var G__10985 = args10983.length;
  switch(G__10985) {
    case 2:
      return tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10983.length)].join(""));;
  }
};
tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$2 = function(c, why) {
  return tiltontec.cell.observer.c_observe.call(null, c, tiltontec.cell.base.unbound, why);
};
tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$3 = function(c, prior_value, why) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), c], null), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
  return function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "obs", "obs", -664011444)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return tiltontec.cell.observer.observe;
    }
  }().call(null, tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_value.call(null, c), prior_value, c);
};
tiltontec.cell.observer.c_observe.cljs$lang$maxFixedArity = 3;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__14335_SHARP_) {
      return max === p1__14335_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union() {
  var args14336 = [];
  var len__5593__auto___14342 = arguments.length;
  var i__5594__auto___14343 = 0;
  while (true) {
    if (i__5594__auto___14343 < len__5593__auto___14342) {
      args14336.push(arguments[i__5594__auto___14343]);
      var G__14344 = i__5594__auto___14343 + 1;
      i__5594__auto___14343 = G__14344;
      continue;
    } else {
    }
    break;
  }
  var G__14341 = args14336.length;
  switch(G__14341) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14336.slice(2), 0);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq14337) {
  var G__14338 = cljs.core.first.call(null, seq14337);
  var seq14337__$1 = cljs.core.next.call(null, seq14337);
  var G__14339 = cljs.core.first.call(null, seq14337__$1);
  var seq14337__$2 = cljs.core.next.call(null, seq14337__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__14338, G__14339, seq14337__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection() {
  var args14347 = [];
  var len__5593__auto___14353 = arguments.length;
  var i__5594__auto___14354 = 0;
  while (true) {
    if (i__5594__auto___14354 < len__5593__auto___14353) {
      args14347.push(arguments[i__5594__auto___14354]);
      var G__14355 = i__5594__auto___14354 + 1;
      i__5594__auto___14354 = G__14355;
      continue;
    } else {
    }
    break;
  }
  var G__14352 = args14347.length;
  switch(G__14352) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14347.slice(2), 0);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__14357 = s2;
      var G__14358 = s1;
      s1 = G__14357;
      s2 = G__14358;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__14346_SHARP_) {
    return -cljs.core.count.call(null, p1__14346_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq14348) {
  var G__14349 = cljs.core.first.call(null, seq14348);
  var seq14348__$1 = cljs.core.next.call(null, seq14348);
  var G__14350 = cljs.core.first.call(null, seq14348__$1);
  var seq14348__$2 = cljs.core.next.call(null, seq14348__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__14349, G__14350, seq14348__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference() {
  var args14359 = [];
  var len__5593__auto___14365 = arguments.length;
  var i__5594__auto___14366 = 0;
  while (true) {
    if (i__5594__auto___14366 < len__5593__auto___14365) {
      args14359.push(arguments[i__5594__auto___14366]);
      var G__14367 = i__5594__auto___14366 + 1;
      i__5594__auto___14366 = G__14367;
      continue;
    } else {
    }
    break;
  }
  var G__14364 = args14359.length;
  switch(G__14364) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args14359.slice(2), 0);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq14360) {
  var G__14361 = cljs.core.first.call(null, seq14360);
  var seq14360__$1 = cljs.core.next.call(null, seq14360);
  var G__14362 = cljs.core.first.call(null, seq14360__$1);
  var seq14360__$2 = cljs.core.next.call(null, seq14360__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__14361, G__14362, seq14360__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__14369_SHARP_) {
    return cljs.core.select_keys.call(null, p1__14369_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__14372) {
    var vec__14373 = p__14372;
    var old = cljs.core.nth.call(null, vec__14373, 0, null);
    var new$ = cljs.core.nth.call(null, vec__14373, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__14374_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__14374_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__14377) {
    var vec__14378 = p__14377;
    var k = cljs.core.nth.call(null, vec__14378, 0, null);
    var v = cljs.core.nth.call(null, vec__14378, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join() {
  var args14383 = [];
  var len__5593__auto___14388 = arguments.length;
  var i__5594__auto___14389 = 0;
  while (true) {
    if (i__5594__auto___14389 < len__5593__auto___14388) {
      args14383.push(arguments[i__5594__auto___14389]);
      var G__14390 = i__5594__auto___14389 + 1;
      i__5594__auto___14389 = G__14390;
      continue;
    } else {
    }
    break;
  }
  var G__14385 = args14383.length;
  switch(G__14385) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14383.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__14386 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__14386, 0, null);
    var s = cljs.core.nth.call(null, vec__14386, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ks, vec__14386, r, s, idx) {
      return function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, ks, vec__14386, r, s, idx) {
            return function(p1__14379_SHARP_, p2__14380_SHARP_) {
              return cljs.core.conj.call(null, p1__14379_SHARP_, cljs.core.merge.call(null, p2__14380_SHARP_, x));
            };
          }(found, ks, vec__14386, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__14386, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__14387 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__14387, 0, null);
  var s = cljs.core.nth.call(null, vec__14387, 1, null);
  var k = cljs.core.nth.call(null, vec__14387, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(vec__14387, r, s, k, idx) {
    return function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(found, vec__14387, r, s, k, idx) {
          return function(p1__14381_SHARP_, p2__14382_SHARP_) {
            return cljs.core.conj.call(null, p1__14381_SHARP_, cljs.core.merge.call(null, p2__14382_SHARP_, x));
          };
        }(found, vec__14387, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__14387, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__14392_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__14392_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__14393_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__14393_SHARP_);
  }, set2);
};
goog.provide("tiltontec.cell.integrity");
goog.require("cljs.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_ = false;
tiltontec.cell.integrity._STAR_dp_log_STAR_ = false;
tiltontec.cell.integrity.data_pulse_next = function tiltontec$cell$integrity$data_pulse_next() {
  var args11041 = [];
  var len__5593__auto___11044 = arguments.length;
  var i__5594__auto___11045 = 0;
  while (true) {
    if (i__5594__auto___11045 < len__5593__auto___11044) {
      args11041.push(arguments[i__5594__auto___11045]);
      var G__11046 = i__5594__auto___11045 + 1;
      i__5594__auto___11045 = G__11046;
      continue;
    } else {
    }
    break;
  }
  var G__11043 = args11041.length;
  switch(G__11043) {
    case 0:
      return tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11041.length)].join(""));;
  }
};
tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "anon", "anon", -765650478));
};
tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$1 = function(pulse_info) {
  if (cljs.core.truth_(tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_)) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.integrity._STAR_dp_log_STAR_)) {
      tiltontec.util.base.call_trc.call(null, "dp-next\x3e ", cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) + 1, pulse_info);
    } else {
    }
    return cljs.core.swap_BANG_.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_, cljs.core.inc);
  }
};
tiltontec.cell.integrity.data_pulse_next.cljs$lang$maxFixedArity = 1;
tiltontec.cell.integrity.c_current_QMARK_ = function tiltontec$cell$integrity$c_current_QMARK_(c) {
  return cljs.core._EQ_.call(null, tiltontec.cell.base.c_pulse.call(null, c), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
};
tiltontec.cell.integrity.c_pulse_update = function tiltontec$cell$integrity$c_pulse_update(c, key) {
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c))) {
    return null;
  } else {
    if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) >= tiltontec.cell.base.c_pulse.call(null, c)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
    }
    return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "pulse", "pulse", -244494476), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
  }
};
tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_ = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388), new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603), new cljs.core.Keyword(null, "change", "change", -1163046502)], null);
tiltontec.cell.integrity.unfin_biz = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
  var iter__5307__auto__ = function tiltontec$cell$integrity$iter__11048(s__11049) {
    return new cljs.core.LazySeq(null, function() {
      var s__11049__$1 = s__11049;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__11049__$1);
        if (temp__4425__auto__) {
          var s__11049__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__11049__$2)) {
            var c__5305__auto__ = cljs.core.chunk_first.call(null, s__11049__$2);
            var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
            var b__11051 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
            if (function() {
              var i__11050 = 0;
              while (true) {
                if (i__11050 < size__5306__auto__) {
                  var i = cljs.core._nth.call(null, c__5305__auto__, i__11050);
                  cljs.core.chunk_append.call(null, b__11051, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY)], null));
                  var G__11052 = i__11050 + 1;
                  i__11050 = G__11052;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11051), tiltontec$cell$integrity$iter__11048.call(null, cljs.core.chunk_rest.call(null, s__11049__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11051), null);
            }
          } else {
            var i = cljs.core.first.call(null, s__11049__$2);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY)], null), tiltontec$cell$integrity$iter__11048.call(null, cljs.core.rest.call(null, s__11049__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__5307__auto__.call(null, tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_);
}());
tiltontec.cell.integrity.ufb_queue = function tiltontec$cell$integrity$ufb_queue(opcode) {
  var or__4554__auto__ = opcode.call(null, tiltontec.cell.integrity.unfin_biz);
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return tiltontec.util.core.err.call(null, [cljs.core.str("ufb-queue\x3e opcode unknown: "), cljs.core.str(opcode)].join(""));
  }
};
tiltontec.cell.integrity.ufb_queue_ensure = function tiltontec$cell$integrity$ufb_queue_ensure(opcode) {
  return tiltontec.cell.integrity.ufb_queue.call(null, opcode);
};
tiltontec.cell.integrity.ufb_add = function tiltontec$cell$integrity$ufb_add(opcode, continuation) {
  return tiltontec.util.core.fifo_add.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, opcode), continuation);
};
tiltontec.cell.integrity.ufb_assert_q_empty = function tiltontec$cell$integrity$ufb_assert_q_empty(opcode) {
  var temp__4423__auto__ = tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, opcode));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var uqp = temp__4423__auto__;
    return tiltontec.util.core.err.call(null, [cljs.core.str("ufb queue %s not empty, viz %s"), cljs.core.str(opcode), cljs.core.str(uqp)].join(""));
  } else {
    return true;
  }
};
tiltontec.cell.integrity._STAR_ufb_do_q_STAR_ = null;
tiltontec.cell.integrity.ufb_do = function tiltontec$cell$integrity$ufb_do() {
  var args11053 = [];
  var len__5593__auto___11057 = arguments.length;
  var i__5594__auto___11058 = 0;
  while (true) {
    if (i__5594__auto___11058 < len__5593__auto___11057) {
      args11053.push(arguments[i__5594__auto___11058]);
      var G__11059 = i__5594__auto___11058 + 1;
      i__5594__auto___11058 = G__11059;
      continue;
    } else {
    }
    break;
  }
  var G__11055 = args11053.length;
  switch(G__11055) {
    case 1:
      return tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11053.length)].join(""));;
  }
};
tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$1 = function(opcode) {
  return tiltontec.cell.integrity.ufb_do.call(null, tiltontec.cell.integrity.ufb_queue.call(null, opcode), opcode);
};
tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$2 = function(q, opcode) {
  while (true) {
    var temp__4425__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__11056 = temp__4425__auto__;
      var defer_info = cljs.core.nth.call(null, vec__11056, 0, null);
      var task = cljs.core.nth.call(null, vec__11056, 1, null);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "ufb-do-yep", "ufb-do-yep", -2077548937), defer_info, task);
      task.call(null, opcode, defer_info);
      var G__11061 = q;
      var G__11062 = opcode;
      q = G__11061;
      opcode = G__11062;
      continue;
    } else {
      return null;
    }
    break;
  }
};
tiltontec.cell.integrity.ufb_do.cljs$lang$maxFixedArity = 2;
tiltontec.cell.integrity.finish_business = function tiltontec$cell$integrity$finish_business() {
  if (cljs.core.truth_(cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_))) {
    return null;
  } else {
    var tag = new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388);
    while (true) {
      var G__11065 = tag instanceof cljs.core.Keyword ? tag.fqn : null;
      switch(G__11065) {
        case "tell-dependents":
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388));
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "awaken", "awaken", -1899628152));
          var G__11068 = cljs.core.truth_(tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388)))) ? new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388) : new cljs.core.Keyword(null, "handle-clients", "handle-clients", -1446571173);
          tag = G__11068;
          continue;
          break;
        case "handle-clients":
          var temp__4425__auto__ = tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117));
          if (cljs.core.truth_(temp__4425__auto__)) {
            var clientq = temp__4425__auto__;
            var temp__4423__auto___11069 = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_);
            if (cljs.core.truth_(temp__4423__auto___11069)) {
              var cqh_11070 = temp__4423__auto___11069;
              cqh_11070.call(null, clientq);
            } else {
              tiltontec.cell.integrity.ufb_do.call(null, clientq, new cljs.core.Keyword(null, "client", "client", -1323448117));
            }
            var G__11071 = cljs.core.truth_(tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117)))) ? new cljs.core.Keyword(null, "handle-clients", "handle-clients", -1446571173) : new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603);
            tag = G__11071;
            continue;
          } else {
            return null;
          }
          break;
        case "ephemeral-reset":
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603));
          var G__11072 = new cljs.core.Keyword(null, "deferred-state-change", "deferred-state-change", -1362791478);
          tag = G__11072;
          continue;
          break;
        case "deferred-state-change":
          var temp__4425__auto__ = tiltontec.util.core.fifo_pop.call(null, tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502)));
          if (cljs.core.truth_(temp__4425__auto__)) {
            var vec__11066 = temp__4425__auto__;
            var defer_info = cljs.core.nth.call(null, vec__11066, 0, null);
            var task_fn = cljs.core.nth.call(null, vec__11066, 1, null);
            tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "def-state-chg", "def-state-chg", 1797246466));
            task_fn.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), defer_info);
            var G__11073 = new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388);
            tag = G__11073;
            continue;
          } else {
            return null;
          }
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(tag)].join(""));;
      }
      break;
    }
  }
};
tiltontec.cell.integrity.with_integrity = function tiltontec$cell$integrity$with_integrity() {
  var args__5600__auto__ = [];
  var len__5593__auto___11080 = arguments.length;
  var i__5594__auto___11081 = 0;
  while (true) {
    if (i__5594__auto___11081 < len__5593__auto___11080) {
      args__5600__auto__.push(arguments[i__5594__auto___11081]);
      var G__11082 = i__5594__auto___11081 + 1;
      i__5594__auto___11081 = G__11082;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11078, body) {
  var vec__11079 = p__11078;
  var opcode = cljs.core.nth.call(null, vec__11079, 0, null);
  var info = cljs.core.nth.call(null, vec__11079, 1, null);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "call-with-integrity", "tiltontec.cell.integrity/call-with-integrity", -729981427, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, opcode), cljs.core._conj.call(null, cljs.core.List.EMPTY, info), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "defer-info", "defer-info", 
  -446799704, null))))))), body)))))));
};
tiltontec.cell.integrity.with_integrity.cljs$lang$maxFixedArity = 3;
tiltontec.cell.integrity.with_integrity.cljs$lang$applyTo = function(seq11074) {
  var G__11075 = cljs.core.first.call(null, seq11074);
  var seq11074__$1 = cljs.core.next.call(null, seq11074);
  var G__11076 = cljs.core.first.call(null, seq11074__$1);
  var seq11074__$2 = cljs.core.next.call(null, seq11074__$1);
  var G__11077 = cljs.core.first.call(null, seq11074__$2);
  var seq11074__$3 = cljs.core.next.call(null, seq11074__$2);
  return tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic(G__11075, G__11076, G__11077, seq11074__$3);
};
tiltontec.cell.integrity.with_integrity.cljs$lang$macro = true;
tiltontec.cell.integrity.with_cc = function tiltontec$cell$integrity$with_cc(_AMPERSAND_form, _AMPERSAND_env, id, _AMPERSAND_body, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "with-integrity", "tiltontec.cell.integrity/with-integrity", -1374442056, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "change", "change", 
  -1163046502)), cljs.core._conj.call(null, cljs.core.List.EMPTY, id))))), body)));
};
tiltontec.cell.integrity.with_cc.cljs$lang$macro = true;
tiltontec.cell.integrity.without_integrity = function tiltontec$cell$integrity$without_integrity() {
  var args__5600__auto__ = [];
  var len__5593__auto___11086 = arguments.length;
  var i__5594__auto___11087 = 0;
  while (true) {
    if (i__5594__auto___11087 < len__5593__auto___11086) {
      args__5600__auto__.push(arguments[i__5594__auto___11087]);
      var G__11088 = i__5594__auto___11087 + 1;
      i__5594__auto___11087 = G__11088;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*within-integrity*", "tiltontec.cell.base/*within-integrity*", 
  1558744567, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*defer-changes*", "tiltontec.cell.base/*defer-changes*", 405681033, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "*call-stack*", "tiltontec.cell.integrity/*call-stack*", 1793416916, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.List.EMPTY)))))))))), body)));
};
tiltontec.cell.integrity.without_integrity.cljs$lang$maxFixedArity = 2;
tiltontec.cell.integrity.without_integrity.cljs$lang$applyTo = function(seq11083) {
  var G__11084 = cljs.core.first.call(null, seq11083);
  var seq11083__$1 = cljs.core.next.call(null, seq11083);
  var G__11085 = cljs.core.first.call(null, seq11083__$1);
  var seq11083__$2 = cljs.core.next.call(null, seq11083__$1);
  return tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic(G__11084, G__11085, seq11083__$2);
};
tiltontec.cell.integrity.without_integrity.cljs$lang$macro = true;
tiltontec.cell.integrity.call_with_integrity = function tiltontec$cell$integrity$call_with_integrity(opcode, defer_info, action) {
  if (cljs.core.truth_(opcode)) {
    if (cljs.core.truth_(tiltontec.util.core.cl_find.call(null, opcode, tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid opcode for with-integrity: %s. Allowed values: %s"), cljs.core.str(opcode), cljs.core.str(tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cl-find", "cl-find", -402244315, null), new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null), new cljs.core.Symbol(null, "+ufb-opcodes+", 
      "+ufb-opcodes+", -1562699838, null))))].join(""));
    }
  } else {
  }
  if (cljs.core.truth_(cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_))) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.base.c_stopped.call(null))) {
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "cwi-sees-stop!!!!!!!!!!!", "cwi-sees-stop!!!!!!!!!!!", -1009254623));
    } else {
      if (cljs.core.truth_(tiltontec.cell.base._STAR_within_integrity_STAR_)) {
        if (cljs.core.truth_(opcode)) {
          var result__6575__auto__ = new cljs.core.Keyword(null, "deferred-to-ufb-1", "deferred-to-ufb-1", -1094275721);
          tiltontec.cell.integrity.ufb_add.call(null, opcode, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [defer_info, action], null));
          return result__6575__auto__;
        } else {
          return action.call(null, opcode, defer_info);
        }
      } else {
        var _STAR_within_integrity_STAR_11091 = tiltontec.cell.base._STAR_within_integrity_STAR_;
        var _STAR_defer_changes_STAR_11092 = tiltontec.cell.base._STAR_defer_changes_STAR_;
        tiltontec.cell.base._STAR_within_integrity_STAR_ = true;
        tiltontec.cell.base._STAR_defer_changes_STAR_ = false;
        try {
          if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) === 0 || cljs.core._EQ_.call(null, opcode, new cljs.core.Keyword(null, "change", "change", -1163046502))) {
            tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "cwi", "cwi", 1748296377));
          } else {
          }
          var result__6575__auto__ = action.call(null, opcode, defer_info);
          tiltontec.cell.integrity.finish_business.call(null);
          tiltontec.cell.integrity.ufb_assert_q_empty.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388));
          tiltontec.cell.integrity.ufb_assert_q_empty.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502));
          return result__6575__auto__;
        } finally {
          tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_11092;
          tiltontec.cell.base._STAR_within_integrity_STAR_ = _STAR_within_integrity_STAR_11091;
        }
      }
    }
  }
};
goog.provide("tiltontec.cell.evaluate");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.integrity");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.evaluate.ephemeral_reset = function tiltontec$cell$evaluate$ephemeral_reset(rc) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ephemeral_QMARK_.call(null, rc))) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603), rc, function(opcode, defer_info) {
      var temp__4425__auto___11136 = (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
      if (cljs.core.truth_(temp__4425__auto___11136)) {
        var me_11137 = temp__4425__auto___11136;
        cljs.core.swap_BANG_.call(null, me_11137, cljs.core.assoc, (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc)), null);
      } else {
      }
      return cljs.core.swap_BANG_.call(null, rc, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), null);
    });
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.record_dependency = function tiltontec$cell$evaluate$record_dependency(used) {
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, used))) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.base._STAR_depender_STAR_)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "*depender*", "*depender*", 1156413950, null)))].join(""));
    }
    tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reco-dep!!!", "reco-dep!!!", 380319801), new cljs.core.Keyword(null, "used", "used", -1414786177), tiltontec.cell.base.c_slot.call(null, used), new cljs.core.Keyword(null, "caller", "caller", -1275362879), tiltontec.cell.base.c_slot.call(null, tiltontec.cell.base._STAR_depender_STAR_));
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "useds", "useds", 621350967), tiltontec.cell.base._STAR_depender_STAR_], null), cljs.core.conj.call(null, tiltontec.cell.base.c_useds.call(null, tiltontec.cell.base._STAR_depender_STAR_), used));
    return tiltontec.cell.base.caller_ensure.call(null, used, tiltontec.cell.base._STAR_depender_STAR_);
  }
};
tiltontec.cell.evaluate.ensure_value_is_current = function tiltontec$cell$evaluate$ensure_value_is_current(c, debug_id, ensurer) {
  if (cljs.core.truth_(tiltontec.cell.base._STAR_not_to_be_STAR_)) {
    if (cljs.core.truth_(tiltontec.cell.base.c_unbound_QMARK_.call(null, c))) {
      return tiltontec.util.core.err.call(null, "evic\x3e unbound slot %s of model %s", tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_model.call(null, c));
    } else {
      if (cljs.core.truth_(tiltontec.cell.base.c_valid_QMARK_.call(null, c))) {
        return tiltontec.cell.base.c_value.call(null, c);
      } else {
        return null;
      }
    }
  } else {
    if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
      return tiltontec.cell.base.c_value.call(null, c);
    } else {
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = tiltontec.cell.base.c_input_QMARK_.call(null, c);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = tiltontec.cell.base.c_valid_QMARK_.call(null, c);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return cljs.core.not.call(null, function() {
              var and__4542__auto____$2 = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
              if (cljs.core.truth_(and__4542__auto____$2)) {
                return cljs.core._EQ_.call(null, tiltontec.cell.base.c_optimize.call(null, c), new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336)) && tiltontec.cell.base.c_value.call(null, c) == null;
              } else {
                return and__4542__auto____$2;
              }
            }());
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }())) {
        return tiltontec.cell.base.c_value.call(null, c);
      } else {
        if (cljs.core.truth_(function() {
          var temp__4425__auto__ = tiltontec.cell.base.c_model.call(null, c);
          if (cljs.core.truth_(temp__4425__auto__)) {
            var md = temp__4425__auto__;
            return tiltontec.cell.base.mdead_QMARK_.call(null, tiltontec.cell.base.c_model.call(null, c));
          } else {
            return null;
          }
        }())) {
          return tiltontec.util.core.err.call(null, cljs.core.str, "evic\x3e model %s of cell %s is dead", tiltontec.cell.base.c_model.call(null, c), c);
        } else {
          if (cljs.core.truth_(function() {
            var or__4554__auto__ = cljs.core.not.call(null, tiltontec.cell.base.c_valid_QMARK_.call(null, c));
            if (or__4554__auto__) {
              return or__4554__auto__;
            } else {
              var G__11151 = cljs.core.seq.call(null, tiltontec.cell.base.c_useds.call(null, c));
              var vec__11152 = G__11151;
              var used = cljs.core.nth.call(null, vec__11152, 0, null);
              var urest = cljs.core.nthnext.call(null, vec__11152, 1);
              var G__11151__$1 = G__11151;
              while (true) {
                var vec__11153 = G__11151__$1;
                var used__$1 = cljs.core.nth.call(null, vec__11153, 0, null);
                var urest__$1 = cljs.core.nthnext.call(null, vec__11153, 1);
                if (cljs.core.truth_(used__$1)) {
                  cljs.core.println.call(null, new cljs.core.Keyword(null, "pcell", "pcell", -240144130), new cljs.core.Keyword(null, "cnset-evicing", "cnset-evicing", 380848352), tiltontec.cell.base.c_slot.call(null, used__$1), tiltontec.cell.base.c_state.call(null, used__$1));
                  tiltontec$cell$evaluate$ensure_value_is_current.call(null, used__$1, new cljs.core.Keyword(null, "nested", "nested", 18943849), c);
                  var or__4554__auto____$1 = tiltontec.cell.base.c_pulse_last_changed.call(null, used__$1) > tiltontec.cell.base.c_pulse.call(null, c);
                  if (or__4554__auto____$1) {
                    return or__4554__auto____$1;
                  } else {
                    var G__11154 = urest__$1;
                    G__11151__$1 = G__11154;
                    continue;
                  }
                } else {
                  return null;
                }
                break;
              }
            }
          }())) {
            if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
            } else {
              tiltontec.util.base.call_trc.call(null, ":not-current-so-calc", tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_state.call(null, c));
              tiltontec.cell.evaluate.calculate_and_set.call(null, c, new cljs.core.Keyword(null, "evic", "evic", 1309656753), ensurer);
            }
            return tiltontec.cell.base.c_value.call(null, c);
          } else {
            tiltontec.cell.integrity.c_pulse_update.call(null, c, new cljs.core.Keyword(null, "valid-uninfluenced", "valid-uninfluenced", 676756797));
            return tiltontec.cell.base.c_value.call(null, c);
          }
        }
      }
    }
  }
};
tiltontec.cell.evaluate.c_get = function tiltontec$cell$evaluate$c_get(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    var result__6575__auto__ = tiltontec.cell.integrity.call_with_integrity.call(null, null, null, function(opcode, defer_info) {
      var prior_value = tiltontec.cell.base.c_value.call(null, c);
      var result__6575__auto__ = tiltontec.cell.evaluate.ensure_value_is_current.call(null, c, new cljs.core.Keyword(null, "c-read", "c-read", -1481921085), null);
      if (tiltontec.cell.base.c_model.call(null, c) == null && cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, c), new cljs.core.Keyword(null, "nascent", "nascent", 443401807)) && cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c)) {
        tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
        tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "cget", "cget", 1794378742));
        tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
      } else {
      }
      return result__6575__auto__;
    });
    if (cljs.core.truth_(tiltontec.cell.base._STAR_depender_STAR_)) {
      tiltontec.cell.evaluate.record_dependency.call(null, c);
    } else {
    }
    return result__6575__auto__;
  } else {
    if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c))) {
      return cljs.core.deref.call(null, c);
    } else {
      return c;
    }
  }
};
tiltontec.cell.evaluate.calculate_and_set = function tiltontec$cell$evaluate$calculate_and_set(c, dbgid, dbgdata) {
  var raw_value = tiltontec.cell.evaluate.calculate_and_link.call(null, c);
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c))) {
    return null;
  } else {
    if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("calc-n-set"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
    }
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, raw_value, null);
  }
};
tiltontec.cell.evaluate.calculate_and_link = function tiltontec$cell$evaluate$calculate_and_link(c) {
  var _STAR_call_stack_STAR_11158 = tiltontec.cell.base._STAR_call_stack_STAR_;
  var _STAR_depender_STAR_11159 = tiltontec.cell.base._STAR_depender_STAR_;
  var _STAR_defer_changes_STAR_11160 = tiltontec.cell.base._STAR_defer_changes_STAR_;
  tiltontec.cell.base._STAR_call_stack_STAR_ = cljs.core.cons.call(null, c, tiltontec.cell.base._STAR_call_stack_STAR_);
  tiltontec.cell.base._STAR_depender_STAR_ = c;
  tiltontec.cell.base._STAR_defer_changes_STAR_ = true;
  try {
    tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "pre-rule-clear", "pre-rule-clear", 258781380));
    if (cljs.core.truth_(tiltontec.cell.base.c_rule.call(null, c))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No rule in %s type %s"), cljs.core.str((new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(c)), cljs.core.str(cljs.core.type.call(null, cljs.core.deref.call(null, c)))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
    }
    return tiltontec.cell.base.c_rule.call(null, c).call(null, c);
  } finally {
    tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_11160;
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_11159;
    tiltontec.cell.base._STAR_call_stack_STAR_ = _STAR_call_stack_STAR_11158;
  }
};
if (typeof tiltontec.cell.evaluate.c_awaken !== "undefined") {
} else {
  tiltontec.cell.evaluate.c_awaken = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "c-awaken"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(c) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c));
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword(null, "default", "default", -1987822328), function(c) {
  if (cljs.core.coll_QMARK_.call(null, c)) {
    return cljs.core.doall.call(null, function() {
      var iter__5307__auto__ = function tiltontec$cell$evaluate$iter__11161(s__11162) {
        return new cljs.core.LazySeq(null, function() {
          var s__11162__$1 = s__11162;
          while (true) {
            var temp__4425__auto__ = cljs.core.seq.call(null, s__11162__$1);
            if (temp__4425__auto__) {
              var s__11162__$2 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__11162__$2)) {
                var c__5305__auto__ = cljs.core.chunk_first.call(null, s__11162__$2);
                var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
                var b__11164 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
                if (function() {
                  var i__11163 = 0;
                  while (true) {
                    if (i__11163 < size__5306__auto__) {
                      var ce = cljs.core._nth.call(null, c__5305__auto__, i__11163);
                      cljs.core.chunk_append.call(null, b__11164, tiltontec.cell.evaluate.c_awaken.call(null, ce));
                      var G__11165 = i__11163 + 1;
                      i__11163 = G__11165;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11164), tiltontec$cell$evaluate$iter__11161.call(null, cljs.core.chunk_rest.call(null, s__11162__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11164), null);
                }
              } else {
                var ce = cljs.core.first.call(null, s__11162__$2);
                return cljs.core.cons.call(null, tiltontec.cell.evaluate.c_awaken.call(null, ce), tiltontec$cell$evaluate$iter__11161.call(null, cljs.core.rest.call(null, s__11162__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__5307__auto__.call(null, c);
    }());
  } else {
    return cljs.core.println.call(null, new cljs.core.Keyword(null, "c-awaken-fall-thru", "c-awaken-fall-thru", -2004606871), cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ref-of", "ref-of", 1886926194), cljs.core.type.call(null, c), cljs.core.deref.call(null, c)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
    "unref", "unref", -1884894186), c, cljs.core.type.call(null, c)], null));
  }
});
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071), function(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_input_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c)) {
    var temp__4425__auto___11166 = tiltontec.cell.base.c_me.call(null, c);
    if (cljs.core.truth_(temp__4425__auto___11166)) {
      var me_11167 = temp__4425__auto___11166;
      tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.c_slot.call(null, c), me_11167], null), tiltontec.cell.base.c_value.call(null, c));
    } else {
    }
    tiltontec.cell.observer.c_observe.call(null, c, new cljs.core.Keyword(null, "cell-awaken", "cell-awaken", 2137807704));
    return tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), function(c) {
  var _STAR_depender_STAR_11168 = tiltontec.cell.base._STAR_depender_STAR_;
  tiltontec.cell.base._STAR_depender_STAR_ = null;
  try {
    if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
      return null;
    } else {
      return tiltontec.cell.evaluate.calculate_and_set.call(null, c, new cljs.core.Keyword(null, "fn-c-awaken", "fn-c-awaken", 1597115821), null);
    }
  } finally {
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_11168;
  }
});
tiltontec.cell.evaluate.md_slot_value_store = function tiltontec$cell$evaluate$md_slot_value_store(me, slot, value) {
  if (cljs.core.truth_(me)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "me", "me", 1501524834, null)))].join(""));
  }
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, me))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
  }
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), value);
};
tiltontec.cell.evaluate.c_value_assume = function tiltontec$cell$evaluate$c_value_assume(c, new_value, propagation_code) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  var result__6575__auto__ = new_value;
  var _STAR_depender_STAR_11171_11173 = tiltontec.cell.base._STAR_depender_STAR_;
  tiltontec.cell.base._STAR_depender_STAR_ = null;
  try {
    var prior_value_11174 = tiltontec.cell.base.c_value.call(null, c);
    var prior_state_11175 = tiltontec.cell.base.c_value_state.call(null, c);
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), c], null), new_value);
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = tiltontec.cell.base.c_model.call(null, c);
      if (cljs.core.truth_(and__4542__auto__)) {
        return cljs.core.not.call(null, tiltontec.cell.base.c_synaptic_QMARK_.call(null, c));
      } else {
        return and__4542__auto__;
      }
    }())) {
      tiltontec.cell.evaluate.md_slot_value_store.call(null, tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_slot_name.call(null, c), new_value);
    } else {
    }
    tiltontec.cell.integrity.c_pulse_update.call(null, c, new cljs.core.Keyword(null, "slotv-assume", "slotv-assume", -1071260275));
    if (cljs.core.truth_(function() {
      var or__4554__auto__ = cljs.core._EQ_.call(null, propagation_code, new cljs.core.Keyword(null, "propagate", "propagate", 274376905));
      if (or__4554__auto__) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([prior_state_11175], true), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "valid", "valid", 155614240), new cljs.core.Keyword(null, "uncurrent", "uncurrent", -217246265)], null)));
        if (or__4554__auto____$1) {
          return or__4554__auto____$1;
        } else {
          return tiltontec.cell.evaluate.c_value_changed_QMARK_.call(null, c, new_value, prior_value_11174);
        }
      }
    }())) {
      var callers_11176 = tiltontec.cell.base.c_callers.call(null, c);
      var temp__4425__auto___11177 = function() {
        var and__4542__auto__ = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
        if (cljs.core.truth_(and__4542__auto__)) {
          return tiltontec.cell.base.c_optimize.call(null, c);
        } else {
          return and__4542__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4425__auto___11177)) {
        var optimize_11178 = temp__4425__auto___11177;
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "wtf", "wtf", -1581114577), optimize_11178);
        var G__11172_11179 = optimize_11178;
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), G__11172_11179)) {
          if (cljs.core.truth_(tiltontec.cell.base.c_value.call(null, c))) {
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), tiltontec.cell.base.c_slot.call(null, c));
            tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336));
          } else {
          }
        } else {
          if (cljs.core._EQ_.call(null, true, G__11172_11179)) {
            tiltontec.cell.evaluate.optimize_away_QMARK__BANG_.call(null, c, prior_value_11174);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(optimize_11178)].join(""));
          }
        }
      } else {
      }
      if (cljs.core.truth_(function() {
        var or__4554__auto__ = cljs.core._EQ_.call(null, propagation_code, new cljs.core.Keyword(null, "no-propagate", "no-propagate", -573850970));
        if (or__4554__auto__) {
          return or__4554__auto__;
        } else {
          return tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c);
        }
      }())) {
      } else {
        if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c))) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
        }
        tiltontec.cell.evaluate.propagate.call(null, c, prior_value_11174, callers_11176);
      }
    } else {
    }
  } finally {
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_11171_11173;
  }
  return result__6575__auto__;
};
tiltontec.cell.evaluate.unlink_from_used = function tiltontec$cell$evaluate$unlink_from_used(c, why) {
  var iter__5307__auto___11188 = function tiltontec$cell$evaluate$unlink_from_used_$_iter__11184(s__11185) {
    return new cljs.core.LazySeq(null, function() {
      var s__11185__$1 = s__11185;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__11185__$1);
        if (temp__4425__auto__) {
          var s__11185__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__11185__$2)) {
            var c__5305__auto__ = cljs.core.chunk_first.call(null, s__11185__$2);
            var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
            var b__11187 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
            if (function() {
              var i__11186 = 0;
              while (true) {
                if (i__11186 < size__5306__auto__) {
                  var used = cljs.core._nth.call(null, c__5305__auto__, i__11186);
                  cljs.core.chunk_append.call(null, b__11187, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), used], null), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), c)));
                  var G__11189 = i__11186 + 1;
                  i__11186 = G__11189;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11187), tiltontec$cell$evaluate$unlink_from_used_$_iter__11184.call(null, cljs.core.chunk_rest.call(null, s__11185__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11187), null);
            }
          } else {
            var used = cljs.core.first.call(null, s__11185__$2);
            return cljs.core.cons.call(null, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), used], null), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), c)), tiltontec$cell$evaluate$unlink_from_used_$_iter__11184.call(null, cljs.core.rest.call(null, s__11185__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  iter__5307__auto___11188.call(null, tiltontec.cell.base.c_useds.call(null, c));
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "useds", "useds", 621350967), c], null), cljs.core.PersistentHashSet.EMPTY);
};
tiltontec.cell.evaluate.md_cell_flush = function tiltontec$cell$evaluate$md_cell_flush(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  var temp__4425__auto__ = tiltontec.cell.base.c_model.call(null, c);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var me = temp__4425__auto__;
    return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-flushed", "cells-flushed", -1653073949), me], null), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "cells-flushed", "cells-flushed", -1653073949)).cljs$core$IFn$_invoke$arity$1(me), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_pulse_observed.call(null, 
    c)], null)));
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.optimize_away_QMARK__BANG_ = function tiltontec$cell$evaluate$optimize_away_QMARK__BANG_(c, prior_value) {
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = cljs.core.empty_QMARK_.call(null, tiltontec.cell.base.c_useds.call(null, c));
      if (and__4542__auto____$1) {
        var and__4542__auto____$2 = tiltontec.cell.base.c_optimize.call(null, c);
        if (cljs.core.truth_(and__4542__auto____$2)) {
          var and__4542__auto____$3 = cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
          if (and__4542__auto____$3) {
            var and__4542__auto____$4 = tiltontec.cell.base.c_valid_QMARK_.call(null, c);
            if (cljs.core.truth_(and__4542__auto____$4)) {
              return cljs.core.not.call(null, tiltontec.cell.base.c_synaptic_QMARK_.call(null, c)) && cljs.core.not.call(null, tiltontec.cell.base.c_input_QMARK_.call(null, c));
            } else {
              return and__4542__auto____$4;
            }
          } else {
            return and__4542__auto____$3;
          }
        } else {
          return and__4542__auto____$2;
        }
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "optimized-away", "optimized-away", 876765856));
    tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "opti-away", "opti-away", 1290785499));
    var temp__4425__auto___11198 = tiltontec.cell.base.c_model.call(null, c);
    if (cljs.core.truth_(temp__4425__auto___11198)) {
      var me_11199 = temp__4425__auto___11198;
      tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cz", "cz", 1670864932), me_11199], null), cljs.core.dissoc.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me_11199)), tiltontec.cell.base.c_slot.call(null, c)));
      tiltontec.cell.evaluate.md_cell_flush.call(null, c);
    } else {
    }
    var seq__11194_11200 = cljs.core.seq.call(null, cljs.core.seq.call(null, tiltontec.cell.base.c_callers.call(null, c)));
    var chunk__11195_11201 = null;
    var count__11196_11202 = 0;
    var i__11197_11203 = 0;
    while (true) {
      if (i__11197_11203 < count__11196_11202) {
        var caller_11204 = cljs.core._nth.call(null, chunk__11195_11201, i__11197_11203);
        cljs.core.swap_BANG_.call(null, caller_11204, cljs.core.assoc, new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller_11204)));
        tiltontec.cell.base.caller_drop.call(null, c, caller_11204);
        tiltontec.cell.evaluate.ensure_value_is_current.call(null, caller_11204, new cljs.core.Keyword(null, "opti-used", "opti-used", 660350789), c);
        var G__11205 = seq__11194_11200;
        var G__11206 = chunk__11195_11201;
        var G__11207 = count__11196_11202;
        var G__11208 = i__11197_11203 + 1;
        seq__11194_11200 = G__11205;
        chunk__11195_11201 = G__11206;
        count__11196_11202 = G__11207;
        i__11197_11203 = G__11208;
        continue;
      } else {
        var temp__4425__auto___11209 = cljs.core.seq.call(null, seq__11194_11200);
        if (temp__4425__auto___11209) {
          var seq__11194_11210__$1 = temp__4425__auto___11209;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11194_11210__$1)) {
            var c__5338__auto___11211 = cljs.core.chunk_first.call(null, seq__11194_11210__$1);
            var G__11212 = cljs.core.chunk_rest.call(null, seq__11194_11210__$1);
            var G__11213 = c__5338__auto___11211;
            var G__11214 = cljs.core.count.call(null, c__5338__auto___11211);
            var G__11215 = 0;
            seq__11194_11200 = G__11212;
            chunk__11195_11201 = G__11213;
            count__11196_11202 = G__11214;
            i__11197_11203 = G__11215;
            continue;
          } else {
            var caller_11216 = cljs.core.first.call(null, seq__11194_11210__$1);
            cljs.core.swap_BANG_.call(null, caller_11216, cljs.core.assoc, new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller_11216)));
            tiltontec.cell.base.caller_drop.call(null, c, caller_11216);
            tiltontec.cell.evaluate.ensure_value_is_current.call(null, caller_11216, new cljs.core.Keyword(null, "opti-used", "opti-used", 660350789), c);
            var G__11217 = cljs.core.next.call(null, seq__11194_11210__$1);
            var G__11218 = null;
            var G__11219 = 0;
            var G__11220 = 0;
            seq__11194_11200 = G__11217;
            chunk__11195_11201 = G__11218;
            count__11196_11202 = G__11219;
            i__11197_11203 = G__11220;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.reset_BANG_.call(null, c, tiltontec.cell.base.c_value.call(null, c));
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.c_quiesce = function tiltontec$cell$evaluate$c_quiesce(c) {
  tiltontec.cell.base.unlink_from_callers.call(null, c);
  tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "quiesce", "quiesce", -798294121));
  return cljs.core.reset_BANG_.call(null, c, new cljs.core.Keyword(null, "dead-c", "dead-c", 385485497));
};
if (typeof tiltontec.cell.evaluate.not_to_be !== "undefined") {
} else {
  tiltontec.cell.evaluate.not_to_be = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "not-to-be"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(me) {
        if (cljs.core.truth_(tiltontec.cell.base.md_ref_QMARK_.call(null, me))) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, cljs.core.truth_(me) ? cljs.core.deref.call(null, me) : null)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.not_to_be, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  var seq__11221_11225 = cljs.core.seq.call(null, cljs.core.vals.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me))));
  var chunk__11222_11226 = null;
  var count__11223_11227 = 0;
  var i__11224_11228 = 0;
  while (true) {
    if (i__11224_11228 < count__11223_11227) {
      var c_11229 = cljs.core._nth.call(null, chunk__11222_11226, i__11224_11228);
      tiltontec.cell.evaluate.c_quiesce.call(null, c_11229);
      var G__11230 = seq__11221_11225;
      var G__11231 = chunk__11222_11226;
      var G__11232 = count__11223_11227;
      var G__11233 = i__11224_11228 + 1;
      seq__11221_11225 = G__11230;
      chunk__11222_11226 = G__11231;
      count__11223_11227 = G__11232;
      i__11224_11228 = G__11233;
      continue;
    } else {
      var temp__4425__auto___11234 = cljs.core.seq.call(null, seq__11221_11225);
      if (temp__4425__auto___11234) {
        var seq__11221_11235__$1 = temp__4425__auto___11234;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11221_11235__$1)) {
          var c__5338__auto___11236 = cljs.core.chunk_first.call(null, seq__11221_11235__$1);
          var G__11237 = cljs.core.chunk_rest.call(null, seq__11221_11235__$1);
          var G__11238 = c__5338__auto___11236;
          var G__11239 = cljs.core.count.call(null, c__5338__auto___11236);
          var G__11240 = 0;
          seq__11221_11225 = G__11237;
          chunk__11222_11226 = G__11238;
          count__11223_11227 = G__11239;
          i__11224_11228 = G__11240;
          continue;
        } else {
          var c_11241 = cljs.core.first.call(null, seq__11221_11235__$1);
          tiltontec.cell.evaluate.c_quiesce.call(null, c_11241);
          var G__11242 = cljs.core.next.call(null, seq__11221_11235__$1);
          var G__11243 = null;
          var G__11244 = 0;
          var G__11245 = 0;
          seq__11221_11225 = G__11242;
          chunk__11222_11226 = G__11243;
          count__11223_11227 = G__11244;
          i__11224_11228 = G__11245;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.core.reset_BANG_.call(null, me, null);
  return tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "dead", "dead", -1946604091));
});
if (typeof tiltontec.cell.evaluate.unchanged_test !== "undefined") {
} else {
  tiltontec.cell.evaluate.unchanged_test = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "unchanged-test"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(me, slot) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(me) ? cljs.core.type.call(null, cljs.core.deref.call(null, me)) : null, slot], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.unchanged_test, new cljs.core.Keyword(null, "default", "default", -1987822328), function(self, slotname) {
  return cljs.core._EQ_;
});
tiltontec.cell.evaluate.c_value_changed_QMARK_ = function tiltontec$cell$evaluate$c_value_changed_QMARK_(c, new_value, old_value) {
  return cljs.core.not.call(null, function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "unchanged-if", "unchanged-if", -923210106)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return tiltontec.cell.evaluate.unchanged_test.call(null, tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_slot.call(null, c));
    }
  }().call(null, new_value, old_value));
};
tiltontec.cell.evaluate._STAR_custom_propagater_STAR_ = null;
tiltontec.cell.evaluate.propagate = function tiltontec$cell$evaluate$propagate(c, prior_value, callers) {
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c)));
  if (cljs.core.truth_(tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_)) {
    if (cljs.core.truth_(tiltontec.cell.evaluate._STAR_custom_propagater_STAR_)) {
      return tiltontec.cell.evaluate._STAR_custom_propagater_STAR_.call(null, c, prior_value);
    } else {
      return null;
    }
  } else {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pulse-last-changed", "pulse-last-changed", 1035703380), c], null), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
    var _STAR_depender_STAR_11254 = tiltontec.cell.base._STAR_depender_STAR_;
    var _STAR_call_stack_STAR_11255 = tiltontec.cell.base._STAR_call_stack_STAR_;
    var _STAR_c_prop_depth_STAR_11256 = tiltontec.cell.base._STAR_c_prop_depth_STAR_;
    var _STAR_defer_changes_STAR_11257 = tiltontec.cell.base._STAR_defer_changes_STAR_;
    tiltontec.cell.base._STAR_depender_STAR_ = null;
    tiltontec.cell.base._STAR_call_stack_STAR_ = null;
    tiltontec.cell.base._STAR_c_prop_depth_STAR_ = tiltontec.cell.base._STAR_c_prop_depth_STAR_ + 1;
    tiltontec.cell.base._STAR_defer_changes_STAR_ = true;
    try {
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = prior_value;
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = tiltontec.cell.base.c_model.call(null, c);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return tiltontec.cell.base.md_slot_owning_QMARK_.call(null, cljs.core.type.call(null, tiltontec.cell.base.c_model.call(null, c)), tiltontec.cell.base.c_slot_name.call(null, c));
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }())) {
        var temp__4425__auto___11262 = clojure.set.difference.call(null, tiltontec.util.core.set_ify.call(null, prior_value), tiltontec.util.core.set_ify.call(null, tiltontec.cell.base.c_value.call(null, c)));
        if (cljs.core.truth_(temp__4425__auto___11262)) {
          var ownees_11263 = temp__4425__auto___11262;
          var seq__11258_11264 = cljs.core.seq.call(null, ownees_11263);
          var chunk__11259_11265 = null;
          var count__11260_11266 = 0;
          var i__11261_11267 = 0;
          while (true) {
            if (i__11261_11267 < count__11260_11266) {
              var ownee_11268 = cljs.core._nth.call(null, chunk__11259_11265, i__11261_11267);
              tiltontec.cell.evaluate.not_to_be.call(null, ownee_11268);
              var G__11269 = seq__11258_11264;
              var G__11270 = chunk__11259_11265;
              var G__11271 = count__11260_11266;
              var G__11272 = i__11261_11267 + 1;
              seq__11258_11264 = G__11269;
              chunk__11259_11265 = G__11270;
              count__11260_11266 = G__11271;
              i__11261_11267 = G__11272;
              continue;
            } else {
              var temp__4425__auto___11273__$1 = cljs.core.seq.call(null, seq__11258_11264);
              if (temp__4425__auto___11273__$1) {
                var seq__11258_11274__$1 = temp__4425__auto___11273__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__11258_11274__$1)) {
                  var c__5338__auto___11275 = cljs.core.chunk_first.call(null, seq__11258_11274__$1);
                  var G__11276 = cljs.core.chunk_rest.call(null, seq__11258_11274__$1);
                  var G__11277 = c__5338__auto___11275;
                  var G__11278 = cljs.core.count.call(null, c__5338__auto___11275);
                  var G__11279 = 0;
                  seq__11258_11264 = G__11276;
                  chunk__11259_11265 = G__11277;
                  count__11260_11266 = G__11278;
                  i__11261_11267 = G__11279;
                  continue;
                } else {
                  var ownee_11280 = cljs.core.first.call(null, seq__11258_11274__$1);
                  tiltontec.cell.evaluate.not_to_be.call(null, ownee_11280);
                  var G__11281 = cljs.core.next.call(null, seq__11258_11274__$1);
                  var G__11282 = null;
                  var G__11283 = 0;
                  var G__11284 = 0;
                  seq__11258_11264 = G__11281;
                  chunk__11259_11265 = G__11282;
                  count__11260_11266 = G__11283;
                  i__11261_11267 = G__11284;
                  continue;
                }
              } else {
              }
            }
            break;
          }
        } else {
        }
      } else {
      }
      tiltontec.cell.evaluate.propagate_to_callers.call(null, c, callers);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obs-chkpulse!!!!!!!!", "obs-chkpulse!!!!!!!!", 498932923), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), tiltontec.cell.base.c_pulse_observed.call(null, c));
      if (cljs.core.truth_(function() {
        var or__4554__auto__ = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c);
        if (or__4554__auto__) {
          return or__4554__auto__;
        } else {
          return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null));
        }
      }())) {
        tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "propagate", "propagate", 274376905));
      } else {
      }
      return tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
    } finally {
      tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_11257;
      tiltontec.cell.base._STAR_c_prop_depth_STAR_ = _STAR_c_prop_depth_STAR_11256;
      tiltontec.cell.base._STAR_call_stack_STAR_ = _STAR_call_stack_STAR_11255;
      tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_11254;
    }
  }
};
tiltontec.cell.evaluate.propagate_to_callers = function tiltontec$cell$evaluate$propagate_to_callers(c, callers) {
  if (cljs.core.empty_QMARK_.call(null, callers)) {
    return null;
  } else {
    var causation = cljs.core.cons.call(null, c, tiltontec.cell.base._STAR_causation_STAR_);
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388), c, function(causation) {
      return function(opcode, defer_info) {
        if (cljs.core.truth_(tiltontec.cell.base.mdead_QMARK_.call(null, tiltontec.cell.base.c_model.call(null, c)))) {
          return tiltontec.util.base.call_trc.call(null, "WHOAA!!!! dead by time :tell-deps dispatched; bailing", c);
        } else {
          var _STAR_causation_STAR_11290 = tiltontec.cell.base._STAR_causation_STAR_;
          tiltontec.cell.base._STAR_causation_STAR_ = causation;
          try {
            var seq__11291 = cljs.core.seq.call(null, cljs.core.seq.call(null, callers));
            var chunk__11292 = null;
            var count__11293 = 0;
            var i__11294 = 0;
            while (true) {
              if (i__11294 < count__11293) {
                var caller = cljs.core._nth.call(null, chunk__11292, i__11294);
                if (cljs.core.truth_(function() {
                  var or__4554__auto__ = cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, caller), new cljs.core.Keyword(null, "quiesced", "quiesced", 421940903));
                  if (or__4554__auto__) {
                    return or__4554__auto__;
                  } else {
                    var or__4554__auto____$1 = tiltontec.cell.integrity.c_current_QMARK_.call(null, caller);
                    if (cljs.core.truth_(or__4554__auto____$1)) {
                      return or__4554__auto____$1;
                    } else {
                      var or__4554__auto____$2 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, caller)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.Keyword(null, "always", "always", -1772028770), new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854)], null));
                      if (cljs.core.truth_(or__4554__auto____$2)) {
                        return or__4554__auto____$2;
                      } else {
                        return cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller))) && cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
                      }
                    }
                  }
                }())) {
                  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "not-propping", "not-propping", 438111539), tiltontec.cell.base.c_slot.call(null, c), new cljs.core.Keyword(null, "to", "to", 192099007), tiltontec.cell.base.c_slot.call(null, caller));
                } else {
                  tiltontec.cell.evaluate.calculate_and_set.call(null, caller, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), c);
                }
                var G__11295 = seq__11291;
                var G__11296 = chunk__11292;
                var G__11297 = count__11293;
                var G__11298 = i__11294 + 1;
                seq__11291 = G__11295;
                chunk__11292 = G__11296;
                count__11293 = G__11297;
                i__11294 = G__11298;
                continue;
              } else {
                var temp__4425__auto__ = cljs.core.seq.call(null, seq__11291);
                if (temp__4425__auto__) {
                  var seq__11291__$1 = temp__4425__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__11291__$1)) {
                    var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__11291__$1);
                    var G__11299 = cljs.core.chunk_rest.call(null, seq__11291__$1);
                    var G__11300 = c__5338__auto__;
                    var G__11301 = cljs.core.count.call(null, c__5338__auto__);
                    var G__11302 = 0;
                    seq__11291 = G__11299;
                    chunk__11292 = G__11300;
                    count__11293 = G__11301;
                    i__11294 = G__11302;
                    continue;
                  } else {
                    var caller = cljs.core.first.call(null, seq__11291__$1);
                    if (cljs.core.truth_(function() {
                      var or__4554__auto__ = cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, caller), new cljs.core.Keyword(null, "quiesced", "quiesced", 421940903));
                      if (or__4554__auto__) {
                        return or__4554__auto__;
                      } else {
                        var or__4554__auto____$1 = tiltontec.cell.integrity.c_current_QMARK_.call(null, caller);
                        if (cljs.core.truth_(or__4554__auto____$1)) {
                          return or__4554__auto____$1;
                        } else {
                          var or__4554__auto____$2 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, caller)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.Keyword(null, "always", "always", -1772028770), new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854)], null));
                          if (cljs.core.truth_(or__4554__auto____$2)) {
                            return or__4554__auto____$2;
                          } else {
                            return cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller))) && cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
                          }
                        }
                      }
                    }())) {
                      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "not-propping", "not-propping", 438111539), tiltontec.cell.base.c_slot.call(null, c), new cljs.core.Keyword(null, "to", "to", 192099007), tiltontec.cell.base.c_slot.call(null, caller));
                    } else {
                      tiltontec.cell.evaluate.calculate_and_set.call(null, caller, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), c);
                    }
                    var G__11303 = cljs.core.next.call(null, seq__11291__$1);
                    var G__11304 = null;
                    var G__11305 = 0;
                    var G__11306 = 0;
                    seq__11291 = G__11303;
                    chunk__11292 = G__11304;
                    count__11293 = G__11305;
                    i__11294 = G__11306;
                    continue;
                  }
                } else {
                  return null;
                }
              }
              break;
            }
          } finally {
            tiltontec.cell.base._STAR_causation_STAR_ = _STAR_causation_STAR_11290;
          }
        }
      };
    }(causation));
  }
};
goog.provide("tiltontec.cell.core");
goog.require("cljs.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.core.make_cell = function tiltontec$cell$core$make_cell() {
  var args__5600__auto__ = [];
  var len__5593__auto___11310 = arguments.length;
  var i__5594__auto___11311 = 0;
  while (true) {
    if (i__5594__auto___11311 < len__5593__auto___11310) {
      args__5600__auto__.push(arguments[i__5594__auto___11311]);
      var G__11312 = i__5594__auto___11311 + 1;
      i__5594__auto___11311 = G__11312;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic = function(kvs) {
  var options = cljs.core.apply.call(null, cljs.core.hash_map, kvs);
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "callers", "callers", -1991542784), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, 
  "pulse-last-changed", "pulse-last-changed", 1035703380), new cljs.core.Keyword(null, "pulse", "pulse", -244494476), new cljs.core.Keyword(null, "input?", "input?", -1792843173)], [cljs.core.PersistentHashSet.EMPTY, tiltontec.cell.base.unbound, false, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), 0, false, 0, 0, true]), options), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), 
  new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)], null));
};
tiltontec.cell.core.make_cell.cljs$lang$maxFixedArity = 0;
tiltontec.cell.core.make_cell.cljs$lang$applyTo = function(seq11309) {
  return tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11309));
};
tiltontec.cell.core.make_c_formula = function tiltontec$cell$core$make_c_formula() {
  var args__5600__auto__ = [];
  var len__5593__auto___11314 = arguments.length;
  var i__5594__auto___11315 = 0;
  while (true) {
    if (i__5594__auto___11315 < len__5593__auto___11314) {
      args__5600__auto__.push(arguments[i__5594__auto___11315]);
      var G__11316 = i__5594__auto___11315 + 1;
      i__5594__auto___11315 = G__11316;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic = function(kvs) {
  var options = cljs.core.apply.call(null, cljs.core.hash_map, kvs);
  var rule = (new cljs.core.Keyword(null, "rule", "rule", 729973257)).cljs$core$IFn$_invoke$arity$1(options);
  if (cljs.core.truth_(rule)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "rule", "rule", -1924462512, null)))].join(""));
  }
  if (cljs.core.fn_QMARK_.call(null, rule)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), new cljs.core.Symbol(null, "rule", "rule", -1924462512, null))))].join(""));
  }
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "callers", "callers", -1991542784), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, 
  "pulse-last-changed", "pulse-last-changed", 1035703380), new cljs.core.Keyword(null, "pulse", "pulse", -244494476), new cljs.core.Keyword(null, "useds", "useds", 621350967), new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), new cljs.core.Keyword(null, "input?", "input?", -1792843173)], [cljs.core.PersistentHashSet.EMPTY, tiltontec.cell.base.unbound, false, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), 0, false, 0, 0, cljs.core.PersistentHashSet.EMPTY, true, false]), 
  options), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)], null));
};
tiltontec.cell.core.make_c_formula.cljs$lang$maxFixedArity = 0;
tiltontec.cell.core.make_c_formula.cljs$lang$applyTo = function(seq11313) {
  return tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11313));
};
tiltontec.cell.core.c_fn_var = function tiltontec$cell$core$c_fn_var() {
  var args__5600__auto__ = [];
  var len__5593__auto___11323 = arguments.length;
  var i__5594__auto___11324 = 0;
  while (true) {
    if (i__5594__auto___11324 < len__5593__auto___11323) {
      args__5600__auto__.push(arguments[i__5594__auto___11324]);
      var G__11325 = i__5594__auto___11324 + 1;
      i__5594__auto___11324 = G__11325;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11321, body) {
  var vec__11322 = p__11321;
  var c = cljs.core.nth.call(null, vec__11322, 0, null);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, c)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-model", "tiltontec.cell.base/c-model", 566190580, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, c))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "cache", "cache", 403508473, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-value", "tiltontec.cell.base/c-value", -808509395, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, c)))))))))), body)))))));
};
tiltontec.cell.core.c_fn_var.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_fn_var.cljs$lang$applyTo = function(seq11317) {
  var G__11318 = cljs.core.first.call(null, seq11317);
  var seq11317__$1 = cljs.core.next.call(null, seq11317);
  var G__11319 = cljs.core.first.call(null, seq11317__$1);
  var seq11317__$2 = cljs.core.next.call(null, seq11317__$1);
  var G__11320 = cljs.core.first.call(null, seq11317__$2);
  var seq11317__$3 = cljs.core.next.call(null, seq11317__$2);
  return tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic(G__11318, G__11319, G__11320, seq11317__$3);
};
tiltontec.cell.core.c_fn_var.cljs$lang$macro = true;
tiltontec.cell.core.c_fn = function tiltontec$cell$core$c_fn() {
  var args__5600__auto__ = [];
  var len__5593__auto___11329 = arguments.length;
  var i__5594__auto___11330 = 0;
  while (true) {
    if (i__5594__auto___11330 < len__5593__auto___11329) {
      args__5600__auto__.push(arguments[i__5594__auto___11330]);
      var G__11331 = i__5594__auto___11330 + 1;
      i__5594__auto___11330 = G__11331;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn-var", "tiltontec.cell.core/c-fn-var", -1960595436, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot-c#", "slot-c#", 1084398166, null)))))), 
  body)));
};
tiltontec.cell.core.c_fn.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_fn.cljs$lang$applyTo = function(seq11326) {
  var G__11327 = cljs.core.first.call(null, seq11326);
  var seq11326__$1 = cljs.core.next.call(null, seq11326);
  var G__11328 = cljs.core.first.call(null, seq11326__$1);
  var seq11326__$2 = cljs.core.next.call(null, seq11326__$1);
  return tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic(G__11327, G__11328, seq11326__$2);
};
tiltontec.cell.core.c_fn.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_ = function tiltontec$cell$core$c_QMARK_() {
  var args__5600__auto__ = [];
  var len__5593__auto___11335 = arguments.length;
  var i__5594__auto___11336 = 0;
  while (true) {
    if (i__5594__auto___11336 < len__5593__auto___11335) {
      args__5600__auto__.push(arguments[i__5594__auto___11336]);
      var G__11337 = i__5594__auto___11336 + 1;
      i__5594__auto___11336 = G__11337;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 
  729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK_.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_.cljs$lang$applyTo = function(seq11332) {
  var G__11333 = cljs.core.first.call(null, seq11332);
  var seq11332__$1 = cljs.core.next.call(null, seq11332);
  var G__11334 = cljs.core.first.call(null, seq11332__$1);
  var seq11332__$2 = cljs.core.next.call(null, seq11332__$1);
  return tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__11333, G__11334, seq11332__$2);
};
tiltontec.cell.core.c_QMARK_.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__PLUS_ = function tiltontec$cell$core$c_QMARK__PLUS_() {
  var args__5600__auto__ = [];
  var len__5593__auto___11344 = arguments.length;
  var i__5594__auto___11345 = 0;
  while (true) {
    if (i__5594__auto___11345 < len__5593__auto___11344) {
      args__5600__auto__.push(arguments[i__5594__auto___11345]);
      var G__11346 = i__5594__auto___11345 + 1;
      i__5594__auto___11345 = G__11346;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11342, body) {
  var vec__11343 = p__11342;
  var options = cljs.core.nthnext.call(null, vec__11343, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$applyTo = function(seq11338) {
  var G__11339 = cljs.core.first.call(null, seq11338);
  var seq11338__$1 = cljs.core.next.call(null, seq11338);
  var G__11340 = cljs.core.first.call(null, seq11338__$1);
  var seq11338__$2 = cljs.core.next.call(null, seq11338__$1);
  var G__11341 = cljs.core.first.call(null, seq11338__$2);
  var seq11338__$3 = cljs.core.next.call(null, seq11338__$2);
  return tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__11339, G__11340, G__11341, seq11338__$3);
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__PLUS_n = function tiltontec$cell$core$c_QMARK__PLUS_n() {
  var args__5600__auto__ = [];
  var len__5593__auto___11350 = arguments.length;
  var i__5594__auto___11351 = 0;
  while (true) {
    if (i__5594__auto___11351 < len__5593__auto___11350) {
      args__5600__auto__.push(arguments[i__5594__auto___11351]);
      var G__11352 = i__5594__auto___11351 + 1;
      i__5594__auto___11351 = G__11352;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$applyTo = function(seq11347) {
  var G__11348 = cljs.core.first.call(null, seq11347);
  var seq11347__$1 = cljs.core.next.call(null, seq11347);
  var G__11349 = cljs.core.first.call(null, seq11347__$1);
  var seq11347__$2 = cljs.core.next.call(null, seq11347__$1);
  return tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic(G__11348, G__11349, seq11347__$2);
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n = function tiltontec$cell$core$c_QMARK_n() {
  var args__5600__auto__ = [];
  var len__5593__auto___11356 = arguments.length;
  var i__5594__auto___11357 = 0;
  while (true) {
    if (i__5594__auto___11357 < len__5593__auto___11356) {
      args__5600__auto__.push(arguments[i__5594__auto___11357]);
      var G__11358 = i__5594__auto___11357 + 1;
      i__5594__auto___11357 = G__11358;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, 
  null)), body)))))))))));
};
tiltontec.cell.core.c_QMARK_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_n.cljs$lang$applyTo = function(seq11353) {
  var G__11354 = cljs.core.first.call(null, seq11353);
  var seq11353__$1 = cljs.core.next.call(null, seq11353);
  var G__11355 = cljs.core.first.call(null, seq11353__$1);
  var seq11353__$2 = cljs.core.next.call(null, seq11353__$1);
  return tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic(G__11354, G__11355, seq11353__$2);
};
tiltontec.cell.core.c_QMARK_n.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_n = function tiltontec$cell$core$c__QMARK_n() {
  var args__5600__auto__ = [];
  var len__5593__auto___11362 = arguments.length;
  var i__5594__auto___11363 = 0;
  while (true) {
    if (i__5594__auto___11363 < len__5593__auto___11362) {
      args__5600__auto__.push(arguments[i__5594__auto___11363]);
      var G__11364 = i__5594__auto___11363 + 1;
      i__5594__auto___11363 = G__11364;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))))));
};
tiltontec.cell.core.c__QMARK_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c__QMARK_n.cljs$lang$applyTo = function(seq11359) {
  var G__11360 = cljs.core.first.call(null, seq11359);
  var seq11359__$1 = cljs.core.next.call(null, seq11359);
  var G__11361 = cljs.core.first.call(null, seq11359__$1);
  var seq11359__$2 = cljs.core.next.call(null, seq11359__$1);
  return tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic(G__11360, G__11361, seq11359__$2);
};
tiltontec.cell.core.c__QMARK_n.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n_dbg = function tiltontec$cell$core$c_QMARK_n_dbg() {
  var args__5600__auto__ = [];
  var len__5593__auto___11368 = arguments.length;
  var i__5594__auto___11369 = 0;
  while (true) {
    if (i__5594__auto___11369 < len__5593__auto___11368) {
      args__5600__auto__.push(arguments[i__5594__auto___11369]);
      var G__11370 = i__5594__auto___11369 + 1;
      i__5594__auto___11369 = G__11370;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, 
  null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))))));
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$applyTo = function(seq11365) {
  var G__11366 = cljs.core.first.call(null, seq11365);
  var seq11365__$1 = cljs.core.next.call(null, seq11365);
  var G__11367 = cljs.core.first.call(null, seq11365__$1);
  var seq11365__$2 = cljs.core.next.call(null, seq11365__$1);
  return tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic(G__11366, G__11367, seq11365__$2);
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n_until = function tiltontec$cell$core$c_QMARK_n_until() {
  var args__5600__auto__ = [];
  var len__5593__auto___11375 = arguments.length;
  var i__5594__auto___11376 = 0;
  while (true) {
    if (i__5594__auto___11376 < len__5593__auto___11375) {
      args__5600__auto__.push(arguments[i__5594__auto___11376]);
      var G__11377 = i__5594__auto___11376 + 1;
      i__5594__auto___11376 = G__11377;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, args, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "optimize", "optimize", -1912349448)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))), args)));
};
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$applyTo = function(seq11371) {
  var G__11372 = cljs.core.first.call(null, seq11371);
  var seq11371__$1 = cljs.core.next.call(null, seq11371);
  var G__11373 = cljs.core.first.call(null, seq11371__$1);
  var seq11371__$2 = cljs.core.next.call(null, seq11371__$1);
  var G__11374 = cljs.core.first.call(null, seq11371__$2);
  var seq11371__$3 = cljs.core.next.call(null, seq11371__$2);
  return tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic(G__11372, G__11373, G__11374, seq11371__$3);
};
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_once = function tiltontec$cell$core$c_QMARK_once() {
  var args__5600__auto__ = [];
  var len__5593__auto___11381 = arguments.length;
  var i__5594__auto___11382 = 0;
  while (true) {
    if (i__5594__auto___11382 < len__5593__auto___11381) {
      args__5600__auto__.push(arguments[i__5594__auto___11382]);
      var G__11383 = i__5594__auto___11382 + 1;
      i__5594__auto___11382 = G__11383;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, 
  null)), body)))))))))));
};
tiltontec.cell.core.c_QMARK_once.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_once.cljs$lang$applyTo = function(seq11378) {
  var G__11379 = cljs.core.first.call(null, seq11378);
  var seq11378__$1 = cljs.core.next.call(null, seq11378);
  var G__11380 = cljs.core.first.call(null, seq11378__$1);
  var seq11378__$2 = cljs.core.next.call(null, seq11378__$1);
  return tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic(G__11379, G__11380, seq11378__$2);
};
tiltontec.cell.core.c_QMARK_once.cljs$lang$macro = true;
tiltontec.cell.core.c_1 = function tiltontec$cell$core$c_1() {
  var args__5600__auto__ = [];
  var len__5593__auto___11387 = arguments.length;
  var i__5594__auto___11388 = 0;
  while (true) {
    if (i__5594__auto___11388 < len__5593__auto___11387) {
      args__5600__auto__.push(arguments[i__5594__auto___11388]);
      var G__11389 = i__5594__auto___11388 + 1;
      i__5594__auto___11388 = G__11389;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))))));
};
tiltontec.cell.core.c_1.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_1.cljs$lang$applyTo = function(seq11384) {
  var G__11385 = cljs.core.first.call(null, seq11384);
  var seq11384__$1 = cljs.core.next.call(null, seq11384);
  var G__11386 = cljs.core.first.call(null, seq11384__$1);
  var seq11384__$2 = cljs.core.next.call(null, seq11384__$1);
  return tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic(G__11385, G__11386, seq11384__$2);
};
tiltontec.cell.core.c_1.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_1 = function tiltontec$cell$core$c_QMARK_1() {
  var args__5600__auto__ = [];
  var len__5593__auto___11393 = arguments.length;
  var i__5594__auto___11394 = 0;
  while (true) {
    if (i__5594__auto___11394 < len__5593__auto___11393) {
      args__5600__auto__.push(arguments[i__5594__auto___11394]);
      var G__11395 = i__5594__auto___11394 + 1;
      i__5594__auto___11394 = G__11395;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c?once", "tiltontec.cell.core/c?once", 88229667, null)), body)));
};
tiltontec.cell.core.c_QMARK_1.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_1.cljs$lang$applyTo = function(seq11390) {
  var G__11391 = cljs.core.first.call(null, seq11390);
  var seq11390__$1 = cljs.core.next.call(null, seq11390);
  var G__11392 = cljs.core.first.call(null, seq11390__$1);
  var seq11390__$2 = cljs.core.next.call(null, seq11390__$1);
  return tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic(G__11391, G__11392, seq11390__$2);
};
tiltontec.cell.core.c_QMARK_1.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_dbg = function tiltontec$cell$core$c_QMARK_dbg() {
  var args__5600__auto__ = [];
  var len__5593__auto___11399 = arguments.length;
  var i__5594__auto___11400 = 0;
  while (true) {
    if (i__5594__auto___11400 < len__5593__auto___11399) {
      args__5600__auto__.push(arguments[i__5594__auto___11400]);
      var G__11401 = i__5594__auto___11400 + 1;
      i__5594__auto___11400 = G__11401;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", 
  -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$applyTo = function(seq11396) {
  var G__11397 = cljs.core.first.call(null, seq11396);
  var seq11396__$1 = cljs.core.next.call(null, seq11396);
  var G__11398 = cljs.core.first.call(null, seq11396__$1);
  var seq11396__$2 = cljs.core.next.call(null, seq11396__$1);
  return tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(G__11397, G__11398, seq11396__$2);
};
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__ = function tiltontec$cell$core$c_QMARK__() {
  var args__5600__auto__ = [];
  var len__5593__auto___11408 = arguments.length;
  var i__5594__auto___11409 = 0;
  while (true) {
    if (i__5594__auto___11409 < len__5593__auto___11408) {
      args__5600__auto__.push(arguments[i__5594__auto___11409]);
      var G__11410 = i__5594__auto___11409 + 1;
      i__5594__auto___11409 = G__11410;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11406, body) {
  var vec__11407 = p__11406;
  var options = cljs.core.nthnext.call(null, vec__11407, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK__.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK__.cljs$lang$applyTo = function(seq11402) {
  var G__11403 = cljs.core.first.call(null, seq11402);
  var seq11402__$1 = cljs.core.next.call(null, seq11402);
  var G__11404 = cljs.core.first.call(null, seq11402__$1);
  var seq11402__$2 = cljs.core.next.call(null, seq11402__$1);
  var G__11405 = cljs.core.first.call(null, seq11402__$2);
  var seq11402__$3 = cljs.core.next.call(null, seq11402__$2);
  return tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic(G__11403, G__11404, G__11405, seq11402__$3);
};
tiltontec.cell.core.c_QMARK__.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_ = function tiltontec$cell$core$c__QMARK_() {
  var args__5600__auto__ = [];
  var len__5593__auto___11417 = arguments.length;
  var i__5594__auto___11418 = 0;
  while (true) {
    if (i__5594__auto___11418 < len__5593__auto___11417) {
      args__5600__auto__.push(arguments[i__5594__auto___11418]);
      var G__11419 = i__5594__auto___11418 + 1;
      i__5594__auto___11418 = G__11419;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11415, body) {
  var vec__11416 = p__11415;
  var options = cljs.core.nthnext.call(null, vec__11416, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 
  1198019642, null)), body)))))));
};
tiltontec.cell.core.c__QMARK_.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c__QMARK_.cljs$lang$applyTo = function(seq11411) {
  var G__11412 = cljs.core.first.call(null, seq11411);
  var seq11411__$1 = cljs.core.next.call(null, seq11411);
  var G__11413 = cljs.core.first.call(null, seq11411__$1);
  var seq11411__$2 = cljs.core.next.call(null, seq11411__$1);
  var G__11414 = cljs.core.first.call(null, seq11411__$2);
  var seq11411__$3 = cljs.core.next.call(null, seq11411__$2);
  return tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__11412, G__11413, G__11414, seq11411__$3);
};
tiltontec.cell.core.c__QMARK_.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_dbg = function tiltontec$cell$core$c__QMARK_dbg() {
  var args__5600__auto__ = [];
  var len__5593__auto___11423 = arguments.length;
  var i__5594__auto___11424 = 0;
  while (true) {
    if (i__5594__auto___11424 < len__5593__auto___11423) {
      args__5600__auto__.push(arguments[i__5594__auto___11424]);
      var G__11425 = i__5594__auto___11424 + 1;
      i__5594__auto___11424 = G__11425;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", 
  -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 
  1198019642, null)), body)))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true))));
};
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$applyTo = function(seq11420) {
  var G__11421 = cljs.core.first.call(null, seq11420);
  var seq11420__$1 = cljs.core.next.call(null, seq11420);
  var G__11422 = cljs.core.first.call(null, seq11420__$1);
  var seq11420__$2 = cljs.core.next.call(null, seq11420__$1);
  return tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(G__11421, G__11422, seq11420__$2);
};
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_formula = function tiltontec$cell$core$c_formula() {
  var args__5600__auto__ = [];
  var len__5593__auto___11432 = arguments.length;
  var i__5594__auto___11433 = 0;
  while (true) {
    if (i__5594__auto___11433 < len__5593__auto___11432) {
      args__5600__auto__.push(arguments[i__5594__auto___11433]);
      var G__11434 = i__5594__auto___11433 + 1;
      i__5594__auto___11433 = G__11434;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11430, body) {
  var vec__11431 = p__11430;
  var kvs = cljs.core.nthnext.call(null, vec__11431, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 
  729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))), cljs.core.keys)));
};
tiltontec.cell.core.c_formula.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_formula.cljs$lang$applyTo = function(seq11426) {
  var G__11427 = cljs.core.first.call(null, seq11426);
  var seq11426__$1 = cljs.core.next.call(null, seq11426);
  var G__11428 = cljs.core.first.call(null, seq11426__$1);
  var seq11426__$2 = cljs.core.next.call(null, seq11426__$1);
  var G__11429 = cljs.core.first.call(null, seq11426__$2);
  var seq11426__$3 = cljs.core.next.call(null, seq11426__$2);
  return tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic(G__11427, G__11428, G__11429, seq11426__$3);
};
tiltontec.cell.core.c_formula.cljs$lang$macro = true;
tiltontec.cell.core.c_in = function tiltontec$cell$core$c_in() {
  var args__5600__auto__ = [];
  var len__5593__auto___11437 = arguments.length;
  var i__5594__auto___11438 = 0;
  while (true) {
    if (i__5594__auto___11438 < len__5593__auto___11437) {
      args__5600__auto__.push(arguments[i__5594__auto___11438]);
      var G__11439 = i__5594__auto___11438 + 1;
      i__5594__auto___11438 = G__11439;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic = function(value, option_kvs) {
  return cljs.core.apply.call(null, tiltontec.cell.core.make_cell, cljs.core.list_STAR_.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "input?", "input?", -1792843173), true, option_kvs));
};
tiltontec.cell.core.c_in.cljs$lang$maxFixedArity = 1;
tiltontec.cell.core.c_in.cljs$lang$applyTo = function(seq11435) {
  var G__11436 = cljs.core.first.call(null, seq11435);
  var seq11435__$1 = cljs.core.next.call(null, seq11435);
  return tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic(G__11436, seq11435__$1);
};
tiltontec.cell.core.c_reset_BANG_ = function tiltontec$cell$core$c_reset_BANG_(c, new_value) {
  if (cljs.core.truth_(c)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "c", "c", -122660552, null)))].join(""));
  }
  if (cljs.core.truth_(tiltontec.cell.base._STAR_defer_changes_STAR_)) {
    throw new Error("c-reset!\x3e change to %s must be deferred by wrapping it in WITH-INTEGRITY", tiltontec.cell.base.c_slot.call(null, c));
  } else {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null)))) {
      return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
    } else {
      return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), tiltontec.cell.base.c_slot.call(null, c), function(opcode, defer_info) {
        return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
      });
    }
  }
};
tiltontec.cell.core.c_reset_next_BANG_ = function tiltontec$cell$core$c_reset_next_BANG_(_AMPERSAND_form, _AMPERSAND_env, f_c, f_new_value) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "cond", "cljs.core/cond", 2005388338, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "*within-integrity*", "tiltontec.cell.core/*within-integrity*", 1558832389, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "throw", "throw", 595905694, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, "c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision."), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "c-slot", "tiltontec.cell.base/c-slot", 1453031347, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_c))))))))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "else", "else", -1508377146)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "ufb-add", "tiltontec.cell.core/ufb-add", 
  1421793642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "change", "change", -1163046502)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, 
  "defer-info", "defer-info", -446799704, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  new cljs.core.Symbol(null, "c__11440__auto__", "c__11440__auto__", -1324482632, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_c), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new-value__11441__auto__", "new-value__11441__auto__", 1978582315, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_new_value)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "call-c-reset-next!", "tiltontec.cell.core/call-c-reset-next!", -970475516, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c__11440__auto__", "c__11440__auto__", -1324482632, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new-value__11441__auto__", "new-value__11441__auto__", 1978582315, null))))))))))))))))))))))))));
};
tiltontec.cell.core.c_reset_next_BANG_.cljs$lang$macro = true;
tiltontec.cell.core.call_c_reset_next_BANG_ = function tiltontec$cell$core$call_c_reset_next_BANG_(c, new_value) {
  if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null)))) {
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
  } else {
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
  }
};
goog.provide("tiltontec.cell.integrity_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
tiltontec.cell.integrity_test.obsdbg = function tiltontec$cell$integrity_test$obsdbg() {
  return null;
};
tiltontec.cell.integrity_test.obs_setf = function tiltontec$cell$integrity_test$obs_setf() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$obs_setf.cljs$lang$var);
};
tiltontec.cell.integrity_test.obs_setf.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  try {
    var values__10696__auto___12671 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
    var result__10697__auto___12672 = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__10696__auto___12671);
    if (cljs.core.truth_(result__10697__auto___12672)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.zero_QMARK_, values__10696__auto___12671), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__10696__auto___12671)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12660) {
    var t__10734__auto___12673 = e12660;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12673, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var alarm = tiltontec.cell.core.c_in.call(null, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var act = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act) {
    return function(slot, me, new$, old, c) {
      if (cljs.core._EQ_.call(null, new$, new cljs.core.Keyword(null, "missing", "missing", 362507769))) {
        return null;
      } else {
        if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), 2)) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null)), 2)))].join(""));
        }
        if (cljs.core.not.call(null, tiltontec.cell.base._STAR_within_integrity_STAR_)) {
          throw new java.lang.Exception("c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision.", tiltontec.cell.base.c_slot.call(null, alarm));
        } else {
          return tiltontec.cell.integrity.ufb_add.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308), function(alarm, act) {
            return function(opcode, defer_info) {
              var c__6420__auto__ = alarm;
              var new_value__6421__auto__ = function() {
                var G__12661 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__12661) {
                  case "home":
                    return new cljs.core.Keyword(null, "off", "off", 606440789);
                    break;
                  case "away":
                    return new cljs.core.Keyword(null, "on", "on", 173873944);
                    break;
                  default:
                    return tiltontec.util.core.err.call(null, cljs.core.str, "unexpected loc %s", new$);
                }
              }();
              return tiltontec.cell.core.call_c_reset_next_BANG_.call(null, c__6420__auto__, new_value__6421__auto__);
            };
          }(alarm, act)], null));
        }
      }
    };
  }(alarm, act), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, 
  "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__12662 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
      switch(G__12662) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(alarm, act));
  var alarm_speak = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act, loc) {
    return function(slot, me, new$, old, c) {
      try {
        var values__10696__auto___12676 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
          var G__12664 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
          switch(G__12664) {
            case "return":
              return new cljs.core.Keyword(null, "off", "off", 606440789);
              break;
            case "leave":
              return new cljs.core.Keyword(null, "on", "on", 173873944);
              break;
            default:
              return new cljs.core.Keyword(null, "undefined", "undefined", -1970511116);
          }
        }()), tiltontec.cell.evaluate.c_get.call(null, alarm));
        var result__10697__auto___12677 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12676);
        if (cljs.core.truth_(result__10697__auto___12677)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12676), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12676)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e12663) {
        var t__10734__auto___12679 = e12663;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
        "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__10734__auto___12679, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_pulse.call(null, c)), tiltontec.cell.base.c_pulse.call(null, loc)), tiltontec.cell.base.c_pulse.call(null, act)), tiltontec.cell.base._PLUS_pulse_PLUS_);
        var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
        if (cljs.core.truth_(result__10697__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", 
          -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__10697__auto__;
      } catch (e12665) {
        var t__10734__auto__ = e12665;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
        "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(alarm, act, loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "alarm-speak sees act ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act, loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return [cljs.core.str("alarm-speak sees act "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, act))].join("");
    };
  }(alarm, act, loc));
  try {
    var values__10696__auto___12680 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116)), tiltontec.cell.evaluate.c_get.call(null, alarm));
    var result__10697__auto___12681 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12680);
    if (cljs.core.truth_(result__10697__auto___12681)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12680), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12680)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12666) {
    var t__10734__auto___12682 = e12666;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
    "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12682, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12683 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__10697__auto___12684 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12683);
    if (cljs.core.truth_(result__10697__auto___12684)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12683), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12683)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12667) {
    var t__10734__auto___12685 = e12667;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12685, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12686 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "missing", "missing", 362507769)), tiltontec.cell.evaluate.c_get.call(null, loc));
    var result__10697__auto___12687 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12686);
    if (cljs.core.truth_(result__10697__auto___12687)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12686), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12686)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12668) {
    var t__10734__auto___12688 = e12668;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
    "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12688, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12689 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__10697__auto___12690 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12689);
    if (cljs.core.truth_(result__10697__auto___12690)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12689), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12689)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12669) {
    var t__10734__auto___12691 = e12669;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12691, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, act, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 3);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12670) {
    var t__10734__auto__ = e12670;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.obs_setf.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.obs_setf;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf", "tiltontec.cell.integrity-test/obs-setf", -1903746607, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf", "obs-setf", -941176517, null), "test/tiltontec/cell/integrity_test.cljc", 18, 1, 45, 45, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf) ? tiltontec.cell.integrity_test.obs_setf.cljs$lang$test : null]));
tiltontec.cell.integrity_test.obs_setf_bad_caught = function tiltontec$cell$integrity_test$obs_setf_bad_caught() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$obs_setf_bad_caught.cljs$lang$var);
};
tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var alarm = tiltontec.cell.core.c_in.call(null, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var act = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act) {
    return function(slot, me, new$, old, c) {
      try {
        try {
          tiltontec.cell.core.c_reset_BANG_.call(null, act, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
          "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } catch (e12693) {
          if (e12693 instanceof Error) {
            var e__10728__auto___12703 = e12693;
            var m__10729__auto___12704 = e__10728__auto___12703.message;
            if (cljs.core.truth_(cljs.core.re_find.call(null, /c-reset!> change/, m__10729__auto___12704))) {
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
              "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__10728__auto___12703, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
              "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__10728__auto___12703, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
          } else {
            throw e12693;
          }
        }
      } catch (e12692) {
        var t__10734__auto___12705 = e12692;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
        "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12705, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      if (cljs.core._EQ_.call(null, new$, new cljs.core.Keyword(null, "missing", "missing", 362507769))) {
        return null;
      } else {
        if (cljs.core.not.call(null, tiltontec.cell.base._STAR_within_integrity_STAR_)) {
          throw new java.lang.Exception("c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision.", tiltontec.cell.base.c_slot.call(null, alarm));
        } else {
          return tiltontec.cell.integrity.ufb_add.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308), function(alarm, act) {
            return function(opcode, defer_info) {
              var c__6420__auto__ = alarm;
              var new_value__6421__auto__ = function() {
                var G__12694 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__12694) {
                  case "home":
                    return new cljs.core.Keyword(null, "off", "off", 606440789);
                    break;
                  case "away":
                    return new cljs.core.Keyword(null, "on", "on", 173873944);
                    break;
                  default:
                    return tiltontec.util.core.err.call(null, cljs.core.str, "unexpected loc %s", new$);
                }
              }();
              return tiltontec.cell.core.call_c_reset_next_BANG_.call(null, c__6420__auto__, new_value__6421__auto__);
            };
          }(alarm, act)], null));
        }
      }
    };
  }(alarm, act), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, 
  "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__12695 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
      switch(G__12695) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(alarm, act));
  var alarm_speak = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act, loc) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, ":alarm-speak", tiltontec.cell.evaluate.c_get.call(null, act), new cljs.core.Keyword(null, "sees", "sees", -135494032), tiltontec.cell.evaluate.c_get.call(null, alarm), tiltontec.cell.evaluate.c_get.call(null, loc));
      try {
        var values__10696__auto___12708 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
          var G__12697 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
          switch(G__12697) {
            case "return":
              return new cljs.core.Keyword(null, "off", "off", 606440789);
              break;
            case "leave":
              return new cljs.core.Keyword(null, "on", "on", 173873944);
              break;
            default:
              return new cljs.core.Keyword(null, "undefined", "undefined", -1970511116);
          }
        }()), tiltontec.cell.evaluate.c_get.call(null, alarm));
        var result__10697__auto___12709 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12708);
        if (cljs.core.truth_(result__10697__auto___12709)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12708), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12708)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e12696) {
        var t__10734__auto___12711 = e12696;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
        "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__10734__auto___12711, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_pulse.call(null, c)), tiltontec.cell.base.c_pulse.call(null, loc)), tiltontec.cell.base.c_pulse.call(null, act)), tiltontec.cell.base._PLUS_pulse_PLUS_);
        var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
        if (cljs.core.truth_(result__10697__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", 
          -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__10697__auto__;
      } catch (e12698) {
        var t__10734__auto__ = e12698;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
        "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(alarm, act, loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "alarm-speak sees act ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act, loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return [cljs.core.str("alarm-speak sees act "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, act))].join("");
    };
  }(alarm, act, loc));
  try {
    var values__10696__auto___12712 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116)), tiltontec.cell.evaluate.c_get.call(null, alarm));
    var result__10697__auto___12713 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12712);
    if (cljs.core.truth_(result__10697__auto___12713)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12712), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12712)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12699) {
    var t__10734__auto___12714 = e12699;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
    "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12714, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12715 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__10697__auto___12716 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12715);
    if (cljs.core.truth_(result__10697__auto___12716)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12715), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12715)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12700) {
    var t__10734__auto___12717 = e12700;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12717, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12718 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "missing", "missing", 362507769)), tiltontec.cell.evaluate.c_get.call(null, loc));
    var result__10697__auto___12719 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12718);
    if (cljs.core.truth_(result__10697__auto___12719)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12718), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12718)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12701) {
    var t__10734__auto___12720 = e12701;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
    "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12720, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12702) {
    var t__10734__auto__ = e12702;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.obs_setf_bad_caught;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf-bad-caught", "tiltontec.cell.integrity-test/obs-setf-bad-caught", -1085043785, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf-bad-caught", "obs-setf-bad-caught", -936124387, null), "test/tiltontec/cell/integrity_test.cljc", 
29, 1, 85, 85, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf_bad_caught) ? tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test : null]));
tiltontec.cell.integrity_test.see_into_fn = function tiltontec$cell$integrity_test$see_into_fn() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$see_into_fn.cljs$lang$var);
};
tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test = function() {
  var sia = tiltontec.cell.core.c_in.call(null, 0);
  var rsic = cljs.core.atom.call(null, false);
  var sic = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "reset!", "reset!", 527275632, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null), true), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sia", "sia", 737031502, null)))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, rsic) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.reset_BANG_.call(null, rsic, true);
      return 42 + tiltontec.cell.evaluate.c_get.call(null, sia);
    };
  }(sia, rsic));
  var fsia = function(sia, rsic, sic) {
    return function() {
      return tiltontec.cell.evaluate.c_get.call(null, sia);
    };
  }(sia, rsic, sic);
  var sib = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fsia", "fsia", -1523177093, null))), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, rsic, sic, fsia) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var or__4554__auto__ = 1 + fsia.call(null);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return tiltontec.cell.evaluate.c_get.call(null, sic);
      }
    };
  }(sia, rsic, sic, fsia));
  try {
    var values__10696__auto___12726 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 1), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__10697__auto___12727 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12726);
    if (cljs.core.truth_(result__10697__auto___12727)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12726), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12726)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12721) {
    var t__10734__auto___12728 = e12721;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12728, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12729 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.PersistentHashSet.fromArray([sia], true)), (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, sib)));
    var result__10697__auto___12730 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12729);
    if (cljs.core.truth_(result__10697__auto___12730)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12729), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12729)), new cljs.core.Symbol(null, 
      "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12722) {
    var t__10734__auto___12731 = e12722;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12731, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12732 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, rsic));
    var result__10697__auto___12733 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12732);
    if (cljs.core.truth_(result__10697__auto___12733)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12732), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12732)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12723) {
    var t__10734__auto___12734 = e12723;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12734, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, sia, 1);
  try {
    var values__10696__auto___12735 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, sib))), 2);
    var result__10697__auto___12736 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12735);
    if (cljs.core.truth_(result__10697__auto___12736)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12735), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12735)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12724) {
    var t__10734__auto___12737 = e12724;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12737, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12725) {
    var t__10734__auto__ = e12725;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.see_into_fn.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.see_into_fn;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "see-into-fn", "tiltontec.cell.integrity-test/see-into-fn", 794556004, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "see-into-fn", "see-into-fn", 1996218062, null), "test/tiltontec/cell/integrity_test.cljc", 21, 1, 
125, 125, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.see_into_fn) ? tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test : null]));
tiltontec.cell.integrity_test.no_prop_no_obs = function tiltontec$cell$integrity_test$no_prop_no_obs() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$no_prop_no_obs.cljs$lang$var);
};
tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test = function() {
  var sia = tiltontec.cell.core.c_in.call(null, 0);
  var obs = cljs.core.atom.call(null, false);
  var sib = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(sia, obs) {
    return function(slot, me, new$, old, c) {
      return cljs.core.reset_BANG_.call(null, obs, true);
    };
  }(sia, obs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sia", "sia", 737031502, null))), 42, 10)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257), function(sia, obs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core.even_QMARK_.call(null, tiltontec.cell.evaluate.c_get.call(null, sia))) {
        return 42;
      } else {
        return 10;
      }
    };
  }(sia, obs));
  var run = cljs.core.atom.call(null, false);
  var sic = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "reset!", "reset!", 527275632, null), new cljs.core.Symbol(null, "run", "run", -180635126, null), true), cljs.core.list(new cljs.core.Symbol(null, "/", "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2)), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, obs, sib, run) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.reset_BANG_.call(null, run, true);
      return tiltontec.cell.evaluate.c_get.call(null, sib) / 2;
    };
  }(sia, obs, sib, run));
  try {
    var values__10696__auto___12746 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__10697__auto___12747 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12746);
    if (cljs.core.truth_(result__10697__auto___12747)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12746), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12746)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12738) {
    var t__10734__auto___12748 = e12738;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12748, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12749 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), tiltontec.cell.evaluate.c_get.call(null, sic));
    var result__10697__auto___12750 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12749);
    if (cljs.core.truth_(result__10697__auto___12750)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12749), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12749)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12739) {
    var t__10734__auto___12751 = e12739;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12751, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__10699__auto___12752 = cljs.core.deref.call(null, obs);
    if (cljs.core.truth_(value__10699__auto___12752)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___12752, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___12752, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12740) {
    var t__10734__auto___12753 = e12740;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12753, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__10699__auto___12754 = cljs.core.deref.call(null, run);
    if (cljs.core.truth_(value__10699__auto___12754)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___12754, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___12754, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12741) {
    var t__10734__auto___12755 = e12741;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12755, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.reset_BANG_.call(null, obs, false);
  cljs.core.reset_BANG_.call(null, run, false);
  tiltontec.cell.core.c_reset_BANG_.call(null, sia, 2);
  try {
    var values__10696__auto___12756 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__10697__auto___12757 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12756);
    if (cljs.core.truth_(result__10697__auto___12757)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12756), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12756)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12742) {
    var t__10734__auto___12758 = e12742;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12758, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12759 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), tiltontec.cell.evaluate.c_get.call(null, sic));
    var result__10697__auto___12760 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12759);
    if (cljs.core.truth_(result__10697__auto___12760)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12759), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12759)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12743) {
    var t__10734__auto___12761 = e12743;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12761, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12762 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, obs));
    var result__10697__auto___12763 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12762);
    if (cljs.core.truth_(result__10697__auto___12763)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12762), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12762)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12744) {
    var t__10734__auto___12764 = e12744;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12764, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, run));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core.not, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12745) {
    var t__10734__auto__ = e12745;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.no_prop_no_obs;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "no-prop-no-obs", "tiltontec.cell.integrity-test/no-prop-no-obs", 182636463, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "no-prop-no-obs", "no-prop-no-obs", -771561679, null), "test/tiltontec/cell/integrity_test.cljc", 
24, 1, 141, 141, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.no_prop_no_obs) ? tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env12765 = cljs.test.empty_env.call(null);
  var summary12766 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12765, summary12766) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12765);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10801__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12765, summary12766) {
          return function() {
            if (env__10801__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10801__auto__, env12765, summary12766)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.obs_setf;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf", "tiltontec.cell.integrity-test/obs-setf", -1903746607, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf", "obs-setf", -941176517, null), "test/tiltontec/cell/integrity_test.cljc", 
        18, 1, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf) ? tiltontec.cell.integrity_test.obs_setf.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.obs_setf_bad_caught;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf-bad-caught", "tiltontec.cell.integrity-test/obs-setf-bad-caught", -1085043785, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf-bad-caught", "obs-setf-bad-caught", -936124387, null), "test/tiltontec/cell/integrity_test.cljc", 
        29, 1, 85, 85, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf_bad_caught) ? tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.see_into_fn;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "see-into-fn", "tiltontec.cell.integrity-test/see-into-fn", 794556004, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "see-into-fn", "see-into-fn", 1996218062, null), "test/tiltontec/cell/integrity_test.cljc", 
        21, 1, 125, 125, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.see_into_fn) ? tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.no_prop_no_obs;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "no-prop-no-obs", "tiltontec.cell.integrity-test/no-prop-no-obs", 182636463, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "no-prop-no-obs", "no-prop-no-obs", -771561679, null), "test/tiltontec/cell/integrity_test.cljc", 
        24, 1, 141, 141, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.no_prop_no_obs) ? tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12765, summary12766) {
          return function() {
            if (env__10801__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10801__auto__, env12765, summary12766)], null));
      }());
    };
  }(env12765, summary12766), function(env12765, summary12766) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env12765, summary12766)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12765, summary12766) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary12766, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary12766), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env12765, summary12766)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12765, summary12766) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12765);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary12766));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary12766), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env12765, summary12766)], null));
}());
goog.provide("tiltontec.cell.observer_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.observer_test.t_formula = function tiltontec$cell$observer_test$t_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$t_formula.cljs$lang$var);
};
tiltontec.cell.observer_test.t_formula.cljs$lang$test = function() {
  var bingo = cljs.core.atom.call(null, false);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bingo) {
    return function(slot, me, new$, old, c) {
      return cljs.core.reset_BANG_.call(null, bingo, true);
    };
  }(bingo), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bingo) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 40 + 2;
    };
  }(bingo));
  try {
    var values__10696__auto___12481 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__10697__auto___12482 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12481);
    if (cljs.core.truth_(result__10697__auto___12482)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12481), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto___12481)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12470) {
    var t__10734__auto___12483 = e12470;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12483, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12484 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), c);
    var result__10697__auto___12485 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12484);
    if (cljs.core.truth_(result__10697__auto___12485)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12484), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto___12484)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12471) {
    var t__10734__auto___12486 = e12471;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12486, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12487 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__10697__auto___12488 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12487);
    if (cljs.core.truth_(result__10697__auto___12488)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12487), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12487)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12472) {
    var t__10734__auto___12489 = e12472;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12489, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12490 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12491 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12490);
    if (cljs.core.truth_(result__10697__auto___12491)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12490), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12490)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12473) {
    var t__10734__auto___12492 = e12473;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12492, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12493 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12494 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12493);
    if (cljs.core.truth_(result__10697__auto___12494)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12493), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12493)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12474) {
    var t__10734__auto___12495 = e12474;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12495, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12496 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__10697__auto___12497 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12496);
    if (cljs.core.truth_(result__10697__auto___12497)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12496), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12496)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12475) {
    var t__10734__auto___12498 = e12475;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12498, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12499 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_valid_QMARK_.call(null, c));
    var result__10697__auto___12500 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12499);
    if (cljs.core.truth_(result__10697__auto___12500)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12499), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12499)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12476) {
    var t__10734__auto___12501 = e12476;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12501, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12502 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__10697__auto___12503 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12502);
    if (cljs.core.truth_(result__10697__auto___12503)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12502), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12502)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12477) {
    var t__10734__auto___12504 = e12477;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12504, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12505 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto___12506 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12505);
    if (cljs.core.truth_(result__10697__auto___12506)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12505), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12505)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12478) {
    var t__10734__auto___12507 = e12478;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12507, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12508 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, c)), 42);
    var result__10697__auto___12509 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12508);
    if (cljs.core.truth_(result__10697__auto___12509)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12508), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12508)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12479) {
    var t__10734__auto___12510 = e12479;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12510, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__10699__auto__ = cljs.core.deref.call(null, bingo);
    if (cljs.core.truth_(value__10699__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return value__10699__auto__;
  } catch (e12480) {
    var t__10734__auto__ = e12480;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.t_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.t_formula;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-formula", "tiltontec.cell.observer-test/t-formula", 453750507, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/observer_test.cljc", 19, 1, 43, 43, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_formula) ? tiltontec.cell.observer_test.t_formula.cljs$lang$test : null]));
tiltontec.cell.observer_test.bingo2 = cljs.core.atom.call(null, false);
tiltontec.cell.observer_test.test_input = function tiltontec$cell$observer_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$test_input.cljs$lang$var);
};
tiltontec.cell.observer_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(slot, me, new$, old, c) {
    return cljs.core.reset_BANG_.call(null, tiltontec.cell.observer_test.bingo2, true);
  });
  try {
    var values__10696__auto___12520 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__10697__auto___12521 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12520);
    if (cljs.core.truth_(result__10697__auto___12521)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12520), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto___12520)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12511) {
    var t__10734__auto___12522 = e12511;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12522, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12523 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__10697__auto___12524 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12523);
    if (cljs.core.truth_(result__10697__auto___12524)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12523), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12523)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12512) {
    var t__10734__auto___12525 = e12512;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12525, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12526 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12527 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12526);
    if (cljs.core.truth_(result__10697__auto___12527)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12526), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12526)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12513) {
    var t__10734__auto___12528 = e12513;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12528, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12529 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__10697__auto___12530 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__10696__auto___12529);
    if (cljs.core.truth_(result__10697__auto___12530)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__10696__auto___12529), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__10696__auto___12529)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12514) {
    var t__10734__auto___12531 = e12514;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12531, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12532 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__10697__auto___12533 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__10696__auto___12532);
    if (cljs.core.truth_(result__10697__auto___12533)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__10696__auto___12532), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__10696__auto___12532)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12515) {
    var t__10734__auto___12534 = e12515;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12534, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12535 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__10697__auto___12536 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12535);
    if (cljs.core.truth_(result__10697__auto___12536)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12535), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12535)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12516) {
    var t__10734__auto___12537 = e12516;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12537, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12538 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551));
    var result__10697__auto___12539 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12538);
    if (cljs.core.truth_(result__10697__auto___12539)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12538), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12538)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12517) {
    var t__10734__auto___12540 = e12517;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12540, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12541 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto___12542 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12541);
    if (cljs.core.truth_(result__10697__auto___12542)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12541), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12541)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12518) {
    var t__10734__auto___12543 = e12518;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12543, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__10699__auto__ = cljs.core.deref.call(null, tiltontec.cell.observer_test.bingo2);
    if (cljs.core.truth_(value__10699__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return value__10699__auto__;
  } catch (e12519) {
    var t__10734__auto__ = e12519;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "test-input", "tiltontec.cell.observer-test/test-input", -1111092170, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/observer_test.cljc", 20, 1, 64, 64, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.test_input) ? tiltontec.cell.observer_test.test_input.cljs$lang$test : null]));
tiltontec.cell.observer_test.t_custom_obs = function tiltontec$cell$observer_test$t_custom_obs() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$t_custom_obs.cljs$lang$var);
};
tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test = function() {
  var bobs = cljs.core.atom.call(null, null);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bobs) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, null, slot, me, new$, old);
      return cljs.core.reset_BANG_.call(null, bobs, new$);
    };
  }(bobs));
  var cobs = cljs.core.atom.call(null, null);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bobs, b, cobs) {
    return function(slot, me, new$, old, c) {
      new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me, new$, old, c], null);
      tiltontec.util.base.call_trc.call(null, "slot", me, new$, old);
      return cljs.core.reset_BANG_.call(null, cobs, new$);
    };
  }(bobs, b, cobs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 10, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bobs, b, cobs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 10 * tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(bobs, b, cobs));
  try {
    var values__10696__auto___12547 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__10697__auto___12548 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12547);
    if (cljs.core.truth_(result__10697__auto___12548)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12547), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12547)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12544) {
    var t__10734__auto___12549 = e12544;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12549, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12550 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), cljs.core.deref.call(null, bobs));
    var result__10697__auto___12551 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12550);
    if (cljs.core.truth_(result__10697__auto___12551)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
      2), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12550), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
      2), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12550)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12545) {
    var t__10734__auto___12552 = e12545;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
    2), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12552, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 20), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12546) {
    var t__10734__auto__ = e12546;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.t_custom_obs.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.t_custom_obs;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-custom-obs", "tiltontec.cell.observer-test/t-custom-obs", 662258146, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-custom-obs", "t-custom-obs", -1659782311, null), "test/tiltontec/cell/observer_test.cljc", 22, 1, 79, 
79, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_custom_obs) ? tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env12553 = cljs.test.empty_env.call(null);
  var summary12554 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12553, summary12554) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12553);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10801__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12553, summary12554) {
          return function() {
            if (env__10801__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10801__auto__, env12553, summary12554)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.t_formula;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-formula", "tiltontec.cell.observer-test/t-formula", 453750507, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/observer_test.cljc", 
        19, 1, 43, 43, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_formula) ? tiltontec.cell.observer_test.t_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "test-input", "tiltontec.cell.observer-test/test-input", -1111092170, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/observer_test.cljc", 
        20, 1, 64, 64, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.test_input) ? tiltontec.cell.observer_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.t_custom_obs;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-custom-obs", "tiltontec.cell.observer-test/t-custom-obs", 662258146, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-custom-obs", "t-custom-obs", -1659782311, null), "test/tiltontec/cell/observer_test.cljc", 
        22, 1, 79, 79, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_custom_obs) ? tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12553, summary12554) {
          return function() {
            if (env__10801__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10801__auto__, env12553, summary12554)], null));
      }());
    };
  }(env12553, summary12554), function(env12553, summary12554) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env12553, summary12554)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12553, summary12554) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary12554, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary12554), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env12553, summary12554)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12553, summary12554) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12553);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary12554));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary12554), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env12553, summary12554)], null));
}());
goog.provide("tiltontec.model.macros");
goog.require("cljs.core");
goog.require("tiltontec.cell.base");
tiltontec.model.macros.pme = function tiltontec$model$macros$pme() {
  var args__5600__auto__ = [];
  var len__5593__auto___10963 = arguments.length;
  var i__5594__auto___10964 = 0;
  while (true) {
    if (i__5594__auto___10964 < len__5593__auto___10963) {
      args__5600__auto__.push(arguments[i__5594__auto___10964]);
      var G__10965 = i__5594__auto___10964 + 1;
      i__5594__auto___10964 = G__10965;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.model.macros.pme.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.model.macros.pme.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, mas) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "println", "cljs.core/println", -331834442, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, 
  null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)))))), mas)));
};
tiltontec.model.macros.pme.cljs$lang$maxFixedArity = 2;
tiltontec.model.macros.pme.cljs$lang$applyTo = function(seq10960) {
  var G__10961 = cljs.core.first.call(null, seq10960);
  var seq10960__$1 = cljs.core.next.call(null, seq10960);
  var G__10962 = cljs.core.first.call(null, seq10960__$1);
  var seq10960__$2 = cljs.core.next.call(null, seq10960__$1);
  return tiltontec.model.macros.pme.cljs$core$IFn$_invoke$arity$variadic(G__10961, G__10962, seq10960__$2);
};
tiltontec.model.macros.pme.cljs$lang$macro = true;
goog.provide("tiltontec.model.base");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.model.macros");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.base.md_name = function tiltontec$model$base$md_name(ref) {
  return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.model.base.md_state = function tiltontec$model$base$md_state(ref) {
  return (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, ref));
};
tiltontec.model.base.md_cz = function tiltontec$model$base$md_cz(ref) {
  return (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, ref));
};
tiltontec.model.base.md_cell = function tiltontec$model$base$md_cell(me, slot) {
  return slot.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me)));
};
tiltontec.model.base.md_install_cell = function tiltontec$model$base$md_install_cell(me, slot, c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "slot", "slot", 240229571), slot, new cljs.core.Keyword(null, "me", "me", -139006693), me);
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), cljs.core.truth_(tiltontec.cell.base.c_input_QMARK_.call(null, c)) ? tiltontec.cell.base.c_value.call(null, c) : null);
    return true;
  } else {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), c);
    return false;
  }
};
if (typeof tiltontec.model.base.md_awaken_before !== "undefined") {
} else {
  tiltontec.model.base.md_awaken_before = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.model.base", "md-awaken-before"), tiltontec.cell.base.ia_type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.model.base.md_awaken_before, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return null;
});
tiltontec.model.base.md_awaken = function tiltontec$model$base$md_awaken(me) {
  tiltontec.model.base.md_awaken_before.call(null, me);
  cljs.core.println.call(null, tiltontec.cell.base.ia_type.call(null, me), new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), tiltontec.model.base.md_state.call(null, me));
  tiltontec.cell.base.c_assert.call(null, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), tiltontec.model.base.md_state.call(null, me)));
  tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "awakening", "awakening", 838364227));
  cljs.core.doall.call(null, function() {
    var iter__5307__auto__ = function tiltontec$model$base$md_awaken_$_iter__11448(s__11449) {
      return new cljs.core.LazySeq(null, function() {
        var s__11449__$1 = s__11449;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__11449__$1);
          if (temp__4425__auto__) {
            var s__11449__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11449__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__11449__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__11451 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__11450 = 0;
                while (true) {
                  if (i__11450 < size__5306__auto__) {
                    var slot = cljs.core._nth.call(null, c__5305__auto__, i__11450);
                    cljs.core.chunk_append.call(null, b__11451, function() {
                      var c = slot.call(null, tiltontec.model.base.md_cz.call(null, me));
                      if (cljs.core.truth_(c)) {
                        return tiltontec.cell.evaluate.c_awaken.call(null, c);
                      } else {
                        return tiltontec.cell.observer.observe.call(null, slot, me, slot.call(null, cljs.core.deref.call(null, me)), tiltontec.cell.base.unbound, null);
                      }
                    }());
                    var G__11452 = i__11450 + 1;
                    i__11450 = G__11452;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11451), tiltontec$model$base$md_awaken_$_iter__11448.call(null, cljs.core.chunk_rest.call(null, s__11449__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11451), null);
              }
            } else {
              var slot = cljs.core.first.call(null, s__11449__$2);
              return cljs.core.cons.call(null, function() {
                var c = slot.call(null, tiltontec.model.base.md_cz.call(null, me));
                if (cljs.core.truth_(c)) {
                  return tiltontec.cell.evaluate.c_awaken.call(null, c);
                } else {
                  return tiltontec.cell.observer.observe.call(null, slot, me, slot.call(null, cljs.core.deref.call(null, me)), tiltontec.cell.base.unbound, null);
                }
              }(), tiltontec$model$base$md_awaken_$_iter__11448.call(null, cljs.core.rest.call(null, s__11449__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, me)));
  }());
  tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
  return me;
};
goog.provide("tiltontec.model.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.core.md_name = function tiltontec$model$core$md_name(me) {
  return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
};
tiltontec.model.core.md_get = function tiltontec$model$core$md_get(me, slot) {
  var temp__4423__auto__ = tiltontec.model.base.md_cell.call(null, me, slot);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var c = temp__4423__auto__;
    return tiltontec.cell.evaluate.c_get.call(null, c);
  } else {
    return slot.call(null, cljs.core.deref.call(null, me));
  }
};
tiltontec.model.core.md_getx = function tiltontec$model$core$md_getx(tag, me, slot) {
  return tiltontec.model.core.md_get.call(null, me, slot);
};
tiltontec.model.core._STAR_par_STAR_ = null;
tiltontec.model.core.md_reset_BANG_ = function tiltontec$model$core$md_reset_BANG_(me, slot, new_value) {
  var temp__4423__auto__ = tiltontec.model.base.md_cell.call(null, me, slot);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var c = temp__4423__auto__;
    return tiltontec.cell.core.c_reset_BANG_.call(null, c, new_value);
  } else {
    tiltontec.util.core.err.call(null, cljs.core.str, "change to slot %s not mediated by cell", slot);
    return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), new_value);
  }
};
tiltontec.model.core.make = function tiltontec$model$core$make() {
  var args__5600__auto__ = [];
  var len__5593__auto___11464 = arguments.length;
  var i__5594__auto___11465 = 0;
  while (true) {
    if (i__5594__auto___11465 < len__5593__auto___11464) {
      args__5600__auto__.push(arguments[i__5594__auto___11465]);
      var G__11466 = i__5594__auto___11465 + 1;
      i__5594__auto___11465 = G__11466;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic = function(iargs) {
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, iargs))) {
    return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), iargs);
  } else {
    var me = cljs.core.atom.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "par", "par", -61778778), tiltontec.model.core._STAR_par_STAR_], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__11456) {
      var vec__11457 = p__11456;
      var k = cljs.core.nth.call(null, vec__11457, 0, null);
      var v = cljs.core.nth.call(null, vec__11457, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, v)) ? tiltontec.cell.base.unbound : v], null);
    }, cljs.core.filter.call(null, function(p__11458) {
      var vec__11459 = p__11458;
      var slot = cljs.core.nth.call(null, vec__11459, 0, null);
      var v = cljs.core.nth.call(null, vec__11459, 1, null);
      return !cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), slot);
    }, cljs.core.partition.call(null, 2, iargs))))), new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "nascent", "nascent", 443401807)], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.vec, cljs.core.filter.call(null, function(p__11460) {
      var vec__11461 = p__11460;
      var slot = cljs.core.nth.call(null, vec__11461, 0, null);
      var v = cljs.core.nth.call(null, vec__11461, 1, null);
      return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), slot);
    }, cljs.core.partition.call(null, 2, iargs))))));
    if (cljs.core.truth_(cljs.core.meta.call(null, me))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
    }
    tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cz", "cz", 1670864932), me], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.vec, cljs.core.filter.call(null, function(me) {
      return function(p__11462) {
        var vec__11463 = p__11462;
        var slot = cljs.core.nth.call(null, vec__11463, 0, null);
        var v = cljs.core.nth.call(null, vec__11463, 1, null);
        return tiltontec.model.base.md_install_cell.call(null, me, slot, v);
      };
    }(me), cljs.core.partition.call(null, 2, iargs)))));
    tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), me, function(me) {
      return function(opcode, defer_info) {
        return tiltontec.model.base.md_awaken.call(null, me);
      };
    }(me));
    return me;
  }
};
tiltontec.model.core.make.cljs$lang$maxFixedArity = 0;
tiltontec.model.core.make.cljs$lang$applyTo = function(seq11455) {
  return tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11455));
};
tiltontec.model.core.mm_obj = Object;
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184)], null), function(_, ___$1, newk, oldk, ___$2) {
  if (cljs.core._EQ_.call(null, oldk, tiltontec.cell.base.unbound)) {
    return null;
  } else {
    var lostks = clojure.set.difference.call(null, cljs.core.set.call(null, oldk), cljs.core.set.call(null, newk));
    if (cljs.core.empty_QMARK_.call(null, lostks)) {
      return null;
    } else {
      var seq__11467 = cljs.core.seq.call(null, lostks);
      var chunk__11468 = null;
      var count__11469 = 0;
      var i__11470 = 0;
      while (true) {
        if (i__11470 < count__11469) {
          var k = cljs.core._nth.call(null, chunk__11468, i__11470);
          tiltontec.cell.evaluate.not_to_be.call(null, k);
          var G__11471 = seq__11467;
          var G__11472 = chunk__11468;
          var G__11473 = count__11469;
          var G__11474 = i__11470 + 1;
          seq__11467 = G__11471;
          chunk__11468 = G__11472;
          count__11469 = G__11473;
          i__11470 = G__11474;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__11467);
          if (temp__4425__auto__) {
            var seq__11467__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__11467__$1)) {
              var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__11467__$1);
              var G__11475 = cljs.core.chunk_rest.call(null, seq__11467__$1);
              var G__11476 = c__5338__auto__;
              var G__11477 = cljs.core.count.call(null, c__5338__auto__);
              var G__11478 = 0;
              seq__11467 = G__11475;
              chunk__11468 = G__11476;
              count__11469 = G__11477;
              i__11470 = G__11478;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__11467__$1);
              tiltontec.cell.evaluate.not_to_be.call(null, k);
              var G__11479 = cljs.core.next.call(null, seq__11467__$1);
              var G__11480 = null;
              var G__11481 = 0;
              var G__11482 = 0;
              seq__11467 = G__11479;
              chunk__11468 = G__11480;
              count__11469 = G__11481;
              i__11470 = G__11482;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    }
  }
});
tiltontec.model.core.qx_par = function tiltontec$model$core$qx_par(me) {
  return (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
};
tiltontec.model.core.fget_EQ_ = function tiltontec$model$core$fget_EQ_(seek, poss) {
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, poss))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "poss", "poss", -265534520, null))))].join(""));
  }
  if (cljs.core.fn_QMARK_.call(null, seek)) {
    return seek.call(null, poss);
  } else {
    if (seek instanceof cljs.core.Keyword) {
      return cljs.core._EQ_.call(null, seek, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, poss)));
    } else {
      return cljs.core._EQ_.call(null, seek, poss);
    }
  }
};
tiltontec.model.core.fget = function tiltontec$model$core$fget() {
  var args__5600__auto__ = [];
  var len__5593__auto___11488 = arguments.length;
  var i__5594__auto___11489 = 0;
  while (true) {
    if (i__5594__auto___11489 < len__5593__auto___11488) {
      args__5600__auto__.push(arguments[i__5594__auto___11489]);
      var G__11490 = i__5594__auto___11489 + 1;
      i__5594__auto___11489 = G__11490;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.model.core.fget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.model.core.fget.cljs$core$IFn$_invoke$arity$variadic = function(what, where, options) {
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = where;
    if (cljs.core.truth_(and__4542__auto__)) {
      return what;
    } else {
      return and__4542__auto__;
    }
  }())) {
    var options__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516), true], null), cljs.core.apply.call(null, cljs.core.hash_map, options));
    var _STAR_depender_STAR_11487 = tiltontec.cell.base._STAR_depender_STAR_;
    tiltontec.cell.base._STAR_depender_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516)).cljs$core$IFn$_invoke$arity$1(options__$1)) ? null : tiltontec.cell.base._STAR_depender_STAR_;
    try {
      var or__4554__auto__ = function() {
        var and__4542__auto__ = (new cljs.core.Keyword(null, "me?", "me?", -625404259)).cljs$core$IFn$_invoke$arity$1(options__$1);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = tiltontec.model.core.fget_EQ_.call(null, what, where);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return where;
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }();
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = function() {
          var and__4542__auto__ = (new cljs.core.Keyword(null, "inside?", "inside?", 639243696)).cljs$core$IFn$_invoke$arity$1(options__$1);
          if (cljs.core.truth_(and__4542__auto__)) {
            var temp__4423__auto__ = tiltontec.model.core.md_get.call(null, where, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
            if (cljs.core.truth_(temp__4423__auto__)) {
              var kids = temp__4423__auto__;
              var temp__4423__auto____$1 = cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([(new cljs.core.Keyword(null, "skip", "skip", 602715391)).cljs$core$IFn$_invoke$arity$1(options__$1)], true), kids);
              if (cljs.core.truth_(temp__4423__auto____$1)) {
                var netkids = temp__4423__auto____$1;
                return cljs.core.some.call(null, function(netkids, temp__4423__auto____$1, kids, temp__4423__auto__, and__4542__auto__, or__4554__auto__, _STAR_depender_STAR_11487, options__$1) {
                  return function(p1__11483_SHARP_) {
                    return tiltontec.model.core.fget.call(null, what, p1__11483_SHARP_, new cljs.core.Keyword(null, "me?", "me?", -625404259), true, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), false);
                  };
                }(netkids, temp__4423__auto____$1, kids, temp__4423__auto__, and__4542__auto__, or__4554__auto__, _STAR_depender_STAR_11487, options__$1), netkids);
              } else {
                return tiltontec.util.base.call_trc.call(null, ":no-net-kids");
              }
            } else {
              return tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "inside-no-kids", "inside-no-kids", -1437068961), cljs.core.deref.call(null, where));
            }
          } else {
            return and__4542__auto__;
          }
        }();
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = function() {
            var and__4542__auto__ = (new cljs.core.Keyword(null, "up?", "up?", 77854972)).cljs$core$IFn$_invoke$arity$1(options__$1);
            if (cljs.core.truth_(and__4542__auto__)) {
              var temp__4425__auto__ = (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, where));
              if (cljs.core.truth_(temp__4425__auto__)) {
                var par = temp__4425__auto__;
                return tiltontec.model.core.fget.call(null, what, par, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "me?", "me?", -625404259), true, new cljs.core.Keyword(null, "skip", "skip", 602715391), where, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true);
              } else {
                return null;
              }
            } else {
              return and__4542__auto__;
            }
          }();
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            if (cljs.core.truth_((new cljs.core.Keyword(null, "must?", "must?", 1639898554)).cljs$core$IFn$_invoke$arity$1(options__$1))) {
              return tiltontec.util.core.err.call(null, new cljs.core.Keyword(null, "fget-must-failed", "fget-must-failed", 237242954), what, where, options__$1);
            } else {
              return null;
            }
          }
        }
      }
    } finally {
      tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_11487;
    }
  } else {
    return null;
  }
};
tiltontec.model.core.fget.cljs$lang$maxFixedArity = 2;
tiltontec.model.core.fget.cljs$lang$applyTo = function(seq11484) {
  var G__11485 = cljs.core.first.call(null, seq11484);
  var seq11484__$1 = cljs.core.next.call(null, seq11484);
  var G__11486 = cljs.core.first.call(null, seq11484__$1);
  var seq11484__$2 = cljs.core.next.call(null, seq11484__$1);
  return tiltontec.model.core.fget.cljs$core$IFn$_invoke$arity$variadic(G__11485, G__11486, seq11484__$2);
};
tiltontec.model.core.fm_BANG_ = function tiltontec$model$core$fm_BANG_(what, where) {
  return tiltontec.model.core.fget.call(null, what, where, new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "must?", "must?", 1639898554), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true);
};
tiltontec.model.core.mdv_BANG_ = function tiltontec$model$core$mdv_BANG_() {
  var args__5600__auto__ = [];
  var len__5593__auto___11498 = arguments.length;
  var i__5594__auto___11499 = 0;
  while (true) {
    if (i__5594__auto___11499 < len__5593__auto___11498) {
      args__5600__auto__.push(arguments[i__5594__auto___11499]);
      var G__11500 = i__5594__auto___11499 + 1;
      i__5594__auto___11499 = G__11500;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.model.core.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.model.core.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, what, slot, p__11496) {
  var vec__11497 = p__11496;
  var me = cljs.core.nth.call(null, vec__11497, 0, null);
  var me__$1 = function() {
    var or__4554__auto__ = me;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return new cljs.core.Symbol(null, "me", "me", 1501524834, null);
    }
  }();
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "md-get", "tiltontec.model.core/md-get", -1259532148, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "fm!", "tiltontec.model.core/fm!", 
  -726483993, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, what), cljs.core._conj.call(null, cljs.core.List.EMPTY, me__$1))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, slot))));
};
tiltontec.model.core.mdv_BANG_.cljs$lang$maxFixedArity = 4;
tiltontec.model.core.mdv_BANG_.cljs$lang$applyTo = function(seq11491) {
  var G__11492 = cljs.core.first.call(null, seq11491);
  var seq11491__$1 = cljs.core.next.call(null, seq11491);
  var G__11493 = cljs.core.first.call(null, seq11491__$1);
  var seq11491__$2 = cljs.core.next.call(null, seq11491__$1);
  var G__11494 = cljs.core.first.call(null, seq11491__$2);
  var seq11491__$3 = cljs.core.next.call(null, seq11491__$2);
  var G__11495 = cljs.core.first.call(null, seq11491__$3);
  var seq11491__$4 = cljs.core.next.call(null, seq11491__$3);
  return tiltontec.model.core.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11492, G__11493, G__11494, G__11495, seq11491__$4);
};
tiltontec.model.core.mdv_BANG_.cljs$lang$macro = true;
tiltontec.model.core.the_kids = function tiltontec$model$core$the_kids() {
  var args__5600__auto__ = [];
  var len__5593__auto___11504 = arguments.length;
  var i__5594__auto___11505 = 0;
  while (true) {
    if (i__5594__auto___11505 < len__5593__auto___11504) {
      args__5600__auto__.push(arguments[i__5594__auto___11505]);
      var G__11506 = i__5594__auto___11505 + 1;
      i__5594__auto___11505 = G__11506;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.model.core.the_kids.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.model.core.the_kids.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, tree) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "*par*", "tiltontec.model.core/*par*", 
  1276645059, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "remove", "cljs.core/remove", 20102034, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 
  945071861, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "flatten", "cljs.core/flatten", -237795822, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", 
  "list", "cljs.core/list", -1331406371, null)), tree)))))))))))))));
};
tiltontec.model.core.the_kids.cljs$lang$maxFixedArity = 2;
tiltontec.model.core.the_kids.cljs$lang$applyTo = function(seq11501) {
  var G__11502 = cljs.core.first.call(null, seq11501);
  var seq11501__$1 = cljs.core.next.call(null, seq11501);
  var G__11503 = cljs.core.first.call(null, seq11501__$1);
  var seq11501__$2 = cljs.core.next.call(null, seq11501__$1);
  return tiltontec.model.core.the_kids.cljs$core$IFn$_invoke$arity$variadic(G__11502, G__11503, seq11501__$2);
};
tiltontec.model.core.the_kids.cljs$lang$macro = true;
tiltontec.model.core.c_QMARK_kids = function tiltontec$model$core$c_QMARK_kids() {
  var args__5600__auto__ = [];
  var len__5593__auto___11510 = arguments.length;
  var i__5594__auto___11511 = 0;
  while (true) {
    if (i__5594__auto___11511 < len__5593__auto___11510) {
      args__5600__auto__.push(arguments[i__5594__auto___11511]);
      var G__11512 = i__5594__auto___11511 + 1;
      i__5594__auto___11511 = G__11512;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.model.core.c_QMARK_kids.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.model.core.c_QMARK_kids.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, tree) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?", "tiltontec.model.core/c?", 508213181, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", 
  -1146365346, null)), tree)))))));
};
tiltontec.model.core.c_QMARK_kids.cljs$lang$maxFixedArity = 2;
tiltontec.model.core.c_QMARK_kids.cljs$lang$applyTo = function(seq11507) {
  var G__11508 = cljs.core.first.call(null, seq11507);
  var seq11507__$1 = cljs.core.next.call(null, seq11507);
  var G__11509 = cljs.core.first.call(null, seq11507__$1);
  var seq11507__$2 = cljs.core.next.call(null, seq11507__$1);
  return tiltontec.model.core.c_QMARK_kids.cljs$core$IFn$_invoke$arity$variadic(G__11508, G__11509, seq11507__$2);
};
tiltontec.model.core.c_QMARK_kids.cljs$lang$macro = true;
goog.provide("tiltontec.model.kids_test");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.kids_test.k_notq2be = function tiltontec$model$kids_test$k_notq2be() {
  return cljs.test.test_var.call(null, tiltontec$model$kids_test$k_notq2be.cljs$lang$var);
};
tiltontec.model.kids_test.k_notq2be.cljs$lang$test = function() {
  var f = tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184), new cljs.core.Keyword(null, "ee", "ee", 643317400), tiltontec.cell.core.c_in.call(null, 2), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol(null, 
  "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "odd?", "odd?", -1458588199, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
  "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "par", "par", 1578752749, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", 
  "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "par", "par", 1578752749, null), new cljs.core.Keyword(null, 
  "ee", "ee", 643317400))], null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 14, new cljs.core.Symbol(null, "ee", "ee", -2011118369, null)))))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_12203 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.odd_QMARK_.call(null, tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "ee", "ee", 643317400))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.make_c_formula.call(null, 
      new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "par", "par", 1578752749, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "par", "par", 1578752749, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))], 
      null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 14, new cljs.core.Symbol(null, "ee", "ee", -2011118369, null)))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_12203, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var par = (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$1));
          var ee = tiltontec.model.core.md_get.call(null, par, new cljs.core.Keyword(null, "ee", "ee", 643317400));
          return 14 * ee;
        };
      }(_STAR_par_STAR_12203, me, cache))) : null)));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_12203;
    }
  }));
  try {
    var values__10696__auto___12211 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184)), f);
    var result__10697__auto___12212 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12211);
    if (cljs.core.truth_(result__10697__auto___12212)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12211), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto___12211)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12204) {
    var t__10734__auto___12213 = e12204;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12213, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12214 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
    var result__10697__auto___12215 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__10696__auto___12214);
    if (cljs.core.truth_(result__10697__auto___12215)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__10696__auto___12214), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__10696__auto___12214)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12205) {
    var t__10734__auto___12216 = e12205;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
    "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12216, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, f, new cljs.core.Keyword(null, "ee", "ee", 643317400), 3);
  try {
    var values__10696__auto___12217 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.empty_QMARK_.call(null, tiltontec.model.core.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771))));
    var result__10697__auto___12218 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12217);
    if (cljs.core.truth_(result__10697__auto___12218)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12217), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12217)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12206) {
    var t__10734__auto___12219 = e12206;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
    "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12219, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12220 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "yep", "yep", 1342783469), f), new cljs.core.Keyword(null, "value", "value", 305978217))), 42);
    var result__10697__auto___12221 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12220);
    if (cljs.core.truth_(result__10697__auto___12221)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12220), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12220)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12207) {
    var t__10734__auto___12222 = e12207;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
    "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12222, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var dmw = cljs.core.first.call(null, tiltontec.model.core.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
  if (cljs.core.truth_(tiltontec.cell.base.md_ref_QMARK_.call(null, dmw))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))))].join(""));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, f, new cljs.core.Keyword(null, "ee", "ee", 643317400), 0);
  try {
    var values__10696__auto___12223 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
    var result__10697__auto___12224 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__10696__auto___12223);
    if (cljs.core.truth_(result__10697__auto___12224)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__10696__auto___12223), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__10696__auto___12223)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12208) {
    var t__10734__auto___12225 = e12208;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
    "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12225, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12226 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dmw));
    var result__10697__auto___12227 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12226);
    if (cljs.core.truth_(result__10697__auto___12227)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12226), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12226)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12209) {
    var t__10734__auto___12228 = e12209;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12228, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, dmw))), new cljs.core.Keyword(null, "dead", "dead", -1946604091));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
      "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
      "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12210) {
    var t__10734__auto__ = e12210;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
    "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.kids_test.k_notq2be.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.kids_test.k_notq2be;
}, new cljs.core.Symbol("tiltontec.model.kids-test", "k-notq2be", "tiltontec.model.kids-test/k-notq2be", 1863973409, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Symbol(null, "k-notq2be", "k-notq2be", -2113236140, null), "test/tiltontec/model/kids_test.cljc", 19, 1, 48, 48, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.kids_test.k_notq2be) ? tiltontec.model.kids_test.k_notq2be.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env12229 = cljs.test.empty_env.call(null);
  var summary12230 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12229, summary12230) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12229);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10801__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12229, summary12230) {
          return function() {
            if (env__10801__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10801__auto__, env12229, summary12230)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.model.kids_test.k_notq2be;
        }, new cljs.core.Symbol("tiltontec.model.kids-test", "k-notq2be", "tiltontec.model.kids-test/k-notq2be", 1863973409, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Symbol(null, "k-notq2be", "k-notq2be", -2113236140, null), "test/tiltontec/model/kids_test.cljc", 19, 1, 48, 48, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.kids_test.k_notq2be) ? tiltontec.model.kids_test.k_notq2be.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12229, summary12230) {
          return function() {
            if (env__10801__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10801__auto__, env12229, summary12230)], null));
      }());
    };
  }(env12229, summary12230), function(env12229, summary12230) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env12229, summary12230)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12229, summary12230) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary12230, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary12230), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env12229, summary12230)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12229, summary12230) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12229);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary12230));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary12230), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env12229, summary12230)], null));
}());
goog.provide("tiltontec.cell.evaluate_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.cell.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.evaluate_test.test_input = function tiltontec$cell$evaluate_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$test_input.cljs$lang$var);
};
tiltontec.cell.evaluate_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
  try {
    var values__10696__auto___13071 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__10697__auto___13072 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___13071);
    if (cljs.core.truth_(result__10697__auto___13072)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___13071), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto___13071)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13063) {
    var t__10734__auto___13073 = e13063;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13073, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13074 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__10697__auto___13075 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13074);
    if (cljs.core.truth_(result__10697__auto___13075)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13074), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13074)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13064) {
    var t__10734__auto___13076 = e13064;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13076, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13077 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___13078 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13077);
    if (cljs.core.truth_(result__10697__auto___13078)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13077), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13077)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13065) {
    var t__10734__auto___13079 = e13065;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13079, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13080 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__10697__auto___13081 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__10696__auto___13080);
    if (cljs.core.truth_(result__10697__auto___13081)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__10696__auto___13080), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__10696__auto___13080)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13066) {
    var t__10734__auto___13082 = e13066;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13082, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13083 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__10697__auto___13084 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__10696__auto___13083);
    if (cljs.core.truth_(result__10697__auto___13084)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__10696__auto___13083), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__10696__auto___13083)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13067) {
    var t__10734__auto___13085 = e13067;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13085, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13086 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__10697__auto___13087 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___13086);
    if (cljs.core.truth_(result__10697__auto___13087)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___13086), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___13086)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13068) {
    var t__10734__auto___13088 = e13068;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13088, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13089 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
    var result__10697__auto___13090 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13089);
    if (cljs.core.truth_(result__10697__auto___13090)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13089), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13089)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13069) {
    var t__10734__auto___13091 = e13069;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13091, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e13070) {
    var t__10734__auto__ = e13070;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "test-input", "tiltontec.cell.evaluate-test/test-input", -1028428775, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/evaluate_test.cljc", 20, 1, 45, 45, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.test_input) ? tiltontec.cell.evaluate_test.test_input.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula = function tiltontec$cell$evaluate_test$t_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 40 + 2;
  });
  try {
    var values__10696__auto___13102 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), tiltontec.cell.base.ia_types);
    var result__10697__auto___13103 = cljs.core.apply.call(null, cljs.core.isa_QMARK_, values__10696__auto___13102);
    if (cljs.core.truth_(result__10697__auto___13103)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
      new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.isa_QMARK_, values__10696__auto___13102), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
      new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), values__10696__auto___13102)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13092) {
    var t__10734__auto___13104 = e13092;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
    new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13104, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13105 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__10697__auto___13106 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___13105);
    if (cljs.core.truth_(result__10697__auto___13106)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___13105), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto___13105)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13093) {
    var t__10734__auto___13107 = e13093;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13107, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13108 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), c);
    var result__10697__auto___13109 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___13108);
    if (cljs.core.truth_(result__10697__auto___13109)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___13108), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto___13108)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13094) {
    var t__10734__auto___13110 = e13094;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13110, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13111 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__10697__auto___13112 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13111);
    if (cljs.core.truth_(result__10697__auto___13112)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13111), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13111)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13095) {
    var t__10734__auto___13113 = e13095;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13113, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13114 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___13115 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13114);
    if (cljs.core.truth_(result__10697__auto___13115)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13114), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13114)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13096) {
    var t__10734__auto___13116 = e13096;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13116, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13117 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___13118 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13117);
    if (cljs.core.truth_(result__10697__auto___13118)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13117), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13117)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13097) {
    var t__10734__auto___13119 = e13097;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13119, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13120 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__10697__auto___13121 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___13120);
    if (cljs.core.truth_(result__10697__auto___13121)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___13120), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___13120)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13098) {
    var t__10734__auto___13122 = e13098;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13122, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13123 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_valid_QMARK_.call(null, c));
    var result__10697__auto___13124 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___13123);
    if (cljs.core.truth_(result__10697__auto___13124)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___13123), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___13123)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13099) {
    var t__10734__auto___13125 = e13099;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13125, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13126 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__10697__auto___13127 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___13126);
    if (cljs.core.truth_(result__10697__auto___13127)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___13126), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___13126)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13100) {
    var t__10734__auto___13128 = e13100;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13128, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "readddd", "readddd", 455623157), tiltontec.cell.evaluate.c_get.call(null, c));
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e13101) {
    var t__10734__auto__ = e13101;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula", "tiltontec.cell.evaluate-test/t-formula", 1151821320, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/evaluate_test.cljc", 19, 1, 57, 57, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula) ? tiltontec.cell.evaluate_test.t_formula.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula_2 = function tiltontec$cell$evaluate_test$t_formula_2() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula_2.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test = function() {
  var b = tiltontec.cell.core.c_in.call(null, 2);
  var cct = cljs.core.atom.call(null, 0);
  var dct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
  "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct));
  var d = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
  "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct, c) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, dct, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, c) + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct, c));
  try {
    var values__10696__auto___13140 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 44), tiltontec.cell.evaluate.c_get.call(null, d));
    var result__10697__auto___13141 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13140);
    if (cljs.core.truth_(result__10697__auto___13141)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13140), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13140)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13129) {
    var t__10734__auto___13142 = e13129;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13142, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13143 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto___13144 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13143);
    if (cljs.core.truth_(result__10697__auto___13144)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13143), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13143)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13130) {
    var t__10734__auto___13145 = e13130;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13145, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13146 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__10697__auto___13147 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13146);
    if (cljs.core.truth_(result__10697__auto___13147)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13146), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13146)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13131) {
    var t__10734__auto___13148 = e13131;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13148, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13149 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 1);
    var result__10697__auto___13150 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13149);
    if (cljs.core.truth_(result__10697__auto___13150)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13149), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13149)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13132) {
    var t__10734__auto___13151 = e13132;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13151, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13152 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__10697__auto___13153 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13152);
    if (cljs.core.truth_(result__10697__auto___13153)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13152), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13152)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13133) {
    var t__10734__auto___13154 = e13133;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13154, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13155 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, b))), 0);
    var result__10697__auto___13156 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13155);
    if (cljs.core.truth_(result__10697__auto___13156)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13155), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13155)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13134) {
    var t__10734__auto___13157 = e13134;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13157, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13158 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, b))), 2);
    var result__10697__auto___13159 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13158);
    if (cljs.core.truth_(result__10697__auto___13159)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13158), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13158)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13135) {
    var t__10734__auto___13160 = e13135;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
    new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13160, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13161 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, c))), 1);
    var result__10697__auto___13162 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13161);
    if (cljs.core.truth_(result__10697__auto___13162)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13161), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13161)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13136) {
    var t__10734__auto___13163 = e13136;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13163, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13164 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, c))), 1);
    var result__10697__auto___13165 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13164);
    if (cljs.core.truth_(result__10697__auto___13165)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13164), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13164)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13137) {
    var t__10734__auto___13166 = e13137;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
    new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13166, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13167 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, d))), 2);
    var result__10697__auto___13168 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13167);
    if (cljs.core.truth_(result__10697__auto___13168)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13167), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13167)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13138) {
    var t__10734__auto___13169 = e13138;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13169, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, d))), 0);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e13139) {
    var t__10734__auto__ = e13139;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, 
    null), new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula_2;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-2", "tiltontec.cell.evaluate-test/t-formula-2", 1653829372, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-2", "t-formula-2", 844540770, null), "test/tiltontec/cell/evaluate_test.cljc", 21, 1, 74, 
74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_2) ? tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.yowza = cljs.core.atom.call(null, 0);
tiltontec.cell.evaluate_test.t_in_reset = function tiltontec$cell$evaluate_test$t_in_reset() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_in_reset.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test = function() {
  cljs.core.reset_BANG_.call(null, tiltontec.cell.evaluate_test.yowza, 0);
  try {
    var values__10696__auto___13175 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 0), cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza));
    var result__10697__auto___13176 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13175);
    if (cljs.core.truth_(result__10697__auto___13176)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
      0), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13175), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
      0), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13175)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13170) {
    var t__10734__auto___13177 = e13170;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
    0), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13177, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "yowza", "yowza", 561311574), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(slot, me, new$, old, c) {
    return cljs.core.reset_BANG_.call(null, tiltontec.cell.evaluate_test.yowza, new$);
  });
  try {
    var values__10696__auto___13178 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 2);
    var result__10697__auto___13179 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13178);
    if (cljs.core.truth_(result__10697__auto___13179)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13178), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13178)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13171) {
    var t__10734__auto___13180 = e13171;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13180, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13181 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza)), 2);
    var result__10697__auto___13182 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13181);
    if (cljs.core.truth_(result__10697__auto___13182)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13181), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13181)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13172) {
    var t__10734__auto___13183 = e13172;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13183, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 42);
  try {
    var values__10696__auto___13184 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 42);
    var result__10697__auto___13185 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13184);
    if (cljs.core.truth_(result__10697__auto___13185)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13184), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13184)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13173) {
    var t__10734__auto___13186 = e13173;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13186, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza)), 42);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e13174) {
    var t__10734__auto__ = e13174;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_in_reset;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-in-reset", "tiltontec.cell.evaluate-test/t-in-reset", -1060627208, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-in-reset", "t-in-reset", 285694538, null), "test/tiltontec/cell/evaluate_test.cljc", 20, 1, 100, 100, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_in_reset) ? tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula_22 = function tiltontec$cell$evaluate_test$t_formula_22() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula_22.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837));
  var cct = cljs.core.atom.call(null, 0);
  var dct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct));
  var d = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, 
  null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct, c) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, dct, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, c) + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct, c));
  try {
    var values__10696__auto___13197 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 44), tiltontec.cell.evaluate.c_get.call(null, d));
    var result__10697__auto___13198 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13197);
    if (cljs.core.truth_(result__10697__auto___13198)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13197), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13197)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13187) {
    var t__10734__auto___13199 = e13187;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13199, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13200 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto___13201 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13200);
    if (cljs.core.truth_(result__10697__auto___13201)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13200), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13200)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13188) {
    var t__10734__auto___13202 = e13188;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13202, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13203 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__10697__auto___13204 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13203);
    if (cljs.core.truth_(result__10697__auto___13204)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13203), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13203)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13189) {
    var t__10734__auto___13205 = e13189;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13205, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13206 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 1);
    var result__10697__auto___13207 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13206);
    if (cljs.core.truth_(result__10697__auto___13207)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13206), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13206)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13190) {
    var t__10734__auto___13208 = e13190;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13208, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13209 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__10697__auto___13210 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13209);
    if (cljs.core.truth_(result__10697__auto___13210)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13209), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13209)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13191) {
    var t__10734__auto___13211 = e13191;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13211, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 3);
  try {
    var values__10696__auto___13212 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 46), tiltontec.cell.evaluate.c_get.call(null, d));
    var result__10697__auto___13213 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13212);
    if (cljs.core.truth_(result__10697__auto___13213)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13212), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13212)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13192) {
    var t__10734__auto___13214 = e13192;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13214, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13215 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 43), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto___13216 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13215);
    if (cljs.core.truth_(result__10697__auto___13216)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13215), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13215)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13193) {
    var t__10734__auto___13217 = e13193;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13217, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13218 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__10697__auto___13219 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13218);
    if (cljs.core.truth_(result__10697__auto___13219)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13218), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13218)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13194) {
    var t__10734__auto___13220 = e13194;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13220, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13221 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 2);
    var result__10697__auto___13222 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13221);
    if (cljs.core.truth_(result__10697__auto___13222)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13221), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13221)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13195) {
    var t__10734__auto___13223 = e13195;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13223, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 2);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e13196) {
    var t__10734__auto__ = e13196;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula_22;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-22", "tiltontec.cell.evaluate-test/t-formula-22", 626462137, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-22", "t-formula-22", -194457801, null), "test/tiltontec/cell/evaluate_test.cljc", 22, 1, 111, 
111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_22) ? tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.pentagram_of_death = function tiltontec$cell$evaluate_test$pentagram_of_death() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$pentagram_of_death.cljs$lang$var);
};
tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var run = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var obs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var rset = function(run, obs) {
    return function() {
      cljs.core.swap_BANG_.call(null, run, cljs.core.empty);
      return cljs.core.swap_BANG_.call(null, obs, cljs.core.empty);
    };
  }(run, obs);
  var logit = function(run, obs, rset) {
    return function(log, key) {
      return cljs.core.swap_BANG_.call(null, run, cljs.core.assoc, key, key.call(null, cljs.core.deref.call(null, run), 0) + 1);
    };
  }(run, obs, rset);
  var logrun = function(run, obs, rset, logit) {
    return function(p1__13224_SHARP_) {
      return logit.call(null, run, p1__13224_SHARP_);
    };
  }(run, obs, rset, logit);
  var cr = function(run, obs, rset, logit, logrun) {
    return function(c) {
      return tiltontec.cell.evaluate.c_get.call(null, c);
    };
  }(run, obs, rset, logit, logrun);
  var podobs = function(run, obs, rset, logit, logrun, cr) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, obs, cljs.core.assoc, slot, slot.call(null, cljs.core.deref.call(null, obs), 0) + 1);
    };
  }(run, obs, rset, logit, logrun, cr);
  var aa = tiltontec.cell.core.c_in.call(null, 1, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs);
  var a7 = tiltontec.cell.core.c_in.call(null, 7, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "a7", "a7", 1513050971), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs);
  var a70 = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "a70", "a70", 798099193), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "a70", "a70", 798099193)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, 
  null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "a7", "a7", -1141384798, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "a70", "a70", 798099193));
      return 10 * cr.call(null, a7);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7));
  var bb = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "bb", "bb", 75940837)), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), 
  new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837));
      return cr.call(null, aa);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70));
  var cc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "cc", "cc", 301258124)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
  10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "cc", "cc", 301258124));
      return 10 * cr.call(null, aa);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb));
  var dd = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629)), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, 
  null), cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), 42)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "dd", "dd", -1340437629));
      if (cljs.core.even_QMARK_.call(null, cr.call(null, bb))) {
        return 10 * cr.call(null, cc);
      } else {
        return 42;
      }
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc));
  var ee = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "ee", "ee", 643317400), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "ee", "ee", 643317400)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "a70", "a70", -1856336576, null)), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 1E4, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "ee", "ee", 643317400));
      return cr.call(null, a70) + cr.call(null, bb) + 1E4 * cr.call(null, dd);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd));
  var verify_p_current = function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd, ee) {
    return function() {
      try {
        var values__10696__auto___13273 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, aa)), 2);
        var result__10697__auto___13274 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13273);
        if (cljs.core.truth_(result__10697__auto___13274)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13273), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13273)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e13225) {
        var t__10734__auto___13275 = e13225;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__10734__auto___13275, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__10696__auto___13276 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, bb)), 2);
        var result__10697__auto___13277 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13276);
        if (cljs.core.truth_(result__10697__auto___13277)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13276), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13276)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e13226) {
        var t__10734__auto___13278 = e13226;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__10734__auto___13278, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__10696__auto___13279 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, cc)), 20);
        var result__10697__auto___13280 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13279);
        if (cljs.core.truth_(result__10697__auto___13280)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13279), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13279)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e13227) {
        var t__10734__auto___13281 = e13227;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__10734__auto___13281, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__10696__auto___13282 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 200);
        var result__10697__auto___13283 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13282);
        if (cljs.core.truth_(result__10697__auto___13283)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13282), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13282)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e13228) {
        var t__10734__auto___13284 = e13228;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__10734__auto___13284, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, ee)), 2000072);
        var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
        if (cljs.core.truth_(result__10697__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__10697__auto__;
      } catch (e13229) {
        var t__10734__auto__ = e13229;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd, ee);
  try {
    var values__10696__auto___13285 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, aa)), 1);
    var result__10697__auto___13286 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13285);
    if (cljs.core.truth_(result__10697__auto___13286)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13285), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13285)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13230) {
    var t__10734__auto___13287 = e13230;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__10734__auto___13287, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13288 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, bb)), 1);
    var result__10697__auto___13289 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13288);
    if (cljs.core.truth_(result__10697__auto___13289)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13288), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13288)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13231) {
    var t__10734__auto___13290 = e13231;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__10734__auto___13290, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13291 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, cc)), 10);
    var result__10697__auto___13292 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13291);
    if (cljs.core.truth_(result__10697__auto___13292)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13291), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13291)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13232) {
    var t__10734__auto___13293 = e13232;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13293, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13294 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 42);
    var result__10697__auto___13295 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13294);
    if (cljs.core.truth_(result__10697__auto___13295)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13294), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13294)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13233) {
    var t__10734__auto___13296 = e13233;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__10734__auto___13296, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13297 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, ee)), 420071);
    var result__10697__auto___13298 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13297);
    if (cljs.core.truth_(result__10697__auto___13298)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13297), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13297)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13234) {
    var t__10734__auto___13299 = e13234;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13299, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13300 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, aa)), null);
    var result__10697__auto___13301 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13300);
    if (cljs.core.truth_(result__10697__auto___13301)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13300), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13300)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13235) {
    var t__10734__auto___13302 = e13235;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13302, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13303 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, aa, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null], null), null));
    var result__10697__auto___13304 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13303);
    if (cljs.core.truth_(result__10697__auto___13304)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13303), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13303)), 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13236) {
    var t__10734__auto___13305 = e13236;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
    "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13305, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13306 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, bb, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null));
    var result__10697__auto___13307 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13306);
    if (cljs.core.truth_(result__10697__auto___13307)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13306), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13306)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e13237) {
    var t__10734__auto___13308 = e13237;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13308, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13309 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, bb, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null));
    var result__10697__auto___13310 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13309);
    if (cljs.core.truth_(result__10697__auto___13310)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13309), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13309)), 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13238) {
    var t__10734__auto___13311 = e13238;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
    "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13311, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13312 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, cc, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null));
    var result__10697__auto___13313 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13312);
    if (cljs.core.truth_(result__10697__auto___13313)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13312), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13312)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e13239) {
    var t__10734__auto___13314 = e13239;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13314, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13315 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, cc, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___13316 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13315);
    if (cljs.core.truth_(result__10697__auto___13316)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13315), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13315)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13240) {
    var t__10734__auto___13317 = e13240;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
    null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13317, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13318 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null));
    var result__10697__auto___13319 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13318);
    if (cljs.core.truth_(result__10697__auto___13319)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13318), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13318)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e13241) {
    var t__10734__auto___13320 = e13241;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13320, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13321 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null));
    var result__10697__auto___13322 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13321);
    if (cljs.core.truth_(result__10697__auto___13322)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13321), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13321)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e13242) {
    var t__10734__auto___13323 = e13242;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13323, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13324 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, ee, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null));
    var result__10697__auto___13325 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13324);
    if (cljs.core.truth_(result__10697__auto___13325)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13324), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
      "\x3d", "\x3d", -1501502141, null), values__10696__auto___13324)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13243) {
    var t__10734__auto___13326 = e13243;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
    "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13326, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13327 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, ee, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___13328 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13327);
    if (cljs.core.truth_(result__10697__auto___13328)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13327), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13327)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13244) {
    var t__10734__auto___13329 = e13244;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
    null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13329, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var _STAR_trx_QMARK__STAR_13245 = tiltontec.util.base._STAR_trx_QMARK__STAR_;
  tiltontec.util.base._STAR_trx_QMARK__STAR_ = true;
  try {
    rset.call(null);
    var seq__13246_13330 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, obs)));
    var chunk__13247_13331 = null;
    var count__13248_13332 = 0;
    var i__13249_13333 = 0;
    while (true) {
      if (i__13249_13333 < count__13248_13332) {
        var vec__13250_13334 = cljs.core._nth.call(null, chunk__13247_13331, i__13249_13333);
        var k_13335 = cljs.core.nth.call(null, vec__13250_13334, 0, null);
        var v_13336 = cljs.core.nth.call(null, vec__13250_13334, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_13335, v_13336);
        try {
          var value__10699__auto___13337 = k_13335 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 0, v_13336);
          if (value__10699__auto___13337) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13337, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13337, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e13251) {
          var t__10734__auto___13338 = e13251;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13338, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__13339 = seq__13246_13330;
        var G__13340 = chunk__13247_13331;
        var G__13341 = count__13248_13332;
        var G__13342 = i__13249_13333 + 1;
        seq__13246_13330 = G__13339;
        chunk__13247_13331 = G__13340;
        count__13248_13332 = G__13341;
        i__13249_13333 = G__13342;
        continue;
      } else {
        var temp__4425__auto___13343 = cljs.core.seq.call(null, seq__13246_13330);
        if (temp__4425__auto___13343) {
          var seq__13246_13344__$1 = temp__4425__auto___13343;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13246_13344__$1)) {
            var c__5338__auto___13345 = cljs.core.chunk_first.call(null, seq__13246_13344__$1);
            var G__13346 = cljs.core.chunk_rest.call(null, seq__13246_13344__$1);
            var G__13347 = c__5338__auto___13345;
            var G__13348 = cljs.core.count.call(null, c__5338__auto___13345);
            var G__13349 = 0;
            seq__13246_13330 = G__13346;
            chunk__13247_13331 = G__13347;
            count__13248_13332 = G__13348;
            i__13249_13333 = G__13349;
            continue;
          } else {
            var vec__13252_13350 = cljs.core.first.call(null, seq__13246_13344__$1);
            var k_13351 = cljs.core.nth.call(null, vec__13252_13350, 0, null);
            var v_13352 = cljs.core.nth.call(null, vec__13252_13350, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_13351, v_13352);
            try {
              var value__10699__auto___13353 = k_13351 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 0, v_13352);
              if (value__10699__auto___13353) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13353, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13353, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e13253) {
              var t__10734__auto___13354 = e13253;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13354, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__13355 = cljs.core.next.call(null, seq__13246_13344__$1);
            var G__13356 = null;
            var G__13357 = 0;
            var G__13358 = 0;
            seq__13246_13330 = G__13355;
            chunk__13247_13331 = G__13356;
            count__13248_13332 = G__13357;
            i__13249_13333 = G__13358;
            continue;
          }
        } else {
        }
      }
      break;
    }
    tiltontec.cell.core.c_reset_BANG_.call(null, aa, cr.call(null, aa) + 1);
    cljs.core._EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, run))));
    var seq__13254_13359 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, run)));
    var chunk__13255_13360 = null;
    var count__13256_13361 = 0;
    var i__13257_13362 = 0;
    while (true) {
      if (i__13257_13362 < count__13256_13361) {
        var vec__13258_13363 = cljs.core._nth.call(null, chunk__13255_13360, i__13257_13362);
        var k_13364 = cljs.core.nth.call(null, vec__13258_13363, 0, null);
        var v_13365 = cljs.core.nth.call(null, vec__13258_13363, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "runchk", "runchk", -886583070), k_13364, v_13365);
        try {
          var value__10699__auto___13366 = k_13364 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_13365);
          if (value__10699__auto___13366) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13366, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13366, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e13259) {
          var t__10734__auto___13367 = e13259;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13367, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__13368 = seq__13254_13359;
        var G__13369 = chunk__13255_13360;
        var G__13370 = count__13256_13361;
        var G__13371 = i__13257_13362 + 1;
        seq__13254_13359 = G__13368;
        chunk__13255_13360 = G__13369;
        count__13256_13361 = G__13370;
        i__13257_13362 = G__13371;
        continue;
      } else {
        var temp__4425__auto___13372 = cljs.core.seq.call(null, seq__13254_13359);
        if (temp__4425__auto___13372) {
          var seq__13254_13373__$1 = temp__4425__auto___13372;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13254_13373__$1)) {
            var c__5338__auto___13374 = cljs.core.chunk_first.call(null, seq__13254_13373__$1);
            var G__13375 = cljs.core.chunk_rest.call(null, seq__13254_13373__$1);
            var G__13376 = c__5338__auto___13374;
            var G__13377 = cljs.core.count.call(null, c__5338__auto___13374);
            var G__13378 = 0;
            seq__13254_13359 = G__13375;
            chunk__13255_13360 = G__13376;
            count__13256_13361 = G__13377;
            i__13257_13362 = G__13378;
            continue;
          } else {
            var vec__13260_13379 = cljs.core.first.call(null, seq__13254_13373__$1);
            var k_13380 = cljs.core.nth.call(null, vec__13260_13379, 0, null);
            var v_13381 = cljs.core.nth.call(null, vec__13260_13379, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "runchk", "runchk", -886583070), k_13380, v_13381);
            try {
              var value__10699__auto___13382 = k_13380 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_13381);
              if (value__10699__auto___13382) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13382, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13382, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e13261) {
              var t__10734__auto___13383 = e13261;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13383, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__13384 = cljs.core.next.call(null, seq__13254_13373__$1);
            var G__13385 = null;
            var G__13386 = 0;
            var G__13387 = 0;
            seq__13254_13359 = G__13384;
            chunk__13255_13360 = G__13385;
            count__13256_13361 = G__13386;
            i__13257_13362 = G__13387;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core._EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null, new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, obs))));
    var seq__13262_13388 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, obs)));
    var chunk__13263_13389 = null;
    var count__13264_13390 = 0;
    var i__13265_13391 = 0;
    while (true) {
      if (i__13265_13391 < count__13264_13390) {
        var vec__13266_13392 = cljs.core._nth.call(null, chunk__13263_13389, i__13265_13391);
        var k_13393 = cljs.core.nth.call(null, vec__13266_13392, 0, null);
        var v_13394 = cljs.core.nth.call(null, vec__13266_13392, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_13393, v_13394);
        try {
          var value__10699__auto___13395 = k_13393 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_13394);
          if (value__10699__auto___13395) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13395, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13395, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e13267) {
          var t__10734__auto___13396 = e13267;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13396, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__13397 = seq__13262_13388;
        var G__13398 = chunk__13263_13389;
        var G__13399 = count__13264_13390;
        var G__13400 = i__13265_13391 + 1;
        seq__13262_13388 = G__13397;
        chunk__13263_13389 = G__13398;
        count__13264_13390 = G__13399;
        i__13265_13391 = G__13400;
        continue;
      } else {
        var temp__4425__auto___13401 = cljs.core.seq.call(null, seq__13262_13388);
        if (temp__4425__auto___13401) {
          var seq__13262_13402__$1 = temp__4425__auto___13401;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13262_13402__$1)) {
            var c__5338__auto___13403 = cljs.core.chunk_first.call(null, seq__13262_13402__$1);
            var G__13404 = cljs.core.chunk_rest.call(null, seq__13262_13402__$1);
            var G__13405 = c__5338__auto___13403;
            var G__13406 = cljs.core.count.call(null, c__5338__auto___13403);
            var G__13407 = 0;
            seq__13262_13388 = G__13404;
            chunk__13263_13389 = G__13405;
            count__13264_13390 = G__13406;
            i__13265_13391 = G__13407;
            continue;
          } else {
            var vec__13268_13408 = cljs.core.first.call(null, seq__13262_13402__$1);
            var k_13409 = cljs.core.nth.call(null, vec__13268_13408, 0, null);
            var v_13410 = cljs.core.nth.call(null, vec__13268_13408, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_13409, v_13410);
            try {
              var value__10699__auto___13411 = k_13409 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_13410);
              if (value__10699__auto___13411) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13411, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___13411, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e13269) {
              var t__10734__auto___13412 = e13269;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13412, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__13413 = cljs.core.next.call(null, seq__13262_13402__$1);
            var G__13414 = null;
            var G__13415 = 0;
            var G__13416 = 0;
            seq__13262_13388 = G__13413;
            chunk__13263_13389 = G__13414;
            count__13264_13390 = G__13415;
            i__13265_13391 = G__13416;
            continue;
          }
        } else {
        }
      }
      break;
    }
    try {
      var values__10696__auto___13417 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null], null), null));
      var result__10697__auto___13418 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13417);
      if (cljs.core.truth_(result__10697__auto___13418)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
        "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13417), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
        "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13417)), 
        new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e13270) {
      var t__10734__auto___13419 = e13270;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13419, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    verify_p_current.call(null);
    tiltontec.cell.core.c_reset_BANG_.call(null, aa, cr.call(null, aa) + 1);
    try {
      var values__10696__auto___13420 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 42);
      var result__10697__auto___13421 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13420);
      if (cljs.core.truth_(result__10697__auto___13421)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13420), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13420)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e13271) {
      var t__10734__auto___13422 = e13271;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), t__10734__auto___13422, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null));
      var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
      if (cljs.core.truth_(result__10697__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
        "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
        "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
        "message", "message", -406056002), null], null));
      }
      return result__10697__auto__;
    } catch (e13272) {
      var t__10734__auto__ = e13272;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    tiltontec.util.base._STAR_trx_QMARK__STAR_ = _STAR_trx_QMARK__STAR_13245;
  }
};
tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.pentagram_of_death;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "pentagram-of-death", "tiltontec.cell.evaluate-test/pentagram-of-death", -438613751, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "pentagram-of-death", "pentagram-of-death", 874385051, null), "test/tiltontec/cell/evaluate_test.cljc", 
28, 1, 147, 147, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.pentagram_of_death) ? tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_cell_unchanged_test = function tiltontec$cell$evaluate_test$t_cell_unchanged_test() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_cell_unchanged_test.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var ob = cljs.core.atom.call(null, 0);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(ob) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obs-bb!!", "obs-bb!!", -1369030842), new$, old);
      return cljs.core.swap_BANG_.call(null, ob, cljs.core.inc);
    };
  }(ob), new cljs.core.Keyword(null, "unchanged-if", "unchanged-if", -923210106), function(ob) {
    return function(n, p) {
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "ucif-sees", "ucif-sees", -1878078109), n, p);
      return typeof n === "number" && typeof p === "number" && (cljs.core.even_QMARK_.call(null, n) && cljs.core.even_QMARK_.call(null, p) || cljs.core.odd_QMARK_.call(null, n) && cljs.core.odd_QMARK_.call(null, p));
    };
  }(ob));
  var cct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(ob, b, cct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(ob, b, cct));
  try {
    var values__10696__auto___13435 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto___13436 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13435);
    if (cljs.core.truth_(result__10697__auto___13436)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13435), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13435)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13423) {
    var t__10734__auto___13437 = e13423;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13437, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13438 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__10697__auto___13439 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13438);
    if (cljs.core.truth_(result__10697__auto___13439)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13438), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13438)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13424) {
    var t__10734__auto___13440 = e13424;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13440, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13441 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 1);
    var result__10697__auto___13442 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13441);
    if (cljs.core.truth_(result__10697__auto___13442)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13441), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13441)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13425) {
    var t__10734__auto___13443 = e13425;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13443, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13444 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__10697__auto___13445 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13444);
    if (cljs.core.truth_(result__10697__auto___13445)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13444), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13444)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13426) {
    var t__10734__auto___13446 = e13426;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13446, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 4);
  try {
    var values__10696__auto___13447 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto___13448 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13447);
    if (cljs.core.truth_(result__10697__auto___13448)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13447), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13447)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13427) {
    var t__10734__auto___13449 = e13427;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13449, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13450 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 4), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__10697__auto___13451 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13450);
    if (cljs.core.truth_(result__10697__auto___13451)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13450), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13450)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13428) {
    var t__10734__auto___13452 = e13428;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13452, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13453 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 1);
    var result__10697__auto___13454 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13453);
    if (cljs.core.truth_(result__10697__auto___13454)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13453), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13453)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13429) {
    var t__10734__auto___13455 = e13429;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13455, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13456 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__10697__auto___13457 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13456);
    if (cljs.core.truth_(result__10697__auto___13457)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13456), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13456)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13430) {
    var t__10734__auto___13458 = e13430;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13458, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 5);
  try {
    var values__10696__auto___13459 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 45), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__10697__auto___13460 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13459);
    if (cljs.core.truth_(result__10697__auto___13460)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13459), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13459)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13431) {
    var t__10734__auto___13461 = e13431;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13461, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13462 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 5), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__10697__auto___13463 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13462);
    if (cljs.core.truth_(result__10697__auto___13463)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13462), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13462)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13432) {
    var t__10734__auto___13464 = e13432;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13464, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13465 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 2);
    var result__10697__auto___13466 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13465);
    if (cljs.core.truth_(result__10697__auto___13466)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13465), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13465)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13433) {
    var t__10734__auto___13467 = e13433;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13467, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 2);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e13434) {
    var t__10734__auto__ = e13434;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_cell_unchanged_test;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-cell-unchanged-test", "tiltontec.cell.evaluate-test/t-cell-unchanged-test", -1587253216, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-cell-unchanged-test", "t-cell-unchanged-test", -257732942, null), "test/tiltontec/cell/evaluate_test.cljc", 
31, 1, 294, 294, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_cell_unchanged_test) ? tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.opti_away = function tiltontec$cell$evaluate_test$opti_away() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$opti_away.cljs$lang$var);
};
tiltontec.cell.evaluate_test.opti_away.cljs$lang$test = function() {
  var aa = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(42), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 42;
  });
  try {
    var values__10696__auto___13471 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, aa)), 42);
    var result__10697__auto___13472 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13471);
    if (cljs.core.truth_(result__10697__auto___13472)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13471), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13471)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13468) {
    var t__10734__auto___13473 = e13468;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13473, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), cljs.core.deref.call(null, aa));
  try {
    var values__10696__auto___13474 = cljs.core._conj.call(null, cljs.core.List.EMPTY, aa);
    var result__10697__auto___13475 = cljs.core.apply.call(null, tiltontec.cell.base.c_optimized_away_QMARK_, values__10696__auto___13474);
    if (cljs.core.truth_(result__10697__auto___13475)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      tiltontec.cell.base.c_optimized_away_QMARK_, values__10696__auto___13474), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), values__10696__auto___13474)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13469) {
    var t__10734__auto___13476 = e13469;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13476, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, aa)), 42);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e13470) {
    var t__10734__auto__ = e13470;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.opti_away.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.opti_away;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "opti-away", "tiltontec.cell.evaluate-test/opti-away", 1608981072, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "opti-away", "opti-away", -1363650270, null), "test/tiltontec/cell/evaluate_test.cljc", 19, 1, 329, 329, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.opti_away) ? tiltontec.cell.evaluate_test.opti_away.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env13477 = cljs.test.empty_env.call(null);
  var summary13478 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13477, summary13478) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env13477);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10801__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env13477, summary13478) {
          return function() {
            if (env__10801__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10801__auto__, env13477, summary13478)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "test-input", "tiltontec.cell.evaluate-test/test-input", -1028428775, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/evaluate_test.cljc", 
        20, 1, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.test_input) ? tiltontec.cell.evaluate_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula", "tiltontec.cell.evaluate-test/t-formula", 1151821320, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/evaluate_test.cljc", 
        19, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula) ? tiltontec.cell.evaluate_test.t_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula_2;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-2", "tiltontec.cell.evaluate-test/t-formula-2", 1653829372, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-2", "t-formula-2", 844540770, null), "test/tiltontec/cell/evaluate_test.cljc", 
        21, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_2) ? tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_in_reset;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-in-reset", "tiltontec.cell.evaluate-test/t-in-reset", -1060627208, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-in-reset", "t-in-reset", 285694538, null), "test/tiltontec/cell/evaluate_test.cljc", 
        20, 1, 100, 100, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_in_reset) ? tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula_22;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-22", "tiltontec.cell.evaluate-test/t-formula-22", 626462137, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-22", "t-formula-22", -194457801, null), "test/tiltontec/cell/evaluate_test.cljc", 
        22, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_22) ? tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.pentagram_of_death;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "pentagram-of-death", "tiltontec.cell.evaluate-test/pentagram-of-death", -438613751, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "pentagram-of-death", "pentagram-of-death", 874385051, null), "test/tiltontec/cell/evaluate_test.cljc", 
        28, 1, 147, 147, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.pentagram_of_death) ? tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_cell_unchanged_test;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-cell-unchanged-test", "tiltontec.cell.evaluate-test/t-cell-unchanged-test", -1587253216, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-cell-unchanged-test", "t-cell-unchanged-test", -257732942, null), "test/tiltontec/cell/evaluate_test.cljc", 
        31, 1, 294, 294, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_cell_unchanged_test) ? tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.opti_away;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "opti-away", "tiltontec.cell.evaluate-test/opti-away", 1608981072, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "opti-away", "opti-away", -1363650270, null), "test/tiltontec/cell/evaluate_test.cljc", 
        19, 1, 329, 329, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.opti_away) ? tiltontec.cell.evaluate_test.opti_away.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env13477, summary13478) {
          return function() {
            if (env__10801__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10801__auto__, env13477, summary13478)], null));
      }());
    };
  }(env13477, summary13478), function(env13477, summary13478) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env13477, summary13478)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13477, summary13478) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary13478, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary13478), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env13477, summary13478)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13477, summary13478) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env13477);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary13478));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary13478), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env13477, summary13478)], null));
}());
goog.provide("tiltontec.cell.hello_cells_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.cell.evaluate");
tiltontec.cell.hello_cells_test.hw_01 = function tiltontec$cell$hello_cells_test$hw_01() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_01.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test = function() {
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.make_cell.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), "knocks", new cljs.core.Keyword(null, "input?", "input?", -1792843173), true)], null);
  cljs.core.println.call(null, tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
  try {
    var values__10696__auto___12771 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "World"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__10697__auto___12772 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12771);
    if (cljs.core.truth_(result__10697__auto___12772)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12771), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12771)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12769) {
    var t__10734__auto___12773 = e12769;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12773, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knocks"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12770) {
    var t__10734__auto__ = e12770;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_01.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_01;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-01", "tiltontec.cell.hello-cells-test/hw-01", -1914102464, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-01", "hw-01", -198427897, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 42, 42, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_01) ? tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_02 = function tiltontec$cell$hello_cells_test$hw_02() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_02.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test = function() {
  var obs_action = cljs.core.atom.call(null, null);
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, "knocks", new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action) {
    return function(slot, me, new$, old, c) {
      cljs.core.reset_BANG_.call(null, obs_action, new$);
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "observing", "observing", 1065333653), slot, new$, old);
    };
  }(obs_action))], null);
  try {
    var values__10696__auto___12777 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "World"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__10697__auto___12778 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12777);
    if (cljs.core.truth_(result__10697__auto___12778)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12777), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12777)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12774) {
    var t__10734__auto___12779 = e12774;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12779, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12780 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knocks"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__10697__auto___12781 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12780);
    if (cljs.core.truth_(result__10697__auto___12781)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12780), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12780)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12775) {
    var t__10734__auto___12782 = e12775;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12782, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, obs_action)), "knocks");
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
      223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
      223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12776) {
    var t__10734__auto__ = e12776;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
    223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_02.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_02;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-02", "tiltontec.cell.hello-cells-test/hw-02", -1923842247, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-02", "hw-02", -1769431692, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 54, 
54, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_02) ? tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_03 = function tiltontec$cell$hello_cells_test$hw_03() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_03.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test = function() {
  var action = cljs.core.atom.call(null, null);
  var obs_action = function(action) {
    return function(slot, me, new$, old, c) {
      cljs.core.reset_BANG_.call(null, action, new$);
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "observing", "observing", 1065333653), slot, new$, old);
    };
  }(action);
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  try {
    var values__10696__auto___12787 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__10697__auto___12788 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12787);
    if (cljs.core.truth_(result__10697__auto___12788)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12787), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12787)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12783) {
    var t__10734__auto___12789 = e12783;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12789, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12790 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, action));
    var result__10697__auto___12791 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12790);
    if (cljs.core.truth_(result__10697__auto___12791)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12790), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12790)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12784) {
    var t__10734__auto___12792 = e12784;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12792, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), "knock-knock");
  try {
    var values__10696__auto___12793 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, action)), "knock-knock");
    var result__10697__auto___12794 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12793);
    if (cljs.core.truth_(result__10697__auto___12794)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12793), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12793)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12785) {
    var t__10734__auto___12795 = e12785;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12795, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knock-knock"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12786) {
    var t__10734__auto__ = e12786;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_03.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_03;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-03", "tiltontec.cell.hello-cells-test/hw-03", -166136141, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-03", "hw-03", -237693708, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 68, 68, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_03) ? tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.gobs = function tiltontec$cell$hello_cells_test$gobs(slot, me, new$, old, c) {
  return cljs.core.println.call(null, new cljs.core.Keyword(null, "gobs\x3e", "gobs\x3e", 972099754), slot, new$, old);
};
tiltontec.cell.hello_cells_test.hw_04 = function tiltontec$cell$hello_cells_test$hw_04() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_04.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test = function() {
  var r_action = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "r-action", "r-action", -113870725), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.hello_cells_test.gobs);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "r-loc", "r-loc", 1040711343), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.hello_cells_test.gobs, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(r_action) {
    return function(c) {
      var G__12796 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__12796) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "at-home", "at-home", 1687350383);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(r_action));
  tiltontec.cell.evaluate.c_awaken.call(null, r_loc);
  try {
    var values__10696__auto___12800 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, r_loc))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__10697__auto___12801 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12800);
    if (cljs.core.truth_(result__10697__auto___12801)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12800), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12800)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    }
  } catch (e12797) {
    var t__10734__auto___12802 = e12797;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12802, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "---about-to-leave------------------", "---about-to-leave------------------", 511366567));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "---left------------------", "---left------------------", -1129059094));
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "away", "away", 1142420954));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12798) {
    var t__10734__auto__ = e12798;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
    "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_04.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_04;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-04", "tiltontec.cell.hello-cells-test/hw-04", -1022076846, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-04", "hw-04", -86409835, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 88, 88, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_04) ? tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_5 = function tiltontec$cell$hello_cells_test$hw_5() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_5.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    return cljs.core.println.call(null, slot, new$, old);
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__12803 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__12803) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":r-resp", new$);
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, 
  "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__12804 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__12804) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  try {
    var values__10696__auto___12809 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_response));
    var result__10697__auto___12810 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12809);
    if (cljs.core.truth_(result__10697__auto___12810)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12809), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12809)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12805) {
    var t__10734__auto___12811 = e12805;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12811, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12806) {
    var t__10734__auto__ = e12806;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
    "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_5.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_5;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-5", "tiltontec.cell.hello-cells-test/hw-5", -1695099335, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-5", "hw-5", -2093878022, null), "test/tiltontec/cell/hello_cells_test.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_5) ? tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hello_world = function tiltontec$cell$hello_cells_test$hello_world() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hello_world.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    return cljs.core.println.call(null, slot, new$, old);
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__12812 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__12812) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
  "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__12813 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__12813) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  try {
    var values__10696__auto___12818 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_response));
    var result__10697__auto___12819 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12818);
    if (cljs.core.truth_(result__10697__auto___12819)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12818), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12818)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12814) {
    var t__10734__auto___12820 = e12814;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12820, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__10696__auto___12821 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__10697__auto___12822 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12821);
    if (cljs.core.truth_(result__10697__auto___12822)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12821), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12821)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12815) {
    var t__10734__auto___12823 = e12815;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
    "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12823, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.cell.hello_cells_test.hello_world.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hello_world;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world", "tiltontec.cell.hello-cells-test/hello-world", -896604635, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world", "hello-world", 852100064, null), "test/tiltontec/cell/hello_cells_test.cljc", 
21, 1, 130, 130, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world) ? tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hello_world_2 = function tiltontec$cell$hello_cells_test$hello_world_2() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hello_world_2.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    if (cljs.core.truth_(new$)) {
      return tiltontec.util.base.call_trc.call(null, "visitor-did", new$);
    } else {
      return null;
    }
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__12824 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__12824) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
  "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__12825 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__12825) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  var alarm = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc, r_response) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":telling-alarm-api", new$);
    };
  }(obs_action, v, r_action, r_loc, r_response), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, 
  "off", "off", 606440789), new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc, r_response) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        return new cljs.core.Keyword(null, "off", "off", 606440789);
      } else {
        return new cljs.core.Keyword(null, "on", "on", 173873944);
      }
    };
  }(obs_action, v, r_action, r_loc, r_response));
  var alarm_do = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc, r_response, alarm) {
    return function(slot, me, new$, old, c) {
      var G__12826 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
      switch(G__12826) {
        case "call-police":
          return tiltontec.util.base.call_trc.call(null, ":auto-dialing-911");
          break;
        default:
          return null;
      }
    };
  }(obs_action, v, r_action, r_loc, r_response, alarm), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null))), cljs.core.list(new cljs.core.Symbol(null, 
  "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc, r_response, alarm) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "on", "on", 173873944), tiltontec.cell.evaluate.c_get.call(null, alarm))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var action = temp__4425__auto__;
          var G__12827 = action instanceof cljs.core.Keyword ? action.fqn : null;
          switch(G__12827) {
            case "smashing-window":
              return new cljs.core.Keyword(null, "call-police", "call-police", -2114689981);
              break;
            default:
              return null;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc, r_response, alarm));
  tiltontec.cell.evaluate.c_awaken.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [alarm_do, r_response, r_loc, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)], null));
  try {
    var values__10696__auto___12834 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, r_loc))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__10697__auto___12835 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12834);
    if (cljs.core.truth_(result__10697__auto___12835)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12834), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12834)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    }
  } catch (e12828) {
    var t__10734__auto___12836 = e12828;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12836, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__10696__auto___12837 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__10697__auto___12838 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12837);
    if (cljs.core.truth_(result__10697__auto___12838)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12837), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12837)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12829) {
    var t__10734__auto___12839 = e12829;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
    "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12839, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hello_world_2;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world-2", "tiltontec.cell.hello-cells-test/hello-world-2", 1570168257, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world-2", "hello-world-2", 1439841158, null), "test/tiltontec/cell/hello_cells_test.cljc", 
23, 1, 157, 157, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world_2) ? tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env12840 = cljs.test.empty_env.call(null);
  var summary12841 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12840, summary12841) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12840);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10801__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12840, summary12841) {
          return function() {
            if (env__10801__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10801__auto__, env12840, summary12841)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_01;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-01", "tiltontec.cell.hello-cells-test/hw-01", -1914102464, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-01", "hw-01", -198427897, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 42, 42, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_01) ? tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_02;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-02", "tiltontec.cell.hello-cells-test/hw-02", -1923842247, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-02", "hw-02", -1769431692, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 54, 54, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_02) ? tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_03;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-03", "tiltontec.cell.hello-cells-test/hw-03", -166136141, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-03", "hw-03", -237693708, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 68, 68, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_03) ? tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_04;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-04", "tiltontec.cell.hello-cells-test/hw-04", -1022076846, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-04", "hw-04", -86409835, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 88, 88, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_04) ? tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_5;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-5", "tiltontec.cell.hello-cells-test/hw-5", -1695099335, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-5", "hw-5", -2093878022, null), "test/tiltontec/cell/hello_cells_test.cljc", 14, 1, 
        107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_5) ? tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hello_world;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world", "tiltontec.cell.hello-cells-test/hello-world", -896604635, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world", "hello-world", 852100064, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        21, 1, 130, 130, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world) ? tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hello_world_2;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world-2", "tiltontec.cell.hello-cells-test/hello-world-2", 1570168257, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world-2", "hello-world-2", 1439841158, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        23, 1, 157, 157, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world_2) ? tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12840, summary12841) {
          return function() {
            if (env__10801__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10801__auto__, env12840, summary12841)], null));
      }());
    };
  }(env12840, summary12841), function(env12840, summary12841) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env12840, summary12841)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12840, summary12841) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary12841, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary12841), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env12840, summary12841)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12840, summary12841) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12840);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary12841));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary12841), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env12840, summary12841)], null));
}());
goog.provide("tiltontec.util.core_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
tiltontec.util.core_test.fake_cl = function tiltontec$util$core_test$fake_cl() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fake_cl.cljs$lang$var);
};
tiltontec.util.core_test.fake_cl.cljs$lang$test = function() {
  try {
    var values__10696__auto___12852 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var result__6575__auto__ = 42;
      return result__6575__auto__;
    }()), 42);
    var result__10697__auto___12853 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12852);
    if (cljs.core.truth_(result__10697__auto___12853)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__10696__auto___12852), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12852)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12844) {
    var t__10734__auto___12854 = e12844;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12854, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12855 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var temp__4425__auto__ = 21 + 21;
      if (cljs.core.truth_(temp__4425__auto__)) {
        var x = temp__4425__auto__;
        return x;
      } else {
        return null;
      }
    }()), 42);
    var result__10697__auto___12856 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12855);
    if (cljs.core.truth_(result__10697__auto___12856)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
      "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12855), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
      "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12855)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12845) {
    var t__10734__auto___12857 = e12845;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
    "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12857, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12858 = cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var temp__4425__auto__ = false;
      if (temp__4425__auto__) {
        var x = temp__4425__auto__;
        return 42;
      } else {
        return null;
      }
    }());
    var result__10697__auto___12859 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12858);
    if (cljs.core.truth_(result__10697__auto___12859)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12858), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12858)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12846) {
    var t__10734__auto___12860 = e12846;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12860, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12861 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(41, 42, 43))), 42);
    var result__10697__auto___12862 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12861);
    if (cljs.core.truth_(result__10697__auto___12862)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12861), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12861)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12847) {
    var t__10734__auto___12863 = e12847;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12863, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12864 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(42, 43, 44))), 42);
    var result__10697__auto___12865 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12864);
    if (cljs.core.truth_(result__10697__auto___12865)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12864), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12864)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12848) {
    var t__10734__auto___12866 = e12848;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12866, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12867 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(40, 41, 42))), 42);
    var result__10697__auto___12868 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12867);
    if (cljs.core.truth_(result__10697__auto___12868)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12867), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12867)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12849) {
    var t__10734__auto___12869 = e12849;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12869, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12870 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._EQ_.call(null, 2, 3) ? null : function() {
      return 42;
    }()), 42);
    var result__10697__auto___12871 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12870);
    if (cljs.core.truth_(result__10697__auto___12871)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
      2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12870), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
      2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12870)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12850) {
    var t__10734__auto___12872 = e12850;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
    2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12872, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._EQ_.call(null, 2, 2) ? null : function() {
      return 42;
    }());
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 
      2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 
      2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12851) {
    var t__10734__auto__ = e12851;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
    2, 2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fake_cl.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fake_cl;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fake-cl", "tiltontec.util.core-test/fake-cl", -187163971, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fake-cl", "fake-cl", -506046351, null), "test/tiltontec/util/core_test.cljc", 17, 1, 22, 22, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fake_cl) ? 
tiltontec.util.core_test.fake_cl.cljs$lang$test : null]));
tiltontec.util.core_test.setify = function tiltontec$util$core_test$setify() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$setify.cljs$lang$var);
};
tiltontec.util.core_test.setify.cljs$lang$test = function() {
  try {
    var values__10696__auto___12880 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null));
    var result__10697__auto___12881 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12880);
    if (cljs.core.truth_(result__10697__auto___12881)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12880), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12880)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e12873) {
    var t__10734__auto___12882 = e12873;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12882, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12883 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 3), 2), 2), 1), 1))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null));
    var result__10697__auto___12884 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12883);
    if (cljs.core.truth_(result__10697__auto___12884)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12883), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12883)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", 
      "message", -406056002), null], null));
    }
  } catch (e12874) {
    var t__10734__auto___12885 = e12874;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12885, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12886 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, null)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12887 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12886);
    if (cljs.core.truth_(result__10697__auto___12887)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12886), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12886)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12875) {
    var t__10734__auto___12888 = e12875;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__10734__auto___12888, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12889 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, 42)), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null));
    var result__10697__auto___12890 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12889);
    if (cljs.core.truth_(result__10697__auto___12890)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12889), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12889)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12876) {
    var t__10734__auto___12891 = e12876;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
    174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12891, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12892 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, "bob")), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null));
    var result__10697__auto___12893 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12892);
    if (cljs.core.truth_(result__10697__auto___12893)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12892), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12892)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12877) {
    var t__10734__auto___12894 = e12877;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
    174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12894, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12895 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true));
    var result__10697__auto___12896 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12895);
    if (cljs.core.truth_(result__10697__auto___12896)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12895), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12895)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", 
      "message", -406056002), null], null));
    }
  } catch (e12878) {
    var t__10734__auto___12897 = e12878;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12897, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, clojure.set.difference.call(null, tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), tiltontec.util.core.set_ify.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), 1)))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], 
    null), null));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
      "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
      "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12879) {
    var t__10734__auto__ = e12879;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
    "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.setify.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.setify;
}, new cljs.core.Symbol("tiltontec.util.core-test", "setify", "tiltontec.util.core-test/setify", -128931653, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "setify", "setify", 86404727, null), "test/tiltontec/util/core_test.cljc", 16, 1, 36, 36, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.setify) ? 
tiltontec.util.core_test.setify.cljs$lang$test : null]));
tiltontec.util.core_test.jj_boom = function tiltontec$util$core_test$jj_boom(ref) {
  return (new cljs.core.Keyword(null, "boom", "boom", 984913816)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.util.core_test.test_rmap = function tiltontec$util$core_test$test_rmap() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$test_rmap.cljs$lang$var);
};
tiltontec.util.core_test.test_rmap.cljs$lang$test = function() {
  var x = tiltontec.util.core.ia_ref.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), 0, new cljs.core.Keyword(null, "boom", "boom", 984913816), 42], null));
  try {
    var values__10696__auto___12903 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core_test.jj_boom.call(null, x)), 42);
    var result__10697__auto___12904 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12903);
    if (cljs.core.truth_(result__10697__auto___12904)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12903), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12903)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12898) {
    var t__10734__auto___12905 = e12898;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12905, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12906 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 0);
    var result__10697__auto___12907 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12906);
    if (cljs.core.truth_(result__10697__auto___12907)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12906), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12906)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12899) {
    var t__10734__auto___12908 = e12899;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12908, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 42);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "xxx", "xxx", -1019301908), x, cljs.core.deref.call(null, x), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x)));
  try {
    var values__10696__auto___12909 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 42);
    var result__10697__auto___12910 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12909);
    if (cljs.core.truth_(result__10697__auto___12910)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12909), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12909)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12900) {
    var t__10734__auto___12911 = e12900;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12911, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__10699__auto___12912 = function() {
      var j = tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 43);
      return cljs.core._EQ_.call(null, 43, j);
    }();
    if (value__10699__auto___12912) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
      "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__10699__auto___12912, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
      "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__10699__auto___12912, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12901) {
    var t__10734__auto___12913 = e12901;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
    "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12913, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 44)), 44);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12902) {
    var t__10734__auto__ = e12902;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.test_rmap.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.test_rmap;
}, new cljs.core.Symbol("tiltontec.util.core-test", "test-rmap", "tiltontec.util.core-test/test-rmap", 589953074, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "test-rmap", "test-rmap", 786413294, null), "test/tiltontec/util/core_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.test_rmap) ? tiltontec.util.core_test.test_rmap.cljs$lang$test : null]));
tiltontec.util.core_test.err_handling = function tiltontec$util$core_test$err_handling() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$err_handling.cljs$lang$var);
};
tiltontec.util.core_test.err_handling.cljs$lang$test = function() {
  try {
    try {
      tiltontec.util.core.err.call(null, "boom");
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e12915) {
      if (e12915 instanceof Error) {
        var e__10723__auto___12930 = e12915;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), e__10723__auto___12930, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        throw e12915;
      }
    }
  } catch (e12914) {
    var t__10734__auto___12931 = e12914;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12931, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    try {
      tiltontec.util.core.err.call(null, "boom");
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
      null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e12917) {
      if (e12917 instanceof Error) {
        var e__10728__auto___12932 = e12917;
        var m__10729__auto___12933 = e__10728__auto___12932.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /oom/, m__10729__auto___12933))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__10728__auto___12932, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__10728__auto___12932, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } else {
        throw e12917;
      }
    }
  } catch (e12916) {
    var t__10734__auto___12934 = e12916;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
    null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12934, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    try {
      tiltontec.util.core.err.call(null, cljs.core.str, "Hi ", new cljs.core.Symbol(null, "mom", "mom", 320137679, null));
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
      null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e12919) {
      if (e12919 instanceof Error) {
        var e__10728__auto___12935 = e12919;
        var m__10729__auto___12936 = e__10728__auto___12935.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Hi mom/, m__10729__auto___12936))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__10728__auto___12935, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__10728__auto___12935, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } else {
        throw e12919;
      }
    }
  } catch (e12918) {
    var t__10734__auto___12937 = e12918;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
    null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12937, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12938 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.any_ref_QMARK_.call(null, null));
    var result__10697__auto___12939 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12938);
    if (cljs.core.truth_(result__10697__auto___12939)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core.not, values__10696__auto___12938), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12938)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12920) {
    var t__10734__auto___12940 = e12920;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12940, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12941 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.any_ref_QMARK_.call(null, 42));
    var result__10697__auto___12942 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12941);
    if (cljs.core.truth_(result__10697__auto___12942)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core.not, values__10696__auto___12941), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12941)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12921) {
    var t__10734__auto___12943 = e12921;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12943, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12944 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.any_ref_QMARK_.call(null, cljs.core.PersistentVector.EMPTY));
    var result__10697__auto___12945 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12944);
    if (cljs.core.truth_(result__10697__auto___12945)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12944), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12944)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12922) {
    var t__10734__auto___12946 = e12922;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__10734__auto___12946, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12947 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var sb__5509__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR_12924_12949 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR_12925_12950 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = true;
      cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_12924_12949, _STAR_print_fn_STAR_12925_12950, sb__5509__auto__) {
        return function(x__5510__auto__) {
          return sb__5509__auto__.append(x__5510__auto__);
        };
      }(_STAR_print_newline_STAR_12924_12949, _STAR_print_fn_STAR_12925_12950, sb__5509__auto__);
      try {
        var _STAR_trxdepth_STAR_12926_12951 = tiltontec.util.base._STAR_trxdepth_STAR_;
        tiltontec.util.base._STAR_trxdepth_STAR_ = 5;
        try {
          tiltontec.util.base.call_wtrx.call(null, function(_STAR_trxdepth_STAR_12926_12951, _STAR_print_newline_STAR_12924_12949, _STAR_print_fn_STAR_12925_12950, sb__5509__auto__) {
            return function() {
              return cljs.core.println.call(null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
            };
          }(_STAR_trxdepth_STAR_12926_12951, _STAR_print_newline_STAR_12924_12949, _STAR_print_fn_STAR_12925_12950, sb__5509__auto__), 0, 100, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 2), 1), "cool"));
        } finally {
          tiltontec.util.base._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_12926_12951;
        }
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_12925_12950;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_12924_12949;
      }
      return [cljs.core.str(sb__5509__auto__)].join("");
    }()), "...... cool: 1, 2, 3\n:bingo\n");
    var result__10697__auto___12948 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12947);
    if (cljs.core.truth_(result__10697__auto___12948)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12947), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12947)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12923) {
    var t__10734__auto___12952 = e12923;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
    "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12952, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var sb__5509__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR_12928_12953 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR_12929_12954 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = true;
      cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_12928_12953, _STAR_print_fn_STAR_12929_12954, sb__5509__auto__) {
        return function(x__5510__auto__) {
          return sb__5509__auto__.append(x__5510__auto__);
        };
      }(_STAR_print_newline_STAR_12928_12953, _STAR_print_fn_STAR_12929_12954, sb__5509__auto__);
      try {
        tiltontec.util.core.wtrx_test.call(null, 3);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_12929_12954;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_12928_12953;
      }
      return [cljs.core.str(sb__5509__auto__)].join("");
    }()), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n");
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12927) {
    var t__10734__auto__ = e12927;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
    "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.err_handling.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.err_handling;
}, new cljs.core.Symbol("tiltontec.util.core-test", "err-handling", "tiltontec.util.core-test/err-handling", 432282689, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "err-handling", "err-handling", 751948053, null), "test/tiltontec/util/core_test.cljc", 22, 1, 64, 64, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.err_handling) ? tiltontec.util.core_test.err_handling.cljs$lang$test : null]));
tiltontec.util.core_test.fifo_build = function tiltontec$util$core_test$fifo_build() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fifo_build.cljs$lang$var);
};
tiltontec.util.core_test.fifo_build.cljs$lang$test = function() {
  var q = tiltontec.util.core.make_fifo_queue.call(null);
  try {
    var values__10696__auto___12968 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__10697__auto___12969 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__10696__auto___12968);
    if (cljs.core.truth_(result__10697__auto___12969)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__10696__auto___12968), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__10696__auto___12968)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12955) {
    var t__10734__auto___12970 = e12955;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12970, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12971 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q));
    var result__10697__auto___12972 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12971);
    if (cljs.core.truth_(result__10697__auto___12972)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12971), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12971)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12956) {
    var t__10734__auto___12973 = e12956;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12973, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12974 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q));
    var result__10697__auto___12975 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12974);
    if (cljs.core.truth_(result__10697__auto___12975)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12974), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12974)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12957) {
    var t__10734__auto___12976 = e12957;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12976, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12977 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_data.call(null, q));
    var result__10697__auto___12978 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__10696__auto___12977);
    if (cljs.core.truth_(result__10697__auto___12978)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__10696__auto___12977), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__10696__auto___12977)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12958) {
    var t__10734__auto___12979 = e12958;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12979, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  try {
    var values__10696__auto___12980 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__10697__auto___12981 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12980);
    if (cljs.core.truth_(result__10697__auto___12981)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12980), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12980)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12959) {
    var t__10734__auto___12982 = e12959;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12982, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12983 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__10697__auto___12984 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12983);
    if (cljs.core.truth_(result__10697__auto___12984)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12983), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12983)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12960) {
    var t__10734__auto___12985 = e12960;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12985, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12986 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__10697__auto___12987 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12986);
    if (cljs.core.truth_(result__10697__auto___12987)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12986), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12986)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12961) {
    var t__10734__auto___12988 = e12961;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12988, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12989 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__10697__auto___12990 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__10696__auto___12989);
    if (cljs.core.truth_(result__10697__auto___12990)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__10696__auto___12989), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__10696__auto___12989)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12962) {
    var t__10734__auto___12991 = e12962;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12991, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  tiltontec.util.core.fifo_add.call(null, q, 2);
  try {
    var values__10696__auto___12992 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__10697__auto___12993 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12992);
    if (cljs.core.truth_(result__10697__auto___12993)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12992), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12992)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12963) {
    var t__10734__auto___12994 = e12963;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12994, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12995 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__10697__auto___12996 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12995);
    if (cljs.core.truth_(result__10697__auto___12996)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12995), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12995)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12964) {
    var t__10734__auto___12997 = e12964;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12997, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12998 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__10697__auto___12999 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12998);
    if (cljs.core.truth_(result__10697__auto___12999)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12998), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12998)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12965) {
    var t__10734__auto___13000 = e12965;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13000, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13001 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 2);
    var result__10697__auto___13002 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13001);
    if (cljs.core.truth_(result__10697__auto___13002)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13001), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13001)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12966) {
    var t__10734__auto___13003 = e12966;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13003, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__10697__auto__ = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12967) {
    var t__10734__auto__ = e12967;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fifo_build.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fifo_build;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build", "tiltontec.util.core-test/fifo-build", 1265681264, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build", "fifo-build", 1577255980, null), "test/tiltontec/util/core_test.cljc", 20, 1, 89, 89, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.fifo_build) ? tiltontec.util.core_test.fifo_build.cljs$lang$test : null]));
tiltontec.util.core_test.fifo_build_test = function tiltontec$util$core_test$fifo_build_test() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fifo_build_test.cljs$lang$var);
};
tiltontec.util.core_test.fifo_build_test.cljs$lang$test = function() {
  var q = tiltontec.util.core.make_fifo_queue.call(null);
  try {
    var values__10696__auto___13017 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__10697__auto___13018 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__10696__auto___13017);
    if (cljs.core.truth_(result__10697__auto___13018)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__10696__auto___13017), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__10696__auto___13017)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13004) {
    var t__10734__auto___13019 = e13004;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13019, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13020 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q));
    var result__10697__auto___13021 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___13020);
    if (cljs.core.truth_(result__10697__auto___13021)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___13020), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___13020)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13005) {
    var t__10734__auto___13022 = e13005;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13022, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13023 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q));
    var result__10697__auto___13024 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___13023);
    if (cljs.core.truth_(result__10697__auto___13024)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___13023), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___13023)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13006) {
    var t__10734__auto___13025 = e13006;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13025, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13026 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_data.call(null, q));
    var result__10697__auto___13027 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__10696__auto___13026);
    if (cljs.core.truth_(result__10697__auto___13027)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__10696__auto___13026), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__10696__auto___13026)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13007) {
    var t__10734__auto___13028 = e13007;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13028, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  try {
    var values__10696__auto___13029 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__10697__auto___13030 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___13029);
    if (cljs.core.truth_(result__10697__auto___13030)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___13029), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___13029)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13008) {
    var t__10734__auto___13031 = e13008;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13031, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13032 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__10697__auto___13033 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13032);
    if (cljs.core.truth_(result__10697__auto___13033)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13032), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13032)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13009) {
    var t__10734__auto___13034 = e13009;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13034, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13035 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__10697__auto___13036 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13035);
    if (cljs.core.truth_(result__10697__auto___13036)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13035), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13035)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13010) {
    var t__10734__auto___13037 = e13010;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13037, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13038 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__10697__auto___13039 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__10696__auto___13038);
    if (cljs.core.truth_(result__10697__auto___13039)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__10696__auto___13038), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__10696__auto___13038)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13011) {
    var t__10734__auto___13040 = e13011;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___13040, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  tiltontec.util.core.fifo_add.call(null, q, 2);
  try {
    var values__10696__auto___13041 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__10697__auto___13042 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___13041);
    if (cljs.core.truth_(result__10697__auto___13042)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___13041), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___13041)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13012) {
    var t__10734__auto___13043 = e13012;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13043, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13044 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__10697__auto___13045 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13044);
    if (cljs.core.truth_(result__10697__auto___13045)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13044), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13044)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13013) {
    var t__10734__auto___13046 = e13013;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13046, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13047 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__10697__auto___13048 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13047);
    if (cljs.core.truth_(result__10697__auto___13048)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13047), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13047)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13014) {
    var t__10734__auto___13049 = e13014;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13049, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___13050 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 2);
    var result__10697__auto___13051 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___13050);
    if (cljs.core.truth_(result__10697__auto___13051)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___13050), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___13050)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e13015) {
    var t__10734__auto___13052 = e13015;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___13052, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__10697__auto__ = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e13016) {
    var t__10734__auto__ = e13016;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fifo_build_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fifo_build_test;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build-test", "tiltontec.util.core-test/fifo-build-test", 1967563513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build-test", "fifo-build-test", 1616174349, null), "test/tiltontec/util/core_test.cljc", 25, 1, 111, 111, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build_test) ? tiltontec.util.core_test.fifo_build_test.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env13053 = cljs.test.empty_env.call(null);
  var summary13054 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13053, summary13054) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env13053);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10801__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env13053, summary13054) {
          return function() {
            if (env__10801__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10801__auto__, env13053, summary13054)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.util.core_test.fake_cl;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fake-cl", "tiltontec.util.core-test/fake-cl", -187163971, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fake-cl", "fake-cl", -506046351, null), "test/tiltontec/util/core_test.cljc", 17, 1, 22, 22, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.fake_cl) ? tiltontec.util.core_test.fake_cl.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.setify;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "setify", "tiltontec.util.core-test/setify", -128931653, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "setify", "setify", 86404727, null), "test/tiltontec/util/core_test.cljc", 16, 1, 36, 36, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.setify) ? tiltontec.util.core_test.setify.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.test_rmap;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "test-rmap", "tiltontec.util.core-test/test-rmap", 589953074, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "test-rmap", "test-rmap", 786413294, null), "test/tiltontec/util/core_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.test_rmap) ? tiltontec.util.core_test.test_rmap.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.err_handling;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "err-handling", "tiltontec.util.core-test/err-handling", 432282689, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "err-handling", "err-handling", 751948053, null), "test/tiltontec/util/core_test.cljc", 22, 1, 64, 64, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.err_handling) ? tiltontec.util.core_test.err_handling.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.fifo_build;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build", "tiltontec.util.core-test/fifo-build", 1265681264, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build", "fifo-build", 1577255980, null), "test/tiltontec/util/core_test.cljc", 20, 1, 89, 89, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build) ? tiltontec.util.core_test.fifo_build.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.fifo_build_test;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build-test", "tiltontec.util.core-test/fifo-build-test", 1967563513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build-test", "fifo-build-test", 1616174349, null), "test/tiltontec/util/core_test.cljc", 
        25, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build_test) ? tiltontec.util.core_test.fifo_build_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env13053, summary13054) {
          return function() {
            if (env__10801__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10801__auto__, env13053, summary13054)], null));
      }());
    };
  }(env13053, summary13054), function(env13053, summary13054) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env13053, summary13054)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13053, summary13054) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary13054, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary13054), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env13053, summary13054)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13053, summary13054) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env13053);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary13054));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary13054), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env13053, summary13054)], null));
}());
goog.provide("tiltontec.qxia.types");
goog.require("cljs.core");
goog.require("tiltontec.cell.base");
tiltontec.qxia.types.qx_type_tree = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225), new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724), new cljs.core.Keyword("tiltontec.qxia.types", "m.DialogManager", "tiltontec.qxia.types/m.DialogManager", 
1877638749), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "Application", "tiltontec.qxia.types/Application", 1827091049), new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "ml.Abstract", "tiltontec.qxia.types/ml.Abstract", -80525119), 
new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "ml.AbstractBox", "tiltontec.qxia.types/ml.AbstractBox", -448932332), new cljs.core.Keyword("tiltontec.qxia.types", "ml.HBox", "tiltontec.qxia.types/ml.HBox", -1665012713), new cljs.core.Keyword("tiltontec.qxia.types", "ml.VBox", "tiltontec.qxia.types/ml.VBox", -1184375499)], null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword("tiltontec.qxia.types", "mWidget", "tiltontec.qxia.types/mWidget", 1692474345), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword("tiltontec.qxia.types", "m.Image", "tiltontec.qxia.types/m.Image", 336928926), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword("tiltontec.qxia.types", 
"m.Button", "tiltontec.qxia.types/m.Button", -668586230)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Input", "tiltontec.qxia.types/m.Input", -509810846), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.TextField", "tiltontec.qxia.types/m.TextField", 1587442644), new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", 
"tiltontec.qxia.types/m.PasswordField", -1705460348)], null)], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword("tiltontec.qxia.types", "m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516), new cljs.core.Keyword("tiltontec.qxia.types", "m.Drawer", "tiltontec.qxia.types/m.Drawer", -1699090239), new cljs.core.Keyword("tiltontec.qxia.types", 
"m.Collapsible", "tiltontec.qxia.types/m.Collapsible", -561923066), new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Page", "tiltontec.qxia.types/m.Page", 978557493), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995)], null)], null)], null)], 
null);
tiltontec.qxia.types.ensure_vec = function tiltontec$qxia$types$ensure_vec(x) {
  if (cljs.core.coll_QMARK_.call(null, x)) {
    return cljs.core.vec.call(null, x);
  } else {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
  }
};
tiltontec.qxia.types.derive_tree = function tiltontec$qxia$types$derive_tree(super$, tree) {
  var vec__10997 = tiltontec.qxia.types.ensure_vec.call(null, tree);
  var class$ = cljs.core.nth.call(null, vec__10997, 0, null);
  var subs = cljs.core.nthnext.call(null, vec__10997, 1);
  if (cljs.core.truth_(super$)) {
    tiltontec.cell.base.ia_types = cljs.core.derive.call(null, tiltontec.cell.base.ia_types, class$, super$);
  } else {
  }
  var seq__10998 = cljs.core.seq.call(null, subs);
  var chunk__10999 = null;
  var count__11000 = 0;
  var i__11001 = 0;
  while (true) {
    if (i__11001 < count__11000) {
      var sub = cljs.core._nth.call(null, chunk__10999, i__11001);
      tiltontec$qxia$types$derive_tree.call(null, class$, sub);
      var G__11002 = seq__10998;
      var G__11003 = chunk__10999;
      var G__11004 = count__11000;
      var G__11005 = i__11001 + 1;
      seq__10998 = G__11002;
      chunk__10999 = G__11003;
      count__11000 = G__11004;
      i__11001 = G__11005;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__10998);
      if (temp__4425__auto__) {
        var seq__10998__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10998__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__10998__$1);
          var G__11006 = cljs.core.chunk_rest.call(null, seq__10998__$1);
          var G__11007 = c__5338__auto__;
          var G__11008 = cljs.core.count.call(null, c__5338__auto__);
          var G__11009 = 0;
          seq__10998 = G__11006;
          chunk__10999 = G__11007;
          count__11000 = G__11008;
          i__11001 = G__11009;
          continue;
        } else {
          var sub = cljs.core.first.call(null, seq__10998__$1);
          tiltontec$qxia$types$derive_tree.call(null, class$, sub);
          var G__11010 = cljs.core.next.call(null, seq__10998__$1);
          var G__11011 = null;
          var G__11012 = 0;
          var G__11013 = 0;
          seq__10998 = G__11010;
          chunk__10999 = G__11011;
          count__11000 = G__11012;
          i__11001 = G__11013;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
tiltontec.qxia.types.derive_tree.call(null, null, tiltontec.qxia.types.qx_type_tree);
var seq__11014_11018 = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516)], null));
var chunk__11015_11019 = null;
var count__11016_11020 = 0;
var i__11017_11021 = 0;
while (true) {
  if (i__11017_11021 < count__11016_11020) {
    var ctype_11022 = cljs.core._nth.call(null, chunk__11015_11019, i__11017_11021);
    tiltontec.cell.base.ia_types = cljs.core.derive.call(null, tiltontec.cell.base.ia_types, ctype_11022, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163));
    var G__11023 = seq__11014_11018;
    var G__11024 = chunk__11015_11019;
    var G__11025 = count__11016_11020;
    var G__11026 = i__11017_11021 + 1;
    seq__11014_11018 = G__11023;
    chunk__11015_11019 = G__11024;
    count__11016_11020 = G__11025;
    i__11017_11021 = G__11026;
    continue;
  } else {
    var temp__4425__auto___11027 = cljs.core.seq.call(null, seq__11014_11018);
    if (temp__4425__auto___11027) {
      var seq__11014_11028__$1 = temp__4425__auto___11027;
      if (cljs.core.chunked_seq_QMARK_.call(null, seq__11014_11028__$1)) {
        var c__5338__auto___11029 = cljs.core.chunk_first.call(null, seq__11014_11028__$1);
        var G__11030 = cljs.core.chunk_rest.call(null, seq__11014_11028__$1);
        var G__11031 = c__5338__auto___11029;
        var G__11032 = cljs.core.count.call(null, c__5338__auto___11029);
        var G__11033 = 0;
        seq__11014_11018 = G__11030;
        chunk__11015_11019 = G__11031;
        count__11016_11020 = G__11032;
        i__11017_11021 = G__11033;
        continue;
      } else {
        var ctype_11034 = cljs.core.first.call(null, seq__11014_11028__$1);
        tiltontec.cell.base.ia_types = cljs.core.derive.call(null, tiltontec.cell.base.ia_types, ctype_11034, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163));
        var G__11035 = cljs.core.next.call(null, seq__11014_11028__$1);
        var G__11036 = null;
        var G__11037 = 0;
        var G__11038 = 0;
        seq__11014_11018 = G__11035;
        chunk__11015_11019 = G__11036;
        count__11016_11020 = G__11037;
        i__11017_11021 = G__11038;
        continue;
      }
    } else {
    }
  }
  break;
}
;goog.provide("tiltontec.qxia.base");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.util.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.model.base");
goog.require("tiltontec.model.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
tiltontec.qxia.base.qxme = function tiltontec$qxia$base$qxme(me) {
  return (new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
};
cljs.core.enable_console_print_BANG_.call(null);
tiltontec.qxia.base.app_routing = function tiltontec$qxia$base$app_routing() {
  var app = qx.core.Init.getApplication();
  cljs.core.println.call(null, new cljs.core.Keyword(null, "app!!!!!!!!!!!", "app!!!!!!!!!!!", -1475663645), app);
  if (cljs.core.truth_(app)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("app touyign"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "app", "app", 1079569820, null)))].join(""));
  }
  return app.getRouting();
};
tiltontec.qxia.base.qxia_type_to_qx_class = function tiltontec$qxia$base$qxia_type_to_qx_class(type) {
  var G__11516 = type instanceof cljs.core.Keyword ? type.fqn : null;
  switch(G__11516) {
    case "tiltontec.qxia.types/m.Picker":
      return qx.ui.mobile.control.Picker;
      break;
    case "tiltontec.qxia.types/m.PasswordField":
      return qx.ui.mobile.form.PasswordField;
      break;
    case "tiltontec.qxia.types/Mobile":
      return qx.application.Mobile;
      break;
    case "tiltontec.qxia.types/m.Button":
      return qx.ui.mobile.form.Button;
      break;
    case "tiltontec.qxia.types/m.Atom":
      return qx.ui.mobile.basic.Atom;
      break;
    case "tiltontec.qxia.types/m.Carousel":
      return qx.ui.mobile.container.Carousel;
      break;
    case "tiltontec.qxia.types/m.Label":
      return qx.ui.mobile.basic.Label;
      break;
    case "tiltontec.qxia.types/m.TextField":
      return qx.ui.mobile.form.TextField;
      break;
    case "tiltontec.qxia.types/ml.VBox":
      return qx.ui.mobile.layout.VBox;
      break;
    case "tiltontec.qxia.types/m.NavigationPage":
      return identica.NaviBack;
      break;
    case "tiltontec.qxia.types/ml.HBox":
      return qx.ui.mobile.layout.HBox;
      break;
    case "tiltontec.qxia.types/m.Form":
      return qx.ui.mobile.form.Form;
      break;
    case "tiltontec.qxia.types/m.Composite":
      return qx.ui.mobile.container.Composite;
      break;
    case "tiltontec.qxia.types/m.Single":
      return qx.ui.mobile.form.renderer.Single;
      break;
    case "tiltontec.qxia.types/m.Image":
      return qx.ui.mobile.basic.Image;
      break;
    default:
      throw new Error([cljs.core.str("qxia-type-to-qx-class does not know about "), cljs.core.str(type)].join(""));;
  }
};
tiltontec.qxia.base.qx_class_new = function tiltontec$qxia$base$qx_class_new(type, iargs) {
  var G__11519 = type instanceof cljs.core.Keyword ? type.fqn : null;
  switch(G__11519) {
    case "tiltontec.qxia.types/Mobile":
      return null;
      break;
    case "tiltontec.qxia.types/m.Single":
      return null;
      break;
    default:
      var temp__4423__auto__ = function() {
        var or__4554__auto__ = cljs.core.contains_QMARK_.call(null, iargs, new cljs.core.Keyword(null, "qx-class", "qx-class", 701821141)) ? function() {
          var qx_class = (new cljs.core.Keyword(null, "qx-class", "qx-class", 701821141)).cljs$core$IFn$_invoke$arity$1(iargs);
          if (cljs.core.truth_(qx_class)) {
          } else {
            cljs.core.println.call(null, [cljs.core.str("ERROR! qx-class-new\x3e key class specified but nil "), cljs.core.str("Do we need a new qx class mention in Application.")].join(""));
            throw Error;
          }
          return qx_class;
        }() : null;
        if (cljs.core.truth_(or__4554__auto__)) {
          return or__4554__auto__;
        } else {
          return tiltontec.qxia.base.qxia_type_to_qx_class.call(null, type);
        }
      }();
      if (cljs.core.truth_(temp__4423__auto__)) {
        var qx_class = temp__4423__auto__;
        return cljs.core.apply.call(null, MyTerop.make, qx_class, (new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)).cljs$core$IFn$_invoke$arity$1(iargs));
      } else {
        throw new Error([cljs.core.str("qx-class-new does not know about "), cljs.core.str(type)].join(""));
      }
    ;
  }
};
cljs.core._add_method.call(null, tiltontec.model.base.md_awaken_before, new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520), function(me) {
  if (cljs.core.truth_(tiltontec.qxia.base.qxia_type_to_qx_class.call(null, tiltontec.cell.base.ia_type.call(null, me)))) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "0-make-qx", "0-make-qx", 1229540278), me], null), function(opcode, defer_info) {
      if (tiltontec.qxia.base.qxme.call(null, me) == null) {
        cljs.core.swap_BANG_.call(null, me, cljs.core.assoc, new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), tiltontec.qxia.base.qx_class_new.call(null, tiltontec.cell.base.ia_type.call(null, me), cljs.core.deref.call(null, me)));
      } else {
      }
      tiltontec.qxia.base.qx_initialize.call(null, me);
      return tiltontec.qxia.base.qx_initialize_all.call(null, me);
    });
  } else {
    return null;
  }
});
tiltontec.qxia.base._PLUS_qxl_client_task_priority_PLUS_ = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "0-make-qx", "0-make-qx", 1229540278), new cljs.core.Keyword(null, "1-layout", "1-layout", 603251836), new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), new cljs.core.Keyword(null, "3-post-assembly", "3-post-assembly", -607469254)], null);
tiltontec.qxia.base.qxia_q_handler = function tiltontec$qxia$base$qxia_q_handler(user_q) {
  var seq__11535_11549 = cljs.core.seq.call(null, cljs.core.reverse.call(null, tiltontec.util.core.fifo_data.call(null, user_q)));
  var chunk__11536_11550 = null;
  var count__11537_11551 = 0;
  var i__11538_11552 = 0;
  while (true) {
    if (i__11538_11552 < count__11537_11551) {
      var vec__11539_11553 = cljs.core._nth.call(null, chunk__11536_11550, i__11538_11552);
      var vec__11540_11554 = cljs.core.nth.call(null, vec__11539_11553, 0, null);
      var qx_defer_code_11555 = cljs.core.nth.call(null, vec__11540_11554, 0, null);
      var me_11556 = cljs.core.nth.call(null, vec__11540_11554, 1, null);
      var task_11557 = cljs.core.nth.call(null, vec__11539_11553, 1, null);
      if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([qx_defer_code_11555], true), tiltontec.qxia.base._PLUS_qxl_client_task_priority_PLUS_))) {
      } else {
        throw Error;
      }
      var G__11558 = seq__11535_11549;
      var G__11559 = chunk__11536_11550;
      var G__11560 = count__11537_11551;
      var G__11561 = i__11538_11552 + 1;
      seq__11535_11549 = G__11558;
      chunk__11536_11550 = G__11559;
      count__11537_11551 = G__11560;
      i__11538_11552 = G__11561;
      continue;
    } else {
      var temp__4425__auto___11562 = cljs.core.seq.call(null, seq__11535_11549);
      if (temp__4425__auto___11562) {
        var seq__11535_11563__$1 = temp__4425__auto___11562;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11535_11563__$1)) {
          var c__5338__auto___11564 = cljs.core.chunk_first.call(null, seq__11535_11563__$1);
          var G__11565 = cljs.core.chunk_rest.call(null, seq__11535_11563__$1);
          var G__11566 = c__5338__auto___11564;
          var G__11567 = cljs.core.count.call(null, c__5338__auto___11564);
          var G__11568 = 0;
          seq__11535_11549 = G__11565;
          chunk__11536_11550 = G__11566;
          count__11537_11551 = G__11567;
          i__11538_11552 = G__11568;
          continue;
        } else {
          var vec__11541_11569 = cljs.core.first.call(null, seq__11535_11563__$1);
          var vec__11542_11570 = cljs.core.nth.call(null, vec__11541_11569, 0, null);
          var qx_defer_code_11571 = cljs.core.nth.call(null, vec__11542_11570, 0, null);
          var me_11572 = cljs.core.nth.call(null, vec__11542_11570, 1, null);
          var task_11573 = cljs.core.nth.call(null, vec__11541_11569, 1, null);
          if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([qx_defer_code_11571], true), tiltontec.qxia.base._PLUS_qxl_client_task_priority_PLUS_))) {
          } else {
            throw Error;
          }
          var G__11574 = cljs.core.next.call(null, seq__11535_11563__$1);
          var G__11575 = null;
          var G__11576 = 0;
          var G__11577 = 0;
          seq__11535_11549 = G__11574;
          chunk__11536_11550 = G__11575;
          count__11537_11551 = G__11576;
          i__11538_11552 = G__11577;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var sorted = function() {
    var data = tiltontec.util.core.fifo_data.call(null, user_q);
    return cljs.core.sort_by.call(null, cljs.core.ffirst, data);
  }();
  tiltontec.util.core.fifo_clear.call(null, user_q);
  var seq__11543 = cljs.core.seq.call(null, sorted);
  var chunk__11544 = null;
  var count__11545 = 0;
  var i__11546 = 0;
  while (true) {
    if (i__11546 < count__11545) {
      var vec__11547 = cljs.core._nth.call(null, chunk__11544, i__11546);
      var defer_info = cljs.core.nth.call(null, vec__11547, 0, null);
      var task = cljs.core.nth.call(null, vec__11547, 1, null);
      task.call(null, new cljs.core.Keyword(null, "client-q", "client-q", -1752740110), defer_info);
      var G__11578 = seq__11543;
      var G__11579 = chunk__11544;
      var G__11580 = count__11545;
      var G__11581 = i__11546 + 1;
      seq__11543 = G__11578;
      chunk__11544 = G__11579;
      count__11545 = G__11580;
      i__11546 = G__11581;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__11543);
      if (temp__4425__auto__) {
        var seq__11543__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11543__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__11543__$1);
          var G__11582 = cljs.core.chunk_rest.call(null, seq__11543__$1);
          var G__11583 = c__5338__auto__;
          var G__11584 = cljs.core.count.call(null, c__5338__auto__);
          var G__11585 = 0;
          seq__11543 = G__11582;
          chunk__11544 = G__11583;
          count__11545 = G__11584;
          i__11546 = G__11585;
          continue;
        } else {
          var vec__11548 = cljs.core.first.call(null, seq__11543__$1);
          var defer_info = cljs.core.nth.call(null, vec__11548, 0, null);
          var task = cljs.core.nth.call(null, vec__11548, 1, null);
          task.call(null, new cljs.core.Keyword(null, "client-q", "client-q", -1752740110), defer_info);
          var G__11586 = cljs.core.next.call(null, seq__11543__$1);
          var G__11587 = null;
          var G__11588 = 0;
          var G__11589 = 0;
          seq__11543 = G__11586;
          chunk__11544 = G__11587;
          count__11545 = G__11588;
          i__11546 = G__11589;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_, tiltontec.qxia.base.qxia_q_handler);
if (typeof tiltontec.qxia.base.qx_initialize !== "undefined") {
} else {
  tiltontec.qxia.base.qx_initialize = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), new cljs.core.Var(function() {
      return tiltontec.cell.base.ia_types;
    }, new cljs.core.Symbol("tiltontec.cell.base", "ia-types", "tiltontec.cell.base/ia-types", 436375603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
    new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), "src/tiltontec/cell/base.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.base.ia_types) ? 
    tiltontec.cell.base.ia_types.cljs$lang$test : null]))], null), new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.qxia.base", "qx-initialize"), tiltontec.cell.base.ia_type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return null;
});
tiltontec.qxia.base.qx_obj_properties = function tiltontec$qxia$base$qx_obj_properties(me) {
  return cljs.core.map.call(null, cljs.core.keyword, qx.Class.getProperties(function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return tiltontec.qxia.base.qxia_type_to_qx_class.call(null, tiltontec.cell.base.ia_type.call(null, me));
    }
  }()));
};
if (typeof tiltontec.qxia.base.qx_initialize_all !== "undefined") {
} else {
  tiltontec.qxia.base.qx_initialize_all = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.qxia.base", "qx-initialize-all"), tiltontec.cell.base.ia_type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize_all, new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724), function(me) {
  return null;
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize_all, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  var temp__4425__auto___11600 = function() {
    var iter__5307__auto__ = function tiltontec$qxia$base$iter__11590(s__11591) {
      return new cljs.core.LazySeq(null, function() {
        var s__11591__$1 = s__11591;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__11591__$1);
          if (temp__4425__auto__) {
            var s__11591__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11591__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__11591__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__11593 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__11592 = 0;
                while (true) {
                  if (i__11592 < size__5306__auto__) {
                    var k = cljs.core._nth.call(null, c__5305__auto__, i__11592);
                    var val = tiltontec.model.core.md_getx.call(null, new cljs.core.Keyword(null, "init-all", "init-all", 482505234), me, k);
                    if (!(val == null)) {
                      cljs.core.chunk_append.call(null, b__11593, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, val], null));
                      var G__11601 = i__11592 + 1;
                      i__11592 = G__11601;
                      continue;
                    } else {
                      var G__11602 = i__11592 + 1;
                      i__11592 = G__11602;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11593), tiltontec$qxia$base$iter__11590.call(null, cljs.core.chunk_rest.call(null, s__11591__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11593), null);
              }
            } else {
              var k = cljs.core.first.call(null, s__11591__$2);
              var val = tiltontec.model.core.md_getx.call(null, new cljs.core.Keyword(null, "init-all", "init-all", 482505234), me, k);
              if (!(val == null)) {
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, val], null), tiltontec$qxia$base$iter__11590.call(null, cljs.core.rest.call(null, s__11591__$2)));
              } else {
                var G__11603 = cljs.core.rest.call(null, s__11591__$2);
                s__11591__$1 = G__11603;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, tiltontec.qxia.base.qx_obj_properties.call(null, me));
  }();
  if (cljs.core.truth_(temp__4425__auto___11600)) {
    var inits_11604 = temp__4425__auto___11600;
    var qx_11605 = tiltontec.qxia.base.qxme.call(null, me);
    if (cljs.core.truth_(qx_11605)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("no qxme "), cljs.core.str(tiltontec.cell.base.ia_type.call(null, me))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "qx", "qx", 876946123, null)))].join(""));
    }
    qx_11605.set(cljs.core.clj__GT_js.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, inits_11604)));
  } else {
  }
  if (cljs.core.truth_(tiltontec.qxia.base.qxme.call(null, me))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("no qx initall "), cljs.core.str(tiltontec.cell.base.ia_type.call(null, me))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
  }
  var temp__4425__auto___11606 = (new cljs.core.Keyword(null, "css-class", "css-class", -919455334)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
  if (cljs.core.truth_(temp__4425__auto___11606)) {
    var c_11607 = temp__4425__auto___11606;
    if (cljs.core.coll_QMARK_.call(null, c_11607)) {
      var cs_11608 = cljs.core.vec.call(null, c_11607);
      tiltontec.qxia.base.qxme.call(null, me).addCssClasses(cljs.core.clj__GT_js.call(null, cs_11608));
    } else {
      tiltontec.qxia.base.qxme.call(null, me).addCssClass(c_11607);
    }
  } else {
  }
  var seq__11594 = cljs.core.seq.call(null, tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "listeners", "listeners", 394544445)));
  var chunk__11595 = null;
  var count__11596 = 0;
  var i__11597 = 0;
  while (true) {
    if (i__11597 < count__11596) {
      var vec__11598 = cljs.core._nth.call(null, chunk__11595, i__11597);
      var name = cljs.core.nth.call(null, vec__11598, 0, null);
      var handler = cljs.core.nth.call(null, vec__11598, 1, null);
      var qxme_11609 = tiltontec.qxia.base.qxme.call(null, me);
      qxme_11609.addListener(name, function(seq__11594, chunk__11595, count__11596, i__11597, qxme_11609, vec__11598, name, handler) {
        return function(event) {
          return handler.call(null, event, me);
        };
      }(seq__11594, chunk__11595, count__11596, i__11597, qxme_11609, vec__11598, name, handler));
      var G__11610 = seq__11594;
      var G__11611 = chunk__11595;
      var G__11612 = count__11596;
      var G__11613 = i__11597 + 1;
      seq__11594 = G__11610;
      chunk__11595 = G__11611;
      count__11596 = G__11612;
      i__11597 = G__11613;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__11594);
      if (temp__4425__auto__) {
        var seq__11594__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11594__$1)) {
          var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__11594__$1);
          var G__11614 = cljs.core.chunk_rest.call(null, seq__11594__$1);
          var G__11615 = c__5338__auto__;
          var G__11616 = cljs.core.count.call(null, c__5338__auto__);
          var G__11617 = 0;
          seq__11594 = G__11614;
          chunk__11595 = G__11615;
          count__11596 = G__11616;
          i__11597 = G__11617;
          continue;
        } else {
          var vec__11599 = cljs.core.first.call(null, seq__11594__$1);
          var name = cljs.core.nth.call(null, vec__11599, 0, null);
          var handler = cljs.core.nth.call(null, vec__11599, 1, null);
          var qxme_11618 = tiltontec.qxia.base.qxme.call(null, me);
          qxme_11618.addListener(name, function(seq__11594, chunk__11595, count__11596, i__11597, qxme_11618, vec__11599, name, handler, seq__11594__$1, temp__4425__auto__) {
            return function(event) {
              return handler.call(null, event, me);
            };
          }(seq__11594, chunk__11595, count__11596, i__11597, qxme_11618, vec__11599, name, handler, seq__11594__$1, temp__4425__auto__));
          var G__11619 = cljs.core.next.call(null, seq__11594__$1);
          var G__11620 = null;
          var G__11621 = 0;
          var G__11622 = 0;
          seq__11594 = G__11619;
          chunk__11595 = G__11620;
          count__11596 = G__11621;
          i__11597 = G__11622;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
tiltontec.qxia.base.qx_add_kid = function tiltontec$qxia$base$qx_add_kid(me, kid) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "flex", "flex", -1425124628)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, kid));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var flex = temp__4423__auto__;
    return tiltontec.qxia.base.qxme.call(null, me).add(tiltontec.qxia.base.qxme.call(null, kid), {"flex":flex});
  } else {
    return tiltontec.qxia.base.qxme.call(null, me).add(tiltontec.qxia.base.qxme.call(null, kid));
  }
};
goog.provide("tiltontec.qxia.widget");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.core");
goog.require("clojure.set");
goog.require("tiltontec.qxia.base");
goog.require("tiltontec.cell.integrity");
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810)], null), function(_, me, new$, old, c) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    var app = (new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    var shower = (new cljs.core.Keyword(null, "shower", "shower", -1731894586)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    var pager = (new cljs.core.Keyword(null, "pager", "pager", 1850229940)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    if (cljs.core.truth_(app)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("obs mob kids"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "app", "app", 1079569820, null)))].join(""));
    }
    var routing = app.getRouting();
    if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
      var seq__11625_11633 = cljs.core.seq.call(null, old);
      var chunk__11626_11634 = null;
      var count__11627_11635 = 0;
      var i__11628_11636 = 0;
      while (true) {
        if (i__11628_11636 < count__11627_11635) {
          var page_11637 = cljs.core._nth.call(null, chunk__11626_11634, i__11628_11636);
          var temp__4425__auto___11638 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page_11637));
          if (cljs.core.truth_(temp__4425__auto___11638)) {
            var ept_11639 = temp__4425__auto___11638;
            routing.remove(ept_11639);
          } else {
          }
          pager.removeDetail(tiltontec.qxia.base.qxme.call(null, page_11637));
          var G__11640 = seq__11625_11633;
          var G__11641 = chunk__11626_11634;
          var G__11642 = count__11627_11635;
          var G__11643 = i__11628_11636 + 1;
          seq__11625_11633 = G__11640;
          chunk__11626_11634 = G__11641;
          count__11627_11635 = G__11642;
          i__11628_11636 = G__11643;
          continue;
        } else {
          var temp__4425__auto___11644 = cljs.core.seq.call(null, seq__11625_11633);
          if (temp__4425__auto___11644) {
            var seq__11625_11645__$1 = temp__4425__auto___11644;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__11625_11645__$1)) {
              var c__5338__auto___11646 = cljs.core.chunk_first.call(null, seq__11625_11645__$1);
              var G__11647 = cljs.core.chunk_rest.call(null, seq__11625_11645__$1);
              var G__11648 = c__5338__auto___11646;
              var G__11649 = cljs.core.count.call(null, c__5338__auto___11646);
              var G__11650 = 0;
              seq__11625_11633 = G__11647;
              chunk__11626_11634 = G__11648;
              count__11627_11635 = G__11649;
              i__11628_11636 = G__11650;
              continue;
            } else {
              var page_11651 = cljs.core.first.call(null, seq__11625_11645__$1);
              var temp__4425__auto___11652__$1 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page_11651));
              if (cljs.core.truth_(temp__4425__auto___11652__$1)) {
                var ept_11653 = temp__4425__auto___11652__$1;
                routing.remove(ept_11653);
              } else {
              }
              pager.removeDetail(tiltontec.qxia.base.qxme.call(null, page_11651));
              var G__11654 = cljs.core.next.call(null, seq__11625_11645__$1);
              var G__11655 = null;
              var G__11656 = 0;
              var G__11657 = 0;
              seq__11625_11633 = G__11654;
              chunk__11626_11634 = G__11655;
              count__11627_11635 = G__11656;
              i__11628_11636 = G__11657;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    var seq__11629 = cljs.core.seq.call(null, new$);
    var chunk__11630 = null;
    var count__11631 = 0;
    var i__11632 = 0;
    while (true) {
      if (i__11632 < count__11631) {
        var page = cljs.core._nth.call(null, chunk__11630, i__11632);
        var qx_page_11658 = tiltontec.qxia.base.qxme.call(null, page);
        pager.addDetail(qx_page_11658);
        var temp__4425__auto___11659 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page));
        if (cljs.core.truth_(temp__4425__auto___11659)) {
          var ept_11660 = temp__4425__auto___11659;
          routing.onGet(ept_11660, shower, qx_page_11658);
        } else {
        }
        var G__11661 = seq__11629;
        var G__11662 = chunk__11630;
        var G__11663 = count__11631;
        var G__11664 = i__11632 + 1;
        seq__11629 = G__11661;
        chunk__11630 = G__11662;
        count__11631 = G__11663;
        i__11632 = G__11664;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq.call(null, seq__11629);
        if (temp__4425__auto__) {
          var seq__11629__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11629__$1)) {
            var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__11629__$1);
            var G__11665 = cljs.core.chunk_rest.call(null, seq__11629__$1);
            var G__11666 = c__5338__auto__;
            var G__11667 = cljs.core.count.call(null, c__5338__auto__);
            var G__11668 = 0;
            seq__11629 = G__11665;
            chunk__11630 = G__11666;
            count__11631 = G__11667;
            i__11632 = G__11668;
            continue;
          } else {
            var page = cljs.core.first.call(null, seq__11629__$1);
            var qx_page_11669 = tiltontec.qxia.base.qxme.call(null, page);
            pager.addDetail(qx_page_11669);
            var temp__4425__auto___11670__$1 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page));
            if (cljs.core.truth_(temp__4425__auto___11670__$1)) {
              var ept_11671 = temp__4425__auto___11670__$1;
              routing.onGet(ept_11671, shower, qx_page_11669);
            } else {
            }
            var G__11672 = cljs.core.next.call(null, seq__11629__$1);
            var G__11673 = null;
            var G__11674 = 0;
            var G__11675 = 0;
            seq__11629 = G__11672;
            chunk__11630 = G__11673;
            count__11631 = G__11674;
            i__11632 = G__11675;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), function(me) {
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "layout", "layout", -2120940921)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var lyo = temp__4425__auto__;
    return tiltontec.qxia.base.qxme.call(null, me).setLayout(lyo);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225)], null), function(_, me, new$, old, ___$1) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    var qx_form = tiltontec.qxia.base.qxme.call(null, me);
    if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
      var seq__11676_11684 = cljs.core.seq.call(null, old);
      var chunk__11677_11685 = null;
      var count__11678_11686 = 0;
      var i__11679_11687 = 0;
      while (true) {
        if (i__11679_11687 < count__11678_11686) {
          var k_11688 = cljs.core._nth.call(null, chunk__11677_11685, i__11679_11687);
          var qxk_11689 = tiltontec.qxia.base.qxme.call(null, k_11688);
          var label_11690 = tiltontec.model.core.md_get.call(null, k_11688, new cljs.core.Keyword(null, "label", "label", 1718410804));
          qx_form.remove(qxk_11689);
          var G__11691 = seq__11676_11684;
          var G__11692 = chunk__11677_11685;
          var G__11693 = count__11678_11686;
          var G__11694 = i__11679_11687 + 1;
          seq__11676_11684 = G__11691;
          chunk__11677_11685 = G__11692;
          count__11678_11686 = G__11693;
          i__11679_11687 = G__11694;
          continue;
        } else {
          var temp__4425__auto___11695 = cljs.core.seq.call(null, seq__11676_11684);
          if (temp__4425__auto___11695) {
            var seq__11676_11696__$1 = temp__4425__auto___11695;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__11676_11696__$1)) {
              var c__5338__auto___11697 = cljs.core.chunk_first.call(null, seq__11676_11696__$1);
              var G__11698 = cljs.core.chunk_rest.call(null, seq__11676_11696__$1);
              var G__11699 = c__5338__auto___11697;
              var G__11700 = cljs.core.count.call(null, c__5338__auto___11697);
              var G__11701 = 0;
              seq__11676_11684 = G__11698;
              chunk__11677_11685 = G__11699;
              count__11678_11686 = G__11700;
              i__11679_11687 = G__11701;
              continue;
            } else {
              var k_11702 = cljs.core.first.call(null, seq__11676_11696__$1);
              var qxk_11703 = tiltontec.qxia.base.qxme.call(null, k_11702);
              var label_11704 = tiltontec.model.core.md_get.call(null, k_11702, new cljs.core.Keyword(null, "label", "label", 1718410804));
              qx_form.remove(qxk_11703);
              var G__11705 = cljs.core.next.call(null, seq__11676_11696__$1);
              var G__11706 = null;
              var G__11707 = 0;
              var G__11708 = 0;
              seq__11676_11684 = G__11705;
              chunk__11677_11685 = G__11706;
              count__11678_11686 = G__11707;
              i__11679_11687 = G__11708;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    var temp__4425__auto__ = new$;
    if (cljs.core.truth_(temp__4425__auto__)) {
      var kids = temp__4425__auto__;
      var seq__11680 = cljs.core.seq.call(null, kids);
      var chunk__11681 = null;
      var count__11682 = 0;
      var i__11683 = 0;
      while (true) {
        if (i__11683 < count__11682) {
          var k = cljs.core._nth.call(null, chunk__11681, i__11683);
          var qxk_11709 = tiltontec.qxia.base.qxme.call(null, k);
          var label_11710 = tiltontec.model.core.md_get.call(null, k, new cljs.core.Keyword(null, "label", "label", 1718410804));
          qx_form.add(qxk_11709, label_11710);
          var G__11711 = seq__11680;
          var G__11712 = chunk__11681;
          var G__11713 = count__11682;
          var G__11714 = i__11683 + 1;
          seq__11680 = G__11711;
          chunk__11681 = G__11712;
          count__11682 = G__11713;
          i__11683 = G__11714;
          continue;
        } else {
          var temp__4425__auto____$1 = cljs.core.seq.call(null, seq__11680);
          if (temp__4425__auto____$1) {
            var seq__11680__$1 = temp__4425__auto____$1;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__11680__$1)) {
              var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__11680__$1);
              var G__11715 = cljs.core.chunk_rest.call(null, seq__11680__$1);
              var G__11716 = c__5338__auto__;
              var G__11717 = cljs.core.count.call(null, c__5338__auto__);
              var G__11718 = 0;
              seq__11680 = G__11715;
              chunk__11681 = G__11716;
              count__11682 = G__11717;
              i__11683 = G__11718;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__11680__$1);
              var qxk_11719 = tiltontec.qxia.base.qxme.call(null, k);
              var label_11720 = tiltontec.model.core.md_get.call(null, k, new cljs.core.Keyword(null, "label", "label", 1718410804));
              qx_form.add(qxk_11719, label_11720);
              var G__11721 = cljs.core.next.call(null, seq__11680__$1);
              var G__11722 = null;
              var G__11723 = 0;
              var G__11724 = 0;
              seq__11680 = G__11721;
              chunk__11681 = G__11722;
              count__11682 = G__11723;
              i__11683 = G__11724;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  });
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724), function(me) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    var kids = (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, kids))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kids", "kids", -1497764998, null)))))].join(""));
    }
    var form = cljs.core.first.call(null, kids);
    var qx_form = tiltontec.qxia.base.qxme.call(null, form);
    if (cljs.core.truth_(qx_form)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "qx-form", "qx-form", 231243115, null)))].join(""));
    }
    return cljs.core.swap_BANG_.call(null, me, cljs.core.assoc, new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), new qx.ui.mobile.form.renderer.Single(qx_form));
  });
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), function(page) {
  var qx_page = tiltontec.qxia.base.qxme.call(null, page);
  return qx_page.addListener("initialize", function(qx_page) {
    return function() {
      var temp__4425__auto___11729 = tiltontec.model.core.md_getx.call(null, new cljs.core.Keyword(null, "ini-nav", "ini-nav", 1436917737), page, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
      if (cljs.core.truth_(temp__4425__auto___11729)) {
        var kids_11730 = temp__4425__auto___11729;
        cljs.core.println.call(null, new cljs.core.Keyword(null, "start-page", "start-page", 510274786), tiltontec.cell.base.ia_type.call(null, qx_page), qx_page);
        var content_11731 = qx_page.getContent();
        var seq__11725_11732 = cljs.core.seq.call(null, kids_11730);
        var chunk__11726_11733 = null;
        var count__11727_11734 = 0;
        var i__11728_11735 = 0;
        while (true) {
          if (i__11728_11735 < count__11727_11734) {
            var k_11736 = cljs.core._nth.call(null, chunk__11726_11733, i__11728_11735);
            var qxk_11737 = tiltontec.qxia.base.qxme.call(null, k_11736);
            content_11731.add(qxk_11737);
            var G__11738 = seq__11725_11732;
            var G__11739 = chunk__11726_11733;
            var G__11740 = count__11727_11734;
            var G__11741 = i__11728_11735 + 1;
            seq__11725_11732 = G__11738;
            chunk__11726_11733 = G__11739;
            count__11727_11734 = G__11740;
            i__11728_11735 = G__11741;
            continue;
          } else {
            var temp__4425__auto___11742__$1 = cljs.core.seq.call(null, seq__11725_11732);
            if (temp__4425__auto___11742__$1) {
              var seq__11725_11743__$1 = temp__4425__auto___11742__$1;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__11725_11743__$1)) {
                var c__5338__auto___11744 = cljs.core.chunk_first.call(null, seq__11725_11743__$1);
                var G__11745 = cljs.core.chunk_rest.call(null, seq__11725_11743__$1);
                var G__11746 = c__5338__auto___11744;
                var G__11747 = cljs.core.count.call(null, c__5338__auto___11744);
                var G__11748 = 0;
                seq__11725_11732 = G__11745;
                chunk__11726_11733 = G__11746;
                count__11727_11734 = G__11747;
                i__11728_11735 = G__11748;
                continue;
              } else {
                var k_11749 = cljs.core.first.call(null, seq__11725_11743__$1);
                var qxk_11750 = tiltontec.qxia.base.qxme.call(null, k_11749);
                content_11731.add(qxk_11750);
                var G__11751 = cljs.core.next.call(null, seq__11725_11743__$1);
                var G__11752 = null;
                var G__11753 = 0;
                var G__11754 = 0;
                seq__11725_11732 = G__11751;
                chunk__11726_11733 = G__11752;
                count__11727_11734 = G__11753;
                i__11728_11735 = G__11754;
                continue;
              }
            } else {
            }
          }
          break;
        }
      } else {
      }
      return qx_page;
    };
  }(qx_page));
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995)], null), function(_, page, newk, oldk, ___$1) {
  if (cljs.core.not_EQ_.call(null, oldk, tiltontec.cell.base.unbound)) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), page], null), function(opcode, defer_info) {
      var qx_page = tiltontec.qxia.base.qxme.call(null, page);
      var content = qx_page.getContent();
      content.removeAll();
      var seq__11755 = cljs.core.seq.call(null, newk);
      var chunk__11756 = null;
      var count__11757 = 0;
      var i__11758 = 0;
      while (true) {
        if (i__11758 < count__11757) {
          var k = cljs.core._nth.call(null, chunk__11756, i__11758);
          var qxk_11759 = tiltontec.qxia.base.qxme.call(null, k);
          cljs.core.println.call(null, content.add(qxk_11759));
          var G__11760 = seq__11755;
          var G__11761 = chunk__11756;
          var G__11762 = count__11757;
          var G__11763 = i__11758 + 1;
          seq__11755 = G__11760;
          chunk__11756 = G__11761;
          count__11757 = G__11762;
          i__11758 = G__11763;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__11755);
          if (temp__4425__auto__) {
            var seq__11755__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__11755__$1)) {
              var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__11755__$1);
              var G__11764 = cljs.core.chunk_rest.call(null, seq__11755__$1);
              var G__11765 = c__5338__auto__;
              var G__11766 = cljs.core.count.call(null, c__5338__auto__);
              var G__11767 = 0;
              seq__11755 = G__11764;
              chunk__11756 = G__11765;
              count__11757 = G__11766;
              i__11758 = G__11767;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__11755__$1);
              var qxk_11768 = tiltontec.qxia.base.qxme.call(null, k);
              cljs.core.println.call(null, content.add(qxk_11768));
              var G__11769 = cljs.core.next.call(null, seq__11755__$1);
              var G__11770 = null;
              var G__11771 = 0;
              var G__11772 = 0;
              seq__11755 = G__11769;
              chunk__11756 = G__11770;
              count__11757 = G__11771;
              i__11758 = G__11772;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    });
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword("tiltontec.qxia.types", "m.TextField", "tiltontec.qxia.types/m.TextField", 1587442644), function(me) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    return tiltontec.qxia.base.qxme.call(null, me).setValue(tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "value", "value", 305978217)));
  });
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)], null), function(_, me, newk, oldk, ___$1) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    return tiltontec.qxia.widget.kids_refresh.call(null, me, newk, oldk);
  });
});
tiltontec.qxia.widget.kids_refresh = function tiltontec$qxia$widget$kids_refresh(me, newk, oldk) {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "refresh-k", "refresh-k", 985235774), tiltontec.cell.base.ia_type.call(null, me), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(me));
  if (cljs.core._EQ_.call(null, oldk, tiltontec.cell.base.unbound)) {
  } else {
    var lostks_11789 = clojure.set.difference.call(null, cljs.core.set.call(null, oldk), cljs.core.set.call(null, newk));
    if (cljs.core.empty_QMARK_.call(null, lostks_11789)) {
    } else {
      var seq__11781_11790 = cljs.core.seq.call(null, lostks_11789);
      var chunk__11782_11791 = null;
      var count__11783_11792 = 0;
      var i__11784_11793 = 0;
      while (true) {
        if (i__11784_11793 < count__11783_11792) {
          var kid_11794 = cljs.core._nth.call(null, chunk__11782_11791, i__11784_11793);
          var qxk_11795 = tiltontec.qxia.base.qxme.call(null, kid_11794);
          if (cljs.core.truth_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.ia_type_QMARK_, kid_11794, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)], null))) {
          } else {
            tiltontec.qxia.base.qxme.call(null, me).drop(qxk_11795);
          }
          qxk_11795.destroy();
          tiltontec.cell.evaluate.not_to_be.call(null, kid_11794);
          var G__11796 = seq__11781_11790;
          var G__11797 = chunk__11782_11791;
          var G__11798 = count__11783_11792;
          var G__11799 = i__11784_11793 + 1;
          seq__11781_11790 = G__11796;
          chunk__11782_11791 = G__11797;
          count__11783_11792 = G__11798;
          i__11784_11793 = G__11799;
          continue;
        } else {
          var temp__4425__auto___11800 = cljs.core.seq.call(null, seq__11781_11790);
          if (temp__4425__auto___11800) {
            var seq__11781_11801__$1 = temp__4425__auto___11800;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__11781_11801__$1)) {
              var c__5338__auto___11802 = cljs.core.chunk_first.call(null, seq__11781_11801__$1);
              var G__11803 = cljs.core.chunk_rest.call(null, seq__11781_11801__$1);
              var G__11804 = c__5338__auto___11802;
              var G__11805 = cljs.core.count.call(null, c__5338__auto___11802);
              var G__11806 = 0;
              seq__11781_11790 = G__11803;
              chunk__11782_11791 = G__11804;
              count__11783_11792 = G__11805;
              i__11784_11793 = G__11806;
              continue;
            } else {
              var kid_11807 = cljs.core.first.call(null, seq__11781_11801__$1);
              var qxk_11808 = tiltontec.qxia.base.qxme.call(null, kid_11807);
              if (cljs.core.truth_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.ia_type_QMARK_, kid_11807, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)], null))) {
              } else {
                tiltontec.qxia.base.qxme.call(null, me).drop(qxk_11808);
              }
              qxk_11808.destroy();
              tiltontec.cell.evaluate.not_to_be.call(null, kid_11807);
              var G__11809 = cljs.core.next.call(null, seq__11781_11801__$1);
              var G__11810 = null;
              var G__11811 = 0;
              var G__11812 = 0;
              seq__11781_11790 = G__11809;
              chunk__11782_11791 = G__11810;
              count__11783_11792 = G__11811;
              i__11784_11793 = G__11812;
              continue;
            }
          } else {
          }
        }
        break;
      }
    }
  }
  var new_ks = cljs.core._EQ_.call(null, oldk, tiltontec.cell.base.unbound) ? newk : clojure.set.difference.call(null, cljs.core.set.call(null, newk), cljs.core.set.call(null, oldk));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "compo", "compo", -4337188), new_ks);
  if (cljs.core.empty_QMARK_.call(null, new_ks)) {
    return null;
  } else {
    var seq__11785 = cljs.core.seq.call(null, new_ks);
    var chunk__11786 = null;
    var count__11787 = 0;
    var i__11788 = 0;
    while (true) {
      if (i__11788 < count__11787) {
        var k = cljs.core._nth.call(null, chunk__11786, i__11788);
        if (cljs.core.truth_(tiltontec.cell.base.ia_type_QMARK_.call(null, k, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)))) {
        } else {
          tiltontec.qxia.base.qx_add_kid.call(null, me, k);
        }
        var G__11813 = seq__11785;
        var G__11814 = chunk__11786;
        var G__11815 = count__11787;
        var G__11816 = i__11788 + 1;
        seq__11785 = G__11813;
        chunk__11786 = G__11814;
        count__11787 = G__11815;
        i__11788 = G__11816;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq.call(null, seq__11785);
        if (temp__4425__auto__) {
          var seq__11785__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11785__$1)) {
            var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__11785__$1);
            var G__11817 = cljs.core.chunk_rest.call(null, seq__11785__$1);
            var G__11818 = c__5338__auto__;
            var G__11819 = cljs.core.count.call(null, c__5338__auto__);
            var G__11820 = 0;
            seq__11785 = G__11817;
            chunk__11786 = G__11818;
            count__11787 = G__11819;
            i__11788 = G__11820;
            continue;
          } else {
            var k = cljs.core.first.call(null, seq__11785__$1);
            if (cljs.core.truth_(tiltontec.cell.base.ia_type_QMARK_.call(null, k, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)))) {
            } else {
              tiltontec.qxia.base.qx_add_kid.call(null, me, k);
            }
            var G__11821 = cljs.core.next.call(null, seq__11785__$1);
            var G__11822 = null;
            var G__11823 = 0;
            var G__11824 = 0;
            seq__11785 = G__11821;
            chunk__11786 = G__11822;
            count__11787 = G__11823;
            i__11788 = G__11824;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }
};
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot-data", "slot-data", 1146367809), new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926)], null), function(_, me, new$, old, c) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    cljs.core.println.call(null, new cljs.core.Keyword(null, "obs-sd", "obs-sd", 1176273322), tiltontec.cell.base.ia_type.call(null, me), new$, old);
    var p = tiltontec.qxia.base.qxme.call(null, me);
    if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
      var seq__11825_11833 = cljs.core.seq.call(null, cljs.core.range.call(null, cljs.core.count.call(null, old)));
      var chunk__11826_11834 = null;
      var count__11827_11835 = 0;
      var i__11828_11836 = 0;
      while (true) {
        if (i__11828_11836 < count__11827_11835) {
          var n_11837 = cljs.core._nth.call(null, chunk__11826_11834, i__11828_11836);
          p.removeSlot(n_11837);
          var G__11838 = seq__11825_11833;
          var G__11839 = chunk__11826_11834;
          var G__11840 = count__11827_11835;
          var G__11841 = i__11828_11836 + 1;
          seq__11825_11833 = G__11838;
          chunk__11826_11834 = G__11839;
          count__11827_11835 = G__11840;
          i__11828_11836 = G__11841;
          continue;
        } else {
          var temp__4425__auto___11842 = cljs.core.seq.call(null, seq__11825_11833);
          if (temp__4425__auto___11842) {
            var seq__11825_11843__$1 = temp__4425__auto___11842;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__11825_11843__$1)) {
              var c__5338__auto___11844 = cljs.core.chunk_first.call(null, seq__11825_11843__$1);
              var G__11845 = cljs.core.chunk_rest.call(null, seq__11825_11843__$1);
              var G__11846 = c__5338__auto___11844;
              var G__11847 = cljs.core.count.call(null, c__5338__auto___11844);
              var G__11848 = 0;
              seq__11825_11833 = G__11845;
              chunk__11826_11834 = G__11846;
              count__11827_11835 = G__11847;
              i__11828_11836 = G__11848;
              continue;
            } else {
              var n_11849 = cljs.core.first.call(null, seq__11825_11843__$1);
              p.removeSlot(n_11849);
              var G__11850 = cljs.core.next.call(null, seq__11825_11843__$1);
              var G__11851 = null;
              var G__11852 = 0;
              var G__11853 = 0;
              seq__11825_11833 = G__11850;
              chunk__11826_11834 = G__11851;
              count__11827_11835 = G__11852;
              i__11828_11836 = G__11853;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    var seq__11829 = cljs.core.seq.call(null, new$);
    var chunk__11830 = null;
    var count__11831 = 0;
    var i__11832 = 0;
    while (true) {
      if (i__11832 < count__11831) {
        var sd = cljs.core._nth.call(null, chunk__11830, i__11832);
        cljs.core.println.call(null, new cljs.core.Keyword(null, "pickslot!!", "pickslot!!", -645901635), sd);
        var da_11854 = new qx.data.Array(cljs.core.clj__GT_js.call(null, sd));
        p.addSlot(da_11854);
        var G__11855 = seq__11829;
        var G__11856 = chunk__11830;
        var G__11857 = count__11831;
        var G__11858 = i__11832 + 1;
        seq__11829 = G__11855;
        chunk__11830 = G__11856;
        count__11831 = G__11857;
        i__11832 = G__11858;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq.call(null, seq__11829);
        if (temp__4425__auto__) {
          var seq__11829__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11829__$1)) {
            var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__11829__$1);
            var G__11859 = cljs.core.chunk_rest.call(null, seq__11829__$1);
            var G__11860 = c__5338__auto__;
            var G__11861 = cljs.core.count.call(null, c__5338__auto__);
            var G__11862 = 0;
            seq__11829 = G__11859;
            chunk__11830 = G__11860;
            count__11831 = G__11861;
            i__11832 = G__11862;
            continue;
          } else {
            var sd = cljs.core.first.call(null, seq__11829__$1);
            cljs.core.println.call(null, new cljs.core.Keyword(null, "pickslot!!", "pickslot!!", -645901635), sd);
            var da_11863 = new qx.data.Array(cljs.core.clj__GT_js.call(null, sd));
            p.addSlot(da_11863);
            var G__11864 = cljs.core.next.call(null, seq__11829__$1);
            var G__11865 = null;
            var G__11866 = 0;
            var G__11867 = 0;
            seq__11829 = G__11864;
            chunk__11830 = G__11865;
            count__11831 = G__11866;
            i__11832 = G__11867;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
});
goog.provide("tiltontec.qxia.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.model.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.qxia.base");
goog.require("tiltontec.qxia.widget");
tiltontec.qxia.core.routing_get = function tiltontec$qxia$core$routing_get(end_point) {
  return tiltontec.qxia.base.app_routing.call(null).executeGet(end_point);
};
tiltontec.qxia.core.image = function tiltontec$qxia$core$image() {
  var args__5600__auto__ = [];
  var len__5593__auto___11872 = arguments.length;
  var i__5594__auto___11873 = 0;
  while (true) {
    if (i__5594__auto___11873 < len__5593__auto___11872) {
      args__5600__auto__.push(arguments[i__5594__auto___11873]);
      var G__11874 = i__5594__auto___11873 + 1;
      i__5594__auto___11873 = G__11874;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.qxia.core.image.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.qxia.core.image.cljs$core$IFn$_invoke$arity$variadic = function(source, iargs) {
  return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Image", "tiltontec.qxia.types/m.Image", 336928926), new cljs.core.Keyword(null, "source", "source", -433931539), source, iargs);
};
tiltontec.qxia.core.image.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.image.cljs$lang$applyTo = function(seq11870) {
  var G__11871 = cljs.core.first.call(null, seq11870);
  var seq11870__$1 = cljs.core.next.call(null, seq11870);
  return tiltontec.qxia.core.image.cljs$core$IFn$_invoke$arity$variadic(G__11871, seq11870__$1);
};
tiltontec.qxia.core.button = function tiltontec$qxia$core$button() {
  var args__5600__auto__ = [];
  var len__5593__auto___11877 = arguments.length;
  var i__5594__auto___11878 = 0;
  while (true) {
    if (i__5594__auto___11878 < len__5593__auto___11877) {
      args__5600__auto__.push(arguments[i__5594__auto___11878]);
      var G__11879 = i__5594__auto___11878 + 1;
      i__5594__auto___11878 = G__11879;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.qxia.core.button.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.qxia.core.button.cljs$core$IFn$_invoke$arity$variadic = function(label_icon, iargs) {
  return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Button", "tiltontec.qxia.types/m.Button", -668586230), new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), cljs.core.coll_QMARK_.call(null, label_icon) ? label_icon : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [label_icon], null), iargs);
};
tiltontec.qxia.core.button.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.button.cljs$lang$applyTo = function(seq11875) {
  var G__11876 = cljs.core.first.call(null, seq11875);
  var seq11875__$1 = cljs.core.next.call(null, seq11875);
  return tiltontec.qxia.core.button.cljs$core$IFn$_invoke$arity$variadic(G__11876, seq11875__$1);
};
tiltontec.qxia.core.text_field = function tiltontec$qxia$core$text_field() {
  var args__5600__auto__ = [];
  var len__5593__auto___11882 = arguments.length;
  var i__5594__auto___11883 = 0;
  while (true) {
    if (i__5594__auto___11883 < len__5593__auto___11882) {
      args__5600__auto__.push(arguments[i__5594__auto___11883]);
      var G__11884 = i__5594__auto___11883 + 1;
      i__5594__auto___11883 = G__11884;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.qxia.core.text_field.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.qxia.core.text_field.cljs$core$IFn$_invoke$arity$variadic = function(label, iargs) {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.TextField", "tiltontec.qxia.types/m.TextField", 1587442644), new cljs.core.Keyword(null, "label", "label", 1718410804), label);
};
tiltontec.qxia.core.text_field.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.text_field.cljs$lang$applyTo = function(seq11880) {
  var G__11881 = cljs.core.first.call(null, seq11880);
  var seq11880__$1 = cljs.core.next.call(null, seq11880);
  return tiltontec.qxia.core.text_field.cljs$core$IFn$_invoke$arity$variadic(G__11881, seq11880__$1);
};
goog.provide("tiltontec.qxia.macros");
goog.require("cljs.core");
tiltontec.qxia.macros.hbox = function tiltontec$qxia$macros$hbox() {
  var args__5600__auto__ = [];
  var len__5593__auto___11893 = arguments.length;
  var i__5594__auto___11894 = 0;
  while (true) {
    if (i__5594__auto___11894 < len__5593__auto___11893) {
      args__5600__auto__.push(arguments[i__5594__auto___11894]);
      var G__11895 = i__5594__auto___11894 + 1;
      i__5594__auto___11894 = G__11895;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.qxia.macros.hbox.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.qxia.macros.hbox.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11891, kids) {
  var vec__11892 = p__11891;
  var hbox_args = cljs.core.nthnext.call(null, vec__11892, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "layout", "layout", -2120940921)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.layout.HBox", "js/qx.ui.mobile.layout.HBox", 499740199, 
  null)))))), hbox_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "println", "cljs.core/println", -331834442, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids-make", "kids-make", 
  898757129)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)))))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, null))))), kids)))))));
};
tiltontec.qxia.macros.hbox.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.hbox.cljs$lang$applyTo = function(seq11887) {
  var G__11888 = cljs.core.first.call(null, seq11887);
  var seq11887__$1 = cljs.core.next.call(null, seq11887);
  var G__11889 = cljs.core.first.call(null, seq11887__$1);
  var seq11887__$2 = cljs.core.next.call(null, seq11887__$1);
  var G__11890 = cljs.core.first.call(null, seq11887__$2);
  var seq11887__$3 = cljs.core.next.call(null, seq11887__$2);
  return tiltontec.qxia.macros.hbox.cljs$core$IFn$_invoke$arity$variadic(G__11888, G__11889, G__11890, seq11887__$3);
};
tiltontec.qxia.macros.hbox.cljs$lang$macro = true;
tiltontec.qxia.macros.vbox = function tiltontec$qxia$macros$vbox() {
  var args__5600__auto__ = [];
  var len__5593__auto___11902 = arguments.length;
  var i__5594__auto___11903 = 0;
  while (true) {
    if (i__5594__auto___11903 < len__5593__auto___11902) {
      args__5600__auto__.push(arguments[i__5594__auto___11903]);
      var G__11904 = i__5594__auto___11903 + 1;
      i__5594__auto___11903 = G__11904;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.qxia.macros.vbox.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.qxia.macros.vbox.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11900, kids) {
  var vec__11901 = p__11900;
  var hbox_args = cljs.core.nthnext.call(null, vec__11901, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "layout", "layout", -2120940921)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.layout.VBox", "js/qx.ui.mobile.layout.VBox", -1527506437, 
  null)))))), hbox_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)))))));
};
tiltontec.qxia.macros.vbox.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.vbox.cljs$lang$applyTo = function(seq11896) {
  var G__11897 = cljs.core.first.call(null, seq11896);
  var seq11896__$1 = cljs.core.next.call(null, seq11896);
  var G__11898 = cljs.core.first.call(null, seq11896__$1);
  var seq11896__$2 = cljs.core.next.call(null, seq11896__$1);
  var G__11899 = cljs.core.first.call(null, seq11896__$2);
  var seq11896__$3 = cljs.core.next.call(null, seq11896__$2);
  return tiltontec.qxia.macros.vbox.cljs$core$IFn$_invoke$arity$variadic(G__11897, G__11898, G__11899, seq11896__$3);
};
tiltontec.qxia.macros.vbox.cljs$lang$macro = true;
tiltontec.qxia.macros.navigation_page = function tiltontec$qxia$macros$navigation_page() {
  var args__5600__auto__ = [];
  var len__5593__auto___11914 = arguments.length;
  var i__5594__auto___11915 = 0;
  while (true) {
    if (i__5594__auto___11915 < len__5593__auto___11914) {
      args__5600__auto__.push(arguments[i__5594__auto___11915]);
      var G__11916 = i__5594__auto___11915 + 1;
      i__5594__auto___11915 = G__11916;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.qxia.macros.navigation_page.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.qxia.macros.navigation_page.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11910, p__11911, kids) {
  var vec__11912 = p__11910;
  var title = cljs.core.nth.call(null, vec__11912, 0, null);
  var end_point = cljs.core.nth.call(null, vec__11912, 1, null);
  var vec__11913 = p__11911;
  var top_args = cljs.core.nthnext.call(null, vec__11913, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", 
  -2091669995)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)), cljs.core._conj.call(null, cljs.core.List.EMPTY, end_point), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "title", "title", 636505583)), cljs.core._conj.call(null, cljs.core.List.EMPTY, title), top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)))))));
};
tiltontec.qxia.macros.navigation_page.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.navigation_page.cljs$lang$applyTo = function(seq11905) {
  var G__11906 = cljs.core.first.call(null, seq11905);
  var seq11905__$1 = cljs.core.next.call(null, seq11905);
  var G__11907 = cljs.core.first.call(null, seq11905__$1);
  var seq11905__$2 = cljs.core.next.call(null, seq11905__$1);
  var G__11908 = cljs.core.first.call(null, seq11905__$2);
  var seq11905__$3 = cljs.core.next.call(null, seq11905__$2);
  var G__11909 = cljs.core.first.call(null, seq11905__$3);
  var seq11905__$4 = cljs.core.next.call(null, seq11905__$3);
  return tiltontec.qxia.macros.navigation_page.cljs$core$IFn$_invoke$arity$variadic(G__11906, G__11907, G__11908, G__11909, seq11905__$4);
};
tiltontec.qxia.macros.navigation_page.cljs$lang$macro = true;
tiltontec.qxia.macros.form = function tiltontec$qxia$macros$form() {
  var args__5600__auto__ = [];
  var len__5593__auto___11926 = arguments.length;
  var i__5594__auto___11927 = 0;
  while (true) {
    if (i__5594__auto___11927 < len__5593__auto___11926) {
      args__5600__auto__.push(arguments[i__5594__auto___11927]);
      var G__11928 = i__5594__auto___11927 + 1;
      i__5594__auto___11927 = G__11928;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.qxia.macros.form.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.qxia.macros.form.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11922, p__11923, kids) {
  var vec__11924 = p__11922;
  var top_args = cljs.core.nthnext.call(null, vec__11924, 0);
  var vec__11925 = p__11923;
  var form_args = cljs.core.nthnext.call(null, vec__11925, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724)), 
  top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225)), form_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)))))))))))))));
};
tiltontec.qxia.macros.form.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.form.cljs$lang$applyTo = function(seq11917) {
  var G__11918 = cljs.core.first.call(null, seq11917);
  var seq11917__$1 = cljs.core.next.call(null, seq11917);
  var G__11919 = cljs.core.first.call(null, seq11917__$1);
  var seq11917__$2 = cljs.core.next.call(null, seq11917__$1);
  var G__11920 = cljs.core.first.call(null, seq11917__$2);
  var seq11917__$3 = cljs.core.next.call(null, seq11917__$2);
  var G__11921 = cljs.core.first.call(null, seq11917__$3);
  var seq11917__$4 = cljs.core.next.call(null, seq11917__$3);
  return tiltontec.qxia.macros.form.cljs$core$IFn$_invoke$arity$variadic(G__11918, G__11919, G__11920, G__11921, seq11917__$4);
};
tiltontec.qxia.macros.form.cljs$lang$macro = true;
tiltontec.qxia.macros.carousel = function tiltontec$qxia$macros$carousel() {
  var args__5600__auto__ = [];
  var len__5593__auto___11935 = arguments.length;
  var i__5594__auto___11936 = 0;
  while (true) {
    if (i__5594__auto___11936 < len__5593__auto___11935) {
      args__5600__auto__.push(arguments[i__5594__auto___11936]);
      var G__11937 = i__5594__auto___11936 + 1;
      i__5594__auto___11936 = G__11937;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.qxia.macros.carousel.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.qxia.macros.carousel.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11933, kids) {
  var vec__11934 = p__11933;
  var top_args = cljs.core.nthnext.call(null, vec__11934, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516)), 
  top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)))))));
};
tiltontec.qxia.macros.carousel.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.carousel.cljs$lang$applyTo = function(seq11929) {
  var G__11930 = cljs.core.first.call(null, seq11929);
  var seq11929__$1 = cljs.core.next.call(null, seq11929);
  var G__11931 = cljs.core.first.call(null, seq11929__$1);
  var seq11929__$2 = cljs.core.next.call(null, seq11929__$1);
  var G__11932 = cljs.core.first.call(null, seq11929__$2);
  var seq11929__$3 = cljs.core.next.call(null, seq11929__$2);
  return tiltontec.qxia.macros.carousel.cljs$core$IFn$_invoke$arity$variadic(G__11930, G__11931, G__11932, seq11929__$3);
};
tiltontec.qxia.macros.carousel.cljs$lang$macro = true;
tiltontec.qxia.macros.drawer = function tiltontec$qxia$macros$drawer() {
  var args__5600__auto__ = [];
  var len__5593__auto___11945 = arguments.length;
  var i__5594__auto___11946 = 0;
  while (true) {
    if (i__5594__auto___11946 < len__5593__auto___11945) {
      args__5600__auto__.push(arguments[i__5594__auto___11946]);
      var G__11947 = i__5594__auto___11946 + 1;
      i__5594__auto___11946 = G__11947;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.qxia.macros.drawer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.qxia.macros.drawer.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, orientation, p__11943, kids) {
  var vec__11944 = p__11943;
  var top_args = cljs.core.nthnext.call(null, vec__11944, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "qx-class", "qx-class", 701821141)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.container.Drawer", "js/qx.ui.mobile.container.Drawer", -1115926667, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "*par*", "tiltontec.model.core/*par*", 1276645059, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "orientation", "orientation", 623557579)), cljs.core._conj.call(null, cljs.core.List.EMPTY, orientation), top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)))))));
};
tiltontec.qxia.macros.drawer.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.drawer.cljs$lang$applyTo = function(seq11938) {
  var G__11939 = cljs.core.first.call(null, seq11938);
  var seq11938__$1 = cljs.core.next.call(null, seq11938);
  var G__11940 = cljs.core.first.call(null, seq11938__$1);
  var seq11938__$2 = cljs.core.next.call(null, seq11938__$1);
  var G__11941 = cljs.core.first.call(null, seq11938__$2);
  var seq11938__$3 = cljs.core.next.call(null, seq11938__$2);
  var G__11942 = cljs.core.first.call(null, seq11938__$3);
  var seq11938__$4 = cljs.core.next.call(null, seq11938__$3);
  return tiltontec.qxia.macros.drawer.cljs$core$IFn$_invoke$arity$variadic(G__11939, G__11940, G__11941, G__11942, seq11938__$4);
};
tiltontec.qxia.macros.drawer.cljs$lang$macro = true;
tiltontec.qxia.macros.collapsible = function tiltontec$qxia$macros$collapsible() {
  var args__5600__auto__ = [];
  var len__5593__auto___11955 = arguments.length;
  var i__5594__auto___11956 = 0;
  while (true) {
    if (i__5594__auto___11956 < len__5593__auto___11955) {
      args__5600__auto__.push(arguments[i__5594__auto___11956]);
      var G__11957 = i__5594__auto___11956 + 1;
      i__5594__auto___11956 = G__11957;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.qxia.macros.collapsible.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.qxia.macros.collapsible.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, title, p__11953, kids) {
  var vec__11954 = p__11953;
  var top_args = cljs.core.nthnext.call(null, vec__11954, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "qx-class", "qx-class", 701821141)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.container.Collapsible", "js/qx.ui.mobile.container.Collapsible", 1030659332, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, title)))))), top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", 
  -799249638, null)), kids)))))));
};
tiltontec.qxia.macros.collapsible.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.collapsible.cljs$lang$applyTo = function(seq11948) {
  var G__11949 = cljs.core.first.call(null, seq11948);
  var seq11948__$1 = cljs.core.next.call(null, seq11948);
  var G__11950 = cljs.core.first.call(null, seq11948__$1);
  var seq11948__$2 = cljs.core.next.call(null, seq11948__$1);
  var G__11951 = cljs.core.first.call(null, seq11948__$2);
  var seq11948__$3 = cljs.core.next.call(null, seq11948__$2);
  var G__11952 = cljs.core.first.call(null, seq11948__$3);
  var seq11948__$4 = cljs.core.next.call(null, seq11948__$3);
  return tiltontec.qxia.macros.collapsible.cljs$core$IFn$_invoke$arity$variadic(G__11949, G__11950, G__11951, G__11952, seq11948__$4);
};
tiltontec.qxia.macros.collapsible.cljs$lang$macro = true;
tiltontec.qxia.macros.label = function tiltontec$qxia$macros$label() {
  var args__5600__auto__ = [];
  var len__5593__auto___11962 = arguments.length;
  var i__5594__auto___11963 = 0;
  while (true) {
    if (i__5594__auto___11963 < len__5593__auto___11962) {
      args__5600__auto__.push(arguments[i__5594__auto___11963]);
      var G__11964 = i__5594__auto___11963 + 1;
      i__5594__auto___11963 = G__11964;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.qxia.macros.label.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.qxia.macros.label.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, value, iargs) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, value), iargs)));
};
tiltontec.qxia.macros.label.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.label.cljs$lang$applyTo = function(seq11958) {
  var G__11959 = cljs.core.first.call(null, seq11958);
  var seq11958__$1 = cljs.core.next.call(null, seq11958);
  var G__11960 = cljs.core.first.call(null, seq11958__$1);
  var seq11958__$2 = cljs.core.next.call(null, seq11958__$1);
  var G__11961 = cljs.core.first.call(null, seq11958__$2);
  var seq11958__$3 = cljs.core.next.call(null, seq11958__$2);
  return tiltontec.qxia.macros.label.cljs$core$IFn$_invoke$arity$variadic(G__11959, G__11960, G__11961, seq11958__$3);
};
tiltontec.qxia.macros.label.cljs$lang$macro = true;
goog.provide("hello_mobile.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.qxia.core");
goog.require("tiltontec.qxia.base");
goog.require("tiltontec.qxia.macros");
hello_mobile.core.this_app = cljs.core.atom.call(null, null);
hello_mobile.core.make_hhhack = function hello_mobile$core$make_hhhack() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "hello-make-family!!!!!!!!!!!!", "hello-make-family!!!!!!!!!!!!", -1913099184));
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), new cljs.core.Keyword(null, "end-point", "end-point", -1147460885), "/", new cljs.core.Keyword(null, "title", "title", 636505583), "HHHack", new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", 
  "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "collapsible", "collapsible", -36525456, null), "Click for a surprise", cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Surprise.")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_11969 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "qx-class", "qx-class", 701821141), qx.ui.mobile.container.Collapsible, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", 
      -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Click for a surprise"], null), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, 
      null), "Surprise."))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11969, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_11970 = tiltontec.model.core._STAR_par_STAR_;
          tiltontec.model.core._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "Surprise."))));
          } finally {
            tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11970;
          }
        };
      }(_STAR_par_STAR_11969, me, cache))))));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11969;
    }
  }));
};
hello_mobile.core.appinit = function hello_mobile$core$appinit(this$, pager, shower) {
  return cljs.core.reset_BANG_.call(null, hello_mobile.core.this_app, tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810), new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), this$, new cljs.core.Keyword(null, "pager", "pager", 1850229940), pager, new cljs.core.Keyword(null, "shower", "shower", -1731894586), shower, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, 
  new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "make-login", "make-login", 2012461006, null)), cljs.core.list(new cljs.core.Symbol(null, "make-overview", "make-overview", -827027252, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_11972 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, hello_mobile.core.make_overview.call(null)), hello_mobile.core.make_login.call(null))));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11972;
    }
  })));
};
goog.exportSymbol("hello_mobile.core.appinit", hello_mobile.core.appinit);
hello_mobile.core.make_css_test = function hello_mobile$core$make_css_test() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", 
  "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "println", "clojure.core/println", -434465672, null), new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, 
  "label", "label", -936024965, null), "Hello cool222", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 0, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool"), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 2!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", 
  -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 3!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null))))), new cljs.core.Keyword(null, "value", "value", 
  305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_11975 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 2!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 3!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
      new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11975, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_11976 = tiltontec.model.core._STAR_par_STAR_;
          tiltontec.model.core._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "world 3!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, 
            "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "world 2!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, 
            "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)))));
          } finally {
            tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11976;
          }
        };
      }(_STAR_par_STAR_11975, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "Hello cool222", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 0, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool")), function() {
        cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me));
        return null;
      }())));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11975;
    }
  }));
};
hello_mobile.core.make_login_form = function hello_mobile$core$make_login_form() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), 
  cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "login", "login", 55217519), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", 
  "c?kids", "tiltontec.model.core/c?kids", -799249638, null), cljs.core.list(new cljs.core.Symbol(null, "text-field", "text-field", -699013324, null), "Username", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "u-name", "u-name", 1737043515), new cljs.core.Keyword(null, "value", "value", 305978217), "KennY", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Username or e-mail", new cljs.core.Keyword(null, "required", "required", 1807647006), 
  true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Please share your user name"), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", "tiltontec.qxia.types/m.PasswordField", -1705460348), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "p-word", "p-word", 1531766703), new cljs.core.Keyword(null, "label", "label", 1718410804), 
  "Password", new cljs.core.Keyword(null, "value", "value", 305978217), "Zoommmmm", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Your password", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Password is required"))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
  function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_11979 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "login", "login", 55217519), new cljs.core.Keyword(null, "kids", "kids", 1156670771), 
      tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "text-field", "text-field", -699013324, null), "Username", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "u-name", "u-name", 1737043515), new cljs.core.Keyword(null, "value", 
      "value", 305978217), "KennY", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Username or e-mail", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Please share your user name"), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", "tiltontec.qxia.types/m.PasswordField", 
      -1705460348), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "p-word", "p-word", 1531766703), new cljs.core.Keyword(null, "label", "label", 1718410804), "Password", new cljs.core.Keyword(null, "value", "value", 305978217), "Zoommmmm", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Your password", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 
      893496025), "Password is required"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11979, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_11980 = tiltontec.model.core._STAR_par_STAR_;
          tiltontec.model.core._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", "tiltontec.qxia.types/m.PasswordField", -1705460348), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "p-word", "p-word", 1531766703), new cljs.core.Keyword(null, "label", "label", 1718410804), 
            "Password", new cljs.core.Keyword(null, "value", "value", 305978217), "Zoommmmm", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Your password", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Password is required")), tiltontec.qxia.core.text_field.call(null, "Username", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, 
            "u-name", "u-name", 1737043515), new cljs.core.Keyword(null, "value", "value", 305978217), "KennY", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Username or e-mail", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Please share your user name"))));
          } finally {
            tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11980;
          }
        };
      }(_STAR_par_STAR_11979, me, cache))))));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11979;
    }
  }));
};
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540)], null), function(_, me, new$, old, ___$1) {
  if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
    return tiltontec.qxia.base.qxme.call(null, me).setValue(new$);
  } else {
    return null;
  }
});
hello_mobile.core.make_picker_test = function hello_mobile$core$make_picker_test() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "building-picker!!!!!!!!!!!!!!!!!!!!", "building-picker!!!!!!!!!!!!!!!!!!!!", 318400452));
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picker-vbox", "picker-vbox", 1597167133), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, 
  new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "myp", "myp", -299765765, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, 
  "wocd?", "wocd?", -195637516), true], null))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "lbl-computing!!!!!!!", "lbl-computing!!!!!!!", -911221410), cljs.core.list(new cljs.core.Symbol(null, "ia-type", "ia-type", 551627990, null), new cljs.core.Symbol(null, "myp", "myp", -299765765, null))), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Start", cljs.core.list(new cljs.core.Symbol(null, "md-get", 
  "md-get", -1846886512, null), new cljs.core.Symbol(null, "myp", "myp", -299765765, null), new cljs.core.Keyword(null, "value", "value", 305978217)), "End")))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), new cljs.core.Keyword(null, "height", 
  "height", 1025178622), 100, new cljs.core.Keyword(null, "width", "width", -384071477), 200, new cljs.core.Keyword(null, "visibleItems", "visibleItems", 1968268852), 3, new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), "booya"), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeSelection", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "evt", "evt", 388964660, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "data", "data", 1407862150, null), cljs.core.list(new cljs.core.Symbol(null, ".getData", ".getData", 
  661342228, null), new cljs.core.Symbol(null, "evt", "evt", 388964660, null)), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), cljs.core.list(new cljs.core.Symbol(null, "js-\x3eclj", "js-\x3eclj", 1544462432, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), "picked!!!! jd", new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), cljs.core.list(new cljs.core.Symbol(null, "type", 
  "type", -1480165421, null), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null)), cljs.core.list(new cljs.core.Symbol(null, "ffirst", "ffirst", -694902E3, null), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null)), cljs.core.list(new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), "item")), cljs.core.list(new cljs.core.Symbol(null, "md-reset!", "md-reset!", 1664918226, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "value", "value", 
  305978217), cljs.core.list(new cljs.core.Symbol(null, "get", "get", -971253014, null), cljs.core.list(new cljs.core.Symbol(null, "get", "get", -971253014, null), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), "item"), "title"))))], null), new cljs.core.Keyword(null, "slot-data", "slot-data", 1146367809), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Windows Phone", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "R.I.P.", new cljs.core.Keyword(null, "image", "image", -58725096), "identica/mmedia/games.png"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "iOS", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "Version 7.1"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "title", "title", 636505583), "Android"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Tablet"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Smartphone"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Phablet"], null)], 
  null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_11982 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), new cljs.core.Keyword(null, "height", "height", 1025178622), 100, new cljs.core.Keyword(null, 
      "width", "width", -384071477), 200, new cljs.core.Keyword(null, "visibleItems", "visibleItems", 1968268852), 3, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.c_in.call(null, "booya"), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeSelection", function(_STAR_par_STAR_11982, me, cache) {
        return function(evt, me__$1) {
          var data = evt.getData();
          var jd = cljs.core.js__GT_clj.call(null, data);
          cljs.core.println.call(null, "picked!!!! jd", jd, cljs.core.type.call(null, jd), cljs.core.ffirst.call(null, jd), jd.call(null, "item"));
          return tiltontec.model.core.md_reset_BANG_.call(null, me__$1, new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.get.call(null, cljs.core.get.call(null, jd, "item"), "title"));
        };
      }(_STAR_par_STAR_11982, me, cache)], null), new cljs.core.Keyword(null, "slot-data", "slot-data", 1146367809), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Tablet"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Smartphone"], 
      null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Phablet"], null)], null)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Windows Phone", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "R.I.P.", new cljs.core.Keyword(null, "image", "image", -58725096), "identica/mmedia/games.png"], 
      null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "iOS", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "Version 7.1"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Android"], null)], null)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 
      908319540), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "myp", "myp", -299765765, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, 
      "my-pick", "my-pick", 1133502620), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516), true], null))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, 
      "lbl-computing!!!!!!!", "lbl-computing!!!!!!!", -911221410), cljs.core.list(new cljs.core.Symbol(null, "ia-type", "ia-type", 551627990, null), new cljs.core.Symbol(null, "myp", "myp", -299765765, null))), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Start", cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "myp", "myp", -299765765, null), new cljs.core.Keyword(null, "value", "value", 305978217)), "End"))), 
      new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11982, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var myp = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), me__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516), true], null));
          cljs.core.println.call(null, new cljs.core.Keyword(null, "lbl-computing!!!!!!!", "lbl-computing!!!!!!!", -911221410), tiltontec.cell.base.ia_type.call(null, myp));
          return [cljs.core.str("Start"), cljs.core.str(tiltontec.model.core.md_get.call(null, myp, new cljs.core.Keyword(null, "value", "value", 305978217))), cljs.core.str("End")].join("");
        };
      }(_STAR_par_STAR_11982, me, cache))))));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11982;
    }
  }));
};
hello_mobile.core.make_login = function hello_mobile$core$make_login() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), new cljs.core.Keyword(null, "end-point", "end-point", -1147460885), "/", new cljs.core.Keyword(null, "title", "title", 636505583), "Login!", new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", 
  "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "make-login-form", "make-login-form", 1069109923, null)), cljs.core.list(new cljs.core.Symbol(null, "button", "button", -1197855826, null), "Login", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["tap", cljs.core.list(new cljs.core.Symbol(null, 
  "fn*", "fn*", -752876845, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "login", "login", 1695749046, null), cljs.core.list(new cljs.core.Symbol(null, "fm!", "fm!", -1177678085, null), new cljs.core.Keyword(null, "login", "login", 55217519), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, ".validate", ".validate", 1492446340, null), cljs.core.list(new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "login", "login", 1695749046, null)))), cljs.core.list(new cljs.core.Symbol(null, "routing-get", "routing-get", 877560304, null), "/overview"))))], null)), cljs.core.list(new cljs.core.Symbol(null, 
  "make-picker-test", "make-picker-test", 929225279, null)), cljs.core.list(new cljs.core.Symbol(null, "carousel", "carousel", 1521582614, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "carousel", "carousel", -118948913), new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool"], null), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, 
  null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "one?")), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "two")), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", 
  -936024965, null), "three"))), cljs.core.list(new cljs.core.Symbol(null, "collapsible", "collapsible", -36525456, null), "Click for a surprise", cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Surprise.")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_11989 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "qx-class", "qx-class", 
      701821141), qx.ui.mobile.container.Collapsible, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Click for a surprise"], null), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", 
      -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Surprise."))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11989, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_11990 = tiltontec.model.core._STAR_par_STAR_;
          tiltontec.model.core._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "Surprise."))));
          } finally {
            tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11990;
          }
        };
      }(_STAR_par_STAR_11989, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "carousel", "carousel", -118948913), new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool", new cljs.core.Keyword(null, "kids", "kids", 1156670771), 
      tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "one?")), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 
      1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "two")), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "three")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11989, 
      me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_11991 = tiltontec.model.core._STAR_par_STAR_;
          tiltontec.model.core._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, 
            "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "println", "clojure.core/println", -434465672, null), new cljs.core.Keyword(null, "kids-make", 
            "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "three"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11991, me__$1, cache__$1, 
            _STAR_par_STAR_11989, me, cache) {
              return function(slot_c_SHARP___$2) {
                var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                var _STAR_par_STAR_11992 = tiltontec.model.core._STAR_par_STAR_;
                tiltontec.model.core._STAR_par_STAR_ = me__$2;
                try {
                  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "three")), function() {
                    cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me__$2));
                    return null;
                  }())));
                } finally {
                  tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11992;
                }
              };
            }(_STAR_par_STAR_11991, me__$1, cache__$1, _STAR_par_STAR_11989, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
            "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "println", "clojure.core/println", -434465672, null), new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 
            699012589, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "two"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11991, me__$1, cache__$1, _STAR_par_STAR_11989, me, cache) {
              return function(slot_c_SHARP___$2) {
                var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                var _STAR_par_STAR_11993 = tiltontec.model.core._STAR_par_STAR_;
                tiltontec.model.core._STAR_par_STAR_ = me__$2;
                try {
                  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "two")), function() {
                    cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me__$2));
                    return null;
                  }())));
                } finally {
                  tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11993;
                }
              };
            }(_STAR_par_STAR_11991, me__$1, cache__$1, _STAR_par_STAR_11989, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
            "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "println", "clojure.core/println", -434465672, null), new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 
            699012589, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "one?"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11991, me__$1, cache__$1, _STAR_par_STAR_11989, me, cache) {
              return function(slot_c_SHARP___$2) {
                var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                var _STAR_par_STAR_11994 = tiltontec.model.core._STAR_par_STAR_;
                tiltontec.model.core._STAR_par_STAR_ = me__$2;
                try {
                  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "one?")), function() {
                    cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me__$2));
                    return null;
                  }())));
                } finally {
                  tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11994;
                }
              };
            }(_STAR_par_STAR_11991, me__$1, cache__$1, _STAR_par_STAR_11989, me, cache))))));
          } finally {
            tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11991;
          }
        };
      }(_STAR_par_STAR_11989, me, cache)))), hello_mobile.core.make_picker_test.call(null)), tiltontec.qxia.core.button.call(null, "Login", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["tap", function(_STAR_par_STAR_11989, me, cache) {
        return function() {
          var login = tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "login", "login", 55217519), me);
          if (cljs.core.truth_((new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, login)).validate())) {
            return tiltontec.qxia.core.routing_get.call(null, "/overview");
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_11989, me, cache)], null))), hello_mobile.core.make_login_form.call(null))));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11989;
    }
  }));
};
hello_mobile.core.make_overview = function hello_mobile$core$make_overview() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), new cljs.core.Keyword(null, "end-point", "end-point", -1147460885), "/overview", new cljs.core.Keyword(null, "title", "title", 636505583), "Overview", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "oview", "oview", 559018138), new cljs.core.Keyword(null, 
  "showButton", "showButton", -1745795920), true, new cljs.core.Keyword(null, "buttonText", "buttonText", 282861744), "Knock-Knock", new cljs.core.Keyword(null, "buttonIcon", "buttonIcon", 1253122060), "identica/mmedia/games.png", new cljs.core.Keyword(null, "showBackButton", "showBackButton", 632746224), true, new cljs.core.Keyword(null, "backButtonText", "backButtonText", 2126160537), "Back", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 
  1, ["action", function(event, me) {
    return tiltontec.model.core.md_reset_BANG_.call(null, me, new cljs.core.Keyword(null, "greet?", "greet?", 1363328291), cljs.core.not.call(null, tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "greet?", "greet?", 1363328291))));
  }], null), new cljs.core.Keyword(null, "greet?", "greet?", 1363328291), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "start"), 
  cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "stuff", "stuff", -2051563643)], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "kids!!!!!", "kids!!!!!", -93461697), 
  cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "greet?", "greet?", 1363328291))), null), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "qx-par", "qx-par", 29810498, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), 
  new cljs.core.Keyword(null, "greet?", "greet?", 1363328291)), cljs.core.list(new cljs.core.Symbol(null, "image", "image", 1581806431, null), "identica/mmedia/earth-from-moon.jpg", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "warning"), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool"], null), 
  cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello"), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "World")))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_11998 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "name", "name", 
      1843675177), new cljs.core.Keyword(null, "stuff", "stuff", -2051563643), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "println", "clojure.core/println", -434465672, null), new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "kids!!!!!", 
      "kids!!!!!", -93461697), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "greet?", "greet?", 1363328291))), null), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "qx-par", "qx-par", 29810498, null), new cljs.core.Symbol(null, 
      "me", "me", 1501524834, null)), new cljs.core.Keyword(null, "greet?", "greet?", 1363328291)), cljs.core.list(new cljs.core.Symbol(null, "image", "image", 1581806431, null), "identica/mmedia/earth-from-moon.jpg", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "warning"), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "css-class", "css-class", 
      -919455334), "cool"], null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello"), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "World"))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11998, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var _STAR_par_STAR_11999 = tiltontec.model.core._STAR_par_STAR_;
          tiltontec.model.core._STAR_par_STAR_ = me__$1;
          try {
            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.truth_(tiltontec.model.core.md_get.call(null, tiltontec.model.core.qx_par.call(null, me__$1), new cljs.core.Keyword(null, "greet?", "greet?", 1363328291))) ? tiltontec.qxia.core.image.call(null, "identica/mmedia/earth-from-moon.jpg", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), 
            "warning") : tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool", new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
            "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello"), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "World"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
            function(_STAR_par_STAR_11999, me__$1, cache__$1, _STAR_par_STAR_11998, me, cache) {
              return function(slot_c_SHARP___$2) {
                var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                var _STAR_par_STAR_12000 = tiltontec.model.core._STAR_par_STAR_;
                tiltontec.model.core._STAR_par_STAR_ = me__$2;
                try {
                  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "World")), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, 
                  "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "Hello"))));
                } finally {
                  tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_12000;
                }
              };
            }(_STAR_par_STAR_11999, me__$1, cache__$1, _STAR_par_STAR_11998, me, cache)))), function() {
              cljs.core.println.call(null, new cljs.core.Keyword(null, "kids!!!!!", "kids!!!!!", -93461697), tiltontec.model.core.md_get.call(null, me__$1, new cljs.core.Keyword(null, "greet?", "greet?", 1363328291)));
              return null;
            }()), function() {
              cljs.core.println.call(null, new cljs.core.Keyword(null, "kids-make", "kids-make", 898757129), tiltontec.cell.base.ia_type.call(null, me__$1));
              return null;
            }())));
          } finally {
            tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11999;
          }
        };
      }(_STAR_par_STAR_11998, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), "start"))));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_11998;
    }
  }));
};
goog.provide("tiltontec.model.core_test");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.core_test.fm_0 = function tiltontec$model$core_test$fm_0() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$fm_0.cljs$lang$var);
};
tiltontec.model.core_test.fm_0.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), 
  cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", 
  "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    if (cljs.core.truth_(tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854)))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 3))], null);
    } else {
      return null;
    }
  }));
  try {
    var values__10696__auto___12006 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)));
    var result__10697__auto___12007 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12006);
    if (cljs.core.truth_(result__10697__auto___12007)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12006), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12006)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12003) {
    var t__10734__auto___12008 = e12003;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12008, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var kc = tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
  var kon = tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854));
  tiltontec.cell.core.c_reset_BANG_.call(null, kon, true);
  try {
    var values__10696__auto___12009 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 1);
    var result__10697__auto___12010 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12009);
    if (cljs.core.truth_(result__10697__auto___12010)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12009), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12009)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e12004) {
    var t__10734__auto___12011 = e12004;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12011, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__10697__auto__ = cljs.core.apply.call(null, tiltontec.model.core.fget, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12005) {
    var t__10734__auto__ = e12005;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.fm_0.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.fm_0;
}, new cljs.core.Symbol("tiltontec.model.core-test", "fm-0", "tiltontec.model.core-test/fm-0", -626823591, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-0", "fm-0", -1904222876, null), "test/tiltontec/model/core_test.cljc", 14, 1, 48, 48, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.fm_0) ? 
tiltontec.model.core_test.fm_0.cljs$lang$test : null]));
tiltontec.model.core_test.fm_2 = function tiltontec$model$core_test$fm_2() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$fm_2.cljs$lang$var);
};
tiltontec.model.core_test.fm_2.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, 
  "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, 
  "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bba", "bba", -1624545451)), cljs.core.list(new cljs.core.Symbol("md", 
  "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152)), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), 
    new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), 
    new cljs.core.Keyword(null, "bba", "bba", -1624545451)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
    function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me__$1, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bba", "bba", -1624545451)), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me__$1, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", 
        "bbb", -1323051640))], null);
      };
    }(me, cache)))], null);
  }));
  var bba = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "bba", "bba", -1624545451), u, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "must?", "must?", 1639898554), true);
  try {
    var value__10699__auto___12017 = bba;
    if (cljs.core.truth_(value__10699__auto___12017)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___12017, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10699__auto___12017, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12012) {
    var t__10734__auto___12018 = e12012;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12018, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12019 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "uni", "uni", -1194876440));
    var result__10697__auto___12020 = cljs.core.apply.call(null, tiltontec.model.core.fget, values__10696__auto___12019);
    if (cljs.core.truth_(result__10697__auto___12020)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__10696__auto___12019), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), values__10696__auto___12019)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12013) {
    var t__10734__auto___12021 = e12013;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12021, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12022 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), false), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
    var result__10697__auto___12023 = cljs.core.apply.call(null, tiltontec.model.core.fget, values__10696__auto___12022);
    if (cljs.core.truth_(result__10697__auto___12023)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__10696__auto___12022), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10696__auto___12022)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12014) {
    var t__10734__auto___12024 = e12014;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
    false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12024, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12025 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "bb", "bb", 75940837));
    var result__10697__auto___12026 = cljs.core.apply.call(null, tiltontec.model.core.fget, values__10696__auto___12025);
    if (cljs.core.truth_(result__10697__auto___12026)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__10696__auto___12025), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10696__auto___12025)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12015) {
    var t__10734__auto___12027 = e12015;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
    true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12027, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), false), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640));
    var result__10697__auto__ = cljs.core.apply.call(null, tiltontec.model.core.fget, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12016) {
    var t__10734__auto__ = e12016;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.fm_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.fm_2;
}, new cljs.core.Symbol("tiltontec.model.core-test", "fm-2", "tiltontec.model.core-test/fm-2", 697958118, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-2", "fm-2", -589475911, null), "test/tiltontec/model/core_test.cljc", 14, 1, 67, 67, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.fm_2) ? 
tiltontec.model.core_test.fm_2.cljs$lang$test : null]));
tiltontec.model.core_test.fm_3 = function tiltontec$model$core_test$fm_3() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$fm_3.cljs$lang$var);
};
tiltontec.model.core_test.fm_3.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "u63", "u63", 1660619135), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)), cljs.core.list(new cljs.core.Symbol(null, 
  "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)) + tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
  }), new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "remove", "remove", 1509103113, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), 
  cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
  2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 
  517820292, null), 3))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", 
  "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return cljs.core.remove.call(null, cljs.core.nil_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), 
    cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return 2 * tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me__$1), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
      };
    }(me, cache)), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), tiltontec.cell.core.c_in.call(null, 3)), cljs.core.truth_(tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 
    3)) : null, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, 
    "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return 7 * tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me__$1), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912));
      };
    }(me, cache)))], null));
  }));
  try {
    var values__10696__auto___12036 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, u, new cljs.core.Keyword(null, "u63", "u63", 1660619135))), 63);
    var result__10697__auto___12037 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12036);
    if (cljs.core.truth_(result__10697__auto___12037)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12036), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12036)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12028) {
    var t__10734__auto___12038 = e12028;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
    "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12038, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12039 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), u), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130))), 42);
    var result__10697__auto___12040 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12039);
    if (cljs.core.truth_(result__10697__auto___12040)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12039), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12039)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12029) {
    var t__10734__auto___12041 = e12029;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
    "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12041, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12042 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), u), new cljs.core.Keyword(null, "bb21", "bb21", 848021780))), 21);
    var result__10697__auto___12043 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12042);
    if (cljs.core.truth_(result__10697__auto___12043)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12042), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12042)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12030) {
    var t__10734__auto___12044 = e12030;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
    "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12044, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12045 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), u, new cljs.core.Keyword(null, "must?", "must?", 1639898554), false));
    var result__10697__auto___12046 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12045);
    if (cljs.core.truth_(result__10697__auto___12046)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12045), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12045)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12031) {
    var t__10734__auto___12047 = e12031;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
    "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12047, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854)), true);
  try {
    var value__10699__auto___12048 = (new cljs.core.Keyword(null, "kon", "kon", 437684854)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
    if (cljs.core.truth_(value__10699__auto___12048)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__10699__auto___12048, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__10699__auto___12048, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12032) {
    var t__10734__auto___12049 = e12032;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12049, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12050 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kon", "kon", 437684854)), u);
    var result__10697__auto___12051 = cljs.core.apply.call(null, tiltontec.model.base.md_cell, values__10696__auto___12050);
    if (cljs.core.truth_(result__10697__auto___12051)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, tiltontec.model.base.md_cell, values__10696__auto___12050), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), values__10696__auto___12050)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12033) {
    var t__10734__auto___12052 = e12033;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__10734__auto___12052, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12053 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 3);
    var result__10697__auto___12054 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12053);
    if (cljs.core.truth_(result__10697__auto___12054)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12053), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12053)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e12034) {
    var t__10734__auto___12055 = e12034;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12055, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__10697__auto__ = cljs.core.apply.call(null, tiltontec.model.core.fget, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12035) {
    var t__10734__auto__ = e12035;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.fm_3.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.fm_3;
}, new cljs.core.Symbol("tiltontec.model.core-test", "fm-3", "tiltontec.model.core-test/fm-3", -171788604, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-3", "fm-3", -1601771135, null), "test/tiltontec/model/core_test.cljc", 14, 1, 99, 99, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.fm_3) ? 
tiltontec.model.core_test.fm_3.cljs$lang$test : null]));
tiltontec.model.core_test.fm_3x = function tiltontec$model$core_test$fm_3x() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$fm_3x.cljs$lang$var);
};
tiltontec.model.core_test.fm_3x.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "u63", "u63", 1660619135), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)), cljs.core.list(new cljs.core.Symbol(null, 
  "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)) + tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
  }), new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, 
  "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), cljs.core.list(new cljs.core.Symbol(null, 
  "c-in", "c-in", 517820292, null), 3)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), 
  new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 
  345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_12056 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
      "*", "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_12056, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          return 7 * tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me__$1), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912));
        };
      }(_STAR_par_STAR_12056, me, cache)))), cljs.core.truth_(tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 3)) : null), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), 
      new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, 
      "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_12056, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          return 2 * tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me__$1), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
        };
      }(_STAR_par_STAR_12056, me, cache)), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), tiltontec.cell.core.c_in.call(null, 3)))));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_12056;
    }
  }));
  try {
    var values__10696__auto___12065 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, u, new cljs.core.Keyword(null, "u63", "u63", 1660619135))), 63);
    var result__10697__auto___12066 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12065);
    if (cljs.core.truth_(result__10697__auto___12066)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12065), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12065)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12057) {
    var t__10734__auto___12067 = e12057;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
    "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12067, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12068 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), u), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130))), 42);
    var result__10697__auto___12069 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12068);
    if (cljs.core.truth_(result__10697__auto___12069)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12068), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12068)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12058) {
    var t__10734__auto___12070 = e12058;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
    "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12070, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12071 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), u), new cljs.core.Keyword(null, "bb21", "bb21", 848021780))), 21);
    var result__10697__auto___12072 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12071);
    if (cljs.core.truth_(result__10697__auto___12072)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12071), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12071)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12059) {
    var t__10734__auto___12073 = e12059;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
    "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12073, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12074 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), u, new cljs.core.Keyword(null, "must?", "must?", 1639898554), false));
    var result__10697__auto___12075 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12074);
    if (cljs.core.truth_(result__10697__auto___12075)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12074), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12074)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12060) {
    var t__10734__auto___12076 = e12060;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
    "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12076, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854)), true);
  try {
    var value__10699__auto___12077 = (new cljs.core.Keyword(null, "kon", "kon", 437684854)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
    if (cljs.core.truth_(value__10699__auto___12077)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__10699__auto___12077, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__10699__auto___12077, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12061) {
    var t__10734__auto___12078 = e12061;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12078, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12079 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kon", "kon", 437684854)), u);
    var result__10697__auto___12080 = cljs.core.apply.call(null, tiltontec.model.base.md_cell, values__10696__auto___12079);
    if (cljs.core.truth_(result__10697__auto___12080)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, tiltontec.model.base.md_cell, values__10696__auto___12079), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), values__10696__auto___12079)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12062) {
    var t__10734__auto___12081 = e12062;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__10734__auto___12081, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12082 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 4);
    var result__10697__auto___12083 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12082);
    if (cljs.core.truth_(result__10697__auto___12083)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12082), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12082)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e12063) {
    var t__10734__auto___12084 = e12063;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12084, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__10697__auto__ = cljs.core.apply.call(null, tiltontec.model.core.fget, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12064) {
    var t__10734__auto__ = e12064;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.fm_3x.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.fm_3x;
}, new cljs.core.Symbol("tiltontec.model.core-test", "fm-3x", "tiltontec.model.core-test/fm-3x", -1888958356, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-3x", "fm-3x", 875338153, null), "test/tiltontec/model/core_test.cljc", 15, 1, 131, 131, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.fm_3x) ? 
tiltontec.model.core_test.fm_3x.cljs$lang$test : null]));
tiltontec.model.core_test.fm_picker = function tiltontec$model$core_test$fm_picker() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$fm_picker.cljs$lang$var);
};
tiltontec.model.core_test.fm_picker.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picker", "picker", -659389603), 
  new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 42), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aax", "aax", -1960235086)), cljs.core.list(new cljs.core.Symbol("md", 
  "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbx", "bbx", 2103477618)))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, 
  "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 
  719685022), new cljs.core.Symbol(null, "p", "p", 1791580836, null)), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Keyword(null, "value", "value", 305978217))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_12085 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
      "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", 
      "bingo", 719685022), new cljs.core.Symbol(null, "p", "p", 1791580836, null)), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Keyword(null, "value", "value", 305978217)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_12085, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var p = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "picker", "picker", -659389603), me__$1);
          cljs.core.println.call(null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022), p);
          return tiltontec.model.core.md_get.call(null, p, new cljs.core.Keyword(null, "value", "value", 305978217));
        };
      }(_STAR_par_STAR_12085, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.c_in.call(null, 42), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("md", 
      "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aax", "aax", -1960235086)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbx", "bbx", 2103477618))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_12085, 
      me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aax", "aax", -1960235086));
          return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbx", "bbx", 2103477618));
        };
      }(_STAR_par_STAR_12085, me, cache))))));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_12085;
    }
  }));
  try {
    var values__10696__auto___12088 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "picker", "picker", -659389603), u), new cljs.core.Keyword(null, "value", "value", 305978217))), 42);
    var result__10697__auto___12089 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12088);
    if (cljs.core.truth_(result__10697__auto___12089)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12088), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12088)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12086) {
    var t__10734__auto___12090 = e12086;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, 
    "value", "value", 305978217), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12090, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "dd", "dd", -1340437629), u), new cljs.core.Keyword(null, "kzo", "kzo", 29004960))), 43);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", 
      "kzo", 29004960), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", 
      "kzo", 29004960), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12087) {
    var t__10734__auto__ = e12087;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, 
    "kzo", "kzo", 29004960), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.fm_picker.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.fm_picker;
}, new cljs.core.Symbol("tiltontec.model.core-test", "fm-picker", "tiltontec.model.core-test/fm-picker", -1148699100, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-picker", "fm-picker", 2001727201, null), "test/tiltontec/model/core_test.cljc", 19, 1, 160, 160, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.fm_picker) ? tiltontec.model.core_test.fm_picker.cljs$lang$test : null]));
cljs.core.derive.call(null, tiltontec.cell.base.ia_types, new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644), new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830));
tiltontec.model.core_test.mm_typed = function tiltontec$model$core_test$mm_typed() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_typed.cljs$lang$var);
};
tiltontec.model.core_test.mm_typed.cljs$lang$test = function() {
  var me = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644), new cljs.core.Keyword(null, "x2", "x2", -1362513475), tiltontec.cell.core.c_in.call(null, 2), new cljs.core.Keyword(null, "age", "age", -604307804), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
  "*", "*", 345799209, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "x2", "x2", -1362513475)), 21)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475)) * 21;
  }));
  try {
    var values__10696__auto___12093 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804))), 42);
    var result__10697__auto___12094 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12093);
    if (cljs.core.truth_(result__10697__auto___12094)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12093), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12093)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12091) {
    var t__10734__auto___12095 = e12091;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12095, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644)), me);
    var result__10697__auto__ = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
      -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
      -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12092) {
    var t__10734__auto__ = e12092;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
    -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_typed.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_typed;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-typed", "tiltontec.model.core-test/mm-typed", 160483804, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-typed", "mm-typed", 1121916947, null), "test/tiltontec/model/core_test.cljc", 18, 1, 180, 180, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.mm_typed) ? tiltontec.model.core_test.mm_typed.cljs$lang$test : null]));
tiltontec.model.core_test.mm_opti_1 = function tiltontec$model$core_test$mm_opti_1() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_opti_1.cljs$lang$var);
};
tiltontec.model.core_test.mm_opti_1.cljs$lang$test = function() {
  var me = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "x2", "x2", -1362513475), 2, new cljs.core.Keyword(null, "age", "age", -604307804), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 21, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
  "x2", "x2", -1362513475)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 21 * tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475));
  }));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.meta.call(null, me));
  try {
    var values__10696__auto___12099 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475))), 2);
    var result__10697__auto___12100 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12099);
    if (cljs.core.truth_(result__10697__auto___12100)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12099), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12099)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12096) {
    var t__10734__auto___12101 = e12096;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12101, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12102 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804))), 42);
    var result__10697__auto___12103 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12102);
    if (cljs.core.truth_(result__10697__auto___12103)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12102), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12102)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12097) {
    var t__10734__auto___12104 = e12097;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12104, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cell.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804)));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12098) {
    var t__10734__auto__ = e12098;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_opti_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_opti_1;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-opti-1", "tiltontec.model.core-test/mm-opti-1", -1273683452, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-opti-1", "mm-opti-1", -1060539455, null), "test/tiltontec/model/core_test.cljc", 19, 1, 189, 189, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.mm_opti_1) ? tiltontec.model.core_test.mm_opti_1.cljs$lang$test : null]));
tiltontec.model.core_test.mm_install_alive = function tiltontec$model$core_test$mm_install_alive() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_install_alive.cljs$lang$var);
};
tiltontec.model.core_test.mm_install_alive.cljs$lang$test = function() {
  var bct = cljs.core.atom.call(null, 0);
  var res = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), "Bob", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "bogus", "bogus", 637345996), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
  "if-let", "if-let", 1803593690, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "be", "be", -1545923187, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242))], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, 
  "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "bingo-e!!!!!!!!", "bingo-e!!!!!!!!", -1781230244), new cljs.core.Symbol(null, "be", "be", -1545923187, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null), new cljs.core.Symbol(null, 
  "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, new cljs.core.Symbol(null, "be", "be", -1545923187, null))), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "bogus-no-e", "bogus-no-e", 2095562930), cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null)))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var temp__4423__auto__ = tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242));
      if (cljs.core.truth_(temp__4423__auto__)) {
        var be = temp__4423__auto__;
        tiltontec.util.base.call_trc.call(null, ":bingo-e!!!!!!!!", be, cljs.core.deref.call(null, bct));
        cljs.core.swap_BANG_.call(null, bct, cljs.core.inc);
        return 2 * be;
      } else {
        return tiltontec.util.base.call_trc.call(null, ":bogus-no-e", (new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me)));
      }
    };
  }(bct)), new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), tiltontec.cell.core.c_in.call(null, 21, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "loc", "loc", -584284901), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", 
  -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__12107 = tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "action", "action", -811238024)) instanceof cljs.core.Keyword ? tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "action", "action", -811238024)).fqn : null;
      switch(G__12107) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(bct)));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.meta.call(null, res));
  try {
    var values__10696__auto___12124 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cz.call(null, res)), (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, res)));
    var result__10697__auto___12125 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12124);
    if (cljs.core.truth_(result__10697__auto___12125)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12124), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12124)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e12108) {
    var t__10734__auto___12126 = e12108;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
    "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12126, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12127 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.model.base.md_cz.call(null, res))), 4);
    var result__10697__auto___12128 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12127);
    if (cljs.core.truth_(result__10697__auto___12128)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12127), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12127)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12109) {
    var t__10734__auto___12129 = e12109;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
    "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12129, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12130 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res))), tiltontec.cell.base.c_ref_QMARK_);
    var result__10697__auto___12131 = cljs.core.apply.call(null, cljs.core.every_QMARK_, values__10696__auto___12130);
    if (cljs.core.truth_(result__10697__auto___12131)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
      "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.every_QMARK_, values__10696__auto___12130), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
      "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), values__10696__auto___12130)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e12110) {
    var t__10734__auto___12132 = e12110;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
    "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12132, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12133 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.set.call(null, cljs.core.keys.call(null, tiltontec.model.base.md_cz.call(null, res)))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, 
    "bogus-e", "bogus-e", -1082314242), null], null), null));
    var result__10697__auto___12134 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12133);
    if (cljs.core.truth_(result__10697__auto___12134)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12133), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12133)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12111) {
    var t__10734__auto___12135 = e12111;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
    "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12135, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12136 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res))), function(bct, res) {
      return function(p1__12105_SHARP_) {
        return cljs.core._EQ_.call(null, res, tiltontec.cell.base.c_me.call(null, p1__12105_SHARP_));
      };
    }(bct, res));
    var result__10697__auto___12137 = cljs.core.apply.call(null, cljs.core.every_QMARK_, values__10696__auto___12136);
    if (cljs.core.truth_(result__10697__auto___12137)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__12105#", "p1__12105#", 459345588, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__12105#", "p1__12105#", 459345588, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
      new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.every_QMARK_, values__10696__auto___12136), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__12105#", "p1__12105#", 459345588, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__12105#", "p1__12105#", 459345588, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
      new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), values__10696__auto___12136)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12112) {
    var t__10734__auto___12138 = e12112;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
    "p1__12105#", "p1__12105#", 459345588, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__12105#", "p1__12105#", 459345588, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
    new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12138, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12139 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.set.call(null, cljs.core.map.call(null, function(bct, res) {
      return function(p1__12106_SHARP_) {
        return tiltontec.cell.base.c_slot.call(null, p1__12106_SHARP_);
      };
    }(bct, res), cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res))))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null));
    var result__10697__auto___12140 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12139);
    if (cljs.core.truth_(result__10697__auto___12140)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__12106#", "p1__12106#", 171608259, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__12106#", "p1__12106#", 171608259, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__10696__auto___12139), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__12106#", "p1__12106#", 171608259, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__12106#", "p1__12106#", 171608259, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12139)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12113) {
    var t__10734__auto___12141 = e12113;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
    "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
    "p1__12106#", "p1__12106#", 171608259, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__12106#", "p1__12106#", 171608259, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12141, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12142 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), "Bob");
    var result__10697__auto___12143 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12142);
    if (cljs.core.truth_(result__10697__auto___12143)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12142), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12142)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12114) {
    var t__10734__auto___12144 = e12114;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12144, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12145 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_name.call(null, res)), "Bob");
    var result__10697__auto___12146 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12145);
    if (cljs.core.truth_(result__10697__auto___12146)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12145), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12145)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12115) {
    var t__10734__auto___12147 = e12115;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12147, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "res", "res", -1395007879), cljs.core.deref.call(null, res));
  try {
    var values__10696__auto___12148 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "bogus", "bogus", 637345996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), 42);
    var result__10697__auto___12149 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12148);
    if (cljs.core.truth_(result__10697__auto___12149)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12148), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12148)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12116) {
    var t__10734__auto___12150 = e12116;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12150, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12151 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), null);
    var result__10697__auto___12152 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12151);
    if (cljs.core.truth_(result__10697__auto___12152)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12151), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12151)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12117) {
    var t__10734__auto___12153 = e12117;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
    188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12153, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12154 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), null);
    var result__10697__auto___12155 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12154);
    if (cljs.core.truth_(result__10697__auto___12155)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12154), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12154)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12118) {
    var t__10734__auto___12156 = e12118;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
    188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12156, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "loc", "loc", -584284901), (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res)));
  try {
    var values__10696__auto___12157 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__10697__auto___12158 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12157);
    if (cljs.core.truth_(result__10697__auto___12158)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12157), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12157)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e12119) {
    var t__10734__auto___12159 = e12119;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12159, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12160 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, bct)), 1);
    var result__10697__auto___12161 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12160);
    if (cljs.core.truth_(result__10697__auto___12161)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12160), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12160)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12120) {
    var t__10734__auto___12162 = e12120;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12162, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.reset_BANG_.call(null, bct, 0);
  tiltontec.model.core.md_reset_BANG_.call(null, res, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__10696__auto___12163 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__10697__auto___12164 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12163);
    if (cljs.core.truth_(result__10697__auto___12164)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12163), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12163)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e12121) {
    var t__10734__auto___12165 = e12121;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12165, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, bct));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.zero_QMARK_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12122) {
    var t__10734__auto__ = e12122;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_install_alive.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_install_alive;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-install-alive", "tiltontec.model.core-test/mm-install-alive", -206095115, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-install-alive", "mm-install-alive", 1190325296, null), "test/tiltontec/model/core_test.cljc", 
26, 1, 200, 200, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_install_alive) ? tiltontec.model.core_test.mm_install_alive.cljs$lang$test : null]));
tiltontec.model.core_test.hello_model = function tiltontec$model$core_test$hello_model() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$hello_model.cljs$lang$var);
};
tiltontec.model.core_test.hello_model.cljs$lang$test = function() {
  var uni = tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, 
  "name", "name", 1843675177), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "moniker", "moniker", -1330203766), "World", new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, 
  null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "slot", "slot", 1880761098, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), new cljs.core.Symbol(null, "old", "old", -184691163, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", 
  "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Symbol(null, "visitor-did", "visitor-did", 1352408685, null), new cljs.core.Symbol(null, "new", "new", -444906321, null)))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "action", "action", -811238024), 
  cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "location", "location", 1815599388), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, 
  null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "honey-im", "honey-im", 546332184), new cljs.core.Symbol(null, "new", "new", -444906321, null))))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, 
  null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "response", "response", -1068424192), cljs.core.list(new cljs.core.Symbol(null, 
  "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "r-response", 
  "r-response", 1211417459), new cljs.core.Symbol(null, "new", "new", -444906321, null)))), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", 
  "me", 1501524834, null), new cljs.core.Keyword(null, "location", "location", 1815599388))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", 
  "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world"))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "alarm", "alarm", 2066206946), new cljs.core.Keyword(null, "on-off", "on-off", 
  420433376), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "telling-alarm-api", "telling-alarm-api", -905807036), new cljs.core.Symbol(null, "new", "new", 
  -444906321, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "off", "off", 606440789), 
  new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "activity", "activity", -1179221455), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "new", "new", -444906321, null), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "auto-dialing-911", "auto-dialing-911", -1790610355)), null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, 
  "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "on-off", "on-off", 420433376))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
  "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_12166 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "alarm", "alarm", 2066206946), new cljs.core.Keyword(null, "on-off", "on-off", 420433376), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), 
      function(_STAR_par_STAR_12166, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          return tiltontec.util.base.call_trc.call(null, ":telling-alarm-api", new$);
        };
      }(_STAR_par_STAR_12166, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", 
      "location", 1815599388))), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_12166, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), me__$1), new cljs.core.Keyword(null, "location", "location", 1815599388)))) {
            return new cljs.core.Keyword(null, "off", "off", 606440789);
          } else {
            return new cljs.core.Keyword(null, "on", "on", 173873944);
          }
        };
      }(_STAR_par_STAR_12166, me, cache)), new cljs.core.Keyword(null, "activity", "activity", -1179221455), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(_STAR_par_STAR_12166, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          var G__12167 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
          switch(G__12167) {
            case "call-police":
              return tiltontec.util.base.call_trc.call(null, ":auto-dialing-911");
              break;
            default:
              return null;
          }
        };
      }(_STAR_par_STAR_12166, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "on-off", "on-off", 
      420433376))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, 
      "case", "case", -1510733573, null), new cljs.core.Symbol(null, "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_12166, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "on", "on", 173873944), tiltontec.model.core.md_get.call(null, me__$1, new cljs.core.Keyword(null, "on-off", "on-off", 420433376)))) {
            var temp__4425__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), me__$1), new cljs.core.Keyword(null, "action", "action", -811238024));
            if (cljs.core.truth_(temp__4425__auto__)) {
              var action = temp__4425__auto__;
              var G__12168 = action instanceof cljs.core.Keyword ? action.fqn : null;
              switch(G__12168) {
                case "smashing-window":
                  return new cljs.core.Keyword(null, "call-police", "call-police", -2114689981);
                  break;
                default:
                  return null;
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_12166, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "location", "location", 1815599388), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
      "obs", "obs", -664011444), function(_STAR_par_STAR_12166, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_12166, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), 
      new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_12166, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var G__12169 = tiltontec.model.core.md_get.call(null, me__$1, new cljs.core.Keyword(null, "action", "action", -811238024)) instanceof cljs.core.Keyword ? tiltontec.model.core.md_get.call(null, me__$1, new cljs.core.Keyword(null, "action", "action", -811238024)).fqn : null;
          switch(G__12169) {
            case "leave":
              return new cljs.core.Keyword(null, "away", "away", 1142420954);
              break;
            case "return":
              return new cljs.core.Keyword(null, "home", "home", -74557309);
              break;
            default:
              return new cljs.core.Keyword(null, "missing", "missing", 362507769);
          }
        };
      }(_STAR_par_STAR_12166, me, cache)), new cljs.core.Keyword(null, "response", "response", -1068424192), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(_STAR_par_STAR_12166, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_12166, me, cache), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "me", "me", 1501524834, null), new cljs.core.Keyword(null, "location", "location", 1815599388))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, 
      "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_12166, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.model.core.md_get.call(null, me__$1, new cljs.core.Keyword(null, "location", "location", 1815599388)))) {
            var temp__4425__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), me__$1), new cljs.core.Keyword(null, "action", "action", -811238024));
            if (cljs.core.truth_(temp__4425__auto__)) {
              var act = temp__4425__auto__;
              var G__12170 = act instanceof cljs.core.Keyword ? act.fqn : null;
              switch(G__12170) {
                case "knock-knock":
                  return "hello, world";
                  break;
                default:
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_12166, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "moniker", "moniker", -1330203766), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), 
      function(_STAR_par_STAR_12166, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.util.base.call_trc.call(null, "visitor-did", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_12166, me, cache))))));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_12166;
    }
  }));
  var viz = tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), uni);
  var rez = tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni);
  try {
    var values__10696__auto___12181 = cljs.core._conj.call(null, cljs.core.List.EMPTY, viz == null);
    var result__10697__auto___12182 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12181);
    if (cljs.core.truth_(result__10697__auto___12182)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12181), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12181)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12171) {
    var t__10734__auto___12183 = e12171;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12183, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12184 = cljs.core._conj.call(null, cljs.core.List.EMPTY, rez == null);
    var result__10697__auto___12185 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12184);
    if (cljs.core.truth_(result__10697__auto___12185)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12184), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12184)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12172) {
    var t__10734__auto___12186 = e12172;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__10734__auto___12186, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12187 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cell.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024)) == null);
    var result__10697__auto___12188 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12187);
    if (cljs.core.truth_(result__10697__auto___12188)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12187), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12187)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12173) {
    var t__10734__auto___12189 = e12173;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
    "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12189, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12190 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__10697__auto___12191 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12190);
    if (cljs.core.truth_(result__10697__auto___12191)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
      "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12190), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
      "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12190)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e12174) {
    var t__10734__auto___12192 = e12174;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
    "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12192, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646));
  try {
    var values__10696__auto___12193 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cell.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024)) == null);
    var result__10697__auto___12194 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12193);
    if (cljs.core.truth_(result__10697__auto___12194)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12193), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12193)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12175) {
    var t__10734__auto___12195 = e12175;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
    "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12195, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__10696__auto___12196 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__10697__auto___12197 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12196);
    if (cljs.core.truth_(result__10697__auto___12197)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
      "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12196), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
      "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12196)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e12176) {
    var t__10734__auto___12198 = e12176;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
    "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12198, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.model.core_test.hello_model.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.hello_model;
}, new cljs.core.Symbol("tiltontec.model.core-test", "hello-model", "tiltontec.model.core-test/hello-model", 1793459768, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "hello-model", "hello-model", 287487483, null), "test/tiltontec/model/core_test.cljc", 21, 1, 242, 242, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.hello_model) ? tiltontec.model.core_test.hello_model.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env12199 = cljs.test.empty_env.call(null);
  var summary12200 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12199, summary12200) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12199);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10801__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12199, summary12200) {
          return function() {
            if (env__10801__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10801__auto__, env12199, summary12200)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.model.core_test.fm_0;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "fm-0", "tiltontec.model.core-test/fm-0", -626823591, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-0", "fm-0", -1904222876, null), "test/tiltontec/model/core_test.cljc", 14, 1, 48, 48, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.model.core_test.fm_0) ? tiltontec.model.core_test.fm_0.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.fm_2;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "fm-2", "tiltontec.model.core-test/fm-2", 697958118, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-2", "fm-2", -589475911, null), "test/tiltontec/model/core_test.cljc", 14, 1, 67, 67, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.model.core_test.fm_2) ? tiltontec.model.core_test.fm_2.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.fm_3;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "fm-3", "tiltontec.model.core-test/fm-3", -171788604, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-3", "fm-3", -1601771135, null), "test/tiltontec/model/core_test.cljc", 14, 1, 99, 99, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.model.core_test.fm_3) ? tiltontec.model.core_test.fm_3.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.fm_3x;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "fm-3x", "tiltontec.model.core-test/fm-3x", -1888958356, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-3x", "fm-3x", 875338153, null), "test/tiltontec/model/core_test.cljc", 15, 1, 131, 131, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.model.core_test.fm_3x) ? tiltontec.model.core_test.fm_3x.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.fm_picker;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "fm-picker", "tiltontec.model.core-test/fm-picker", -1148699100, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-picker", "fm-picker", 2001727201, null), "test/tiltontec/model/core_test.cljc", 19, 1, 160, 160, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.fm_picker) ? tiltontec.model.core_test.fm_picker.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_typed;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-typed", "tiltontec.model.core-test/mm-typed", 160483804, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-typed", "mm-typed", 1121916947, null), "test/tiltontec/model/core_test.cljc", 18, 1, 180, 180, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_typed) ? tiltontec.model.core_test.mm_typed.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_opti_1;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-opti-1", "tiltontec.model.core-test/mm-opti-1", -1273683452, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-opti-1", "mm-opti-1", -1060539455, null), "test/tiltontec/model/core_test.cljc", 19, 1, 189, 189, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_opti_1) ? tiltontec.model.core_test.mm_opti_1.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_install_alive;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-install-alive", "tiltontec.model.core-test/mm-install-alive", -206095115, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-install-alive", "mm-install-alive", 1190325296, null), "test/tiltontec/model/core_test.cljc", 
        26, 1, 200, 200, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_install_alive) ? tiltontec.model.core_test.mm_install_alive.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.hello_model;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "hello-model", "tiltontec.model.core-test/hello-model", 1793459768, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "hello-model", "hello-model", 287487483, null), "test/tiltontec/model/core_test.cljc", 21, 
        1, 242, 242, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.hello_model) ? tiltontec.model.core_test.hello_model.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12199, summary12200) {
          return function() {
            if (env__10801__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10801__auto__, env12199, summary12200)], null));
      }());
    };
  }(env12199, summary12200), function(env12199, summary12200) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env12199, summary12200)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12199, summary12200) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary12200, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary12200), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env12199, summary12200)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12199, summary12200) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12199);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary12200));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary12200), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env12199, summary12200)], null));
}());
goog.provide("testrun");
goog.require("cljs.core");
goog.require("cljs.test");
cljs.core.enable_console_print_BANG_.call(null);
testrun.run = function testrun$run() {
  return cljs.test.run_block.call(null, function() {
    var env13059 = /tiltontec.util.*-test/;
    var summary13060 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13059, summary13060) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env13059);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "testrun", "testrun", 252374431, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__10801__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env13059, summary13060) {
            return function() {
              if (env__10801__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__10801__auto__, env13059, summary13060)], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env13059, summary13060) {
            return function() {
              if (env__10801__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__10801__auto__, env13059, summary13060)], null));
        }());
      };
    }(env13059, summary13060), function(env13059, summary13060) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "testrun", "testrun", 252374431, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env13059, summary13060)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13059, summary13060) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary13060, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary13060), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env13059, summary13060)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13059, summary13060) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env13059);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary13060));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary13060), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env13059, summary13060)], null));
  }());
};
goog.exportSymbol("testrun.run", testrun.run);
goog.provide("tiltontec.cell.lazy_cells_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
tiltontec.cell.lazy_cells_test.solid_lazy = function tiltontec$cell$lazy_cells_test$solid_lazy() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$solid_lazy.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0);
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, a), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 40)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "lazy", "lazy", -424547181), true, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
  function(xo, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return tiltontec.cell.evaluate.c_get.call(null, a) + 40;
    };
  }(xo, a));
  try {
    var values__10696__auto___12565 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), tiltontec.cell.base.unbound);
    var result__10697__auto___12566 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12565);
    if (cljs.core.truth_(result__10697__auto___12566)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12565), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12565)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e12557) {
    var t__10734__auto___12567 = e12557;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12567, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12568 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 0);
    var result__10697__auto___12569 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12568);
    if (cljs.core.truth_(result__10697__auto___12569)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12568), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12568)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12558) {
    var t__10734__auto___12570 = e12558;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12570, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12571 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 40);
    var result__10697__auto___12572 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12571);
    if (cljs.core.truth_(result__10697__auto___12572)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12571), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12571)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12559) {
    var t__10734__auto___12573 = e12559;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12573, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12574 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__10697__auto___12575 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12574);
    if (cljs.core.truth_(result__10697__auto___12575)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12574), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12574)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12560) {
    var t__10734__auto___12576 = e12560;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12576, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 100);
  try {
    var values__10696__auto___12577 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__10697__auto___12578 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12577);
    if (cljs.core.truth_(result__10697__auto___12578)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12577), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12577)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12561) {
    var t__10734__auto___12579 = e12561;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12579, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12580 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 40);
    var result__10697__auto___12581 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12580);
    if (cljs.core.truth_(result__10697__auto___12581)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12580), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12580)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12562) {
    var t__10734__auto___12582 = e12562;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12582, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12583 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 140);
    var result__10697__auto___12584 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12583);
    if (cljs.core.truth_(result__10697__auto___12584)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12583), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12583)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12563) {
    var t__10734__auto___12585 = e12563;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12585, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12564) {
    var t__10734__auto__ = e12564;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.solid_lazy;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "solid-lazy", "tiltontec.cell.lazy-cells-test/solid-lazy", -621454351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "solid-lazy", "solid-lazy", -1673817790, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
20, 1, 40, 40, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.solid_lazy) ? tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test : null]));
tiltontec.cell.lazy_cells_test.lazy_until_asked = function tiltontec$cell$lazy_cells_test$lazy_until_asked() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$lazy_until_asked.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var xr = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0);
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, xr, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, xr, a), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 40)), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768), new cljs.core.Keyword(null, "rule", "rule", 729973257), function(xo, xr, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, xr, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, a) + 40;
    };
  }(xo, xr, a));
  try {
    var values__10696__auto___12598 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), tiltontec.cell.base.unbound);
    var result__10697__auto___12599 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12598);
    if (cljs.core.truth_(result__10697__auto___12599)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12598), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12598)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e12586) {
    var t__10734__auto___12600 = e12586;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12600, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12601 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 0);
    var result__10697__auto___12602 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12601);
    if (cljs.core.truth_(result__10697__auto___12602)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12601), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12601)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12587) {
    var t__10734__auto___12603 = e12587;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12603, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12604 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 0);
    var result__10697__auto___12605 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12604);
    if (cljs.core.truth_(result__10697__auto___12605)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12604), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12604)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12588) {
    var t__10734__auto___12606 = e12588;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12606, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12607 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 40);
    var result__10697__auto___12608 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12607);
    if (cljs.core.truth_(result__10697__auto___12608)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12607), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12607)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12589) {
    var t__10734__auto___12609 = e12589;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12609, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12610 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__10697__auto___12611 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12610);
    if (cljs.core.truth_(result__10697__auto___12611)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12610), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12610)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12590) {
    var t__10734__auto___12612 = e12590;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12612, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12613 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 1);
    var result__10697__auto___12614 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12613);
    if (cljs.core.truth_(result__10697__auto___12614)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12613), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12613)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12591) {
    var t__10734__auto___12615 = e12591;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12615, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 100);
  try {
    var values__10696__auto___12616 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__10697__auto___12617 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12616);
    if (cljs.core.truth_(result__10697__auto___12617)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12616), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12616)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12592) {
    var t__10734__auto___12618 = e12592;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12618, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12619 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 2);
    var result__10697__auto___12620 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12619);
    if (cljs.core.truth_(result__10697__auto___12620)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12619), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12619)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12593) {
    var t__10734__auto___12621 = e12593;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12621, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12622 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 140);
    var result__10697__auto___12623 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12622);
    if (cljs.core.truth_(result__10697__auto___12623)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12622), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12622)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12594) {
    var t__10734__auto___12624 = e12594;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12624, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12625 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 140);
    var result__10697__auto___12626 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12625);
    if (cljs.core.truth_(result__10697__auto___12626)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12625), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12625)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12595) {
    var t__10734__auto___12627 = e12595;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12627, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12628 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__10697__auto___12629 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12628);
    if (cljs.core.truth_(result__10697__auto___12629)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12628), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12628)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12596) {
    var t__10734__auto___12630 = e12596;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12630, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 2);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12597) {
    var t__10734__auto__ = e12597;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.lazy_until_asked;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "lazy-until-asked", "tiltontec.cell.lazy-cells-test/lazy-until-asked", -1250993920, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "lazy-until-asked", "lazy-until-asked", -63631277, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
26, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.lazy_until_asked) ? tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test : null]));
tiltontec.cell.lazy_cells_test.optimize_when_value_t = function tiltontec$cell$lazy_cells_test$optimize_when_value_t() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$optimize_when_value_t.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var xr = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aaa", "aaa", 392664825));
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "xxx", "xxx", -1019301908), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, xr, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, xr, a), new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, 
  new cljs.core.Keyword(null, "reading-a!!!", "reading-a!!!", -391404819)), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "av", "av", 1883447185, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 
  1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "av", "av", 1883447185, null), 1), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), new cljs.core.Symbol(null, "av", "av", 1883447185, null), 40)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(xo, xr, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, xr, cljs.core.inc);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reading-a!!!", "reading-a!!!", -391404819));
      var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, a);
      if (cljs.core.truth_(temp__4425__auto__)) {
        var av = temp__4425__auto__;
        if (av > 1) {
          return av + 40;
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(xo, xr, a));
  try {
    var values__10696__auto___12638 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x));
    var result__10697__auto___12639 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12638);
    if (cljs.core.truth_(result__10697__auto___12639)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12638), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12638)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12631) {
    var t__10734__auto___12640 = e12631;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__10734__auto___12640, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12641 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, x)), cljs.core.PersistentHashSet.fromArray([a], true));
    var result__10697__auto___12642 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12641);
    if (cljs.core.truth_(result__10697__auto___12642)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12641), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12641)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12632) {
    var t__10734__auto___12643 = e12632;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12643, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 1);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-finished!!!!!!!!!!", "reset-finished!!!!!!!!!!", -898693691));
  try {
    var values__10696__auto___12644 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x));
    var result__10697__auto___12645 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12644);
    if (cljs.core.truth_(result__10697__auto___12645)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12644), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12644)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12633) {
    var t__10734__auto___12646 = e12633;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__10734__auto___12646, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12647 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, x)), cljs.core.PersistentHashSet.fromArray([a], true));
    var result__10697__auto___12648 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12647);
    if (cljs.core.truth_(result__10697__auto___12648)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12647), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12647)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12634) {
    var t__10734__auto___12649 = e12634;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12649, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-2-beginning!!!!!!!!!!!!", "reset-2-beginning!!!!!!!!!!!!", 206221749));
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 2);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-2-finished!!!!!!!!!!", "reset-2-finished!!!!!!!!!!", -1742930051));
  try {
    var values__10696__auto___12650 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 42);
    var result__10697__auto___12651 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12650);
    if (cljs.core.truth_(result__10697__auto___12651)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12650), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12650)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12635) {
    var t__10734__auto___12652 = e12635;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12652, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12653 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, x));
    var result__10697__auto___12654 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__10696__auto___12653);
    if (cljs.core.truth_(result__10697__auto___12654)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__10696__auto___12653), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__10696__auto___12653)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12636) {
    var t__10734__auto___12655 = e12636;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12655, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "useds", "useds", 621350967), tiltontec.cell.base.c_useds.call(null, x));
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, x));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12637) {
    var t__10734__auto__ = e12637;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.optimize_when_value_t;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "optimize-when-value-t", "tiltontec.cell.lazy-cells-test/optimize-when-value-t", 919000791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "optimize-when-value-t", "optimize-when-value-t", 2131697560, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
31, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.optimize_when_value_t) ? tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env12656 = cljs.test.empty_env.call(null);
  var summary12657 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12656, summary12657) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12656);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10801__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12656, summary12657) {
          return function() {
            if (env__10801__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10801__auto__, env12656, summary12657)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.solid_lazy;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "solid-lazy", "tiltontec.cell.lazy-cells-test/solid-lazy", -621454351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "solid-lazy", "solid-lazy", -1673817790, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
        20, 1, 40, 40, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.solid_lazy) ? tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.lazy_until_asked;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "lazy-until-asked", "tiltontec.cell.lazy-cells-test/lazy-until-asked", -1250993920, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "lazy-until-asked", "lazy-until-asked", -63631277, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
        26, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.lazy_until_asked) ? tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.optimize_when_value_t;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "optimize-when-value-t", "tiltontec.cell.lazy-cells-test/optimize-when-value-t", 919000791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "optimize-when-value-t", "optimize-when-value-t", 2131697560, 
        null), "test/tiltontec/cell/lazy_cells_test.cljc", 31, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.optimize_when_value_t) ? tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12656, summary12657) {
          return function() {
            if (env__10801__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10801__auto__, env12656, summary12657)], null));
      }());
    };
  }(env12656, summary12657), function(env12656, summary12657) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env12656, summary12657)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12656, summary12657) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary12657, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary12657), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env12656, summary12657)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12656, summary12657) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12656);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary12657));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary12657), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env12656, summary12657)], null));
}());
goog.provide("tiltontec.cell.core_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.core");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.core_test.test_input = function tiltontec$cell$core_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_input.cljs$lang$var);
};
tiltontec.cell.core_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_cell.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "mol", "mol", -2087943467), new cljs.core.Keyword(null, "value", "value", 305978217), 42);
  try {
    var values__10696__auto___12240 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__10697__auto___12241 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12240);
    if (cljs.core.truth_(result__10697__auto___12241)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12240), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto___12240)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12233) {
    var t__10734__auto___12242 = e12233;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12242, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12243 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.base.c_value.call(null, c));
    var result__10697__auto___12244 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12243);
    if (cljs.core.truth_(result__10697__auto___12244)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12243), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12243)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12234) {
    var t__10734__auto___12245 = e12234;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12245, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12246 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__10697__auto___12247 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12246);
    if (cljs.core.truth_(result__10697__auto___12247)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12246), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12246)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12235) {
    var t__10734__auto___12248 = e12235;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12248, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12249 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12250 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12249);
    if (cljs.core.truth_(result__10697__auto___12250)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12249), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12249)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12236) {
    var t__10734__auto___12251 = e12236;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12251, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12252 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__10697__auto___12253 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__10696__auto___12252);
    if (cljs.core.truth_(result__10697__auto___12253)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__10696__auto___12252), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__10696__auto___12252)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12237) {
    var t__10734__auto___12254 = e12237;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12254, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12255 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__10697__auto___12256 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12255);
    if (cljs.core.truth_(result__10697__auto___12256)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12255), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12255)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12238) {
    var t__10734__auto___12257 = e12238;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12257, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "mol", "mol", -2087943467));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12239) {
    var t__10734__auto__ = e12239;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-input", "tiltontec.cell.core-test/test-input", 584139487, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 45, 45, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_input) ? tiltontec.cell.core_test.test_input.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_in = function tiltontec$cell$core_test$test_c_in() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_in.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_in.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42);
  try {
    var values__10696__auto___12265 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__10697__auto___12266 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12265);
    if (cljs.core.truth_(result__10697__auto___12266)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12265), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto___12265)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12258) {
    var t__10734__auto___12267 = e12258;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12267, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12268 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.base.c_value.call(null, c));
    var result__10697__auto___12269 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12268);
    if (cljs.core.truth_(result__10697__auto___12269)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12268), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12268)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12259) {
    var t__10734__auto___12270 = e12259;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12270, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12271 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__10697__auto___12272 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12271);
    if (cljs.core.truth_(result__10697__auto___12272)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12271), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12271)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12260) {
    var t__10734__auto___12273 = e12260;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12273, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12274 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12275 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12274);
    if (cljs.core.truth_(result__10697__auto___12275)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12274), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12274)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12261) {
    var t__10734__auto___12276 = e12261;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12276, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12277 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__10697__auto___12278 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__10696__auto___12277);
    if (cljs.core.truth_(result__10697__auto___12278)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__10696__auto___12277), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__10696__auto___12277)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12262) {
    var t__10734__auto___12279 = e12262;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12279, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12280 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__10697__auto___12281 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__10696__auto___12280);
    if (cljs.core.truth_(result__10697__auto___12281)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__10696__auto___12280), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__10696__auto___12280)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12263) {
    var t__10734__auto___12282 = e12263;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12282, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12264) {
    var t__10734__auto__ = e12264;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_in.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_in;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in", "tiltontec.cell.core-test/test-c-in", -99212066, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in", "test-c-in", -885735134, null), "test/tiltontec/cell/core_test.cljc", 19, 1, 58, 58, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in) ? tiltontec.cell.core_test.test_c_in.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_in_PLUS_ = function tiltontec$cell$core_test$test_c_in_PLUS_() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_in_PLUS_.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cool", "cool", -10453819));
  try {
    var values__10696__auto___12290 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__10697__auto___12291 = cljs.core.apply.call(null, tiltontec.cell.base.c_ref_QMARK_, values__10696__auto___12290);
    if (cljs.core.truth_(result__10697__auto___12291)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_ref_QMARK_, 
      values__10696__auto___12290), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), values__10696__auto___12290)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12283) {
    var t__10734__auto___12292 = e12283;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12292, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12293 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.base.c_value.call(null, c));
    var result__10697__auto___12294 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12293);
    if (cljs.core.truth_(result__10697__auto___12294)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12293), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12293)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12284) {
    var t__10734__auto___12295 = e12284;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12295, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12296 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__10697__auto___12297 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12296);
    if (cljs.core.truth_(result__10697__auto___12297)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12296), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12296)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12285) {
    var t__10734__auto___12298 = e12285;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12298, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12299 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12300 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12299);
    if (cljs.core.truth_(result__10697__auto___12300)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12299), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12299)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12286) {
    var t__10734__auto___12301 = e12286;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12301, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12302 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__10697__auto___12303 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__10696__auto___12302);
    if (cljs.core.truth_(result__10697__auto___12303)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__10696__auto___12302), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__10696__auto___12302)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12287) {
    var t__10734__auto___12304 = e12287;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12304, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12305 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__10697__auto___12306 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12305);
    if (cljs.core.truth_(result__10697__auto___12306)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12305), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12305)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12288) {
    var t__10734__auto___12307 = e12288;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12307, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "cool", "cool", -10453819));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12289) {
    var t__10734__auto__ = e12289;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_in_PLUS_;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in+", "tiltontec.cell.core-test/test-c-in+", 856803589, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in+", "test-c-in+", -1036603951, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 69, 69, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in_PLUS_) ? tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_formula = function tiltontec$cell$core_test$test_c_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_formula.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_formula.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 40 + 2;
  });
  try {
    var values__10696__auto___12316 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), c);
    var result__10697__auto___12317 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12316);
    if (cljs.core.truth_(result__10697__auto___12317)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__10696__auto___12316), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__10696__auto___12316)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12308) {
    var t__10734__auto___12318 = e12308;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12318, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12319 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_rule.call(null, c));
    var result__10697__auto___12320 = cljs.core.apply.call(null, cljs.core.fn_QMARK_, values__10696__auto___12319);
    if (cljs.core.truth_(result__10697__auto___12320)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.fn_QMARK_, values__10696__auto___12319), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), values__10696__auto___12319)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12309) {
    var t__10734__auto___12321 = e12309;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12321, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12322 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.unbound), tiltontec.cell.base.c_value.call(null, c));
    var result__10697__auto___12323 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12322);
    if (cljs.core.truth_(result__10697__auto___12323)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12322), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12322)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12310) {
    var t__10734__auto___12324 = e12310;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
    "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12324, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12325 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__10697__auto___12326 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12325);
    if (cljs.core.truth_(result__10697__auto___12326)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12325), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12325)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12311) {
    var t__10734__auto___12327 = e12311;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12327, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12328 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12329 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12328);
    if (cljs.core.truth_(result__10697__auto___12329)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12328), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12328)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12312) {
    var t__10734__auto___12330 = e12312;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12330, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12331 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12332 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12331);
    if (cljs.core.truth_(result__10697__auto___12332)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12331), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12331)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12313) {
    var t__10734__auto___12333 = e12313;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12333, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12334 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__10697__auto___12335 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12334);
    if (cljs.core.truth_(result__10697__auto___12335)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12334), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12334)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12314) {
    var t__10734__auto___12336 = e12314;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12336, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12315) {
    var t__10734__auto__ = e12315;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_formula;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-formula", "tiltontec.cell.core-test/test-c-formula", -143714513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-formula", "test-c-formula", -2076148965, null), "test/tiltontec/cell/core_test.cljc", 24, 1, 80, 80, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_formula) ? tiltontec.cell.core_test.test_c_formula.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK__PLUS_ = function tiltontec$cell$core_test$t_c_QMARK__PLUS_() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK__PLUS_.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), false, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "cool", "cool", -10453819)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", 
  -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "cool", "cool", -10453819));
    return 40 + 2;
  });
  try {
    var values__10696__auto___12347 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__10697__auto___12348 = cljs.core.apply.call(null, tiltontec.cell.base.c_ref_QMARK_, values__10696__auto___12347);
    if (cljs.core.truth_(result__10697__auto___12348)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_ref_QMARK_, 
      values__10696__auto___12347), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), values__10696__auto___12347)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12337) {
    var t__10734__auto___12349 = e12337;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12349, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12350 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_rule.call(null, c));
    var result__10697__auto___12351 = cljs.core.apply.call(null, cljs.core.fn_QMARK_, values__10696__auto___12350);
    if (cljs.core.truth_(result__10697__auto___12351)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.fn_QMARK_, values__10696__auto___12350), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), values__10696__auto___12350)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12338) {
    var t__10734__auto___12352 = e12338;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12352, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12353 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.unbound), tiltontec.cell.base.c_value.call(null, c));
    var result__10697__auto___12354 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12353);
    if (cljs.core.truth_(result__10697__auto___12354)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12353), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12353)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12339) {
    var t__10734__auto___12355 = e12339;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
    "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12355, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12356 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__10697__auto___12357 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12356);
    if (cljs.core.truth_(result__10697__auto___12357)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12356), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12356)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12340) {
    var t__10734__auto___12358 = e12340;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12358, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12359 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12360 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12359);
    if (cljs.core.truth_(result__10697__auto___12360)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12359), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12359)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12341) {
    var t__10734__auto___12361 = e12341;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12361, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12362 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__10697__auto___12363 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12362);
    if (cljs.core.truth_(result__10697__auto___12363)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12362), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12362)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12342) {
    var t__10734__auto___12364 = e12342;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12364, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12365 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__10697__auto___12366 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12365);
    if (cljs.core.truth_(result__10697__auto___12366)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12365), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12365)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12343) {
    var t__10734__auto___12367 = e12343;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12367, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12368 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__10697__auto___12369 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12368);
    if (cljs.core.truth_(result__10697__auto___12369)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12368), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12368)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12344) {
    var t__10734__auto___12370 = e12344;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12370, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12371 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_optimize.call(null, c));
    var result__10697__auto___12372 = cljs.core.apply.call(null, cljs.core.not, values__10696__auto___12371);
    if (cljs.core.truth_(result__10697__auto___12372)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__10696__auto___12371), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__10696__auto___12371)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12345) {
    var t__10734__auto___12373 = e12345;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12373, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12346) {
    var t__10734__auto__ = e12346;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK__PLUS_;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?+", "tiltontec.cell.core-test/t-c?+", -1190817413, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?+", "t-c?+", 1747367215, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 92, 92, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK__PLUS_) ? 
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test : null]));
tiltontec.cell.core_test.t_eph_1 = function tiltontec$cell$core_test$t_eph_1() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_eph_1.cljs$lang$var);
};
tiltontec.cell.core_test.t_eph_1.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var boct = cljs.core.atom.call(null, 0);
  var b = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "b", "b", 1482224470), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(boct) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, boct, cljs.core.inc);
    };
  }(boct), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true);
  var crun = cljs.core.atom.call(null, 0);
  var cobs = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "c", "c", -1763192079), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(boct, b, crun, cobs) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, cobs, cljs.core.inc);
    };
  }(boct, b, crun, cobs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022)), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "prog1", "prog1", -359901378, 
  null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "cellread!!", "cellread!!", -2142314459), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
  "b", "b", -1172211299, null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(boct, b, crun, cobs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
      cljs.core.swap_BANG_.call(null, crun, cljs.core.inc);
      var result__6575__auto__ = [cljs.core.str("Hi "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, b))].join("");
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "cellread!!", "cellread!!", -2142314459), cljs.core.deref.call(null, b));
      return result__6575__auto__;
    };
  }(boct, b, crun, cobs));
  if (cljs.core.truth_(tiltontec.cell.base.c_rule.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Early no rule"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  try {
    var values__10696__auto___12393 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value.call(null, b));
    var result__10697__auto___12394 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12393);
    if (cljs.core.truth_(result__10697__auto___12394)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12393), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12393)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12374) {
    var t__10734__auto___12395 = e12374;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12395, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "valstate", "valstate", 283440834), tiltontec.cell.base.c_value_state.call(null, b));
  try {
    var values__10696__auto___12396 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value_state.call(null, b)), new cljs.core.Keyword(null, "valid", "valid", 155614240));
    var result__10697__auto___12397 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12396);
    if (cljs.core.truth_(result__10697__auto___12397)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
      "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12396), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
      "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12396)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12375) {
    var t__10734__auto___12398 = e12375;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
    "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12398, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12399 = cljs.core._conj.call(null, cljs.core.List.EMPTY, b);
    var result__10697__auto___12400 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__10696__auto___12399);
    if (cljs.core.truth_(result__10697__auto___12400)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__10696__auto___12399), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__10696__auto___12399)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12376) {
    var t__10734__auto___12401 = e12376;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12401, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, b);
  tiltontec.util.base.call_trc.call(null, null, cljs.core.deref.call(null, b));
  try {
    var values__10696__auto___12402 = cljs.core._conj.call(null, cljs.core.List.EMPTY, b);
    var result__10697__auto___12403 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__10696__auto___12402);
    if (cljs.core.truth_(result__10697__auto___12403)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__10696__auto___12402), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__10696__auto___12402)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12377) {
    var t__10734__auto___12404 = e12377;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12404, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12405 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), "Hi ");
    var result__10697__auto___12406 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12405);
    if (cljs.core.truth_(result__10697__auto___12406)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12405), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12405)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12378) {
    var t__10734__auto___12407 = e12378;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12407, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12408 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 1);
    var result__10697__auto___12409 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12408);
    if (cljs.core.truth_(result__10697__auto___12409)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12408), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12408)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12379) {
    var t__10734__auto___12410 = e12379;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12410, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12411 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), cljs.core.deref.call(null, crun)), 1);
    var result__10697__auto___12412 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12411);
    if (cljs.core.truth_(result__10697__auto___12412)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12411), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12411)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e12380) {
    var t__10734__auto___12413 = e12380;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
    cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12413, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12414 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__10697__auto___12415 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12414);
    if (cljs.core.truth_(result__10697__auto___12415)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12414), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12414)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12381) {
    var t__10734__auto___12416 = e12381;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12416, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, "Mom");
  try {
    var values__10696__auto___12417 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), "Hi Mom");
    var result__10697__auto___12418 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12417);
    if (cljs.core.truth_(result__10697__auto___12418)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12417), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12417)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12382) {
    var t__10734__auto___12419 = e12382;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12419, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12420 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 2);
    var result__10697__auto___12421 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12420);
    if (cljs.core.truth_(result__10697__auto___12421)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12420), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12420)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12383) {
    var t__10734__auto___12422 = e12383;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12422, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12423 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), cljs.core.deref.call(null, crun)), 2);
    var result__10697__auto___12424 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12423);
    if (cljs.core.truth_(result__10697__auto___12424)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12423), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12423)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e12384) {
    var t__10734__auto___12425 = e12384;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
    cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12425, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12426 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value.call(null, b));
    var result__10697__auto___12427 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12426);
    if (cljs.core.truth_(result__10697__auto___12427)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12426), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12426)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12385) {
    var t__10734__auto___12428 = e12385;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12428, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12429 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__10697__auto___12430 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12429);
    if (cljs.core.truth_(result__10697__auto___12430)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12429), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12429)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12386) {
    var t__10734__auto___12431 = e12386;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12431, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, "Mom");
  try {
    var values__10696__auto___12432 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), "Hi Mom");
    var result__10697__auto___12433 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12432);
    if (cljs.core.truth_(result__10697__auto___12433)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12432), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12432)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12387) {
    var t__10734__auto___12434 = e12387;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12434, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12435 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 3);
    var result__10697__auto___12436 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12435);
    if (cljs.core.truth_(result__10697__auto___12436)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12435), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12435)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12388) {
    var t__10734__auto___12437 = e12388;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12437, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12438 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, crun)), 3);
    var result__10697__auto___12439 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12438);
    if (cljs.core.truth_(result__10697__auto___12439)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12438), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12438)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12389) {
    var t__10734__auto___12440 = e12389;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12440, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12441 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), 2);
    var result__10697__auto___12442 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12441);
    if (cljs.core.truth_(result__10697__auto___12442)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12441), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12441)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12390) {
    var t__10734__auto___12443 = e12390;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto___12443, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12444 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value.call(null, b));
    var result__10697__auto___12445 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto___12444);
    if (cljs.core.truth_(result__10697__auto___12445)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto___12444), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto___12444)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12391) {
    var t__10734__auto___12446 = e12391;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12446, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12392) {
    var t__10734__auto__ = e12392;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_eph_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_eph_1;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-eph-1", "tiltontec.cell.core-test/t-eph-1", 1953166092, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-eph-1", "t-eph-1", 655169488, null), "test/tiltontec/cell/core_test.cljc", 17, 1, 108, 108, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_eph_1) ? 
tiltontec.cell.core_test.t_eph_1.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK_n = function tiltontec$cell$core_test$t_c_QMARK_n() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK_n.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test = function() {
  var a = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
  var b = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "without-c-dependency", "tiltontec.cell.base/without-c-dependency", -1335265675, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null), cljs.core.list(new cljs.core.Symbol(null, "/", 
  "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 2)), new cljs.core.Keyword(null, "input?", "input?", -1792843173), true, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var _STAR_depender_STAR_12447 = tiltontec.cell.base._STAR_depender_STAR_;
      tiltontec.cell.base._STAR_depender_STAR_ = null;
      try {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null);
        return tiltontec.cell.evaluate.c_get.call(null, a) / 2;
      } finally {
        tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_12447;
      }
    };
  }(a));
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 1, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a, b) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 1 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(a, b));
  try {
    var values__10696__auto___12452 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 21);
    var result__10697__auto___12453 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12452);
    if (cljs.core.truth_(result__10697__auto___12453)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12452), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12452)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12448) {
    var t__10734__auto___12454 = e12448;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12454, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto___12455 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), 22);
    var result__10697__auto___12456 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12455);
    if (cljs.core.truth_(result__10697__auto___12456)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12455), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12455)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12449) {
    var t__10734__auto___12457 = e12449;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12457, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 42);
  try {
    var values__10696__auto___12458 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 42);
    var result__10697__auto___12459 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12458);
    if (cljs.core.truth_(result__10697__auto___12459)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12458), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12458)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12450) {
    var t__10734__auto___12460 = e12450;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12460, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10696__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), 43);
    var result__10697__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto__);
    if (cljs.core.truth_(result__10697__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10697__auto__;
  } catch (e12451) {
    var t__10734__auto__ = e12451;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK_n;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?n", "tiltontec.cell.core-test/t-c?n", 149604314, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?n", "t-c?n", 1065739150, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 156, 156, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_n) ? 
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK_once = function tiltontec$cell$core_test$t_c_QMARK_once() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK_once.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test = function() {
  var a = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
  var b = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "without-c-dependency", "tiltontec.cell.base/without-c-dependency", -1335265675, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null), cljs.core.list(new cljs.core.Symbol(null, "/", 
  "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 2)), new cljs.core.Keyword(null, "input?", "input?", -1792843173), null, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var _STAR_depender_STAR_12461 = tiltontec.cell.base._STAR_depender_STAR_;
      tiltontec.cell.base._STAR_depender_STAR_ = null;
      try {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null);
        return tiltontec.cell.evaluate.c_get.call(null, a) / 2;
      } finally {
        tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_12461;
      }
    };
  }(a));
  try {
    var values__10696__auto___12463 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 21);
    var result__10697__auto___12464 = cljs.core.apply.call(null, cljs.core._EQ_, values__10696__auto___12463);
    if (cljs.core.truth_(result__10697__auto___12464)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10696__auto___12463), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10696__auto___12463)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e12462) {
    var t__10734__auto___12465 = e12462;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10734__auto___12465, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return null;
};
tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK_once;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?once", "tiltontec.cell.core-test/t-c?once", 1148131532, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?once", "t-c?once", 1934477112, null), "test/tiltontec/cell/core_test.cljc", 18, 1, 167, 167, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_once) ? tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env12466 = cljs.test.empty_env.call(null);
  var summary12467 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12466, summary12467) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12466);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10801__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12466, summary12467) {
          return function() {
            if (env__10801__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10801__auto__, env12466, summary12467)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-input", "tiltontec.cell.core-test/test-input", 584139487, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 45, 45, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_input) ? tiltontec.cell.core_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_in;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in", "tiltontec.cell.core-test/test-c-in", -99212066, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in", "test-c-in", -885735134, null), "test/tiltontec/cell/core_test.cljc", 19, 1, 58, 58, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in) ? tiltontec.cell.core_test.test_c_in.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_in_PLUS_;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in+", "tiltontec.cell.core-test/test-c-in+", 856803589, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in+", "test-c-in+", -1036603951, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 69, 69, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in_PLUS_) ? tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_formula;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-formula", "tiltontec.cell.core-test/test-c-formula", -143714513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-formula", "test-c-formula", -2076148965, null), "test/tiltontec/cell/core_test.cljc", 
        24, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.test_c_formula) ? tiltontec.cell.core_test.test_c_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK__PLUS_;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?+", "tiltontec.cell.core-test/t-c?+", -1190817413, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?+", "t-c?+", 1747367215, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 92, 92, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK__PLUS_) ? tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_eph_1;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-eph-1", "tiltontec.cell.core-test/t-eph-1", 1953166092, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-eph-1", "t-eph-1", 655169488, null), "test/tiltontec/cell/core_test.cljc", 17, 1, 108, 108, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_eph_1) ? tiltontec.cell.core_test.t_eph_1.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK_n;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?n", "tiltontec.cell.core-test/t-c?n", 149604314, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?n", "t-c?n", 1065739150, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 156, 156, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_n) ? tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK_once;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?once", "tiltontec.cell.core-test/t-c?once", 1148131532, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?once", "t-c?once", 1934477112, null), "test/tiltontec/cell/core_test.cljc", 18, 1, 167, 167, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_once) ? tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10801__auto__, env12466, summary12467) {
          return function() {
            if (env__10801__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10801__auto__, env12466, summary12467)], null));
      }());
    };
  }(env12466, summary12467), function(env12466, summary12467) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env12466, summary12467)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12466, summary12467) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary12467, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary12467), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env12466, summary12467)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env12466, summary12467) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env12466);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary12467));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary12467), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env12466, summary12467)], null));
}());
